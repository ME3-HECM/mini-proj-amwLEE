

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Nov 07 22:49:18 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    31                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33  0000                     
    34                           ; Version 2.20
    35                           ; Generated 05/05/2020 GMT
    36                           ; 
    37                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F67K40 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     _PIR0bits	set	3635
    69  0000                     _PIR2bits	set	3637
    70  0000                     _IPR2bits	set	3617
    71  0000                     _IPR0bits	set	3615
    72  0000                     _PIE2bits	set	3627
    73  0000                     _PIE0bits	set	3625
    74  0000                     _CM1CON1bits	set	3793
    75  0000                     _CM1CON0bits	set	3792
    76  0000                     _CM1PCHbits	set	3795
    77  0000                     _CM1NCHbits	set	3794
    78  0000                     _DAC1CON1bits	set	3783
    79  0000                     _DAC1CON0bits	set	3782
    80  0000                     _ANSELFbits	set	3764
    81  0000                     _ADPCH	set	3935
    82  0000                     _ADREFbits	set	3928
    83  0000                     _TRISHbits	set	3976
    84  0000                     _TRISDbits	set	3972
    85  0000                     _T0CON0bits	set	4053
    86  0000                     _T0CON1bits	set	4054
    87  0000                     _LATHbits	set	3968
    88  0000                     _TMR0L	set	4051
    89  0000                     _TMR0H	set	4052
    90  0000                     _LATDbits	set	3964
    91  0000                     _INTCONbits	set	4082
    92  0000                     _TRISBbits	set	3970
    93  0000                     _TRISAbits	set	3969
    94  0000                     _TRISGbits	set	3975
    95  0000                     _LATBbits	set	3962
    96  0000                     _LATFbits	set	3966
    97  0000                     _LATAbits	set	3961
    98  0000                     _LATGbits	set	3967
    99  0000                     _ADCON0bits	set	3936
   100  0000                     _TRISFbits	set	3974
   101                           
   102                           ; #config settings
   103                           
   104                           	psect	cinit
   105  0008E2                     __pcinit:
   106                           	callstack 0
   107  0008E2                     start_initialization:
   108                           	callstack 0
   109  0008E2                     __initialization:
   110                           	callstack 0
   111                           
   112                           ; Clear objects allocated to COMRAM (2 bytes)
   113  0008E2  6A35               	clrf	(__pbssCOMRAM+1)& (0+255),c
   114  0008E4  6A34               	clrf	__pbssCOMRAM& (0+255),c
   115  0008E6                     end_of_initialization:
   116                           	callstack 0
   117  0008E6                     __end_of__initialization:
   118                           	callstack 0
   119  0008E6  9036               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   120  0008E8  9236               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   121  0008EA  0100               	movlb	0
   122  0008EC  EFAB  F001         	goto	_main	;jump to C main() function
   123                           
   124                           	psect	bssCOMRAM
   125  000034                     __pbssCOMRAM:
   126                           	callstack 0
   127  000034                     _time_flag:
   128                           	callstack 0
   129  000034                     	ds	1
   130  000035                     _sunrise_flag:
   131                           	callstack 0
   132  000035                     	ds	1
   133                           
   134                           	psect	cstackCOMRAM
   135  000001                     __pcstackCOMRAM:
   136                           	callstack 0
   137  000001                     ??_HighISR:
   138  000001                     
   139                           ; 1 bytes @ 0x0
   140  000001                     	ds	1
   141  000002                     ??_LowISR:
   142                           
   143                           ; 1 bytes @ 0x1
   144  000002                     	ds	4
   145  000006                     ??_LEDarray_disp_bin:
   146  000006                     ?___awdiv:
   147                           	callstack 0
   148  000006                     ?_sunrise:
   149                           	callstack 0
   150  000006                     ?_daylightsavingstime_toggle:
   151                           	callstack 0
   152  000006                     ?_date_check:
   153                           	callstack 0
   154  000006                     ___awdiv@dividend:
   155                           	callstack 0
   156  000006                     LED_toggle@current:
   157                           	callstack 0
   158  000006                     daylightsavingstime_toggle@current:
   159                           	callstack 0
   160  000006                     date_check@current:
   161                           	callstack 0
   162  000006                     sunrise@current:
   163                           	callstack 0
   164                           
   165                           ; 11 bytes @ 0x5
   166  000006                     	ds	2
   167  000008                     LEDarray_disp_bin@number:
   168                           	callstack 0
   169  000008                     ___awdiv@divisor:
   170                           	callstack 0
   171                           
   172                           ; 2 bytes @ 0x7
   173  000008                     	ds	2
   174  00000A                     ___awdiv@counter:
   175                           	callstack 0
   176                           
   177                           ; 1 bytes @ 0x9
   178  00000A                     	ds	1
   179  00000B                     ___awdiv@sign:
   180                           	callstack 0
   181                           
   182                           ; 1 bytes @ 0xA
   183  00000B                     	ds	1
   184  00000C                     ___awdiv@quotient:
   185                           	callstack 0
   186                           
   187                           ; 2 bytes @ 0xB
   188  00000C                     	ds	2
   189  00000E                     sun_sync@current:
   190                           	callstack 0
   191                           
   192                           ; 11 bytes @ 0xD
   193  00000E                     	ds	3
   194  000011                     ??_daylightsavingstime_toggle:
   195  000011                     ??_date_check:
   196                           
   197                           ; 1 bytes @ 0x10
   198  000011                     	ds	2
   199  000013                     ?_time_incre:
   200                           	callstack 0
   201  000013                     time_incre@current:
   202                           	callstack 0
   203                           
   204                           ; 11 bytes @ 0x12
   205  000013                     	ds	6
   206  000019                     sun_sync@solarnoon_hour:
   207                           	callstack 0
   208                           
   209                           ; 1 bytes @ 0x18
   210  000019                     	ds	1
   211  00001A                     sun_sync@solarnoon_minute:
   212                           	callstack 0
   213                           
   214                           ; 1 bytes @ 0x19
   215  00001A                     	ds	1
   216  00001B                     sun_sync@solarnoon_second:
   217                           	callstack 0
   218                           
   219                           ; 1 bytes @ 0x1A
   220  00001B                     	ds	3
   221  00001E                     main@current:
   222                           	callstack 0
   223                           
   224                           ; 11 bytes @ 0x1D
   225  00001E                     	ds	11
   226  000029                     main@init:
   227                           	callstack 0
   228                           
   229                           ; 11 bytes @ 0x28
   230  000029                     	ds	11
   231                           
   232 ;;
   233 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   234 ;;
   235 ;; *************** function _main *****************
   236 ;; Defined at:
   237 ;;		line 41 in file "main.c"
   238 ;; Parameters:    Size  Location     Type
   239 ;;		None
   240 ;; Auto vars:     Size  Location     Type
   241 ;;  init           11   40[COMRAM] struct .
   242 ;;  current        11   29[COMRAM] struct .
   243 ;; Return value:  Size  Location     Type
   244 ;;                  1    wreg      void 
   245 ;; Registers used:
   246 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   247 ;; Tracked objects:
   248 ;;		On entry : 0/0
   249 ;;		On exit  : 0/0
   250 ;;		Unchanged: 0/0
   251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   253 ;;      Locals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   255 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   256 ;;Total ram usage:       22 bytes
   257 ;; Hardware stack levels required when called: 4
   258 ;; This function calls:
   259 ;;		_ADC_init
   260 ;;		_Comp1_init
   261 ;;		_Interrupts_init
   262 ;;		_LED1_init
   263 ;;		_LED2_init
   264 ;;		_LED_toggle
   265 ;;		_LEDarray_disp_bin
   266 ;;		_LEDarray_init
   267 ;;		_Timer0_init
   268 ;;		_sun_sync
   269 ;;		_sunrise
   270 ;;		_time_incre
   271 ;; This function is called by:
   272 ;;		Startup code after reset
   273 ;; This function uses a non-reentrant model
   274 ;;
   275                           
   276                           	psect	text0
   277  000356                     __ptext0:
   278                           	callstack 0
   279  000356                     _main:
   280                           	callstack 27
   281  000356                     
   282                           ;main.c: 43:     dateandtime init;;main.c: 44:     init.year = 2021;
   283  000356  0E07               	movlw	7
   284  000358  6E2A               	movwf	(main@init+1)^0,c
   285  00035A  0EE5               	movlw	229
   286  00035C  6E29               	movwf	main@init^0,c
   287                           
   288                           ;main.c: 45:     init.month = 11;
   289  00035E  0E0B               	movlw	11
   290  000360  6E2B               	movwf	(main@init+2)^0,c
   291                           
   292                           ;main.c: 46:     init.date = 7;
   293  000362  0E07               	movlw	7
   294  000364  6E2C               	movwf	(main@init+3)^0,c
   295                           
   296                           ;main.c: 47:     init.day = 7;
   297  000366  0E07               	movlw	7
   298  000368  6E2D               	movwf	(main@init+4)^0,c
   299                           
   300                           ;main.c: 48:     init.hour = 4;
   301  00036A  0E04               	movlw	4
   302  00036C  6E2E               	movwf	(main@init+5)^0,c
   303                           
   304                           ;main.c: 49:     init.minute = 59;
   305  00036E  0E3B               	movlw	59
   306  000370  6E2F               	movwf	(main@init+6)^0,c
   307                           
   308                           ;main.c: 50:     init.second = 59;
   309  000372  0E3B               	movlw	59
   310  000374  6E30               	movwf	(main@init+7)^0,c
   311                           
   312                           ;main.c: 51:     init.sunrise_hour = 7;
   313  000376  0E07               	movlw	7
   314  000378  6E31               	movwf	(main@init+8)^0,c
   315                           
   316                           ;main.c: 52:     init.sunrise_minute = 0;
   317  00037A  0E00               	movlw	0
   318  00037C  6E32               	movwf	(main@init+9)^0,c
   319                           
   320                           ;main.c: 53:     init.sunrise_second = 0;
   321  00037E  0E00               	movlw	0
   322  000380  6E33               	movwf	(main@init+10)^0,c
   323  000382                     
   324                           ;main.c: 56:     ADC_init();
   325  000382  EC51  F004         	call	_ADC_init	;wreg free
   326                           
   327                           ;main.c: 57:     Interrupts_init();
   328  000386  EC68  F004         	call	_Interrupts_init	;wreg free
   329  00038A                     
   330                           ;main.c: 58:     Comp1_init();
   331  00038A  EC1F  F004         	call	_Comp1_init	;wreg free
   332  00038E                     
   333                           ;main.c: 59:     LED1_init();
   334  00038E  EC7B  F004         	call	_LED1_init	;wreg free
   335  000392                     
   336                           ;main.c: 60:     LED2_init();
   337  000392  EC78  F004         	call	_LED2_init	;wreg free
   338  000396                     
   339                           ;main.c: 61:     LEDarray_init();
   340  000396  EC0C  F004         	call	_LEDarray_init	;wreg free
   341                           
   342                           ;main.c: 62:     Timer0_init();
   343  00039A  EC41  F004         	call	_Timer0_init	;wreg free
   344  00039E                     
   345                           ;main.c: 64:     dateandtime current;;main.c: 65:     current = init;
   346  00039E  EE20  F029         	lfsr	2,main@init
   347  0003A2  EE10  F01E         	lfsr	1,main@current
   348  0003A6  0E0A               	movlw	10
   349  0003A8                     u1351:
   350  0003A8  CFDB FFE3          	movff	plusw2,plusw1
   351  0003AC  06E8               	decf	wreg,f,c
   352  0003AE  E2FC               	bc	u1351
   353  0003B0                     l1480:
   354                           
   355                           ;main.c: 71:         LED_toggle(current);
   356  0003B0  EE20  F01E         	lfsr	2,main@current
   357  0003B4  EE00  F006         	lfsr	0,LED_toggle@current
   358  0003B8  0E0A               	movlw	10
   359  0003BA                     u1361:
   360  0003BA  CFDB FFEB          	movff	plusw2,plusw0
   361  0003BE  06E8               	decf	wreg,f,c
   362  0003C0  E2FC               	bc	u1361
   363  0003C2  ECF0  F003         	call	_LED_toggle	;wreg free
   364  0003C6                     
   365                           ;main.c: 73:         if (sunrise_flag==1) {
   366  0003C6  0435               	decf	_sunrise_flag^0,w,c	;volatile
   367  0003C8  A4D8               	btfss	status,2,c
   368  0003CA  EFE9  F001         	goto	u1371
   369  0003CE  EFEB  F001         	goto	u1370
   370  0003D2                     u1371:
   371  0003D2  EF01  F002         	goto	l1488
   372  0003D6                     u1370:
   373  0003D6                     
   374                           ;main.c: 74:             current=sunrise(current);
   375  0003D6  EE20  F01E         	lfsr	2,main@current
   376  0003DA  EE00  F006         	lfsr	0,sunrise@current
   377  0003DE  0E0A               	movlw	10
   378  0003E0                     u1381:
   379  0003E0  CFDB FFEB          	movff	plusw2,plusw0
   380  0003E4  06E8               	decf	wreg,f,c
   381  0003E6  E2FC               	bc	u1381
   382  0003E8  EC31  F004         	call	_sunrise	;wreg free
   383  0003EC  EE20  F01E         	lfsr	2,main@current
   384  0003F0  0E0A               	movlw	10
   385  0003F2                     u1391:
   386  0003F2  CFEB FFDB          	movff	plusw0,plusw2
   387  0003F6  06E8               	decf	wreg,f,c
   388  0003F8  E2FC               	bc	u1391
   389  0003FA                     
   390                           ;main.c: 75:             sunrise_flag=0;
   391  0003FA  0E00               	movlw	0
   392  0003FC  6E35               	movwf	_sunrise_flag^0,c	;volatile
   393                           
   394                           ;main.c: 76:         } else {sun_sync(current);}
   395  0003FE  EF0C  F002         	goto	l1490
   396  000402                     l1488:
   397  000402  EE20  F01E         	lfsr	2,main@current
   398  000406  EE00  F00E         	lfsr	0,sun_sync@current
   399  00040A  0E0A               	movlw	10
   400  00040C                     u1401:
   401  00040C  CFDB FFEB          	movff	plusw2,plusw0
   402  000410  06E8               	decf	wreg,f,c
   403  000412  E2FC               	bc	u1401
   404  000414  EC6E  F003         	call	_sun_sync	;wreg free
   405  000418                     l1490:
   406                           
   407                           ;main.c: 78:         if (time_flag==1) {
   408  000418  0434               	decf	_time_flag^0,w,c	;volatile
   409  00041A  A4D8               	btfss	status,2,c
   410  00041C  EF12  F002         	goto	u1411
   411  000420  EF14  F002         	goto	u1410
   412  000424                     u1411:
   413  000424  EF28  F002         	goto	l1496
   414  000428                     u1410:
   415  000428                     
   416                           ;main.c: 79:             current=time_incre(current);
   417  000428  EE20  F01E         	lfsr	2,main@current
   418  00042C  EE00  F013         	lfsr	0,time_incre@current
   419  000430  0E0A               	movlw	10
   420  000432                     u1421:
   421  000432  CFDB FFEB          	movff	plusw2,plusw0
   422  000436  06E8               	decf	wreg,f,c
   423  000438  E2FC               	bc	u1421
   424  00043A  ECA2  F002         	call	_time_incre	;wreg free
   425  00043E  EE20  F01E         	lfsr	2,main@current
   426  000442  0E0A               	movlw	10
   427  000444                     u1431:
   428  000444  CFEB FFDB          	movff	plusw0,plusw2
   429  000448  06E8               	decf	wreg,f,c
   430  00044A  E2FC               	bc	u1431
   431  00044C                     
   432                           ;main.c: 80:             time_flag=0;
   433  00044C  0E00               	movlw	0
   434  00044E  6E34               	movwf	_time_flag^0,c	;volatile
   435  000450                     l1496:
   436                           
   437                           ;main.c: 83:         LEDarray_disp_bin(current.hour);
   438  000450  5023               	movf	(main@current+5)^0,w,c
   439  000452  EC19  F001         	call	_LEDarray_disp_bin
   440  000456  EFD8  F001         	goto	l1480
   441  00045A  EF3D  F000         	goto	start
   442  00045E                     __end_of_main:
   443                           	callstack 0
   444                           
   445 ;; *************** function _time_incre *****************
   446 ;; Defined at:
   447 ;;		line 44 in file "dateandtime.c"
   448 ;; Parameters:    Size  Location     Type
   449 ;;  current        11   18[COMRAM] struct .
   450 ;; Auto vars:     Size  Location     Type
   451 ;;		None
   452 ;; Return value:  Size  Location     Type
   453 ;;                  11   18[COMRAM] struct .
   454 ;; Registers used:
   455 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
   456 ;; Tracked objects:
   457 ;;		On entry : 0/0
   458 ;;		On exit  : 0/0
   459 ;;		Unchanged: 0/0
   460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   461 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   464 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   465 ;;Total ram usage:       11 bytes
   466 ;; Hardware stack levels used: 1
   467 ;; Hardware stack levels required when called: 3
   468 ;; This function calls:
   469 ;;		_date_check
   470 ;;		_daylightsavingstime_toggle
   471 ;; This function is called by:
   472 ;;		_main
   473 ;; This function uses a non-reentrant model
   474 ;;
   475                           
   476                           	psect	text1
   477  000544                     __ptext1:
   478                           	callstack 0
   479  000544                     _time_incre:
   480                           	callstack 27
   481  000544                     
   482                           ;dateandtime.c: 46:     current.second = current.second+1;
   483  000544  281A               	incf	(time_incre@current+7)^0,w,c
   484  000546  6E1A               	movwf	(time_incre@current+7)^0,c
   485                           
   486                           ;dateandtime.c: 47:     if (current.second>59) {
   487  000548  501A               	movf	(time_incre@current+7)^0,w,c
   488  00054A  0A80               	xorlw	128
   489  00054C  0F44               	addlw	-188
   490  00054E  A0D8               	btfss	status,0,c
   491  000550  EFAC  F002         	goto	u1171
   492  000554  EFAE  F002         	goto	u1170
   493  000558                     u1171:
   494  000558  EF02  F003         	goto	l1426
   495  00055C                     u1170:
   496  00055C                     
   497                           ;dateandtime.c: 48:         current.second = 0;
   498  00055C  0E00               	movlw	0
   499  00055E  6E1A               	movwf	(time_incre@current+7)^0,c
   500  000560                     
   501                           ;dateandtime.c: 49:         current.minute = current.minute+1;
   502  000560  2819               	incf	(time_incre@current+6)^0,w,c
   503  000562  6E19               	movwf	(time_incre@current+6)^0,c
   504  000564                     
   505                           ;dateandtime.c: 50:         if (current.minute>59) {
   506  000564  5019               	movf	(time_incre@current+6)^0,w,c
   507  000566  0A80               	xorlw	128
   508  000568  0F44               	addlw	-188
   509  00056A  A0D8               	btfss	status,0,c
   510  00056C  EFBA  F002         	goto	u1181
   511  000570  EFBC  F002         	goto	u1180
   512  000574                     u1181:
   513  000574  EF02  F003         	goto	l1426
   514  000578                     u1180:
   515  000578                     
   516                           ;dateandtime.c: 51:             current.minute = 0;
   517  000578  0E00               	movlw	0
   518  00057A  6E19               	movwf	(time_incre@current+6)^0,c
   519  00057C                     
   520                           ;dateandtime.c: 52:             current.hour = current.hour+1;
   521  00057C  2818               	incf	(time_incre@current+5)^0,w,c
   522  00057E  6E18               	movwf	(time_incre@current+5)^0,c
   523  000580                     
   524                           ;dateandtime.c: 53:             current = daylightsavingstime_toggle(current);
   525  000580  EE20  F013         	lfsr	2,time_incre@current
   526  000584  EE00  F006         	lfsr	0,daylightsavingstime_toggle@current
   527  000588  0E0A               	movlw	10
   528  00058A                     u1191:
   529  00058A  CFDB FFEB          	movff	plusw2,plusw0
   530  00058E  06E8               	decf	wreg,f,c
   531  000590  E2FC               	bc	u1191
   532  000592  EC2F  F002         	call	_daylightsavingstime_toggle	;wreg free
   533  000596  EE20  F013         	lfsr	2,time_incre@current
   534  00059A  0E0A               	movlw	10
   535  00059C                     u1201:
   536  00059C  CFEB FFDB          	movff	plusw0,plusw2
   537  0005A0  06E8               	decf	wreg,f,c
   538  0005A2  E2FC               	bc	u1201
   539  0005A4                     
   540                           ;dateandtime.c: 54:             if (current.hour>23) {
   541  0005A4  5018               	movf	(time_incre@current+5)^0,w,c
   542  0005A6  0A80               	xorlw	128
   543  0005A8  0F68               	addlw	-152
   544  0005AA  A0D8               	btfss	status,0,c
   545  0005AC  EFDA  F002         	goto	u1211
   546  0005B0  EFDC  F002         	goto	u1210
   547  0005B4                     u1211:
   548  0005B4  EF02  F003         	goto	l1426
   549  0005B8                     u1210:
   550  0005B8                     
   551                           ;dateandtime.c: 55:                 current.hour = 0;
   552  0005B8  0E00               	movlw	0
   553  0005BA  6E18               	movwf	(time_incre@current+5)^0,c
   554  0005BC                     
   555                           ;dateandtime.c: 56:                 current.date = current.date+1;
   556  0005BC  2816               	incf	(time_incre@current+3)^0,w,c
   557  0005BE  6E16               	movwf	(time_incre@current+3)^0,c
   558  0005C0                     
   559                           ;dateandtime.c: 57:                 current = date_check(current);
   560  0005C0  EE20  F013         	lfsr	2,time_incre@current
   561  0005C4  EE00  F006         	lfsr	0,date_check@current
   562  0005C8  0E0A               	movlw	10
   563  0005CA                     u1221:
   564  0005CA  CFDB FFEB          	movff	plusw2,plusw0
   565  0005CE  06E8               	decf	wreg,f,c
   566  0005D0  E2FC               	bc	u1221
   567  0005D2  EC3F  F000         	call	_date_check	;wreg free
   568  0005D6  EE20  F013         	lfsr	2,time_incre@current
   569  0005DA  0E0A               	movlw	10
   570  0005DC                     u1231:
   571  0005DC  CFEB FFDB          	movff	plusw0,plusw2
   572  0005E0  06E8               	decf	wreg,f,c
   573  0005E2  E2FC               	bc	u1231
   574  0005E4                     
   575                           ;dateandtime.c: 58:                 current.day = current.day+1;
   576  0005E4  2817               	incf	(time_incre@current+4)^0,w,c
   577  0005E6  6E17               	movwf	(time_incre@current+4)^0,c
   578  0005E8                     
   579                           ;dateandtime.c: 59:                 if (current.day>7) {
   580  0005E8  5017               	movf	(time_incre@current+4)^0,w,c
   581  0005EA  0A80               	xorlw	128
   582  0005EC  0F78               	addlw	-136
   583  0005EE  A0D8               	btfss	status,0,c
   584  0005F0  EFFC  F002         	goto	u1241
   585  0005F4  EFFE  F002         	goto	u1240
   586  0005F8                     u1241:
   587  0005F8  EF02  F003         	goto	l213
   588  0005FC                     u1240:
   589  0005FC                     
   590                           ;dateandtime.c: 60:                     current.day = 1;
   591  0005FC  0E01               	movlw	1
   592  0005FE  6E17               	movwf	(time_incre@current+4)^0,c
   593  000600  EF02  F003         	goto	l1426
   594  000604                     l213:
   595  000604                     l1426:
   596                           
   597                           ;dateandtime.c: 66:     return current;
   598  000604  EE20  F013         	lfsr	2,time_incre@current
   599  000608  EE00  F013         	lfsr	0,?_time_incre
   600  00060C  0E0A               	movlw	10
   601  00060E                     u1251:
   602  00060E  CFDB FFEB          	movff	plusw2,plusw0
   603  000612  06E8               	decf	wreg,f,c
   604  000614  E2FC               	bc	u1251
   605  000616  0012               	return		;funcret
   606  000618                     __end_of_time_incre:
   607                           	callstack 0
   608                           
   609 ;; *************** function _daylightsavingstime_toggle *****************
   610 ;; Defined at:
   611 ;;		line 7 in file "dateandtime.c"
   612 ;; Parameters:    Size  Location     Type
   613 ;;  current        11    5[COMRAM] struct .
   614 ;; Auto vars:     Size  Location     Type
   615 ;;		None
   616 ;; Return value:  Size  Location     Type
   617 ;;                  11    5[COMRAM] struct .
   618 ;; Registers used:
   619 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
   620 ;; Tracked objects:
   621 ;;		On entry : 0/0
   622 ;;		On exit  : 0/0
   623 ;;		Unchanged: 0/0
   624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   625 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   627 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   628 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   629 ;;Total ram usage:       13 bytes
   630 ;; Hardware stack levels used: 1
   631 ;; Hardware stack levels required when called: 2
   632 ;; This function calls:
   633 ;;		Nothing
   634 ;; This function is called by:
   635 ;;		_time_incre
   636 ;; This function uses a non-reentrant model
   637 ;;
   638                           
   639                           	psect	text2
   640  00045E                     __ptext2:
   641                           	callstack 0
   642  00045E                     _daylightsavingstime_toggle:
   643                           	callstack 27
   644  00045E                     
   645                           ;dateandtime.c: 9:     if (current.month==3 && (current.date+7)>31 && current.day==7 && 
      +                          current.hour==1) {
   646  00045E  0E03               	movlw	3
   647  000460  1808               	xorwf	(daylightsavingstime_toggle@current+2)^0,w,c
   648  000462  A4D8               	btfss	status,2,c
   649  000464  EF36  F002         	goto	u761
   650  000468  EF38  F002         	goto	u760
   651  00046C                     u761:
   652  00046C  EF64  F002         	goto	l1224
   653  000470                     u760:
   654  000470  C009  F011         	movff	daylightsavingstime_toggle@current+3,??_daylightsavingstime_toggle
   655  000474  6A12               	clrf	(??_daylightsavingstime_toggle+1)^0,c
   656  000476  BE11               	btfsc	??_daylightsavingstime_toggle^0,7,c
   657  000478  0612               	decf	(??_daylightsavingstime_toggle+1)^0,f,c
   658  00047A  0E07               	movlw	7
   659  00047C  2611               	addwf	??_daylightsavingstime_toggle^0,f,c
   660  00047E  0E00               	movlw	0
   661  000480  2212               	addwfc	(??_daylightsavingstime_toggle+1)^0,f,c
   662  000482  BE12               	btfsc	(??_daylightsavingstime_toggle+1)^0,7,c
   663  000484  EF4D  F002         	goto	u771
   664  000488  5012               	movf	(??_daylightsavingstime_toggle+1)^0,w,c
   665  00048A  E109               	bnz	u770
   666  00048C  0E20               	movlw	32
   667  00048E  5C11               	subwf	??_daylightsavingstime_toggle^0,w,c
   668  000490  A0D8               	btfss	status,0,c
   669  000492  EF4D  F002         	goto	u771
   670  000496  EF4F  F002         	goto	u770
   671  00049A                     u771:
   672  00049A  EF64  F002         	goto	l1224
   673  00049E                     u770:
   674  00049E  0E07               	movlw	7
   675  0004A0  180A               	xorwf	(daylightsavingstime_toggle@current+4)^0,w,c
   676  0004A2  A4D8               	btfss	status,2,c
   677  0004A4  EF56  F002         	goto	u781
   678  0004A8  EF58  F002         	goto	u780
   679  0004AC                     u781:
   680  0004AC  EF64  F002         	goto	l1224
   681  0004B0                     u780:
   682  0004B0  040B               	decf	(daylightsavingstime_toggle@current+5)^0,w,c
   683  0004B2  A4D8               	btfss	status,2,c
   684  0004B4  EF5E  F002         	goto	u791
   685  0004B8  EF60  F002         	goto	u790
   686  0004BC                     u791:
   687  0004BC  EF64  F002         	goto	l1224
   688  0004C0                     u790:
   689  0004C0                     
   690                           ;dateandtime.c: 10:         current.hour = current.hour+1;
   691  0004C0  280B               	incf	(daylightsavingstime_toggle@current+5)^0,w,c
   692  0004C2  6E0B               	movwf	(daylightsavingstime_toggle@current+5)^0,c
   693                           
   694                           ;dateandtime.c: 11:     } else if (current.month==10 && (current.date+7)>31 && current.d
      +                          ay==7 && current.hour==2) {
   695  0004C4  EF98  F002         	goto	l1234
   696  0004C8                     l1224:
   697  0004C8  0E0A               	movlw	10
   698  0004CA  1808               	xorwf	(daylightsavingstime_toggle@current+2)^0,w,c
   699  0004CC  A4D8               	btfss	status,2,c
   700  0004CE  EF6B  F002         	goto	u801
   701  0004D2  EF6D  F002         	goto	u800
   702  0004D6                     u801:
   703  0004D6  EF98  F002         	goto	l1234
   704  0004DA                     u800:
   705  0004DA  C009  F011         	movff	daylightsavingstime_toggle@current+3,??_daylightsavingstime_toggle
   706  0004DE  6A12               	clrf	(??_daylightsavingstime_toggle+1)^0,c
   707  0004E0  BE11               	btfsc	??_daylightsavingstime_toggle^0,7,c
   708  0004E2  0612               	decf	(??_daylightsavingstime_toggle+1)^0,f,c
   709  0004E4  0E07               	movlw	7
   710  0004E6  2611               	addwf	??_daylightsavingstime_toggle^0,f,c
   711  0004E8  0E00               	movlw	0
   712  0004EA  2212               	addwfc	(??_daylightsavingstime_toggle+1)^0,f,c
   713  0004EC  BE12               	btfsc	(??_daylightsavingstime_toggle+1)^0,7,c
   714  0004EE  EF82  F002         	goto	u811
   715  0004F2  5012               	movf	(??_daylightsavingstime_toggle+1)^0,w,c
   716  0004F4  E109               	bnz	u810
   717  0004F6  0E20               	movlw	32
   718  0004F8  5C11               	subwf	??_daylightsavingstime_toggle^0,w,c
   719  0004FA  A0D8               	btfss	status,0,c
   720  0004FC  EF82  F002         	goto	u811
   721  000500  EF84  F002         	goto	u810
   722  000504                     u811:
   723  000504  EF98  F002         	goto	l1234
   724  000508                     u810:
   725  000508  0E07               	movlw	7
   726  00050A  180A               	xorwf	(daylightsavingstime_toggle@current+4)^0,w,c
   727  00050C  A4D8               	btfss	status,2,c
   728  00050E  EF8B  F002         	goto	u821
   729  000512  EF8D  F002         	goto	u820
   730  000516                     u821:
   731  000516  EF98  F002         	goto	l1234
   732  00051A                     u820:
   733  00051A  0E02               	movlw	2
   734  00051C  180B               	xorwf	(daylightsavingstime_toggle@current+5)^0,w,c
   735  00051E  A4D8               	btfss	status,2,c
   736  000520  EF94  F002         	goto	u831
   737  000524  EF96  F002         	goto	u830
   738  000528                     u831:
   739  000528  EF98  F002         	goto	l1234
   740  00052C                     u830:
   741  00052C                     
   742                           ;dateandtime.c: 12:         current.hour = current.hour-1;
   743  00052C  040B               	decf	(daylightsavingstime_toggle@current+5)^0,w,c
   744  00052E  6E0B               	movwf	(daylightsavingstime_toggle@current+5)^0,c
   745  000530                     l1234:
   746                           
   747                           ;dateandtime.c: 15:     return current;
   748  000530  EE20  F006         	lfsr	2,daylightsavingstime_toggle@current
   749  000534  EE00  F006         	lfsr	0,?_daylightsavingstime_toggle
   750  000538  0E0A               	movlw	10
   751  00053A                     u841:
   752  00053A  CFDB FFEB          	movff	plusw2,plusw0
   753  00053E  06E8               	decf	wreg,f,c
   754  000540  E2FC               	bc	u841
   755  000542  0012               	return		;funcret
   756  000544                     __end_of_daylightsavingstime_toggle:
   757                           	callstack 0
   758                           
   759 ;; *************** function _date_check *****************
   760 ;; Defined at:
   761 ;;		line 22 in file "dateandtime.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;  current        11    5[COMRAM] struct .
   764 ;; Auto vars:     Size  Location     Type
   765 ;;		None
   766 ;; Return value:  Size  Location     Type
   767 ;;                  11    5[COMRAM] struct .
   768 ;; Registers used:
   769 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
   770 ;; Tracked objects:
   771 ;;		On entry : 0/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   775 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   777 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   778 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   779 ;;Total ram usage:       13 bytes
   780 ;; Hardware stack levels used: 1
   781 ;; Hardware stack levels required when called: 2
   782 ;; This function calls:
   783 ;;		Nothing
   784 ;; This function is called by:
   785 ;;		_time_incre
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789                           	psect	text3
   790  00007E                     __ptext3:
   791                           	callstack 0
   792  00007E                     _date_check:
   793                           	callstack 27
   794  00007E                     
   795                           ;dateandtime.c: 24:     if ((current.year%4==0 && current.month==2 && current.date>29) |
      +                          | (current.year%4!=0 && current.month==2 && current.date>28) || ((current.month==1 || cu
      +                          rrent.month==3 || current.month==5 || current.month==7 || current.month==8 || current.mo
      +                          nth==10 || current.month==12) && current.date>31) || ((current.month==4 || current.month
      +                          ==6 || current.month==9 || current.month==11) && current.date>30)) {
   796  00007E  0E03               	movlw	3
   797  000080  1406               	andwf	date_check@current^0,w,c
   798  000082  6E11               	movwf	??_date_check^0,c
   799  000084  0E00               	movlw	0
   800  000086  1407               	andwf	(date_check@current+1)^0,w,c
   801  000088  6E12               	movwf	(??_date_check+1)^0,c
   802  00008A  5011               	movf	??_date_check^0,w,c
   803  00008C  1012               	iorwf	(??_date_check+1)^0,w,c
   804  00008E  A4D8               	btfss	status,2,c
   805  000090  EF4C  F000         	goto	u851
   806  000094  EF4E  F000         	goto	u850
   807  000098                     u851:
   808  000098  EF61  F000         	goto	l1244
   809  00009C                     u850:
   810  00009C  0E02               	movlw	2
   811  00009E  1808               	xorwf	(date_check@current+2)^0,w,c
   812  0000A0  A4D8               	btfss	status,2,c
   813  0000A2  EF55  F000         	goto	u861
   814  0000A6  EF57  F000         	goto	u860
   815  0000AA                     u861:
   816  0000AA  EF61  F000         	goto	l1244
   817  0000AE                     u860:
   818  0000AE  5009               	movf	(date_check@current+3)^0,w,c
   819  0000B0  0A80               	xorlw	128
   820  0000B2  0F62               	addlw	-158
   821  0000B4  B0D8               	btfsc	status,0,c
   822  0000B6  EF5F  F000         	goto	u871
   823  0000BA  EF61  F000         	goto	u870
   824  0000BE                     u871:
   825  0000BE  EFF9  F000         	goto	l1276
   826  0000C2                     u870:
   827  0000C2                     l1244:
   828  0000C2  0E03               	movlw	3
   829  0000C4  1406               	andwf	date_check@current^0,w,c
   830  0000C6  6E11               	movwf	??_date_check^0,c
   831  0000C8  0E00               	movlw	0
   832  0000CA  1407               	andwf	(date_check@current+1)^0,w,c
   833  0000CC  6E12               	movwf	(??_date_check+1)^0,c
   834  0000CE  5011               	movf	??_date_check^0,w,c
   835  0000D0  1012               	iorwf	(??_date_check+1)^0,w,c
   836  0000D2  B4D8               	btfsc	status,2,c
   837  0000D4  EF6E  F000         	goto	u881
   838  0000D8  EF70  F000         	goto	u880
   839  0000DC                     u881:
   840  0000DC  EF83  F000         	goto	l1250
   841  0000E0                     u880:
   842  0000E0  0E02               	movlw	2
   843  0000E2  1808               	xorwf	(date_check@current+2)^0,w,c
   844  0000E4  A4D8               	btfss	status,2,c
   845  0000E6  EF77  F000         	goto	u891
   846  0000EA  EF79  F000         	goto	u890
   847  0000EE                     u891:
   848  0000EE  EF83  F000         	goto	l1250
   849  0000F2                     u890:
   850  0000F2  5009               	movf	(date_check@current+3)^0,w,c
   851  0000F4  0A80               	xorlw	128
   852  0000F6  0F63               	addlw	-157
   853  0000F8  B0D8               	btfsc	status,0,c
   854  0000FA  EF81  F000         	goto	u901
   855  0000FE  EF83  F000         	goto	u900
   856  000102                     u901:
   857  000102  EFF9  F000         	goto	l1276
   858  000106                     u900:
   859  000106                     l1250:
   860  000106  0408               	decf	(date_check@current+2)^0,w,c
   861  000108  B4D8               	btfsc	status,2,c
   862  00010A  EF89  F000         	goto	u911
   863  00010E  EF8B  F000         	goto	u910
   864  000112                     u911:
   865  000112  EFC1  F000         	goto	l1264
   866  000116                     u910:
   867  000116  0E03               	movlw	3
   868  000118  1808               	xorwf	(date_check@current+2)^0,w,c
   869  00011A  B4D8               	btfsc	status,2,c
   870  00011C  EF92  F000         	goto	u921
   871  000120  EF94  F000         	goto	u920
   872  000124                     u921:
   873  000124  EFC1  F000         	goto	l1264
   874  000128                     u920:
   875  000128  0E05               	movlw	5
   876  00012A  1808               	xorwf	(date_check@current+2)^0,w,c
   877  00012C  B4D8               	btfsc	status,2,c
   878  00012E  EF9B  F000         	goto	u931
   879  000132  EF9D  F000         	goto	u930
   880  000136                     u931:
   881  000136  EFC1  F000         	goto	l1264
   882  00013A                     u930:
   883  00013A  0E07               	movlw	7
   884  00013C  1808               	xorwf	(date_check@current+2)^0,w,c
   885  00013E  B4D8               	btfsc	status,2,c
   886  000140  EFA4  F000         	goto	u941
   887  000144  EFA6  F000         	goto	u940
   888  000148                     u941:
   889  000148  EFC1  F000         	goto	l1264
   890  00014C                     u940:
   891  00014C  0E08               	movlw	8
   892  00014E  1808               	xorwf	(date_check@current+2)^0,w,c
   893  000150  B4D8               	btfsc	status,2,c
   894  000152  EFAD  F000         	goto	u951
   895  000156  EFAF  F000         	goto	u950
   896  00015A                     u951:
   897  00015A  EFC1  F000         	goto	l1264
   898  00015E                     u950:
   899  00015E  0E0A               	movlw	10
   900  000160  1808               	xorwf	(date_check@current+2)^0,w,c
   901  000162  B4D8               	btfsc	status,2,c
   902  000164  EFB6  F000         	goto	u961
   903  000168  EFB8  F000         	goto	u960
   904  00016C                     u961:
   905  00016C  EFC1  F000         	goto	l1264
   906  000170                     u960:
   907  000170  0E0C               	movlw	12
   908  000172  1808               	xorwf	(date_check@current+2)^0,w,c
   909  000174  A4D8               	btfss	status,2,c
   910  000176  EFBF  F000         	goto	u971
   911  00017A  EFC1  F000         	goto	u970
   912  00017E                     u971:
   913  00017E  EFCB  F000         	goto	l1266
   914  000182                     u970:
   915  000182                     l1264:
   916  000182  5009               	movf	(date_check@current+3)^0,w,c
   917  000184  0A80               	xorlw	128
   918  000186  0F60               	addlw	-160
   919  000188  B0D8               	btfsc	status,0,c
   920  00018A  EFC9  F000         	goto	u981
   921  00018E  EFCB  F000         	goto	u980
   922  000192                     u981:
   923  000192  EFF9  F000         	goto	l1276
   924  000196                     u980:
   925  000196                     l1266:
   926  000196  0E04               	movlw	4
   927  000198  1808               	xorwf	(date_check@current+2)^0,w,c
   928  00019A  B4D8               	btfsc	status,2,c
   929  00019C  EFD2  F000         	goto	u991
   930  0001A0  EFD4  F000         	goto	u990
   931  0001A4                     u991:
   932  0001A4  EFEF  F000         	goto	l1274
   933  0001A8                     u990:
   934  0001A8  0E06               	movlw	6
   935  0001AA  1808               	xorwf	(date_check@current+2)^0,w,c
   936  0001AC  B4D8               	btfsc	status,2,c
   937  0001AE  EFDB  F000         	goto	u1001
   938  0001B2  EFDD  F000         	goto	u1000
   939  0001B6                     u1001:
   940  0001B6  EFEF  F000         	goto	l1274
   941  0001BA                     u1000:
   942  0001BA  0E09               	movlw	9
   943  0001BC  1808               	xorwf	(date_check@current+2)^0,w,c
   944  0001BE  B4D8               	btfsc	status,2,c
   945  0001C0  EFE4  F000         	goto	u1011
   946  0001C4  EFE6  F000         	goto	u1010
   947  0001C8                     u1011:
   948  0001C8  EFEF  F000         	goto	l1274
   949  0001CC                     u1010:
   950  0001CC  0E0B               	movlw	11
   951  0001CE  1808               	xorwf	(date_check@current+2)^0,w,c
   952  0001D0  A4D8               	btfss	status,2,c
   953  0001D2  EFED  F000         	goto	u1021
   954  0001D6  EFEF  F000         	goto	u1020
   955  0001DA                     u1021:
   956  0001DA  EF0F  F001         	goto	l1286
   957  0001DE                     u1020:
   958  0001DE                     l1274:
   959  0001DE  5009               	movf	(date_check@current+3)^0,w,c
   960  0001E0  0A80               	xorlw	128
   961  0001E2  0F61               	addlw	-159
   962  0001E4  A0D8               	btfss	status,0,c
   963  0001E6  EFF7  F000         	goto	u1031
   964  0001EA  EFF9  F000         	goto	u1030
   965  0001EE                     u1031:
   966  0001EE  EF0F  F001         	goto	l1286
   967  0001F2                     u1030:
   968  0001F2                     l1276:
   969                           
   970                           ;dateandtime.c: 27: ;dateandtime.c: 28:         current.month = current.month+1;
   971  0001F2  2808               	incf	(date_check@current+2)^0,w,c
   972  0001F4  6E08               	movwf	(date_check@current+2)^0,c
   973  0001F6                     
   974                           ;dateandtime.c: 29:         current.date = 1;
   975  0001F6  0E01               	movlw	1
   976  0001F8  6E09               	movwf	(date_check@current+3)^0,c
   977  0001FA                     
   978                           ;dateandtime.c: 31:         if (current.month>12) {
   979  0001FA  5008               	movf	(date_check@current+2)^0,w,c
   980  0001FC  0A80               	xorlw	128
   981  0001FE  0F73               	addlw	-141
   982  000200  A0D8               	btfss	status,0,c
   983  000202  EF05  F001         	goto	u1041
   984  000206  EF07  F001         	goto	u1040
   985  00020A                     u1041:
   986  00020A  EF0F  F001         	goto	l1286
   987  00020E                     u1040:
   988  00020E                     
   989                           ;dateandtime.c: 32:             current.year = current.year+1;
   990  00020E  0E01               	movlw	1
   991  000210  2406               	addwf	date_check@current^0,w,c
   992  000212  6E06               	movwf	date_check@current^0,c
   993  000214  0E00               	movlw	0
   994  000216  2007               	addwfc	(date_check@current+1)^0,w,c
   995  000218  6E07               	movwf	(date_check@current+1)^0,c
   996  00021A                     
   997                           ;dateandtime.c: 33:             current.month = 1;
   998  00021A  0E01               	movlw	1
   999  00021C  6E08               	movwf	(date_check@current+2)^0,c
  1000  00021E                     l1286:
  1001                           
  1002                           ;dateandtime.c: 37:     return current;
  1003  00021E  EE20  F006         	lfsr	2,date_check@current
  1004  000222  EE00  F006         	lfsr	0,?_date_check
  1005  000226  0E0A               	movlw	10
  1006  000228                     u1051:
  1007  000228  CFDB FFEB          	movff	plusw2,plusw0
  1008  00022C  06E8               	decf	wreg,f,c
  1009  00022E  E2FC               	bc	u1051
  1010  000230  0012               	return		;funcret
  1011  000232                     __end_of_date_check:
  1012                           	callstack 0
  1013                           
  1014 ;; *************** function _sunrise *****************
  1015 ;; Defined at:
  1016 ;;		line 73 in file "dateandtime.c"
  1017 ;; Parameters:    Size  Location     Type
  1018 ;;  current        11    5[COMRAM] struct .
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;		None
  1021 ;; Return value:  Size  Location     Type
  1022 ;;                  11    5[COMRAM] struct .
  1023 ;; Registers used:
  1024 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  1025 ;; Tracked objects:
  1026 ;;		On entry : 0/0
  1027 ;;		On exit  : 0/0
  1028 ;;		Unchanged: 0/0
  1029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1030 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1033 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1034 ;;Total ram usage:       11 bytes
  1035 ;; Hardware stack levels used: 1
  1036 ;; Hardware stack levels required when called: 2
  1037 ;; This function calls:
  1038 ;;		Nothing
  1039 ;; This function is called by:
  1040 ;;		_main
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           
  1044                           	psect	text4
  1045  000862                     __ptext4:
  1046                           	callstack 0
  1047  000862                     _sunrise:
  1048                           	callstack 28
  1049  000862                     
  1050                           ;dateandtime.c: 74:     current.sunrise_hour = current.hour;
  1051  000862  C00B  F00E         	movff	sunrise@current+5,sunrise@current+8
  1052                           
  1053                           ;dateandtime.c: 75:     current.sunrise_minute = current.minute;
  1054  000866  C00C  F00F         	movff	sunrise@current+6,sunrise@current+9
  1055                           
  1056                           ;dateandtime.c: 76:     current.sunrise_second = current.second;
  1057  00086A  C00D  F010         	movff	sunrise@current+7,sunrise@current+10
  1058  00086E                     
  1059                           ;dateandtime.c: 78:     return current;
  1060  00086E  EE20  F006         	lfsr	2,sunrise@current
  1061  000872  EE00  F006         	lfsr	0,?_sunrise
  1062  000876  0E0A               	movlw	10
  1063  000878                     u1141:
  1064  000878  CFDB FFEB          	movff	plusw2,plusw0
  1065  00087C  06E8               	decf	wreg,f,c
  1066  00087E  E2FC               	bc	u1141
  1067  000880  0012               	return		;funcret
  1068  000882                     __end_of_sunrise:
  1069                           	callstack 0
  1070                           
  1071 ;; *************** function _sun_sync *****************
  1072 ;; Defined at:
  1073 ;;		line 85 in file "dateandtime.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;  current        11   13[COMRAM] struct .
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;  solarnoon_se    1   26[COMRAM] char 
  1078 ;;  solarnoon_mi    1   25[COMRAM] char 
  1079 ;;  solarnoon_ho    1   24[COMRAM] char 
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  11   13[COMRAM] struct .
  1082 ;; Registers used:
  1083 ;;		wreg, status,2, status,0, cstack
  1084 ;; Tracked objects:
  1085 ;;		On entry : 0/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1089 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1090 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1092 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1093 ;;Total ram usage:       14 bytes
  1094 ;; Hardware stack levels used: 1
  1095 ;; Hardware stack levels required when called: 3
  1096 ;; This function calls:
  1097 ;;		___awdiv
  1098 ;; This function is called by:
  1099 ;;		_main
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           	psect	text5
  1104  0006DC                     __ptext5:
  1105                           	callstack 0
  1106  0006DC                     _sun_sync:
  1107                           	callstack 27
  1108  0006DC                     
  1109                           ;dateandtime.c: 87:     signed char solarnoon_hour = (current.sunrise_hour + current.hou
      +                          r)/2;
  1110  0006DC  5016               	movf	(sun_sync@current+8)^0,w,c
  1111  0006DE  2413               	addwf	(sun_sync@current+5)^0,w,c
  1112  0006E0  6E06               	movwf	___awdiv@dividend^0,c
  1113  0006E2  6AE8               	clrf	wreg,c
  1114  0006E4  B0D8               	btfsc	status,0,c
  1115  0006E6  2AE8               	incf	wreg,f,c
  1116  0006E8  BE16               	btfsc	(sun_sync@current+8)^0,7,c
  1117  0006EA  06E8               	decf	wreg,f,c
  1118  0006EC  BE13               	btfsc	(sun_sync@current+5)^0,7,c
  1119  0006EE  06E8               	decf	wreg,f,c
  1120  0006F0  6E07               	movwf	(___awdiv@dividend+1)^0,c
  1121  0006F2  0E00               	movlw	0
  1122  0006F4  6E09               	movwf	(___awdiv@divisor+1)^0,c
  1123  0006F6  0E02               	movlw	2
  1124  0006F8  6E08               	movwf	___awdiv@divisor^0,c
  1125  0006FA  EC0C  F003         	call	___awdiv	;wreg free
  1126  0006FE  5006               	movf	?___awdiv^0,w,c
  1127  000700  6E19               	movwf	sun_sync@solarnoon_hour^0,c
  1128                           
  1129                           ;dateandtime.c: 88:     signed char solarnoon_minute = (current.sunrise_minute + current
      +                          .minute)/2;
  1130  000702  5017               	movf	(sun_sync@current+9)^0,w,c
  1131  000704  2414               	addwf	(sun_sync@current+6)^0,w,c
  1132  000706  6E06               	movwf	___awdiv@dividend^0,c
  1133  000708  6AE8               	clrf	wreg,c
  1134  00070A  B0D8               	btfsc	status,0,c
  1135  00070C  2AE8               	incf	wreg,f,c
  1136  00070E  BE17               	btfsc	(sun_sync@current+9)^0,7,c
  1137  000710  06E8               	decf	wreg,f,c
  1138  000712  BE14               	btfsc	(sun_sync@current+6)^0,7,c
  1139  000714  06E8               	decf	wreg,f,c
  1140  000716  6E07               	movwf	(___awdiv@dividend+1)^0,c
  1141  000718  0E00               	movlw	0
  1142  00071A  6E09               	movwf	(___awdiv@divisor+1)^0,c
  1143  00071C  0E02               	movlw	2
  1144  00071E  6E08               	movwf	___awdiv@divisor^0,c
  1145  000720  EC0C  F003         	call	___awdiv	;wreg free
  1146  000724  5006               	movf	?___awdiv^0,w,c
  1147  000726  6E1A               	movwf	sun_sync@solarnoon_minute^0,c
  1148                           
  1149                           ;dateandtime.c: 89:     signed char solarnoon_second = (current.sunrise_second + current
      +                          .second)/2;
  1150  000728  5018               	movf	(sun_sync@current+10)^0,w,c
  1151  00072A  2415               	addwf	(sun_sync@current+7)^0,w,c
  1152  00072C  6E06               	movwf	___awdiv@dividend^0,c
  1153  00072E  6AE8               	clrf	wreg,c
  1154  000730  B0D8               	btfsc	status,0,c
  1155  000732  2AE8               	incf	wreg,f,c
  1156  000734  BE18               	btfsc	(sun_sync@current+10)^0,7,c
  1157  000736  06E8               	decf	wreg,f,c
  1158  000738  BE15               	btfsc	(sun_sync@current+7)^0,7,c
  1159  00073A  06E8               	decf	wreg,f,c
  1160  00073C  6E07               	movwf	(___awdiv@dividend+1)^0,c
  1161  00073E  0E00               	movlw	0
  1162  000740  6E09               	movwf	(___awdiv@divisor+1)^0,c
  1163  000742  0E02               	movlw	2
  1164  000744  6E08               	movwf	___awdiv@divisor^0,c
  1165  000746  EC0C  F003         	call	___awdiv	;wreg free
  1166  00074A  5006               	movf	?___awdiv^0,w,c
  1167  00074C  6E1B               	movwf	sun_sync@solarnoon_second^0,c
  1168  00074E                     
  1169                           ;dateandtime.c: 91:     current.second = current.second - (solarnoon_second-0);
  1170  00074E  501B               	movf	sun_sync@solarnoon_second^0,w,c
  1171  000750  5C15               	subwf	(sun_sync@current+7)^0,w,c
  1172  000752  6E15               	movwf	(sun_sync@current+7)^0,c
  1173  000754                     
  1174                           ;dateandtime.c: 92:     if (current.second<0) {
  1175  000754  BE15               	btfsc	(sun_sync@current+7)^0,7,c
  1176  000756  EFB1  F003         	goto	u1150
  1177  00075A  EFAF  F003         	goto	u1151
  1178  00075E                     u1151:
  1179  00075E  EFB6  F003         	goto	l222
  1180  000762                     u1150:
  1181  000762                     
  1182                           ;dateandtime.c: 93:         current.second = current.second+60;
  1183  000762  5015               	movf	(sun_sync@current+7)^0,w,c
  1184  000764  0F3C               	addlw	60
  1185  000766  6E15               	movwf	(sun_sync@current+7)^0,c
  1186                           
  1187                           ;dateandtime.c: 94:         current.minute = current.minute-1;
  1188  000768  0414               	decf	(sun_sync@current+6)^0,w,c
  1189  00076A  6E14               	movwf	(sun_sync@current+6)^0,c
  1190  00076C                     l222:
  1191                           
  1192                           ;dateandtime.c: 96:     current.minute = current.minute - (solarnoon_minute-0);
  1193  00076C  501A               	movf	sun_sync@solarnoon_minute^0,w,c
  1194  00076E  5C14               	subwf	(sun_sync@current+6)^0,w,c
  1195  000770  6E14               	movwf	(sun_sync@current+6)^0,c
  1196                           
  1197                           ;dateandtime.c: 97:     if (current.minute<0) {
  1198  000772  BE14               	btfsc	(sun_sync@current+6)^0,7,c
  1199  000774  EFC0  F003         	goto	u1160
  1200  000778  EFBE  F003         	goto	u1161
  1201  00077C                     u1161:
  1202  00077C  EFC5  F003         	goto	l223
  1203  000780                     u1160:
  1204  000780                     
  1205                           ;dateandtime.c: 98:         current.minute = current.minute+60;
  1206  000780  5014               	movf	(sun_sync@current+6)^0,w,c
  1207  000782  0F3C               	addlw	60
  1208  000784  6E14               	movwf	(sun_sync@current+6)^0,c
  1209                           
  1210                           ;dateandtime.c: 99:         current.hour = current.hour-1;
  1211  000786  0413               	decf	(sun_sync@current+5)^0,w,c
  1212  000788  6E13               	movwf	(sun_sync@current+5)^0,c
  1213  00078A                     l223:
  1214                           
  1215                           ;dateandtime.c: 101:     current.hour = current.hour - (solarnoon_hour-12);
  1216  00078A  5019               	movf	sun_sync@solarnoon_hour^0,w,c
  1217  00078C  5C13               	subwf	(sun_sync@current+5)^0,w,c
  1218  00078E  0F0C               	addlw	12
  1219  000790  6E13               	movwf	(sun_sync@current+5)^0,c
  1220  000792  0012               	return		;funcret
  1221  000794                     __end_of_sun_sync:
  1222                           	callstack 0
  1223                           
  1224 ;; *************** function ___awdiv *****************
  1225 ;; Defined at:
  1226 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  1227 ;; Parameters:    Size  Location     Type
  1228 ;;  dividend        2    5[COMRAM] int 
  1229 ;;  divisor         2    7[COMRAM] int 
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;  quotient        2   11[COMRAM] int 
  1232 ;;  sign            1   10[COMRAM] unsigned char 
  1233 ;;  counter         1    9[COMRAM] unsigned char 
  1234 ;; Return value:  Size  Location     Type
  1235 ;;                  2    5[COMRAM] int 
  1236 ;; Registers used:
  1237 ;;		wreg, status,2, status,0
  1238 ;; Tracked objects:
  1239 ;;		On entry : 0/0
  1240 ;;		On exit  : 0/0
  1241 ;;		Unchanged: 0/0
  1242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1243 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1244 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1246 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1247 ;;Total ram usage:        8 bytes
  1248 ;; Hardware stack levels used: 1
  1249 ;; Hardware stack levels required when called: 2
  1250 ;; This function calls:
  1251 ;;		Nothing
  1252 ;; This function is called by:
  1253 ;;		_sun_sync
  1254 ;; This function uses a non-reentrant model
  1255 ;;
  1256                           
  1257                           	psect	text6
  1258  000618                     __ptext6:
  1259                           	callstack 0
  1260  000618                     ___awdiv:
  1261                           	callstack 27
  1262  000618  0E00               	movlw	0
  1263  00061A  6E0B               	movwf	___awdiv@sign^0,c
  1264  00061C  BE09               	btfsc	(___awdiv@divisor+1)^0,7,c
  1265  00061E  EF15  F003         	goto	u1060
  1266  000622  EF13  F003         	goto	u1061
  1267  000626                     u1061:
  1268  000626  EF1B  F003         	goto	l1298
  1269  00062A                     u1060:
  1270  00062A  6C08               	negf	___awdiv@divisor^0,c
  1271  00062C  1E09               	comf	(___awdiv@divisor+1)^0,f,c
  1272  00062E  B0D8               	btfsc	status,0,c
  1273  000630  2A09               	incf	(___awdiv@divisor+1)^0,f,c
  1274  000632  0E01               	movlw	1
  1275  000634  6E0B               	movwf	___awdiv@sign^0,c
  1276  000636                     l1298:
  1277  000636  BE07               	btfsc	(___awdiv@dividend+1)^0,7,c
  1278  000638  EF22  F003         	goto	u1070
  1279  00063C  EF20  F003         	goto	u1071
  1280  000640                     u1071:
  1281  000640  EF28  F003         	goto	l1304
  1282  000644                     u1070:
  1283  000644  6C06               	negf	___awdiv@dividend^0,c
  1284  000646  1E07               	comf	(___awdiv@dividend+1)^0,f,c
  1285  000648  B0D8               	btfsc	status,0,c
  1286  00064A  2A07               	incf	(___awdiv@dividend+1)^0,f,c
  1287  00064C  0E01               	movlw	1
  1288  00064E  1A0B               	xorwf	___awdiv@sign^0,f,c
  1289  000650                     l1304:
  1290  000650  0E00               	movlw	0
  1291  000652  6E0D               	movwf	(___awdiv@quotient+1)^0,c
  1292  000654  0E00               	movlw	0
  1293  000656  6E0C               	movwf	___awdiv@quotient^0,c
  1294  000658  5008               	movf	___awdiv@divisor^0,w,c
  1295  00065A  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
  1296  00065C  B4D8               	btfsc	status,2,c
  1297  00065E  EF33  F003         	goto	u1081
  1298  000662  EF35  F003         	goto	u1080
  1299  000666                     u1081:
  1300  000666  EF5D  F003         	goto	l1326
  1301  00066A                     u1080:
  1302  00066A  0E01               	movlw	1
  1303  00066C  6E0A               	movwf	___awdiv@counter^0,c
  1304  00066E  EF3D  F003         	goto	l1312
  1305  000672                     l1310:
  1306  000672  90D8               	bcf	status,0,c
  1307  000674  3608               	rlcf	___awdiv@divisor^0,f,c
  1308  000676  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
  1309  000678  2A0A               	incf	___awdiv@counter^0,f,c
  1310  00067A                     l1312:
  1311  00067A  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
  1312  00067C  EF42  F003         	goto	u1091
  1313  000680  EF44  F003         	goto	u1090
  1314  000684                     u1091:
  1315  000684  EF39  F003         	goto	l1310
  1316  000688                     u1090:
  1317  000688                     l1314:
  1318  000688  90D8               	bcf	status,0,c
  1319  00068A  360C               	rlcf	___awdiv@quotient^0,f,c
  1320  00068C  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
  1321  00068E  5008               	movf	___awdiv@divisor^0,w,c
  1322  000690  5C06               	subwf	___awdiv@dividend^0,w,c
  1323  000692  5009               	movf	(___awdiv@divisor+1)^0,w,c
  1324  000694  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
  1325  000696  A0D8               	btfss	status,0,c
  1326  000698  EF50  F003         	goto	u1101
  1327  00069C  EF52  F003         	goto	u1100
  1328  0006A0                     u1101:
  1329  0006A0  EF57  F003         	goto	l1322
  1330  0006A4                     u1100:
  1331  0006A4  5008               	movf	___awdiv@divisor^0,w,c
  1332  0006A6  5E06               	subwf	___awdiv@dividend^0,f,c
  1333  0006A8  5009               	movf	(___awdiv@divisor+1)^0,w,c
  1334  0006AA  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
  1335  0006AC  800C               	bsf	___awdiv@quotient^0,0,c
  1336  0006AE                     l1322:
  1337  0006AE  90D8               	bcf	status,0,c
  1338  0006B0  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
  1339  0006B2  3208               	rrcf	___awdiv@divisor^0,f,c
  1340  0006B4  2E0A               	decfsz	___awdiv@counter^0,f,c
  1341  0006B6  EF44  F003         	goto	l1314
  1342  0006BA                     l1326:
  1343  0006BA  500B               	movf	___awdiv@sign^0,w,c
  1344  0006BC  B4D8               	btfsc	status,2,c
  1345  0006BE  EF63  F003         	goto	u1111
  1346  0006C2  EF65  F003         	goto	u1110
  1347  0006C6                     u1111:
  1348  0006C6  EF69  F003         	goto	l1330
  1349  0006CA                     u1110:
  1350  0006CA  6C0C               	negf	___awdiv@quotient^0,c
  1351  0006CC  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
  1352  0006CE  B0D8               	btfsc	status,0,c
  1353  0006D0  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
  1354  0006D2                     l1330:
  1355  0006D2  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  1356  0006D6  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  1357  0006DA  0012               	return		;funcret
  1358  0006DC                     __end_of___awdiv:
  1359                           	callstack 0
  1360                           
  1361 ;; *************** function _Timer0_init *****************
  1362 ;; Defined at:
  1363 ;;		line 7 in file "timers.c"
  1364 ;; Parameters:    Size  Location     Type
  1365 ;;		None
  1366 ;; Auto vars:     Size  Location     Type
  1367 ;;		None
  1368 ;; Return value:  Size  Location     Type
  1369 ;;                  1    wreg      void 
  1370 ;; Registers used:
  1371 ;;		wreg, status,2
  1372 ;; Tracked objects:
  1373 ;;		On entry : 0/0
  1374 ;;		On exit  : 0/0
  1375 ;;		Unchanged: 0/0
  1376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1381 ;;Total ram usage:        0 bytes
  1382 ;; Hardware stack levels used: 1
  1383 ;; Hardware stack levels required when called: 2
  1384 ;; This function calls:
  1385 ;;		Nothing
  1386 ;; This function is called by:
  1387 ;;		_main
  1388 ;; This function uses a non-reentrant model
  1389 ;;
  1390                           
  1391                           	psect	text7
  1392  000882                     __ptext7:
  1393                           	callstack 0
  1394  000882                     _Timer0_init:
  1395                           	callstack 28
  1396  000882                     
  1397                           ;timers.c: 8:     T0CON1bits.T0CS=0b010;
  1398  000882  50D6               	movf	214,w,c	;volatile
  1399  000884  0B1F               	andlw	-225
  1400  000886  0940               	iorlw	64
  1401  000888  6ED6               	movwf	214,c	;volatile
  1402  00088A                     
  1403                           ;timers.c: 9:     T0CON1bits.T0ASYNC=1;
  1404  00088A  88D6               	bsf	214,4,c	;volatile
  1405                           
  1406                           ;timers.c: 10:     T0CON1bits.T0CKPS=0b1000;
  1407  00088C  50D6               	movf	214,w,c	;volatile
  1408  00088E  0BF0               	andlw	-16
  1409  000890  0908               	iorlw	8
  1410  000892  6ED6               	movwf	214,c	;volatile
  1411  000894                     
  1412                           ;timers.c: 11:     T0CON0bits.T016BIT=1;
  1413  000894  88D5               	bsf	213,4,c	;volatile
  1414                           
  1415                           ;timers.c: 23:     TMR0H=0b1011;
  1416  000896  0E0B               	movlw	11
  1417  000898  6ED4               	movwf	212,c	;volatile
  1418                           
  1419                           ;timers.c: 24:     TMR0L=0b11011011;
  1420  00089A  0EDB               	movlw	219
  1421  00089C  6ED3               	movwf	211,c	;volatile
  1422  00089E                     
  1423                           ;timers.c: 25:     T0CON0bits.T0EN=1;
  1424  00089E  8ED5               	bsf	213,7,c	;volatile
  1425  0008A0  0012               	return		;funcret
  1426  0008A2                     __end_of_Timer0_init:
  1427                           	callstack 0
  1428                           
  1429 ;; *************** function _LEDarray_init *****************
  1430 ;; Defined at:
  1431 ;;		line 8 in file "LEDarray.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;		None
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;		None
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  1    wreg      void 
  1438 ;; Registers used:
  1439 ;;		None
  1440 ;; Tracked objects:
  1441 ;;		On entry : 0/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1449 ;;Total ram usage:        0 bytes
  1450 ;; Hardware stack levels used: 1
  1451 ;; Hardware stack levels required when called: 2
  1452 ;; This function calls:
  1453 ;;		Nothing
  1454 ;; This function is called by:
  1455 ;;		_main
  1456 ;; This function uses a non-reentrant model
  1457 ;;
  1458                           
  1459                           	psect	text8
  1460  000818                     __ptext8:
  1461                           	callstack 0
  1462  000818                     _LEDarray_init:
  1463                           	callstack 28
  1464  000818                     
  1465                           ;LEDarray.c: 11:     LATGbits.LATG0 = 0;
  1466  000818  907F               	bcf	127,0,c	;volatile
  1467                           
  1468                           ;LEDarray.c: 12:     LATGbits.LATG1 = 0;
  1469  00081A  927F               	bcf	127,1,c	;volatile
  1470                           
  1471                           ;LEDarray.c: 13:     LATAbits.LATA2 = 0;
  1472  00081C  9479               	bcf	121,2,c	;volatile
  1473                           
  1474                           ;LEDarray.c: 14:     LATFbits.LATF6 = 0;
  1475  00081E  9C7E               	bcf	126,6,c	;volatile
  1476                           
  1477                           ;LEDarray.c: 15:     LATAbits.LATA4 = 0;
  1478  000820  9879               	bcf	121,4,c	;volatile
  1479                           
  1480                           ;LEDarray.c: 16:     LATAbits.LATA5 = 0;
  1481  000822  9A79               	bcf	121,5,c	;volatile
  1482                           
  1483                           ;LEDarray.c: 17:     LATFbits.LATF0 = 0;
  1484  000824  907E               	bcf	126,0,c	;volatile
  1485                           
  1486                           ;LEDarray.c: 18:     LATBbits.LATB0 = 0;
  1487  000826  907A               	bcf	122,0,c	;volatile
  1488                           
  1489                           ;LEDarray.c: 19:     LATBbits.LATB1 = 0;
  1490  000828  927A               	bcf	122,1,c	;volatile
  1491                           
  1492                           ;LEDarray.c: 22:     TRISGbits.TRISG0 = 0;
  1493  00082A  9087               	bcf	135,0,c	;volatile
  1494                           
  1495                           ;LEDarray.c: 23:     TRISGbits.TRISG1 = 0;
  1496  00082C  9287               	bcf	135,1,c	;volatile
  1497                           
  1498                           ;LEDarray.c: 24:     TRISAbits.TRISA2 = 0;
  1499  00082E  9481               	bcf	129,2,c	;volatile
  1500                           
  1501                           ;LEDarray.c: 25:     TRISFbits.TRISF6 = 0;
  1502  000830  9C86               	bcf	134,6,c	;volatile
  1503                           
  1504                           ;LEDarray.c: 26:     TRISAbits.TRISA4 = 0;
  1505  000832  9881               	bcf	129,4,c	;volatile
  1506                           
  1507                           ;LEDarray.c: 27:     TRISAbits.TRISA5 = 0;
  1508  000834  9A81               	bcf	129,5,c	;volatile
  1509                           
  1510                           ;LEDarray.c: 28:     TRISFbits.TRISF0 = 0;
  1511  000836  9086               	bcf	134,0,c	;volatile
  1512                           
  1513                           ;LEDarray.c: 29:     TRISBbits.TRISB0 = 0;
  1514  000838  9082               	bcf	130,0,c	;volatile
  1515                           
  1516                           ;LEDarray.c: 30:     TRISBbits.TRISB1 = 0;
  1517  00083A  9282               	bcf	130,1,c	;volatile
  1518  00083C  0012               	return		;funcret
  1519  00083E                     __end_of_LEDarray_init:
  1520                           	callstack 0
  1521                           
  1522 ;; *************** function _LEDarray_disp_bin *****************
  1523 ;; Defined at:
  1524 ;;		line 38 in file "LEDarray.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;  number          1    wreg     char 
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;  number          1    7[COMRAM] char 
  1529 ;; Return value:  Size  Location     Type
  1530 ;;                  1    wreg      void 
  1531 ;; Registers used:
  1532 ;;		wreg, status,2
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1539 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1540 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1541 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1542 ;;Total ram usage:        3 bytes
  1543 ;; Hardware stack levels used: 1
  1544 ;; Hardware stack levels required when called: 2
  1545 ;; This function calls:
  1546 ;;		Nothing
  1547 ;; This function is called by:
  1548 ;;		_main
  1549 ;; This function uses a non-reentrant model
  1550 ;;
  1551                           
  1552                           	psect	text9
  1553  000232                     __ptext9:
  1554                           	callstack 0
  1555  000232                     _LEDarray_disp_bin:
  1556                           	callstack 28
  1557                           
  1558                           ;incstack = 0
  1559                           ;LEDarray_disp_bin@number stored from wreg
  1560  000232  6E08               	movwf	LEDarray_disp_bin@number^0,c
  1561  000234                     
  1562                           ;LEDarray.c: 38: void LEDarray_disp_bin(signed char number);LEDarray.c: 39: {;LEDarray.c
      +                          : 43:     if (number & 0b000000001) {LATGbits.LATG0 = 1;} else {LATGbits.LATG0 = 0;}
  1563  000234  C008  F006         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  1564  000238  6A07               	clrf	(??_LEDarray_disp_bin+1)^0,c
  1565  00023A  BE06               	btfsc	??_LEDarray_disp_bin^0,7,c
  1566  00023C  0607               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  1567  00023E  A006               	btfss	??_LEDarray_disp_bin^0,0,c
  1568  000240  EF24  F001         	goto	u1261
  1569  000244  EF26  F001         	goto	u1260
  1570  000248                     u1261:
  1571  000248  EF29  F001         	goto	l74
  1572  00024C                     u1260:
  1573  00024C  807F               	bsf	127,0,c	;volatile
  1574  00024E  EF2A  F001         	goto	l1434
  1575  000252                     l74:
  1576  000252  907F               	bcf	127,0,c	;volatile
  1577  000254                     l1434:
  1578                           
  1579                           ;LEDarray.c: 44:     if (number & 0b000000010) {LATGbits.LATG1 = 1;} else {LATGbits.LATG
      +                          1 = 0;}
  1580  000254  C008  F006         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  1581  000258  6A07               	clrf	(??_LEDarray_disp_bin+1)^0,c
  1582  00025A  BE06               	btfsc	??_LEDarray_disp_bin^0,7,c
  1583  00025C  0607               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  1584  00025E  A206               	btfss	??_LEDarray_disp_bin^0,1,c
  1585  000260  EF34  F001         	goto	u1271
  1586  000264  EF36  F001         	goto	u1270
  1587  000268                     u1271:
  1588  000268  EF39  F001         	goto	l76
  1589  00026C                     u1270:
  1590  00026C  827F               	bsf	127,1,c	;volatile
  1591  00026E  EF3A  F001         	goto	l1438
  1592  000272                     l76:
  1593  000272  927F               	bcf	127,1,c	;volatile
  1594  000274                     l1438:
  1595                           
  1596                           ;LEDarray.c: 45:     if (number & 0b000000100) {LATAbits.LATA2 = 1;} else {LATAbits.LATA
      +                          2 = 0;}
  1597  000274  C008  F006         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  1598  000278  6A07               	clrf	(??_LEDarray_disp_bin+1)^0,c
  1599  00027A  BE06               	btfsc	??_LEDarray_disp_bin^0,7,c
  1600  00027C  0607               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  1601  00027E  A406               	btfss	??_LEDarray_disp_bin^0,2,c
  1602  000280  EF44  F001         	goto	u1281
  1603  000284  EF46  F001         	goto	u1280
  1604  000288                     u1281:
  1605  000288  EF49  F001         	goto	l78
  1606  00028C                     u1280:
  1607  00028C  8479               	bsf	121,2,c	;volatile
  1608  00028E  EF4A  F001         	goto	l1442
  1609  000292                     l78:
  1610  000292  9479               	bcf	121,2,c	;volatile
  1611  000294                     l1442:
  1612                           
  1613                           ;LEDarray.c: 46:     if (number & 0b000001000) {LATFbits.LATF6 = 1;} else {LATFbits.LATF
      +                          6 = 0;}
  1614  000294  C008  F006         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  1615  000298  6A07               	clrf	(??_LEDarray_disp_bin+1)^0,c
  1616  00029A  BE06               	btfsc	??_LEDarray_disp_bin^0,7,c
  1617  00029C  0607               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  1618  00029E  A606               	btfss	??_LEDarray_disp_bin^0,3,c
  1619  0002A0  EF54  F001         	goto	u1291
  1620  0002A4  EF56  F001         	goto	u1290
  1621  0002A8                     u1291:
  1622  0002A8  EF59  F001         	goto	l80
  1623  0002AC                     u1290:
  1624  0002AC  8C7E               	bsf	126,6,c	;volatile
  1625  0002AE  EF5A  F001         	goto	l1446
  1626  0002B2                     l80:
  1627  0002B2  9C7E               	bcf	126,6,c	;volatile
  1628  0002B4                     l1446:
  1629                           
  1630                           ;LEDarray.c: 47:     if (number & 0b000010000) {LATAbits.LATA4 = 1;} else {LATAbits.LATA
      +                          4 = 0;}
  1631  0002B4  C008  F006         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  1632  0002B8  6A07               	clrf	(??_LEDarray_disp_bin+1)^0,c
  1633  0002BA  BE06               	btfsc	??_LEDarray_disp_bin^0,7,c
  1634  0002BC  0607               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  1635  0002BE  A806               	btfss	??_LEDarray_disp_bin^0,4,c
  1636  0002C0  EF64  F001         	goto	u1301
  1637  0002C4  EF66  F001         	goto	u1300
  1638  0002C8                     u1301:
  1639  0002C8  EF69  F001         	goto	l82
  1640  0002CC                     u1300:
  1641  0002CC  8879               	bsf	121,4,c	;volatile
  1642  0002CE  EF6A  F001         	goto	l1450
  1643  0002D2                     l82:
  1644  0002D2  9879               	bcf	121,4,c	;volatile
  1645  0002D4                     l1450:
  1646                           
  1647                           ;LEDarray.c: 48:     if (number & 0b000100000) {LATAbits.LATA5 = 1;} else {LATAbits.LATA
      +                          5 = 0;}
  1648  0002D4  C008  F006         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  1649  0002D8  6A07               	clrf	(??_LEDarray_disp_bin+1)^0,c
  1650  0002DA  BE06               	btfsc	??_LEDarray_disp_bin^0,7,c
  1651  0002DC  0607               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  1652  0002DE  AA06               	btfss	??_LEDarray_disp_bin^0,5,c
  1653  0002E0  EF74  F001         	goto	u1311
  1654  0002E4  EF76  F001         	goto	u1310
  1655  0002E8                     u1311:
  1656  0002E8  EF79  F001         	goto	l84
  1657  0002EC                     u1310:
  1658  0002EC  8A79               	bsf	121,5,c	;volatile
  1659  0002EE  EF7A  F001         	goto	l1454
  1660  0002F2                     l84:
  1661  0002F2  9A79               	bcf	121,5,c	;volatile
  1662  0002F4                     l1454:
  1663                           
  1664                           ;LEDarray.c: 49:     if (number & 0b001000000) {LATFbits.LATF0 = 1;} else {LATFbits.LATF
      +                          0 = 0;}
  1665  0002F4  C008  F006         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  1666  0002F8  6A07               	clrf	(??_LEDarray_disp_bin+1)^0,c
  1667  0002FA  BE06               	btfsc	??_LEDarray_disp_bin^0,7,c
  1668  0002FC  0607               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  1669  0002FE  AC06               	btfss	??_LEDarray_disp_bin^0,6,c
  1670  000300  EF84  F001         	goto	u1321
  1671  000304  EF86  F001         	goto	u1320
  1672  000308                     u1321:
  1673  000308  EF89  F001         	goto	l86
  1674  00030C                     u1320:
  1675  00030C  807E               	bsf	126,0,c	;volatile
  1676  00030E  EF8A  F001         	goto	l1458
  1677  000312                     l86:
  1678  000312  907E               	bcf	126,0,c	;volatile
  1679  000314                     l1458:
  1680                           
  1681                           ;LEDarray.c: 50:     if (number & 0b010000000) {LATBbits.LATB0 = 1;} else {LATBbits.LATB
      +                          0 = 0;}
  1682  000314  C008  F006         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  1683  000318  6A07               	clrf	(??_LEDarray_disp_bin+1)^0,c
  1684  00031A  BE06               	btfsc	??_LEDarray_disp_bin^0,7,c
  1685  00031C  0607               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  1686  00031E  AE06               	btfss	??_LEDarray_disp_bin^0,7,c
  1687  000320  EF94  F001         	goto	u1331
  1688  000324  EF96  F001         	goto	u1330
  1689  000328                     u1331:
  1690  000328  EF99  F001         	goto	l88
  1691  00032C                     u1330:
  1692  00032C  807A               	bsf	122,0,c	;volatile
  1693  00032E  EF9A  F001         	goto	l1462
  1694  000332                     l88:
  1695  000332  907A               	bcf	122,0,c	;volatile
  1696  000334                     l1462:
  1697                           
  1698                           ;LEDarray.c: 51:     if (number & 0b100000000) {LATBbits.LATB1 = 1;} else {LATBbits.LATB
      +                          1 = 0;}
  1699  000334  C008  F006         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  1700  000338  6A07               	clrf	(??_LEDarray_disp_bin+1)^0,c
  1701  00033A  BE06               	btfsc	??_LEDarray_disp_bin^0,7,c
  1702  00033C  0607               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  1703  00033E  A007               	btfss	(??_LEDarray_disp_bin+1)^0,0,c
  1704  000340  EFA4  F001         	goto	u1341
  1705  000344  EFA6  F001         	goto	u1340
  1706  000348                     u1341:
  1707  000348  EFA9  F001         	goto	l90
  1708  00034C                     u1340:
  1709  00034C  827A               	bsf	122,1,c	;volatile
  1710  00034E  EFAA  F001         	goto	l92
  1711  000352                     l90:
  1712  000352  927A               	bcf	122,1,c	;volatile
  1713  000354                     l92:
  1714  000354  0012               	return		;funcret
  1715  000356                     __end_of_LEDarray_disp_bin:
  1716                           	callstack 0
  1717                           
  1718 ;; *************** function _LED_toggle *****************
  1719 ;; Defined at:
  1720 ;;		line 17 in file "LED.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;  current        11    5[COMRAM] struct .
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;		None
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  1    wreg      void 
  1727 ;; Registers used:
  1728 ;;		wreg, status,2, status,0
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1734 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1737 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1738 ;;Total ram usage:       11 bytes
  1739 ;; Hardware stack levels used: 1
  1740 ;; Hardware stack levels required when called: 2
  1741 ;; This function calls:
  1742 ;;		Nothing
  1743 ;; This function is called by:
  1744 ;;		_main
  1745 ;; This function uses a non-reentrant model
  1746 ;;
  1747                           
  1748                           	psect	text10
  1749  0007E0                     __ptext10:
  1750                           	callstack 0
  1751  0007E0                     _LED_toggle:
  1752                           	callstack 28
  1753  0007E0                     
  1754                           ;LED.c: 18:     if (current.hour>=1 && current.hour<5) {
  1755  0007E0  500B               	movf	(LED_toggle@current+5)^0,w,c
  1756  0007E2  0A80               	xorlw	128
  1757  0007E4  0F7F               	addlw	-129
  1758  0007E6  A0D8               	btfss	status,0,c
  1759  0007E8  EFF8  F003         	goto	u1121
  1760  0007EC  EFFA  F003         	goto	u1120
  1761  0007F0                     u1121:
  1762  0007F0  EF09  F004         	goto	l184
  1763  0007F4                     u1120:
  1764  0007F4  500B               	movf	(LED_toggle@current+5)^0,w,c
  1765  0007F6  0A80               	xorlw	128
  1766  0007F8  0F7B               	addlw	-133
  1767  0007FA  B0D8               	btfsc	status,0,c
  1768  0007FC  EF02  F004         	goto	u1131
  1769  000800  EF04  F004         	goto	u1130
  1770  000804                     u1131:
  1771  000804  EF09  F004         	goto	l184
  1772  000808                     u1130:
  1773  000808                     
  1774                           ;LED.c: 19:         PIE2bits.C1IE = 0;
  1775  000808  010E               	movlb	14	; () banked
  1776  00080A  912B               	bcf	43,0,b	;volatile
  1777                           
  1778                           ;LED.c: 20:         LATDbits.LATD7 = 0;
  1779  00080C  9E7C               	bcf	124,7,c	;volatile
  1780                           
  1781                           ;LED.c: 21:     } else {
  1782  00080E  EF0B  F004         	goto	l186
  1783  000812                     l184:
  1784                           
  1785                           ;LED.c: 22:         PIE2bits.C1IE = 1;
  1786  000812  010E               	movlb	14	; () banked
  1787  000814  812B               	bsf	43,0,b	;volatile
  1788  000816                     l186:
  1789                           
  1790                           ; BSR set to: 14
  1791  000816  0012               	return		;funcret
  1792  000818                     __end_of_LED_toggle:
  1793                           	callstack 0
  1794                           
  1795 ;; *************** function _LED2_init *****************
  1796 ;; Defined at:
  1797 ;;		line 11 in file "LED.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;		None
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;		None
  1802 ;; Return value:  Size  Location     Type
  1803 ;;                  1    wreg      void 
  1804 ;; Registers used:
  1805 ;;		None
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1815 ;;Total ram usage:        0 bytes
  1816 ;; Hardware stack levels used: 1
  1817 ;; Hardware stack levels required when called: 2
  1818 ;; This function calls:
  1819 ;;		Nothing
  1820 ;; This function is called by:
  1821 ;;		_main
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           	psect	text11
  1826  0008F0                     __ptext11:
  1827                           	callstack 0
  1828  0008F0                     _LED2_init:
  1829                           	callstack 28
  1830  0008F0                     
  1831                           ;LED.c: 13:     LATHbits.LATH3 = 0;
  1832  0008F0  9680               	bcf	128,3,c	;volatile
  1833                           
  1834                           ;LED.c: 14:     TRISHbits.TRISH3 = 0;
  1835  0008F2  9688               	bcf	136,3,c	;volatile
  1836  0008F4  0012               	return		;funcret
  1837  0008F6                     __end_of_LED2_init:
  1838                           	callstack 0
  1839                           
  1840 ;; *************** function _LED1_init *****************
  1841 ;; Defined at:
  1842 ;;		line 5 in file "LED.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;		None
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;		None
  1847 ;; Return value:  Size  Location     Type
  1848 ;;                  1    wreg      void 
  1849 ;; Registers used:
  1850 ;;		None
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1860 ;;Total ram usage:        0 bytes
  1861 ;; Hardware stack levels used: 1
  1862 ;; Hardware stack levels required when called: 2
  1863 ;; This function calls:
  1864 ;;		Nothing
  1865 ;; This function is called by:
  1866 ;;		_main
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           	psect	text12
  1871  0008F6                     __ptext12:
  1872                           	callstack 0
  1873  0008F6                     _LED1_init:
  1874                           	callstack 28
  1875  0008F6                     
  1876                           ;LED.c: 7:     LATDbits.LATD7 = 0;
  1877  0008F6  9E7C               	bcf	124,7,c	;volatile
  1878                           
  1879                           ;LED.c: 8:     TRISDbits.TRISD7 = 0;
  1880  0008F8  9E84               	bcf	132,7,c	;volatile
  1881  0008FA  0012               	return		;funcret
  1882  0008FC                     __end_of_LED1_init:
  1883                           	callstack 0
  1884                           
  1885 ;; *************** function _Interrupts_init *****************
  1886 ;; Defined at:
  1887 ;;		line 9 in file "interrupts.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;		None
  1890 ;; Auto vars:     Size  Location     Type
  1891 ;;		None
  1892 ;; Return value:  Size  Location     Type
  1893 ;;                  1    wreg      void 
  1894 ;; Registers used:
  1895 ;;		None
  1896 ;; Tracked objects:
  1897 ;;		On entry : 0/0
  1898 ;;		On exit  : 0/0
  1899 ;;		Unchanged: 0/0
  1900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1905 ;;Total ram usage:        0 bytes
  1906 ;; Hardware stack levels used: 1
  1907 ;; Hardware stack levels required when called: 2
  1908 ;; This function calls:
  1909 ;;		Nothing
  1910 ;; This function is called by:
  1911 ;;		_main
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915                           	psect	text13
  1916  0008D0                     __ptext13:
  1917                           	callstack 0
  1918  0008D0                     _Interrupts_init:
  1919                           	callstack 28
  1920  0008D0                     
  1921                           ;interrupts.c: 12:     PIE0bits.TMR0IE = 1;
  1922  0008D0  010E               	movlb	14	; () banked
  1923  0008D2  8B29               	bsf	41,5,b	;volatile
  1924                           
  1925                           ;interrupts.c: 13:     PIE2bits.C1IE = 1;
  1926  0008D4  812B               	bsf	43,0,b	;volatile
  1927                           
  1928                           ;interrupts.c: 14:     IPR0bits.TMR0IP = 0;
  1929  0008D6  9B1F               	bcf	31,5,b	;volatile
  1930                           
  1931                           ;interrupts.c: 15:     IPR2bits.C1IP = 1;
  1932  0008D8  8121               	bsf	33,0,b	;volatile
  1933                           
  1934                           ;interrupts.c: 16:     INTCONbits.IPEN = 1;
  1935  0008DA  8AF2               	bsf	242,5,c	;volatile
  1936                           
  1937                           ;interrupts.c: 17:     INTCONbits.PEIE = 1;
  1938  0008DC  8CF2               	bsf	242,6,c	;volatile
  1939                           
  1940                           ;interrupts.c: 18:     INTCONbits.GIE = 1;
  1941  0008DE  8EF2               	bsf	242,7,c	;volatile
  1942  0008E0                     
  1943                           ; BSR set to: 14
  1944  0008E0  0012               	return		;funcret
  1945  0008E2                     __end_of_Interrupts_init:
  1946                           	callstack 0
  1947                           
  1948 ;; *************** function _Comp1_init *****************
  1949 ;; Defined at:
  1950 ;;		line 23 in file "comparator.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;		None
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;		None
  1955 ;; Return value:  Size  Location     Type
  1956 ;;                  1    wreg      void 
  1957 ;; Registers used:
  1958 ;;		wreg, status,2, cstack
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1968 ;;Total ram usage:        0 bytes
  1969 ;; Hardware stack levels used: 1
  1970 ;; Hardware stack levels required when called: 3
  1971 ;; This function calls:
  1972 ;;		_DAC_init
  1973 ;; This function is called by:
  1974 ;;		_main
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           	psect	text14
  1979  00083E                     __ptext14:
  1980                           	callstack 0
  1981  00083E                     _Comp1_init:
  1982                           	callstack 27
  1983  00083E                     
  1984                           ;comparator.c: 25:     TRISFbits.TRISF7=1;
  1985  00083E  8E86               	bsf	134,7,c	;volatile
  1986  000840                     
  1987                           ;comparator.c: 26:     CM1NCHbits.NCH=0b011;
  1988  000840  010E               	movlb	14	; () banked
  1989  000842  51D2               	movf	210,w,b	;volatile
  1990  000844  0BF8               	andlw	-8
  1991  000846  0903               	iorlw	3
  1992  000848  6FD2               	movwf	210,b	;volatile
  1993                           
  1994                           ;comparator.c: 27:     CM1PCHbits.PCH=0b101;
  1995  00084A  51D3               	movf	211,w,b	;volatile
  1996  00084C  0BF8               	andlw	-8
  1997  00084E  0905               	iorlw	5
  1998  000850  6FD3               	movwf	211,b	;volatile
  1999  000852                     
  2000                           ; BSR set to: 14
  2001                           ;comparator.c: 28:     CM1CON0bits.HYS=1;
  2002  000852  83D0               	bsf	208,1,b	;volatile
  2003  000854                     
  2004                           ; BSR set to: 14
  2005                           ;comparator.c: 29:     CM1CON0bits.POL=1;
  2006  000854  89D0               	bsf	208,4,b	;volatile
  2007  000856                     
  2008                           ; BSR set to: 14
  2009                           ;comparator.c: 30:     CM1CON1bits.INTP=1;
  2010  000856  83D1               	bsf	209,1,b	;volatile
  2011  000858                     
  2012                           ; BSR set to: 14
  2013                           ;comparator.c: 31:     DAC_init();
  2014  000858  EC5E  F004         	call	_DAC_init	;wreg free
  2015  00085C                     
  2016                           ;comparator.c: 32:     CM1CON0bits.EN=1;
  2017  00085C  010E               	movlb	14	; () banked
  2018  00085E  8FD0               	bsf	208,7,b	;volatile
  2019  000860                     
  2020                           ; BSR set to: 14
  2021  000860  0012               	return		;funcret
  2022  000862                     __end_of_Comp1_init:
  2023                           	callstack 0
  2024                           
  2025 ;; *************** function _DAC_init *****************
  2026 ;; Defined at:
  2027 ;;		line 7 in file "comparator.c"
  2028 ;; Parameters:    Size  Location     Type
  2029 ;;		None
  2030 ;; Auto vars:     Size  Location     Type
  2031 ;;		None
  2032 ;; Return value:  Size  Location     Type
  2033 ;;                  1    wreg      void 
  2034 ;; Registers used:
  2035 ;;		wreg, status,2
  2036 ;; Tracked objects:
  2037 ;;		On entry : 0/0
  2038 ;;		On exit  : 0/0
  2039 ;;		Unchanged: 0/0
  2040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2045 ;;Total ram usage:        0 bytes
  2046 ;; Hardware stack levels used: 1
  2047 ;; Hardware stack levels required when called: 2
  2048 ;; This function calls:
  2049 ;;		Nothing
  2050 ;; This function is called by:
  2051 ;;		_Comp1_init
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055                           	psect	text15
  2056  0008BC                     __ptext15:
  2057                           	callstack 0
  2058  0008BC                     _DAC_init:
  2059                           	callstack 27
  2060  0008BC                     
  2061                           ;comparator.c: 9:     DAC1CON0bits.PSS=0b00;
  2062  0008BC  0EF3               	movlw	-13
  2063  0008BE  010E               	movlb	14	; () banked
  2064  0008C0  17C6               	andwf	198,f,b	;volatile
  2065  0008C2                     
  2066                           ; BSR set to: 14
  2067                           ;comparator.c: 10:     DAC1CON0bits.NSS=0b0;
  2068  0008C2  91C6               	bcf	198,0,b	;volatile
  2069                           
  2070                           ;comparator.c: 15:     DAC1CON1bits.DAC1R=0b11011;
  2071  0008C4  51C7               	movf	199,w,b	;volatile
  2072  0008C6  0BE0               	andlw	-32
  2073  0008C8  091B               	iorlw	27
  2074  0008CA  6FC7               	movwf	199,b	;volatile
  2075  0008CC                     
  2076                           ; BSR set to: 14
  2077                           ;comparator.c: 16:     DAC1CON0bits.DAC1EN=1;
  2078  0008CC  8FC6               	bsf	198,7,b	;volatile
  2079  0008CE                     
  2080                           ; BSR set to: 14
  2081  0008CE  0012               	return		;funcret
  2082  0008D0                     __end_of_DAC_init:
  2083                           	callstack 0
  2084                           
  2085 ;; *************** function _ADC_init *****************
  2086 ;; Defined at:
  2087 ;;		line 9 in file "ADC.c"
  2088 ;; Parameters:    Size  Location     Type
  2089 ;;		None
  2090 ;; Auto vars:     Size  Location     Type
  2091 ;;		None
  2092 ;; Return value:  Size  Location     Type
  2093 ;;                  1    wreg      void 
  2094 ;; Registers used:
  2095 ;;		wreg, status,2
  2096 ;; Tracked objects:
  2097 ;;		On entry : 0/0
  2098 ;;		On exit  : 0/0
  2099 ;;		Unchanged: 0/0
  2100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2105 ;;Total ram usage:        0 bytes
  2106 ;; Hardware stack levels used: 1
  2107 ;; Hardware stack levels required when called: 2
  2108 ;; This function calls:
  2109 ;;		Nothing
  2110 ;; This function is called by:
  2111 ;;		_main
  2112 ;; This function uses a non-reentrant model
  2113 ;;
  2114                           
  2115                           	psect	text16
  2116  0008A2                     __ptext16:
  2117                           	callstack 0
  2118  0008A2                     _ADC_init:
  2119                           	callstack 28
  2120  0008A2                     
  2121                           ;ADC.c: 11:     TRISFbits.TRISF7=1;
  2122  0008A2  8E86               	bsf	134,7,c	;volatile
  2123                           
  2124                           ;ADC.c: 12:     ANSELFbits.ANSELF7=1;
  2125  0008A4  010E               	movlb	14	; () banked
  2126  0008A6  8FB4               	bsf	180,7,b	;volatile
  2127                           
  2128                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
  2129  0008A8  010F               	movlb	15	; () banked
  2130  0008AA  9958               	bcf	88,4,b	;volatile
  2131  0008AC                     
  2132                           ; BSR set to: 15
  2133                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
  2134  0008AC  0EFC               	movlw	-4
  2135  0008AE  1758               	andwf	88,f,b	;volatile
  2136                           
  2137                           ;ADC.c: 17:     ADPCH=0b101111;
  2138  0008B0  0E2F               	movlw	47
  2139  0008B2  6F5F               	movwf	95,b	;volatile
  2140  0008B4                     
  2141                           ; BSR set to: 15
  2142                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
  2143  0008B4  9460               	bcf	96,2,c	;volatile
  2144  0008B6                     
  2145                           ; BSR set to: 15
  2146                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
  2147  0008B6  8860               	bsf	96,4,c	;volatile
  2148  0008B8                     
  2149                           ; BSR set to: 15
  2150                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
  2151  0008B8  8E60               	bsf	96,7,c	;volatile
  2152  0008BA                     
  2153                           ; BSR set to: 15
  2154  0008BA  0012               	return		;funcret
  2155  0008BC                     __end_of_ADC_init:
  2156                           	callstack 0
  2157                           
  2158 ;; *************** function _LowISR *****************
  2159 ;; Defined at:
  2160 ;;		line 44 in file "interrupts.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;		None
  2163 ;; Auto vars:     Size  Location     Type
  2164 ;;		None
  2165 ;; Return value:  Size  Location     Type
  2166 ;;                  1    wreg      void 
  2167 ;; Registers used:
  2168 ;;		wreg, status,2, status,0
  2169 ;; Tracked objects:
  2170 ;;		On entry : 0/0
  2171 ;;		On exit  : 0/0
  2172 ;;		Unchanged: 0/0
  2173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2176 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2177 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2178 ;;Total ram usage:        4 bytes
  2179 ;; Hardware stack levels used: 1
  2180 ;; Hardware stack levels required when called: 1
  2181 ;; This function calls:
  2182 ;;		Nothing
  2183 ;; This function is called by:
  2184 ;;		Interrupt level 1
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188                           	psect	intcodelo
  2189  000018                     __pintcodelo:
  2190                           	callstack 0
  2191  000018                     _LowISR:
  2192                           	callstack 27
  2193                           
  2194                           ; BSR set to: 15
  2195                           ;incstack = 0
  2196  000018  8036               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  2197  00001A  CFD8 F003          	movff	status,??_LowISR+1
  2198  00001E  CFE8 F004          	movff	wreg,??_LowISR+2
  2199  000022  CFE0 F005          	movff	bsr,??_LowISR+3
  2200  000026                     
  2201                           ;interrupts.c: 46:     if (PIR0bits.TMR0IF) {
  2202  000026  010E               	movlb	14	; () banked
  2203  000028  AB33               	btfss	51,5,b	;volatile
  2204  00002A  EF19  F000         	goto	i1u148_21
  2205  00002E  EF1B  F000         	goto	i1u148_20
  2206  000032                     i1u148_21:
  2207  000032  EF35  F000         	goto	i1l154
  2208  000036                     i1u148_20:
  2209  000036                     
  2210                           ; BSR set to: 14
  2211                           ;interrupts.c: 47:         TMR0H = 0b1011;
  2212  000036  0E0B               	movlw	11
  2213  000038  6ED4               	movwf	212,c	;volatile
  2214                           
  2215                           ;interrupts.c: 48:         TMR0L = 0b11011011;
  2216  00003A  0EDB               	movlw	219
  2217  00003C  6ED3               	movwf	211,c	;volatile
  2218                           
  2219                           ;interrupts.c: 50:         time_flag = 1;
  2220  00003E  0E01               	movlw	1
  2221  000040  6E34               	movwf	_time_flag^0,c	;volatile
  2222  000042                     
  2223                           ; BSR set to: 14
  2224                           ;interrupts.c: 51:         LATHbits.LATH3 = !LATHbits.LATH3;
  2225  000042  A680               	btfss	128,3,c	;volatile
  2226  000044  EF26  F000         	goto	i1u149_21
  2227  000048  EF2A  F000         	goto	i1u149_20
  2228  00004C                     i1u149_21:
  2229  00004C  6A02               	clrf	??_LowISR^0,c
  2230  00004E  2A02               	incf	??_LowISR^0,f,c
  2231  000050  EF2B  F000         	goto	i1u150_28
  2232  000054                     i1u149_20:
  2233  000054  6A02               	clrf	??_LowISR^0,c
  2234  000056                     i1u150_28:
  2235  000056  4602               	rlncf	??_LowISR^0,f,c
  2236  000058  4602               	rlncf	??_LowISR^0,f,c
  2237  00005A  4602               	rlncf	??_LowISR^0,f,c
  2238  00005C  5080               	movf	128,w,c	;volatile
  2239  00005E  1802               	xorwf	??_LowISR^0,w,c
  2240  000060  0BF7               	andlw	-9
  2241  000062  1802               	xorwf	??_LowISR^0,w,c
  2242  000064  6E80               	movwf	128,c	;volatile
  2243  000066                     
  2244                           ;interrupts.c: 52:         PIR0bits.TMR0IF = 0;
  2245  000066  010E               	movlb	14	; () banked
  2246  000068  9B33               	bcf	51,5,b	;volatile
  2247  00006A                     i1l154:
  2248                           
  2249                           ; BSR set to: 14
  2250  00006A  C005  FFE0         	movff	??_LowISR+3,bsr
  2251  00006E  C004  FFE8         	movff	??_LowISR+2,wreg
  2252  000072  C003  FFD8         	movff	??_LowISR+1,status
  2253  000076  9036               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2254  000078  0010               	retfie	
  2255  00007A                     __end_of_LowISR:
  2256                           	callstack 0
  2257                           
  2258 ;; *************** function _HighISR *****************
  2259 ;; Defined at:
  2260 ;;		line 28 in file "interrupts.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;		None
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;		None
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  1    wreg      void 
  2267 ;; Registers used:
  2268 ;;		wreg, status,2, status,0
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2276 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2277 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2278 ;;Total ram usage:        1 bytes
  2279 ;; Hardware stack levels used: 1
  2280 ;; This function calls:
  2281 ;;		Nothing
  2282 ;; This function is called by:
  2283 ;;		Interrupt level 2
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287                           	psect	intcode
  2288  000008                     __pintcode:
  2289                           	callstack 0
  2290  000008                     _HighISR:
  2291                           	callstack 27
  2292                           
  2293                           ; BSR set to: 14
  2294                           ;incstack = 0
  2295  000008  8236               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2296  00000A  EFCA  F003         	goto	int_func
  2297                           
  2298                           	psect	intcode_body
  2299  000794                     __pintcode_body:
  2300                           	callstack 27
  2301  000794                     int_func:
  2302                           	callstack 27
  2303  000794                     
  2304                           ;interrupts.c: 30:     if (PIR2bits.C1IF) {
  2305  000794  010E               	movlb	14	; () banked
  2306  000796  A135               	btfss	53,0,b	;volatile
  2307  000798  EFD0  F003         	goto	i2u144_41
  2308  00079C  EFD2  F003         	goto	i2u144_40
  2309  0007A0                     i2u144_41:
  2310  0007A0  EFEE  F003         	goto	i2l146
  2311  0007A4                     i2u144_40:
  2312  0007A4                     
  2313                           ; BSR set to: 14
  2314                           ;interrupts.c: 31:         LATDbits.LATD7 = !LATDbits.LATD7;
  2315  0007A4  AE7C               	btfss	124,7,c	;volatile
  2316  0007A6  EFD7  F003         	goto	i2u145_41
  2317  0007AA  EFDB  F003         	goto	i2u145_40
  2318  0007AE                     i2u145_41:
  2319  0007AE  6A01               	clrf	??_HighISR^0,c
  2320  0007B0  2A01               	incf	??_HighISR^0,f,c
  2321  0007B2  EFDC  F003         	goto	i2u146_48
  2322  0007B6                     i2u145_40:
  2323  0007B6  6A01               	clrf	??_HighISR^0,c
  2324  0007B8                     i2u146_48:
  2325  0007B8  3201               	rrcf	??_HighISR^0,f,c
  2326  0007BA  3201               	rrcf	??_HighISR^0,f,c
  2327  0007BC  507C               	movf	124,w,c	;volatile
  2328  0007BE  1801               	xorwf	??_HighISR^0,w,c
  2329  0007C0  0B7F               	andlw	-129
  2330  0007C2  1801               	xorwf	??_HighISR^0,w,c
  2331  0007C4  6E7C               	movwf	124,c	;volatile
  2332  0007C6                     
  2333                           ;interrupts.c: 32:         if (LATDbits.LATD7==0) {sunrise_flag=1;}
  2334  0007C6  BE7C               	btfsc	124,7,c	;volatile
  2335  0007C8  EFE8  F003         	goto	i2u147_41
  2336  0007CC  EFEA  F003         	goto	i2u147_40
  2337  0007D0                     i2u147_41:
  2338  0007D0  EFEC  F003         	goto	i2l1506
  2339  0007D4                     i2u147_40:
  2340  0007D4  0E01               	movlw	1
  2341  0007D6  6E35               	movwf	_sunrise_flag^0,c	;volatile
  2342  0007D8                     i2l1506:
  2343                           
  2344                           ;interrupts.c: 33:         PIR2bits.C1IF = 0;
  2345  0007D8  010E               	movlb	14	; () banked
  2346  0007DA  9135               	bcf	53,0,b	;volatile
  2347  0007DC                     i2l146:
  2348                           
  2349                           ; BSR set to: 14
  2350  0007DC  9236               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2351  0007DE  0011               	retfie		f
  2352  0007E0                     __end_of_HighISR:
  2353                           	callstack 0
  2354  0000                     
  2355                           	psect	rparam
  2356  0000                     
  2357                           	psect	temp
  2358  000036                     btemp:
  2359                           	callstack 0
  2360  000036                     	ds	1
  2361  0000                     int$flags	set	btemp
  2362  0000                     wtemp8	set	btemp+1
  2363  0000                     ttemp5	set	btemp+1
  2364  0000                     ttemp6	set	btemp+4
  2365  0000                     ttemp7	set	btemp+8
  2366                           
  2367                           	psect	idloc
  2368                           
  2369                           ;Config register IDLOC0 @ 0x200000
  2370                           ;	unspecified, using default values
  2371  200000                     	org	2097152
  2372  200000  0FFF               	dw	4095
  2373                           
  2374                           ;Config register IDLOC1 @ 0x200002
  2375                           ;	unspecified, using default values
  2376  200002                     	org	2097154
  2377  200002  0FFF               	dw	4095
  2378                           
  2379                           ;Config register IDLOC2 @ 0x200004
  2380                           ;	unspecified, using default values
  2381  200004                     	org	2097156
  2382  200004  0FFF               	dw	4095
  2383                           
  2384                           ;Config register IDLOC3 @ 0x200006
  2385                           ;	unspecified, using default values
  2386  200006                     	org	2097158
  2387  200006  0FFF               	dw	4095
  2388                           
  2389                           ;Config register IDLOC4 @ 0x200008
  2390                           ;	unspecified, using default values
  2391  200008                     	org	2097160
  2392  200008  0FFF               	dw	4095
  2393                           
  2394                           ;Config register IDLOC5 @ 0x20000A
  2395                           ;	unspecified, using default values
  2396  20000A                     	org	2097162
  2397  20000A  0FFF               	dw	4095
  2398                           
  2399                           ;Config register IDLOC6 @ 0x20000C
  2400                           ;	unspecified, using default values
  2401  20000C                     	org	2097164
  2402  20000C  0FFF               	dw	4095
  2403                           
  2404                           ;Config register IDLOC7 @ 0x20000E
  2405                           ;	unspecified, using default values
  2406  20000E                     	org	2097166
  2407  20000E  0FFF               	dw	4095
  2408                           
  2409                           	psect	config
  2410                           
  2411                           ;Config register CONFIG1L @ 0x300000
  2412                           ;	External Oscillator mode Selection bits
  2413                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  2414                           ;	Power-up default value for COSC bits
  2415                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  2416  300000                     	org	3145728
  2417  300000  AA                 	db	170
  2418                           
  2419                           ;Config register CONFIG1H @ 0x300001
  2420                           ;	unspecified, using default values
  2421                           ;	Clock Out Enable bit
  2422                           ;	CLKOUTEN = 0x1, unprogrammed default
  2423                           ;	Clock Switch Enable bit
  2424                           ;	CSWEN = 0x1, unprogrammed default
  2425                           ;	Fail-Safe Clock Monitor Enable bit
  2426                           ;	FCMEN = 0x1, unprogrammed default
  2427  300001                     	org	3145729
  2428  300001  FF                 	db	255
  2429                           
  2430                           ;Config register CONFIG2L @ 0x300002
  2431                           ;	unspecified, using default values
  2432                           ;	Master Clear Enable bit
  2433                           ;	MCLRE = 0x1, unprogrammed default
  2434                           ;	Power-up Timer Enable bit
  2435                           ;	PWRTE = 0x1, unprogrammed default
  2436                           ;	Low-power BOR enable bit
  2437                           ;	LPBOREN = 0x1, unprogrammed default
  2438                           ;	Brown-out Reset Enable bits
  2439                           ;	BOREN = 0x3, unprogrammed default
  2440  300002                     	org	3145730
  2441  300002  FF                 	db	255
  2442                           
  2443                           ;Config register CONFIG2H @ 0x300003
  2444                           ;	unspecified, using default values
  2445                           ;	Brown Out Reset Voltage selection bits
  2446                           ;	BORV = 0x3, unprogrammed default
  2447                           ;	ZCD Disable bit
  2448                           ;	ZCD = 0x1, unprogrammed default
  2449                           ;	PPSLOCK bit One-Way Set Enable bit
  2450                           ;	PPS1WAY = 0x1, unprogrammed default
  2451                           ;	Stack Full/Underflow Reset Enable bit
  2452                           ;	STVREN = 0x1, unprogrammed default
  2453                           ;	Debugger Enable bit
  2454                           ;	DEBUG = 0x1, unprogrammed default
  2455                           ;	Extended Instruction Set Enable bit
  2456                           ;	XINST = 0x1, unprogrammed default
  2457  300003                     	org	3145731
  2458  300003  FF                 	db	255
  2459                           
  2460                           ;Config register CONFIG3L @ 0x300004
  2461                           ;	WDT Period Select bits
  2462                           ;	WDTCPS = 0x1F, unprogrammed default
  2463                           ;	WDT operating mode
  2464                           ;	WDTE = OFF, WDT Disabled
  2465  300004                     	org	3145732
  2466  300004  9F                 	db	159
  2467                           
  2468                           ;Config register CONFIG3H @ 0x300005
  2469                           ;	unspecified, using default values
  2470                           ;	WDT Window Select bits
  2471                           ;	WDTCWS = 0x7, unprogrammed default
  2472                           ;	WDT input clock selector
  2473                           ;	WDTCCS = 0x7, unprogrammed default
  2474  300005                     	org	3145733
  2475  300005  FF                 	db	255
  2476                           
  2477                           ;Config register CONFIG4L @ 0x300006
  2478                           ;	unspecified, using default values
  2479                           ;	Write Protection Block 0
  2480                           ;	WRT0 = 0x1, unprogrammed default
  2481                           ;	Write Protection Block 1
  2482                           ;	WRT1 = 0x1, unprogrammed default
  2483                           ;	Write Protection Block 2
  2484                           ;	WRT2 = 0x1, unprogrammed default
  2485                           ;	Write Protection Block 3
  2486                           ;	WRT3 = 0x1, unprogrammed default
  2487                           ;	Write Protection Block 3
  2488                           ;	WRT4 = 0x1, unprogrammed default
  2489                           ;	Write Protection Block 3
  2490                           ;	WRT5 = 0x1, unprogrammed default
  2491                           ;	Write Protection Block 3
  2492                           ;	WRT6 = 0x1, unprogrammed default
  2493                           ;	Write Protection Block 3
  2494                           ;	WRT7 = 0x1, unprogrammed default
  2495  300006                     	org	3145734
  2496  300006  FF                 	db	255
  2497                           
  2498                           ;Config register CONFIG4H @ 0x300007
  2499                           ;	unspecified, using default values
  2500                           ;	Configuration Register Write Protection bit
  2501                           ;	WRTC = 0x1, unprogrammed default
  2502                           ;	Boot Block Write Protection bit
  2503                           ;	WRTB = 0x1, unprogrammed default
  2504                           ;	Data EEPROM Write Protection bit
  2505                           ;	WRTD = 0x1, unprogrammed default
  2506                           ;	Scanner Enable bit
  2507                           ;	SCANE = 0x1, unprogrammed default
  2508                           ;	Low Voltage Programming Enable bit
  2509                           ;	LVP = 0x1, unprogrammed default
  2510  300007                     	org	3145735
  2511  300007  FF                 	db	255
  2512                           
  2513                           ;Config register CONFIG5L @ 0x300008
  2514                           ;	unspecified, using default values
  2515                           ;	UserNVM Program Memory Code Protection bit
  2516                           ;	CP = 0x1, unprogrammed default
  2517                           ;	DataNVM Memory Code Protection bit
  2518                           ;	CPD = 0x1, unprogrammed default
  2519  300008                     	org	3145736
  2520  300008  FF                 	db	255
  2521                           
  2522                           ;Config register CONFIG5H @ 0x300009
  2523                           ;	unspecified, using default values
  2524  300009                     	org	3145737
  2525  300009  FF                 	db	255
  2526                           
  2527                           ;Config register CONFIG6L @ 0x30000A
  2528                           ;	unspecified, using default values
  2529                           ;	Table Read Protection Block 0
  2530                           ;	EBTR0 = 0x1, unprogrammed default
  2531                           ;	Table Read Protection Block 1
  2532                           ;	EBTR1 = 0x1, unprogrammed default
  2533                           ;	Table Read Protection Block 2
  2534                           ;	EBTR2 = 0x1, unprogrammed default
  2535                           ;	Table Read Protection Block 3
  2536                           ;	EBTR3 = 0x1, unprogrammed default
  2537                           ;	Table Read Protection Block 4
  2538                           ;	EBTR4 = 0x1, unprogrammed default
  2539                           ;	Table Read Protection Block 5
  2540                           ;	EBTR5 = 0x1, unprogrammed default
  2541                           ;	Table Read Protection Block 6
  2542                           ;	EBTR6 = 0x1, unprogrammed default
  2543                           ;	Table Read Protection Block 7
  2544                           ;	EBTR7 = 0x1, unprogrammed default
  2545  30000A                     	org	3145738
  2546  30000A  FF                 	db	255
  2547                           
  2548                           ;Config register CONFIG6H @ 0x30000B
  2549                           ;	unspecified, using default values
  2550                           ;	Boot Block Table Read Protection bit
  2551                           ;	EBTRB = 0x1, unprogrammed default
  2552  30000B                     	org	3145739
  2553  30000B  FF                 	db	255
  2554                           tosu	equ	0xFFF
  2555                           tosh	equ	0xFFE
  2556                           tosl	equ	0xFFD
  2557                           stkptr	equ	0xFFC
  2558                           pclatu	equ	0xFFB
  2559                           pclath	equ	0xFFA
  2560                           pcl	equ	0xFF9
  2561                           tblptru	equ	0xFF8
  2562                           tblptrh	equ	0xFF7
  2563                           tblptrl	equ	0xFF6
  2564                           tablat	equ	0xFF5
  2565                           prodh	equ	0xFF4
  2566                           prodl	equ	0xFF3
  2567                           indf0	equ	0xFEF
  2568                           postinc0	equ	0xFEE
  2569                           postdec0	equ	0xFED
  2570                           preinc0	equ	0xFEC
  2571                           plusw0	equ	0xFEB
  2572                           fsr0h	equ	0xFEA
  2573                           fsr0l	equ	0xFE9
  2574                           wreg	equ	0xFE8
  2575                           indf1	equ	0xFE7
  2576                           postinc1	equ	0xFE6
  2577                           postdec1	equ	0xFE5
  2578                           preinc1	equ	0xFE4
  2579                           plusw1	equ	0xFE3
  2580                           fsr1h	equ	0xFE2
  2581                           fsr1l	equ	0xFE1
  2582                           bsr	equ	0xFE0
  2583                           indf2	equ	0xFDF
  2584                           postinc2	equ	0xFDE
  2585                           postdec2	equ	0xFDD
  2586                           preinc2	equ	0xFDC
  2587                           plusw2	equ	0xFDB
  2588                           fsr2h	equ	0xFDA
  2589                           fsr2l	equ	0xFD9
  2590                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     51      53
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_time_incre
    _time_incre->_date_check
    _time_incre->_daylightsavingstime_toggle
    _sun_sync->___awdiv

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0    3949
                                             29 COMRAM    22    22      0
                           _ADC_init
                         _Comp1_init
                    _Interrupts_init
                          _LED1_init
                          _LED2_init
                         _LED_toggle
                  _LEDarray_disp_bin
                      _LEDarray_init
                        _Timer0_init
                           _sun_sync
                            _sunrise
                         _time_incre
 ---------------------------------------------------------------------------------
 (1) _time_incre                                          11     0     11    1617
                                             18 COMRAM    11     0     11
                         _date_check
         _daylightsavingstime_toggle
 ---------------------------------------------------------------------------------
 (2) _daylightsavingstime_toggle                          13     2     11     376
                                              5 COMRAM    13     2     11
 ---------------------------------------------------------------------------------
 (2) _date_check                                          13     2     11     674
                                              5 COMRAM    13     2     11
 ---------------------------------------------------------------------------------
 (1) _sunrise                                             11     0     11     239
                                              5 COMRAM    11     0     11
 ---------------------------------------------------------------------------------
 (1) _sun_sync                                            14     3     11    1420
                                             13 COMRAM    14     3     11
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     756
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    3     3      0     198
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LED_toggle                                          11     0     11     122
                                              5 COMRAM    11     0     11
 ---------------------------------------------------------------------------------
 (1) _LED2_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED1_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comp1_init                                           0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _LowISR                                               4     4      0       0
                                              1 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _HighISR                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Comp1_init
     _DAC_init
   _Interrupts_init
   _LED1_init
   _LED2_init
   _LED_toggle
   _LEDarray_disp_bin
   _LEDarray_init
   _Timer0_init
   _sun_sync
     ___awdiv
   _sunrise
   _time_incre
     _date_check
     _daylightsavingstime_toggle

 _LowISR (ROOT)

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     33      35       1       56.4%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      35       8        0.0%
DATA                 0      0      35       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Nov 07 22:49:18 2021

                                 l52 08BA                                   l71 083C  
                                 l80 02B2                                   l90 0352  
                                 l82 02D2                                   l74 0252  
                                 l92 0354                                   l84 02F2  
                                 l76 0272                                   l86 0312  
                                 l78 0292                                   l88 0332  
                       ___awdiv@sign 000B                                   bsr 000FE0  
                  ??_Interrupts_init 0006                                  l112 0860  
                                l109 08CE                                  l213 0604  
                                l222 076C                                  l223 078A  
                                l224 0792                                  l216 0616  
                                l137 08E0                                  l209 0230  
                                l219 0880                                  l181 08F4  
                                l165 08A0                                  l184 0812  
                                l192 0542                                  l178 08FA  
                                l186 0816                                  l458 06DA  
                                u800 04DA                                  u801 04D6  
                                u810 0508                                  u811 0504  
                                u900 0106                                  u820 051A  
                                u901 0102                                  u821 0516  
                                u910 0116                                  u830 052C  
                                u911 0112                                  u831 0528  
                                u920 0128                                  u760 0470  
                                u921 0124                                  u841 053A  
                                u761 046C                                  u930 013A  
                                u850 009C                                  u770 049E  
                                u931 0136                                  u851 0098  
                                u771 049A                                  u940 014C  
                                u860 00AE                                  u780 04B0  
                                u941 0148                                  u861 00AA  
                                u781 04AC                                  u950 015E  
                                u870 00C2                                  u790 04C0  
                                u951 015A                                  u871 00BE  
                                u791 04BC                                  u960 0170  
                                u880 00E0                                  u961 016C  
                                u881 00DC                                  u970 0182  
                                u890 00F2                                  u971 017E  
                                u891 00EE                                  u980 0196  
                                u981 0192                                  u990 01A8  
                                u991 01A4                                  wreg 000FE8  
                        ?_LED_toggle 0006                   __size_of_LED1_init 0006  
                 __size_of_LED2_init 0006                                 l1210 08C2  
                               l1212 08CC                                 l1300 0644  
                               l1220 04B0                                 l1310 0672  
                               l1302 064C                                 l1230 051A  
                               l1222 04C0                                 l1214 045E  
                               l1208 08BC                                 l1320 06AC  
                               l1312 067A                                 l1304 0650  
                               l1240 009C                                 l1232 052C  
                               l1216 0470                                 l1224 04C8  
                               l1400 055C                                 l1330 06D2  
                               l1322 06AE                                 l1314 0688  
                               l1306 0658                                 l1250 0106  
                               l1242 00AE                                 l1226 04DA  
                               l1234 0530                                 l1218 049E  
                               l1410 0580                                 l1402 0560  
                               l1340 08B6                                 l1324 06B4  
                               l1316 068E                                 l1308 066A  
                               l1260 015E                                 l1252 0116  
                               l1244 00C2                                 l1228 0508  
                               l1420 05E4                                 l1412 05A4  
                               l1404 0564                                 l1342 08B8  
                               l1334 08A2                                 l1350 0852  
                               l1430 0234                                 l1318 06A4  
                               l1326 06BA                                 l1270 01BA  
                               l1262 0170                                 l1254 0128  
                               l1246 00E0                                 l1238 007E  
                               l1422 05E8                                 l1414 05B8  
                               l1406 0578                                 l1336 08AC  
                               l1352 0854                                 l1344 08D0  
                               l1360 08F6                                 l1440 028C  
                               l1432 024C                                 l1328 06CA  
                               l1280 01FA                                 l1272 01CC  
                               l1256 013A                                 l1264 0182  
                               l1248 00F2                                 l1424 05FC  
                               l1416 05BC                                 l1408 057C  
                               l1338 08B4                                 l1354 0856  
                               l1346 083E                                 l1362 08F0  
                               l1450 02D4                                 l1442 0294  
                               l1434 0254                                 l1370 0894  
                               l1290 0618                                 l1282 020E  
                               l1274 01DE                                 l1266 0196  
                               l1258 014C                                 l1418 05C0  
                               l1426 0604                                 l1356 0858  
                               l1348 0840                                 l1460 032C  
                               l1452 02EC                                 l1444 02AC  
                               l1436 026C                                 l1364 0818  
                               l1372 089E                                 l1292 061C  
                               l1380 0862                                 l1284 021A  
                               l1268 01A8                                 l1276 01F2  
                               l1358 085C                                 l1374 07E0  
                               l1462 0334                                 l1454 02F4  
                               l1446 02B4                                 l1438 0274  
                               l1366 0882                                 l1294 062A  
                               l1390 0754                                 l1382 086E  
                               l1278 01F6                                 l1286 021E  
                               l1470 038A                                 l1376 07F4  
                               l1464 034C                                 l1456 030C  
                               l1448 02CC                                 l1368 088A  
                               l1296 0632                                 l1392 0762  
                               l1480 03B0                                 l1472 038E  
                               l1378 0808                                 l1458 0314  
                               l1298 0636                                 l1394 0780  
                               l1386 06DC                                 l1490 0418  
                               l1482 03C6                                 l1474 0392  
                               l1466 0356                                 l1388 074E  
                               l1492 0428                                 l1484 03D6  
                               l1476 0396                                 l1468 0382  
                               l1398 0544                                 l1494 044C  
                               l1486 03FA                                 l1478 039E  
                               l1496 0450                                 l1488 0402  
                               u1000 01BA                                 u1001 01B6  
                               u1010 01CC                                 u1011 01C8  
                               u1100 06A4                                 u1020 01DE  
                               u1101 06A0                                 u1021 01DA  
                               u1110 06CA                                 u1030 01F2  
                               u1111 06C6                                 u1031 01EE  
                               u1120 07F4                                 u1040 020E  
                               u1121 07F0                                 u1041 020A  
                               u1201 059C                                 u1130 0808  
                               u1210 05B8                                 u1131 0804  
                               u1051 0228                                 u1211 05B4  
                               u1300 02CC                                 u1060 062A  
                               u1301 02C8                                 u1061 0626  
                               u1141 0878                                 u1221 05CA  
                               u1310 02EC                                 u1070 0644  
                               u1150 0762                                 u1311 02E8  
                               u1071 0640                                 u1151 075E  
                               u1231 05DC                                 u1320 030C  
                               u1080 066A                                 u1160 0780  
                               u1240 05FC                                 u1321 0308  
                               u1081 0666                                 u1161 077C  
                               u1241 05F8                                 u1401 040C  
                               u1330 032C                                 u1090 0688  
                               u1170 055C                                 u1410 0428  
                               u1331 0328                                 u1091 0684  
                               u1251 060E                                 u1171 0558  
                               u1411 0424                                 u1340 034C  
                               u1260 024C                                 u1180 0578  
                               u1341 0348                                 u1261 0248  
                               u1181 0574                                 u1421 0432  
                               u1270 026C                                 u1271 0268  
                               u1191 058A                                 u1431 0444  
                               u1351 03A8                                 u1280 028C  
                               u1281 0288                                 u1361 03BA  
                               u1290 02AC                                 u1370 03D6  
                               u1291 02A8                                 u1371 03D2  
                               u1381 03E0                                 u1391 03F2  
                        main@current 001E                                 _main 0356  
                               btemp 0036                                 start 007A  
                   __end_of_ADC_init 08BC                     __end_of_DAC_init 08D0  
                    __end_of_HighISR 07E0                         ___param_bank 000000  
                         _Comp1_init 083E                                ?_main 0001  
                              _ADPCH 000F5F                      __end_of___awdiv 06DC  
                    ___awdiv@divisor 0008                                i1l154 006A  
                              i2l146 07DC                      ___awdiv@counter 000A  
                              _TMR0H 000FD4                                _TMR0L 000FD3  
                              plusw0 000FEB                                plusw1 000FE3  
                              plusw2 000FDB                                ttemp5 0037  
                              ttemp6 003A                                ttemp7 003E  
                              status 000FD8                                wtemp8 0037  
                    __end_of_sunrise 0882                      __initialization 08E2  
                       __end_of_main 045E                    __end_of_LED1_init 08FC  
                __size_of_LED_toggle 0038                    __end_of_LED2_init 08F6  
                  LED_toggle@current 0006                               ??_main 001E  
                      __activetblptr 000000               __size_of_LEDarray_init 0026  
                       _sunrise_flag 0035                     ___awdiv@dividend 0006  
                             i1l1510 0036                               i1l1512 0042  
                             i1l1514 0066                               i1l1508 0026  
       ??_daylightsavingstime_toggle 0011                               i2l1500 07A4  
                             i2l1502 07C6                               i2l1504 07D4  
                             i2l1506 07D8                               i2l1498 0794  
                          ??_HighISR 0001                    _LEDarray_disp_bin 0232  
                             _LowISR 0018                   ?_LEDarray_disp_bin 0001  
                      ??_Timer0_init 0006                          ?_Comp1_init 0001  
                          ??___awdiv 000A                  ??_LEDarray_disp_bin 0006  
                   ___awdiv@quotient 000C                               isa$std 000001  
        ?_daylightsavingstime_toggle 0006                            ?_ADC_init 0001  
                          ?_DAC_init 0001                            ??_sunrise 0011  
                   __end_of_sun_sync 0794            __end_of_LEDarray_disp_bin 0356  
                         __accesstop 0060              __end_of__initialization 08E6  
                      ___rparam_used 000001                        _LEDarray_init 0818  
                    _Interrupts_init 08D0                       __pcstackCOMRAM 0001  
                __end_of_Timer0_init 08A2                           ??_ADC_init 0006  
                         ??_DAC_init 0006                         ??_LED_toggle 0011  
                __size_of_Comp1_init 0024                           _date_check 007E  
                     ?_LEDarray_init 0001                              ?_LowISR 0001  
                 __end_of_LED_toggle 0818           __size_of_LEDarray_disp_bin 0124  
            __end_of_Interrupts_init 08E2                              _HighISR 0008  
                          _ADREFbits 000F58                              __Hparam 0000  
                            __Lparam 0000                      __size_of_LowISR 0062  
                  date_check@current 0006                          _Timer0_init 0882  
                            ___awdiv 0618                              __pcinit 08E2  
                          ?_sun_sync 000E                              __ramtop 0E00  
                            __ptext0 0356                              __ptext1 0544  
                            __ptext2 045E                              __ptext3 007E  
                            __ptext4 0862                              __ptext5 06DC  
                            __ptext6 0618                              __ptext7 0882  
                            __ptext8 0818                              __ptext9 0232  
                          _LED1_init 08F6                            _LED2_init 08F0  
                     __pintcode_body 0794                              _sunrise 0862  
               end_of_initialization 08E6                      ??_LEDarray_init 0006  
                            int_func 0794                          ?_date_check 0006  
                       ??_Comp1_init 0006                           _time_incre 0544  
                         ??_sun_sync 0019                           ?_LED1_init 0001  
                         ?_LED2_init 0001                            _TRISAbits 000F81  
                          _TRISBbits 000F82                            _TRISDbits 000F84  
                          _TRISFbits 000F86                            _TRISGbits 000F87  
                          _TRISHbits 000F88                    __size_of_ADC_init 001A  
                  __size_of_DAC_init 0014                   __end_of_Comp1_init 0862  
                        _CM1CON0bits 000ED0                          _CM1CON1bits 000ED1  
                   ?_Interrupts_init 0001                       __end_of_LowISR 007A  
                __size_of_date_check 01B4                  start_initialization 08E2  
                           ??_LowISR 0002                          ?_time_incre 0013  
                  time_incre@current 0013                          ??_LED1_init 0006  
                        ??_LED2_init 0006                          __pbssCOMRAM 0034  
                           ?_HighISR 0001                         ?_Timer0_init 0001  
                          __pintcode 0008                             ?___awdiv 0006  
                        __pintcodelo 0018                    __size_of_sun_sync 00B8  
             sun_sync@solarnoon_hour 0019                             _ADC_init 08A2  
                           _DAC_init 08BC                             ?_sunrise 0006  
                __size_of_time_incre 00D4                         ??_date_check 0011  
                           _LATAbits 000F79                             _LATBbits 000F7A  
                           _LATDbits 000F7C                             _LATFbits 000F7E  
                           _LATGbits 000F7F                             _LATHbits 000F80  
                           _IPR0bits 000E1F                             _PIE0bits 000E29  
                           _IPR2bits 000E21                             _PIE2bits 000E2B  
                           i1u150_28 0056                             i1u148_20 0036  
                           i1u148_21 0032                             i1u149_20 0054  
                           i1u149_21 004C                             i2u144_40 07A4  
                           i2u144_41 07A0                             i2u145_40 07B6  
                           i2u145_41 07AE                             i2u147_40 07D4  
                           i2u146_48 07B8                             i2u147_41 07D0  
                           _PIR0bits 000E33                             _PIR2bits 000E35  
                          _time_flag 0034                           _ADCON0bits 000F60  
                 __end_of_date_check 0232                           _CM1NCHbits 000ED2  
                         _CM1PCHbits 000ED3                     __size_of_HighISR 07D8  
              __end_of_LEDarray_init 083E                             __Hrparam 0000  
           sun_sync@solarnoon_minute 001A             sun_sync@solarnoon_second 001B  
                           __Lrparam 0000                     __size_of___awdiv 00C4  
__size_of_daylightsavingstime_toggle 00E6                           _ANSELFbits 000EB4  
                         _T0CON0bits 000FD5                           _T0CON1bits 000FD6  
                           __ptext10 07E0                             __ptext11 08F0  
                           __ptext12 08F6                             __ptext13 08D0  
                           __ptext14 083E                             __ptext15 08BC  
                           __ptext16 08A2                       sunrise@current 0006  
            LEDarray_disp_bin@number 0008                     __size_of_sunrise 0020  
                      __size_of_main 0108                             isa$xinst 000000  
           __size_of_Interrupts_init 0012                             int$flags 0036  
               __size_of_Timer0_init 0020                         ??_time_incre 001E  
                           main@init 0029                             _sun_sync 06DC  
                         _INTCONbits 000FF2                           _LED_toggle 07E0  
                           intlevel1 0000                             intlevel2 0000  
                       _DAC1CON0bits 000EC6                         _DAC1CON1bits 000EC7  
                 __end_of_time_incre 0618    daylightsavingstime_toggle@current 0006  
                    sun_sync@current 000E   __end_of_daylightsavingstime_toggle 0544  
         _daylightsavingstime_toggle 045E  
