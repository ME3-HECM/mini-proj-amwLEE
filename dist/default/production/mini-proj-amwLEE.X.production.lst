

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Nov 09 14:41:11 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    59                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    60                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    61  0000                     
    62                           ; Version 2.20
    63                           ; Generated 05/05/2020 GMT
    64                           ; 
    65                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC18F67K40 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96  0000                     _PIR0bits	set	3635
    97  0000                     _PIR2bits	set	3637
    98  0000                     _IPR0bits	set	3615
    99  0000                     _IPR2bits	set	3617
   100  0000                     _PIE0bits	set	3625
   101  0000                     _PIE2bits	set	3627
   102  0000                     _CM1CON1bits	set	3793
   103  0000                     _CM1CON0bits	set	3792
   104  0000                     _CM1PCHbits	set	3795
   105  0000                     _CM1NCHbits	set	3794
   106  0000                     _DAC1CON1bits	set	3783
   107  0000                     _DAC1CON0bits	set	3782
   108  0000                     _ANSELFbits	set	3764
   109  0000                     _ADPCH	set	3935
   110  0000                     _ADREFbits	set	3928
   111  0000                     _TRISHbits	set	3976
   112  0000                     _LATHbits	set	3968
   113  0000                     _TRISDbits	set	3972
   114  0000                     _TRISEbits	set	3973
   115  0000                     _TRISCbits	set	3971
   116  0000                     _LATEbits	set	3965
   117  0000                     _LATCbits	set	3963
   118  0000                     _T0CON0bits	set	4053
   119  0000                     _T0CON1bits	set	4054
   120  0000                     _TMR0L	set	4051
   121  0000                     _TMR0H	set	4052
   122  0000                     _LATDbits	set	3964
   123  0000                     _INTCONbits	set	4082
   124  0000                     _TRISBbits	set	3970
   125  0000                     _TRISAbits	set	3969
   126  0000                     _TRISGbits	set	3975
   127  0000                     _LATBbits	set	3962
   128  0000                     _LATFbits	set	3966
   129  0000                     _LATAbits	set	3961
   130  0000                     _LATGbits	set	3967
   131  0000                     _ADRESH	set	3940
   132  0000                     _ADCON0bits	set	3936
   133  0000                     _TRISFbits	set	3974
   134                           
   135                           	psect	smallconst
   136  000E00                     __psmallconst:
   137                           	callstack 0
   138  000E00  00                 	db	0
   139  000E01                     STR_2:
   140                           
   141                           ; BSR set to: 14
   142  000E01  25                 	db	37
   143  000E02  30                 	db	48	;'0'
   144  000E03  32                 	db	50	;'2'
   145  000E04  64                 	db	100	;'d'
   146  000E05  3A                 	db	58	;':'
   147  000E06  25                 	db	37
   148  000E07  30                 	db	48	;'0'
   149  000E08  32                 	db	50	;'2'
   150  000E09  64                 	db	100	;'d'
   151  000E0A  3A                 	db	58	;':'
   152  000E0B  25                 	db	37
   153  000E0C  30                 	db	48	;'0'
   154  000E0D  32                 	db	50	;'2'
   155  000E0E  64                 	db	100	;'d'
   156  000E0F  00                 	db	0
   157  000E10                     STR_1:
   158                           
   159                           ; BSR set to: 14
   160  000E10  25                 	db	37
   161  000E11  30                 	db	48	;'0'
   162  000E12  34                 	db	52	;'4'
   163  000E13  64                 	db	100	;'d'
   164  000E14  2D                 	db	45
   165  000E15  25                 	db	37
   166  000E16  30                 	db	48	;'0'
   167  000E17  32                 	db	50	;'2'
   168  000E18  64                 	db	100	;'d'
   169  000E19  2D                 	db	45
   170  000E1A  25                 	db	37
   171  000E1B  30                 	db	48	;'0'
   172  000E1C  32                 	db	50	;'2'
   173  000E1D  64                 	db	100	;'d'
   174  000E1E  00                 	db	0
   175  000E1F  00                 	db	0	; dummy byte at the end
   176  0000                     
   177                           ; #config settings
   178                           
   179                           	psect	cinit
   180  0028EA                     __pcinit:
   181                           	callstack 0
   182  0028EA                     start_initialization:
   183                           	callstack 0
   184  0028EA                     __initialization:
   185                           	callstack 0
   186                           
   187                           ; Clear objects allocated to BANK1 (32 bytes)
   188  0028EA  EE01  F000         	lfsr	0,__pbssBANK1
   189  0028EE  0E20               	movlw	32
   190  0028F0                     clear_0:
   191  0028F0  6AEE               	clrf	postinc0,c
   192  0028F2  06E8               	decf	wreg,f,c
   193  0028F4  E1FD               	bnz	clear_0
   194                           
   195                           ; Clear objects allocated to BANK0 (7 bytes)
   196  0028F6  EE00  F0EC         	lfsr	0,__pbssBANK0
   197  0028FA  0E07               	movlw	7
   198  0028FC                     clear_1:
   199  0028FC  6AEE               	clrf	postinc0,c
   200  0028FE  06E8               	decf	wreg,f,c
   201  002900  E1FD               	bnz	clear_1
   202                           
   203                           ; Clear objects allocated to COMRAM (4 bytes)
   204  002902  6A55               	clrf	(__pbssCOMRAM+3)& (0+255),c
   205  002904  6A54               	clrf	(__pbssCOMRAM+2)& (0+255),c
   206  002906  6A53               	clrf	(__pbssCOMRAM+1)& (0+255),c
   207  002908  6A52               	clrf	__pbssCOMRAM& (0+255),c
   208  00290A                     end_of_initialization:
   209                           	callstack 0
   210  00290A                     __end_of__initialization:
   211                           	callstack 0
   212  00290A  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   213  00290C  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   214  00290E  0100               	movlb	0
   215  002910  EF4F  F00F         	goto	_main	;jump to C main() function
   216                           
   217                           	psect	bssCOMRAM
   218  000052                     __pbssCOMRAM:
   219                           	callstack 0
   220  000052                     _flags:
   221                           	callstack 0
   222  000052                     	ds	2
   223  000054                     _sunset_flag:
   224                           	callstack 0
   225  000054                     	ds	1
   226  000055                     _sunrise_flag:
   227                           	callstack 0
   228  000055                     	ds	1
   229                           
   230                           	psect	bssBANK0
   231  0000EC                     __pbssBANK0:
   232                           	callstack 0
   233  0000EC                     _nout:
   234                           	callstack 0
   235  0000EC                     	ds	2
   236  0000EE                     _width:
   237                           	callstack 0
   238  0000EE                     	ds	2
   239  0000F0                     _prec:
   240                           	callstack 0
   241  0000F0                     	ds	2
   242  0000F2                     _time_flag:
   243                           	callstack 0
   244  0000F2                     	ds	1
   245                           
   246                           	psect	bssBANK1
   247  000100                     __pbssBANK1:
   248                           	callstack 0
   249  000100                     _dbuf:
   250                           	callstack 0
   251  000100                     	ds	32
   252                           
   253                           	psect	cstackBANK0
   254  000060                     __pcstackBANK0:
   255                           	callstack 0
   256  000060                     vfpfcnvrt@ll:
   257                           	callstack 0
   258                           
   259                           ; 8 bytes @ 0x0
   260  000060                     	ds	8
   261  000068                     vfpfcnvrt@done:
   262                           	callstack 0
   263                           
   264                           ; 2 bytes @ 0x8
   265  000068                     	ds	2
   266  00006A                     _vfpfcnvrt$2239:
   267                           	callstack 0
   268                           
   269                           ; 2 bytes @ 0xA
   270  00006A                     	ds	2
   271  00006C                     ?_vfprintf:
   272                           	callstack 0
   273  00006C                     vfprintf@fp:
   274                           	callstack 0
   275                           
   276                           ; 2 bytes @ 0xC
   277  00006C                     	ds	2
   278  00006E                     vfprintf@fmt:
   279                           	callstack 0
   280                           
   281                           ; 2 bytes @ 0xE
   282  00006E                     	ds	2
   283  000070                     vfprintf@ap:
   284                           	callstack 0
   285                           
   286                           ; 2 bytes @ 0x10
   287  000070                     	ds	2
   288  000072                     ?_sprintf:
   289                           	callstack 0
   290  000072                     sprintf@s:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0x12
   294  000072                     	ds	2
   295  000074                     sprintf@fmt:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0x14
   299  000074                     	ds	8
   300  00007C                     sprintf@ap:
   301                           	callstack 0
   302                           
   303                           ; 2 bytes @ 0x1C
   304  00007C                     	ds	2
   305  00007E                     sprintf@f:
   306                           	callstack 0
   307                           
   308                           ; 6 bytes @ 0x1E
   309  00007E                     	ds	6
   310  000084                     ?_time_incre:
   311                           	callstack 0
   312  000084                     LCD_init@current:
   313                           	callstack 0
   314  000084                     time_incre@current:
   315                           	callstack 0
   316                           
   317                           ; 12 bytes @ 0x24
   318  000084                     	ds	12
   319  000090                     LCD_init@buf:
   320                           	callstack 0
   321  000090                     time_incre@buf1:
   322                           	callstack 0
   323                           
   324                           ; 40 bytes @ 0x30
   325  000090                     	ds	40
   326  0000B8                     time_incre@buf2:
   327                           	callstack 0
   328                           
   329                           ; 40 bytes @ 0x58
   330  0000B8                     	ds	40
   331  0000E0                     main@current:
   332                           	callstack 0
   333                           
   334                           ; 12 bytes @ 0x80
   335  0000E0                     	ds	12
   336                           
   337                           	psect	cstackCOMRAM
   338  000001                     __pcstackCOMRAM:
   339                           	callstack 0
   340  000001                     ??_HighISR:
   341  000001                     
   342                           ; 1 bytes @ 0x0
   343  000001                     	ds	1
   344  000002                     ??_LowISR:
   345                           
   346                           ; 1 bytes @ 0x1
   347  000002                     	ds	3
   348  000005                     ??_LEDarray_disp_bin:
   349  000005                     ?_strlen:
   350                           	callstack 0
   351  000005                     ?_isdigit:
   352                           	callstack 0
   353  000005                     ?_isspace:
   354                           	callstack 0
   355  000005                     ?___wmul:
   356                           	callstack 0
   357  000005                     ?___awdiv:
   358                           	callstack 0
   359  000005                     ?___aodiv:
   360                           	callstack 0
   361  000005                     ?___aomod:
   362                           	callstack 0
   363  000005                     ?_sunrise:
   364                           	callstack 0
   365  000005                     ?_daylightsavingstime_toggle:
   366                           	callstack 0
   367  000005                     ?_date_check:
   368                           	callstack 0
   369  000005                     ADC_getval@tmpval:
   370                           	callstack 0
   371  000005                     LCD_sendnibble@number:
   372                           	callstack 0
   373  000005                     ___wmul@multiplier:
   374                           	callstack 0
   375  000005                     ___awdiv@dividend:
   376                           	callstack 0
   377  000005                     isdigit@c:
   378                           	callstack 0
   379  000005                     isspace@c:
   380                           	callstack 0
   381  000005                     fputc@c:
   382                           	callstack 0
   383  000005                     strlen@s:
   384                           	callstack 0
   385  000005                     ___aodiv@dividend:
   386                           	callstack 0
   387  000005                     ___aomod@dividend:
   388                           	callstack 0
   389  000005                     Interrupts_init@current:
   390                           	callstack 0
   391  000005                     daylightsavingstime_toggle@current:
   392                           	callstack 0
   393  000005                     date_check@current:
   394                           	callstack 0
   395  000005                     sunrise@current:
   396                           	callstack 0
   397                           
   398                           ; 12 bytes @ 0x4
   399  000005                     	ds	1
   400  000006                     LCD_sendbyte@type:
   401                           	callstack 0
   402  000006                     LED1_init@current:
   403                           	callstack 0
   404                           
   405                           ; 12 bytes @ 0x5
   406  000006                     	ds	1
   407  000007                     ??_isdigit:
   408  000007                     ??_isspace:
   409  000007                     LEDarray_disp_bin@number:
   410                           	callstack 0
   411  000007                     LCD_sendbyte@Byte:
   412                           	callstack 0
   413  000007                     ___wmul@multiplicand:
   414                           	callstack 0
   415  000007                     ___awdiv@divisor:
   416                           	callstack 0
   417  000007                     fputc@fp:
   418                           	callstack 0
   419  000007                     strlen@a:
   420                           	callstack 0
   421                           
   422                           ; 2 bytes @ 0x6
   423  000007                     	ds	1
   424  000008                     LCD_setline@line:
   425                           	callstack 0
   426  000008                     LCD_sendstring@string:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x7
   430  000008                     	ds	1
   431  000009                     ??_fputc:
   432  000009                     ___awdiv@counter:
   433                           	callstack 0
   434  000009                     ___wmul@product:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x8
   438  000009                     	ds	1
   439  00000A                     ___awdiv@sign:
   440                           	callstack 0
   441                           
   442                           ; 1 bytes @ 0x9
   443  00000A                     	ds	1
   444  00000B                     _isspace$2277:
   445                           	callstack 0
   446  00000B                     ___awdiv@quotient:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0xA
   450  00000B                     	ds	1
   451  00000C                     ?_atoi:
   452                           	callstack 0
   453  00000C                     atoi@s:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0xB
   457  00000C                     	ds	1
   458  00000D                     ?_sun_sync:
   459                           	callstack 0
   460  00000D                     ___aodiv@divisor:
   461                           	callstack 0
   462  00000D                     ___aomod@divisor:
   463                           	callstack 0
   464  00000D                     sun_sync@current:
   465                           	callstack 0
   466                           
   467                           ; 12 bytes @ 0xC
   468  00000D                     	ds	1
   469  00000E                     ??_atoi:
   470  00000E                     fputs@s:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0xD
   474  00000E                     	ds	2
   475  000010                     fputs@fp:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0xF
   479  000010                     	ds	1
   480  000011                     ??_daylightsavingstime_toggle:
   481  000011                     ??_date_check:
   482  000011                     ?_LED_toggle:
   483                           	callstack 0
   484  000011                     LED_toggle@current:
   485                           	callstack 0
   486                           
   487                           ; 12 bytes @ 0x10
   488  000011                     	ds	1
   489  000012                     ??_LED1_init:
   490  000012                     fputs@c:
   491                           	callstack 0
   492  000012                     atoi@neg:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x11
   496  000012                     	ds	1
   497  000013                     fputs@i:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x12
   501  000013                     	ds	1
   502  000014                     _atoi$2259:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x13
   506  000014                     	ds	1
   507  000015                     ?_pad:
   508                           	callstack 0
   509  000015                     ___aodiv@counter:
   510                           	callstack 0
   511  000015                     ___aomod@counter:
   512                           	callstack 0
   513  000015                     pad@fp:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x14
   517  000015                     	ds	1
   518  000016                     ___aodiv@sign:
   519                           	callstack 0
   520  000016                     ___aomod@sign:
   521                           	callstack 0
   522  000016                     _atoi$2261:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x15
   526  000016                     	ds	1
   527  000017                     ?_abs:
   528                           	callstack 0
   529  000017                     pad@buf:
   530                           	callstack 0
   531  000017                     abs@a:
   532                           	callstack 0
   533  000017                     ___aodiv@quotient:
   534                           	callstack 0
   535                           
   536                           ; 8 bytes @ 0x16
   537  000017                     	ds	1
   538  000018                     _atoi$2260:
   539                           	callstack 0
   540                           
   541                           ; 1 bytes @ 0x17
   542  000018                     	ds	1
   543  000019                     ??_abs:
   544  000019                     sun_sync@solarnoon_hour:
   545                           	callstack 0
   546  000019                     pad@p:
   547                           	callstack 0
   548  000019                     atoi@n:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x18
   552  000019                     	ds	1
   553  00001A                     sun_sync@solarnoon_minute:
   554                           	callstack 0
   555                           
   556                           ; 1 bytes @ 0x19
   557  00001A                     	ds	1
   558  00001B                     ??_pad:
   559  00001B                     sun_sync@solarnoon_second:
   560                           	callstack 0
   561                           
   562                           ; 1 bytes @ 0x1A
   563  00001B                     	ds	1
   564  00001C                     ?_sunrise_sunset:
   565                           	callstack 0
   566  00001C                     pad@i:
   567                           	callstack 0
   568  00001C                     sunrise_sunset@current:
   569                           	callstack 0
   570                           
   571                           ; 12 bytes @ 0x1B
   572  00001C                     	ds	1
   573  00001D                     ??_LED_toggle:
   574                           
   575                           ; 1 bytes @ 0x1C
   576  00001D                     	ds	1
   577  00001E                     pad@w:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x1D
   581  00001E                     	ds	2
   582  000020                     ?_dtoa:
   583                           	callstack 0
   584  000020                     dtoa@fp:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x1F
   588  000020                     	ds	2
   589  000022                     dtoa@d:
   590                           	callstack 0
   591                           
   592                           ; 8 bytes @ 0x21
   593  000022                     	ds	6
   594  000028                     
   595                           ; 1 bytes @ 0x27
   596  000028                     	ds	2
   597  00002A                     ??_dtoa:
   598                           
   599                           ; 1 bytes @ 0x29
   600  00002A                     	ds	8
   601  000032                     _dtoa$2224:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0x31
   605  000032                     	ds	2
   606  000034                     dtoa@p:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x33
   610  000034                     	ds	2
   611  000036                     dtoa@w:
   612                           	callstack 0
   613                           
   614                           ; 2 bytes @ 0x35
   615  000036                     	ds	2
   616  000038                     dtoa@s:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x37
   620  000038                     	ds	2
   621  00003A                     dtoa@n:
   622                           	callstack 0
   623                           
   624                           ; 8 bytes @ 0x39
   625  00003A                     	ds	8
   626  000042                     dtoa@i:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x41
   630  000042                     	ds	2
   631  000044                     ?_vfpfcnvrt:
   632                           	callstack 0
   633  000044                     vfpfcnvrt@fp:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0x43
   637  000044                     	ds	2
   638  000046                     vfpfcnvrt@fmt:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0x45
   642  000046                     	ds	2
   643  000048                     vfpfcnvrt@ap:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x47
   647  000048                     	ds	2
   648  00004A                     ??_vfpfcnvrt:
   649                           
   650                           ; 1 bytes @ 0x49
   651  00004A                     	ds	4
   652  00004E                     vfprintf@cfmt:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x4D
   656  00004E                     	ds	2
   657  000050                     ??_LCD_init:
   658  000050                     ??_time_incre:
   659  000050                     
   660                           ; 1 bytes @ 0x4F
   661  000050                     	ds	2
   662  000052                     
   663                           ; 1 bytes @ 0x51
   664 ;;
   665 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   666 ;;
   667 ;; *************** function _main *****************
   668 ;; Defined at:
   669 ;;		line 7 in file "main.c"
   670 ;; Parameters:    Size  Location     Type
   671 ;;		None
   672 ;; Auto vars:     Size  Location     Type
   673 ;;  current        12  128[BANK0 ] struct .
   674 ;; Return value:  Size  Location     Type
   675 ;;                  1    wreg      void 
   676 ;; Registers used:
   677 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   678 ;; Tracked objects:
   679 ;;		On entry : 0/0
   680 ;;		On exit  : 0/0
   681 ;;		Unchanged: 0/0
   682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   684 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   686 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   687 ;;Total ram usage:       12 bytes
   688 ;; Hardware stack levels required when called: 11
   689 ;; This function calls:
   690 ;;		_ADC_init
   691 ;;		_Comp1_init
   692 ;;		_Interrupts_init
   693 ;;		_LCD_init
   694 ;;		_LED1_init
   695 ;;		_LED2_init
   696 ;;		_LED_toggle
   697 ;;		_LEDarray_disp_bin
   698 ;;		_LEDarray_init
   699 ;;		_Timer0_init
   700 ;;		_sunrise_sunset
   701 ;;		_time_incre
   702 ;; This function is called by:
   703 ;;		Startup code after reset
   704 ;; This function uses a non-reentrant model
   705 ;;
   706                           
   707                           	psect	text0
   708  001E9E                     __ptext0:
   709                           	callstack 0
   710  001E9E                     _main:
   711                           	callstack 20
   712  001E9E                     
   713                           ;main.c: 12:     dateandtime current;;main.c: 13:     current.year = 2021;
   714  001E9E  0E07               	movlw	7
   715  001EA0  0100               	movlb	0	; () banked
   716  001EA2  6FE1               	movwf	(main@current+1)& (0+255),b
   717  001EA4  0EE5               	movlw	229
   718  001EA6  6FE0               	movwf	main@current& (0+255),b
   719                           
   720                           ;main.c: 14:     current.month = 10;
   721  001EA8  0E0A               	movlw	10
   722  001EAA  6FE2               	movwf	(main@current+2)& (0+255),b
   723                           
   724                           ;main.c: 15:     current.date = 30;
   725  001EAC  0E1E               	movlw	30
   726  001EAE  6FE3               	movwf	(main@current+3)& (0+255),b
   727                           
   728                           ;main.c: 16:     current.day = 6;
   729  001EB0  0E06               	movlw	6
   730  001EB2  6FE4               	movwf	(main@current+4)& (0+255),b
   731                           
   732                           ;main.c: 17:     current.hour = 20;
   733  001EB4  0E14               	movlw	20
   734  001EB6  6FE5               	movwf	(main@current+5)& (0+255),b
   735                           
   736                           ;main.c: 18:     current.minute = 0;
   737  001EB8  0E00               	movlw	0
   738  001EBA  6FE6               	movwf	(main@current+6)& (0+255),b
   739                           
   740                           ;main.c: 19:     current.second = 0;
   741  001EBC  0E00               	movlw	0
   742  001EBE  6FE7               	movwf	(main@current+7)& (0+255),b
   743                           
   744                           ;main.c: 20:     current.sunrise_hour = 7;
   745  001EC0  0E07               	movlw	7
   746  001EC2  6FE8               	movwf	(main@current+8)& (0+255),b
   747                           
   748                           ;main.c: 21:     current.sunrise_minute = 0;
   749  001EC4  0E00               	movlw	0
   750  001EC6  6FE9               	movwf	(main@current+9)& (0+255),b
   751                           
   752                           ;main.c: 22:     current.sunrise_second = 0;
   753  001EC8  0E00               	movlw	0
   754  001ECA  6FEA               	movwf	(main@current+10)& (0+255),b
   755                           
   756                           ;main.c: 23:     current.dst = 1;
   757  001ECC  0E01               	movlw	1
   758  001ECE  6FEB               	movwf	(main@current+11)& (0+255),b
   759  001ED0                     
   760                           ; BSR set to: 0
   761                           ;main.c: 26:     ADC_init();
   762  001ED0  ECE1  F014         	call	_ADC_init	;wreg free
   763  001ED4                     
   764                           ;main.c: 27:     Comp1_init();
   765  001ED4  ECB0  F014         	call	_Comp1_init	;wreg free
   766  001ED8                     
   767                           ;main.c: 28:     Timer0_init();
   768  001ED8  ECD3  F014         	call	_Timer0_init	;wreg free
   769  001EDC                     
   770                           ;main.c: 29:     Interrupts_init(current);
   771  001EDC  EE20  F0E0         	lfsr	2,main@current
   772  001EE0  EE00  F005         	lfsr	0,Interrupts_init@current
   773  001EE4  0E0B               	movlw	11
   774  001EE6                     u4111:
   775  001EE6  CFDB FFEB          	movff	plusw2,plusw0
   776  001EEA  06E8               	decf	wreg,f,c
   777  001EEC  E2FC               	bc	u4111
   778  001EEE  ECC9  F013         	call	_Interrupts_init	;wreg free
   779  001EF2                     
   780                           ;main.c: 30:     LED1_init(current);
   781  001EF2  EE20  F0E0         	lfsr	2,main@current
   782  001EF6  EE00  F006         	lfsr	0,LED1_init@current
   783  001EFA  0E0B               	movlw	11
   784  001EFC                     u4121:
   785  001EFC  CFDB FFEB          	movff	plusw2,plusw0
   786  001F00  06E8               	decf	wreg,f,c
   787  001F02  E2FC               	bc	u4121
   788  001F04  EC5D  F013         	call	_LED1_init	;wreg free
   789                           
   790                           ;main.c: 31:     LED2_init();
   791  001F08  EC0B  F015         	call	_LED2_init	;wreg free
   792                           
   793                           ;main.c: 32:     LEDarray_init();
   794  001F0C  EC8A  F014         	call	_LEDarray_init	;wreg free
   795  001F10                     
   796                           ;main.c: 33:     LCD_init(current);
   797  001F10  EE20  F0E0         	lfsr	2,main@current
   798  001F14  EE00  F084         	lfsr	0,LCD_init@current
   799  001F18  0E0B               	movlw	11
   800  001F1A                     u4131:
   801  001F1A  CFDB FFEB          	movff	plusw2,plusw0
   802  001F1E  06E8               	decf	wreg,f,c
   803  001F20  E2FC               	bc	u4131
   804  001F22  ECD1  F00F         	call	_LCD_init	;wreg free
   805  001F26                     l3433:
   806                           
   807                           ;main.c: 37:         current = sunrise_sunset(current);
   808  001F26  EE20  F0E0         	lfsr	2,main@current
   809  001F2A  EE00  F01C         	lfsr	0,sunrise_sunset@current
   810  001F2E  0E0B               	movlw	11
   811  001F30                     u4141:
   812  001F30  CFDB FFEB          	movff	plusw2,plusw0
   813  001F34  06E8               	decf	wreg,f,c
   814  001F36  E2FC               	bc	u4141
   815  001F38  EC36  F012         	call	_sunrise_sunset	;wreg free
   816  001F3C  EE20  F0E0         	lfsr	2,main@current
   817  001F40  0E0B               	movlw	11
   818  001F42                     u4151:
   819  001F42  CFEB FFDB          	movff	plusw0,plusw2
   820  001F46  06E8               	decf	wreg,f,c
   821  001F48  E2FC               	bc	u4151
   822  001F4A                     
   823                           ;main.c: 41:         current = time_incre(current);
   824  001F4A  EE20  F0E0         	lfsr	2,main@current
   825  001F4E  EE00  F084         	lfsr	0,time_incre@current
   826  001F52  0E0B               	movlw	11
   827  001F54                     u4161:
   828  001F54  CFDB FFEB          	movff	plusw2,plusw0
   829  001F58  06E8               	decf	wreg,f,c
   830  001F5A  E2FC               	bc	u4161
   831  001F5C  ECF2  F00B         	call	_time_incre	;wreg free
   832  001F60  EE20  F0E0         	lfsr	2,main@current
   833  001F64  0E0B               	movlw	11
   834  001F66                     u4171:
   835  001F66  CFEB FFDB          	movff	plusw0,plusw2
   836  001F6A  06E8               	decf	wreg,f,c
   837  001F6C  E2FC               	bc	u4171
   838  001F6E                     
   839                           ;main.c: 45:         current = LED_toggle(current);
   840  001F6E  EE20  F0E0         	lfsr	2,main@current
   841  001F72  EE00  F011         	lfsr	0,LED_toggle@current
   842  001F76  0E0B               	movlw	11
   843  001F78                     u4181:
   844  001F78  CFDB FFEB          	movff	plusw2,plusw0
   845  001F7C  06E8               	decf	wreg,f,c
   846  001F7E  E2FC               	bc	u4181
   847  001F80  EC73  F011         	call	_LED_toggle	;wreg free
   848  001F84  EE20  F0E0         	lfsr	2,main@current
   849  001F88  0E0B               	movlw	11
   850  001F8A                     u4191:
   851  001F8A  CFEB FFDB          	movff	plusw0,plusw2
   852  001F8E  06E8               	decf	wreg,f,c
   853  001F90  E2FC               	bc	u4191
   854  001F92                     
   855                           ;main.c: 50:         LEDarray_disp_bin(current.hour);
   856  001F92  0100               	movlb	0	; () banked
   857  001F94  51E5               	movf	(main@current+5)& (0+255),w,b
   858  001F96  EC36  F00E         	call	_LEDarray_disp_bin
   859  001F9A  EF93  F00F         	goto	l3433
   860  001F9E  EF2C  F000         	goto	start
   861  001FA2                     __end_of_main:
   862                           	callstack 0
   863                           
   864 ;; *************** function _time_incre *****************
   865 ;; Defined at:
   866 ;;		line 59 in file "dateandtime.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;  current        12   36[BANK0 ] struct .
   869 ;; Auto vars:     Size  Location     Type
   870 ;;  buf2           40   88[BANK0 ] unsigned char [40]
   871 ;;  buf1           40   48[BANK0 ] unsigned char [40]
   872 ;; Return value:  Size  Location     Type
   873 ;;                  12   36[BANK0 ] struct .
   874 ;; Registers used:
   875 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   881 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   882 ;;      Locals:         0      80       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   883 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   884 ;;      Totals:         1      92       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   885 ;;Total ram usage:       93 bytes
   886 ;; Hardware stack levels used: 1
   887 ;; Hardware stack levels required when called: 10
   888 ;; This function calls:
   889 ;;		_LCD_sendstring
   890 ;;		_LCD_setline
   891 ;;		_date_check
   892 ;;		_daylightsavingstime_toggle
   893 ;;		_sprintf
   894 ;; This function is called by:
   895 ;;		_main
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899                           	psect	text1
   900  0017E4                     __ptext1:
   901                           	callstack 0
   902  0017E4                     _time_incre:
   903                           	callstack 20
   904  0017E4                     
   905                           ;dateandtime.c: 61:     if (time_flag==1) {
   906  0017E4  0100               	movlb	0	; () banked
   907  0017E6  05F2               	decf	_time_flag& (0+255),w,b	;volatile
   908  0017E8  A4D8               	btfss	status,2,c
   909  0017EA  EFF9  F00B         	goto	u3991
   910  0017EE  EFFB  F00B         	goto	u3990
   911  0017F2                     u3991:
   912  0017F2  EFB6  F00C         	goto	l3415
   913  0017F6                     u3990:
   914  0017F6                     
   915                           ; BSR set to: 0
   916                           ;dateandtime.c: 62:         current.second = current.second+1;
   917  0017F6  298B               	incf	(time_incre@current+7)& (0+255),w,b
   918  0017F8  6F8B               	movwf	(time_incre@current+7)& (0+255),b
   919  0017FA                     
   920                           ; BSR set to: 0
   921                           ;dateandtime.c: 64:         char buf1[40];;dateandtime.c: 65:         LCD_setline(2);
   922  0017FA  0E02               	movlw	2
   923  0017FC  EC82  F013         	call	_LCD_setline
   924  001800                     
   925                           ;dateandtime.c: 66:         sprintf(buf1,"%02d:%02d:%02d",current.hour,current.minute,cu
      +                          rrent.second);
   926  001800  0E90               	movlw	low time_incre@buf1
   927  001802  0100               	movlb	0	; () banked
   928  001804  6F72               	movwf	sprintf@s& (0+255),b
   929  001806  0E00               	movlw	high time_incre@buf1
   930  001808  6F73               	movwf	(sprintf@s+1)& (0+255),b
   931  00180A  0E01               	movlw	low STR_2
   932  00180C  6F74               	movwf	sprintf@fmt& (0+255),b
   933  00180E  0E0E               	movlw	high STR_2
   934  001810  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
   935  001812  5189               	movf	(time_incre@current+5)& (0+255),w,b
   936  001814  6F76               	movwf	(?_sprintf+4)& (0+255),b
   937  001816  6B77               	clrf	(?_sprintf+5)& (0+255),b
   938  001818  BF76               	btfsc	(?_sprintf+4)& (0+255),7,b
   939  00181A  0777               	decf	(?_sprintf+5)& (0+255),f,b
   940  00181C  518A               	movf	(time_incre@current+6)& (0+255),w,b
   941  00181E  6F78               	movwf	(?_sprintf+6)& (0+255),b
   942  001820  6B79               	clrf	(?_sprintf+7)& (0+255),b
   943  001822  BF78               	btfsc	(?_sprintf+6)& (0+255),7,b
   944  001824  0779               	decf	(?_sprintf+7)& (0+255),f,b
   945  001826  518B               	movf	(time_incre@current+7)& (0+255),w,b
   946  001828  6F7A               	movwf	(?_sprintf+8)& (0+255),b
   947  00182A  6B7B               	clrf	(?_sprintf+9)& (0+255),b
   948  00182C  BF7A               	btfsc	(?_sprintf+8)& (0+255),7,b
   949  00182E  077B               	decf	(?_sprintf+9)& (0+255),f,b
   950  001830  EC0B  F013         	call	_sprintf	;wreg free
   951  001834                     
   952                           ;dateandtime.c: 67:         LCD_sendstring(buf1);
   953  001834  0E90               	movlw	low time_incre@buf1
   954  001836  6E08               	movwf	LCD_sendstring@string^0,c
   955  001838  0E00               	movlw	high time_incre@buf1
   956  00183A  6E09               	movwf	(LCD_sendstring@string+1)^0,c
   957  00183C  EC41  F014         	call	_LCD_sendstring	;wreg free
   958  001840                     
   959                           ;dateandtime.c: 69:         if (current.second>59) {
   960  001840  0100               	movlb	0	; () banked
   961  001842  518B               	movf	(time_incre@current+7)& (0+255),w,b
   962  001844  0A80               	xorlw	128
   963  001846  0F44               	addlw	-188
   964  001848  A0D8               	btfss	status,0,c
   965  00184A  EF29  F00C         	goto	u4001
   966  00184E  EF2B  F00C         	goto	u4000
   967  001852                     u4001:
   968  001852  EFB4  F00C         	goto	l297
   969  001856                     u4000:
   970  001856                     
   971                           ; BSR set to: 0
   972                           ;dateandtime.c: 70:             LATHbits.LATH3 = !LATHbits.LATH3;
   973  001856  A680               	btfss	128,3,c	;volatile
   974  001858  EF30  F00C         	goto	u4011
   975  00185C  EF34  F00C         	goto	u4010
   976  001860                     u4011:
   977  001860  6A50               	clrf	??_time_incre^0,c
   978  001862  2A50               	incf	??_time_incre^0,f,c
   979  001864  EF35  F00C         	goto	u4028
   980  001868                     u4010:
   981  001868  6A50               	clrf	??_time_incre^0,c
   982  00186A                     u4028:
   983  00186A  4650               	rlncf	??_time_incre^0,f,c
   984  00186C  4650               	rlncf	??_time_incre^0,f,c
   985  00186E  4650               	rlncf	??_time_incre^0,f,c
   986  001870  5080               	movf	128,w,c	;volatile
   987  001872  1850               	xorwf	??_time_incre^0,w,c
   988  001874  0BF7               	andlw	-9
   989  001876  1850               	xorwf	??_time_incre^0,w,c
   990  001878  6E80               	movwf	128,c	;volatile
   991  00187A                     
   992                           ;dateandtime.c: 71:             current.second = 0;
   993  00187A  0E00               	movlw	0
   994  00187C  0100               	movlb	0	; () banked
   995  00187E  6F8B               	movwf	(time_incre@current+7)& (0+255),b
   996  001880                     
   997                           ; BSR set to: 0
   998                           ;dateandtime.c: 72:             current.minute = current.minute+1;
   999  001880  298A               	incf	(time_incre@current+6)& (0+255),w,b
  1000  001882  6F8A               	movwf	(time_incre@current+6)& (0+255),b
  1001  001884                     
  1002                           ; BSR set to: 0
  1003                           ;dateandtime.c: 73:             if (current.minute>59) {
  1004  001884  518A               	movf	(time_incre@current+6)& (0+255),w,b
  1005  001886  0A80               	xorlw	128
  1006  001888  0F44               	addlw	-188
  1007  00188A  A0D8               	btfss	status,0,c
  1008  00188C  EF4A  F00C         	goto	u4031
  1009  001890  EF4C  F00C         	goto	u4030
  1010  001894                     u4031:
  1011  001894  EFB4  F00C         	goto	l297
  1012  001898                     u4030:
  1013  001898                     
  1014                           ; BSR set to: 0
  1015                           ;dateandtime.c: 74:                 current.minute = 0;
  1016  001898  0E00               	movlw	0
  1017  00189A  6F8A               	movwf	(time_incre@current+6)& (0+255),b
  1018  00189C                     
  1019                           ; BSR set to: 0
  1020                           ;dateandtime.c: 75:                 current.hour = current.hour+1;
  1021  00189C  2989               	incf	(time_incre@current+5)& (0+255),w,b
  1022  00189E  6F89               	movwf	(time_incre@current+5)& (0+255),b
  1023  0018A0                     
  1024                           ; BSR set to: 0
  1025                           ;dateandtime.c: 76:                 current = daylightsavingstime_toggle(current);
  1026  0018A0  EE20  F084         	lfsr	2,time_incre@current
  1027  0018A4  EE00  F005         	lfsr	0,daylightsavingstime_toggle@current
  1028  0018A8  0E0B               	movlw	11
  1029  0018AA                     u4041:
  1030  0018AA  CFDB FFEB          	movff	plusw2,plusw0
  1031  0018AE  06E8               	decf	wreg,f,c
  1032  0018B0  E2FC               	bc	u4041
  1033  0018B2  ECC8  F00E         	call	_daylightsavingstime_toggle	;wreg free
  1034  0018B6  EE20  F084         	lfsr	2,time_incre@current
  1035  0018BA  0E0B               	movlw	11
  1036  0018BC                     u4051:
  1037  0018BC  CFEB FFDB          	movff	plusw0,plusw2
  1038  0018C0  06E8               	decf	wreg,f,c
  1039  0018C2  E2FC               	bc	u4051
  1040  0018C4                     
  1041                           ;dateandtime.c: 77:                 if (current.hour>23) {
  1042  0018C4  0100               	movlb	0	; () banked
  1043  0018C6  5189               	movf	(time_incre@current+5)& (0+255),w,b
  1044  0018C8  0A80               	xorlw	128
  1045  0018CA  0F68               	addlw	-152
  1046  0018CC  A0D8               	btfss	status,0,c
  1047  0018CE  EF6B  F00C         	goto	u4061
  1048  0018D2  EF6D  F00C         	goto	u4060
  1049  0018D6                     u4061:
  1050  0018D6  EFB4  F00C         	goto	l297
  1051  0018DA                     u4060:
  1052  0018DA                     
  1053                           ; BSR set to: 0
  1054                           ;dateandtime.c: 78:                     current.hour = 0;
  1055  0018DA  0E00               	movlw	0
  1056  0018DC  6F89               	movwf	(time_incre@current+5)& (0+255),b
  1057  0018DE                     
  1058                           ; BSR set to: 0
  1059                           ;dateandtime.c: 79:                     current.date = current.date+1;
  1060  0018DE  2987               	incf	(time_incre@current+3)& (0+255),w,b
  1061  0018E0  6F87               	movwf	(time_incre@current+3)& (0+255),b
  1062  0018E2                     
  1063                           ; BSR set to: 0
  1064                           ;dateandtime.c: 80:                     current = date_check(current);
  1065  0018E2  EE20  F084         	lfsr	2,time_incre@current
  1066  0018E6  EE00  F005         	lfsr	0,date_check@current
  1067  0018EA  0E0B               	movlw	11
  1068  0018EC                     u4071:
  1069  0018EC  CFDB FFEB          	movff	plusw2,plusw0
  1070  0018F0  06E8               	decf	wreg,f,c
  1071  0018F2  E2FC               	bc	u4071
  1072  0018F4  EC46  F00A         	call	_date_check	;wreg free
  1073  0018F8  EE20  F084         	lfsr	2,time_incre@current
  1074  0018FC  0E0B               	movlw	11
  1075  0018FE                     u4081:
  1076  0018FE  CFEB FFDB          	movff	plusw0,plusw2
  1077  001902  06E8               	decf	wreg,f,c
  1078  001904  E2FC               	bc	u4081
  1079  001906                     
  1080                           ;dateandtime.c: 82:                     char buf2[40];;dateandtime.c: 83:               
      +                                LCD_setline(1);
  1081  001906  0E01               	movlw	1
  1082  001908  EC82  F013         	call	_LCD_setline
  1083  00190C                     
  1084                           ;dateandtime.c: 84:                     sprintf(buf2,"%04d-%02d-%02d",current.year,curre
      +                          nt.month,current.date);
  1085  00190C  0EB8               	movlw	low time_incre@buf2
  1086  00190E  0100               	movlb	0	; () banked
  1087  001910  6F72               	movwf	sprintf@s& (0+255),b
  1088  001912  0E00               	movlw	high time_incre@buf2
  1089  001914  6F73               	movwf	(sprintf@s+1)& (0+255),b
  1090  001916  0E10               	movlw	low STR_1
  1091  001918  6F74               	movwf	sprintf@fmt& (0+255),b
  1092  00191A  0E0E               	movlw	high STR_1
  1093  00191C  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  1094  00191E  C084  F076         	movff	time_incre@current,?_sprintf+4
  1095  001922  C085  F077         	movff	time_incre@current+1,?_sprintf+5
  1096  001926  5186               	movf	(time_incre@current+2)& (0+255),w,b
  1097  001928  6F78               	movwf	(?_sprintf+6)& (0+255),b
  1098  00192A  6B79               	clrf	(?_sprintf+7)& (0+255),b
  1099  00192C  BF78               	btfsc	(?_sprintf+6)& (0+255),7,b
  1100  00192E  0779               	decf	(?_sprintf+7)& (0+255),f,b
  1101  001930  5187               	movf	(time_incre@current+3)& (0+255),w,b
  1102  001932  6F7A               	movwf	(?_sprintf+8)& (0+255),b
  1103  001934  6B7B               	clrf	(?_sprintf+9)& (0+255),b
  1104  001936  BF7A               	btfsc	(?_sprintf+8)& (0+255),7,b
  1105  001938  077B               	decf	(?_sprintf+9)& (0+255),f,b
  1106  00193A  EC0B  F013         	call	_sprintf	;wreg free
  1107  00193E                     
  1108                           ;dateandtime.c: 85:                     LCD_sendstring(buf2);
  1109  00193E  0EB8               	movlw	low time_incre@buf2
  1110  001940  6E08               	movwf	LCD_sendstring@string^0,c
  1111  001942  0E00               	movlw	high time_incre@buf2
  1112  001944  6E09               	movwf	(LCD_sendstring@string+1)^0,c
  1113  001946  EC41  F014         	call	_LCD_sendstring	;wreg free
  1114  00194A                     
  1115                           ;dateandtime.c: 87:                     current.day = current.day+1;
  1116  00194A  0100               	movlb	0	; () banked
  1117  00194C  2988               	incf	(time_incre@current+4)& (0+255),w,b
  1118  00194E  6F88               	movwf	(time_incre@current+4)& (0+255),b
  1119  001950                     
  1120                           ; BSR set to: 0
  1121                           ;dateandtime.c: 88:                     if (current.day>7) {
  1122  001950  5188               	movf	(time_incre@current+4)& (0+255),w,b
  1123  001952  0A80               	xorlw	128
  1124  001954  0F78               	addlw	-136
  1125  001956  A0D8               	btfss	status,0,c
  1126  001958  EFB0  F00C         	goto	u4091
  1127  00195C  EFB2  F00C         	goto	u4090
  1128  001960                     u4091:
  1129  001960  EFB4  F00C         	goto	l297
  1130  001964                     u4090:
  1131  001964                     
  1132                           ; BSR set to: 0
  1133                           ;dateandtime.c: 89:                         current.day = 1;
  1134  001964  0E01               	movlw	1
  1135  001966  6F88               	movwf	(time_incre@current+4)& (0+255),b
  1136  001968                     l297:
  1137                           
  1138                           ; BSR set to: 0
  1139                           ;dateandtime.c: 94:         time_flag=0;
  1140  001968  0E00               	movlw	0
  1141  00196A  6FF2               	movwf	_time_flag& (0+255),b	;volatile
  1142  00196C                     l3415:
  1143                           
  1144                           ; BSR set to: 0
  1145                           ;dateandtime.c: 97:     return current;
  1146  00196C  EE20  F084         	lfsr	2,time_incre@current
  1147  001970  EE00  F084         	lfsr	0,?_time_incre
  1148  001974  0E0B               	movlw	11
  1149  001976                     u4101:
  1150  001976  CFDB FFEB          	movff	plusw2,plusw0
  1151  00197A  06E8               	decf	wreg,f,c
  1152  00197C  E2FC               	bc	u4101
  1153  00197E                     
  1154                           ; BSR set to: 0
  1155  00197E  0012               	return		;funcret
  1156  001980                     __end_of_time_incre:
  1157                           	callstack 0
  1158                           
  1159 ;; *************** function _daylightsavingstime_toggle *****************
  1160 ;; Defined at:
  1161 ;;		line 13 in file "dateandtime.c"
  1162 ;; Parameters:    Size  Location     Type
  1163 ;;  current        12    4[COMRAM] struct .
  1164 ;; Auto vars:     Size  Location     Type
  1165 ;;		None
  1166 ;; Return value:  Size  Location     Type
  1167 ;;                  12    4[COMRAM] struct .
  1168 ;; Registers used:
  1169 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  1170 ;; Tracked objects:
  1171 ;;		On entry : 0/0
  1172 ;;		On exit  : 0/0
  1173 ;;		Unchanged: 0/0
  1174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1175 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1177 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1178 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1179 ;;Total ram usage:       14 bytes
  1180 ;; Hardware stack levels used: 1
  1181 ;; Hardware stack levels required when called: 2
  1182 ;; This function calls:
  1183 ;;		Nothing
  1184 ;; This function is called by:
  1185 ;;		_time_incre
  1186 ;; This function uses a non-reentrant model
  1187 ;;
  1188                           
  1189                           	psect	text2
  1190  001D90                     __ptext2:
  1191                           	callstack 0
  1192  001D90                     _daylightsavingstime_toggle:
  1193                           	callstack 27
  1194  001D90                     
  1195                           ;dateandtime.c: 15:     if (current.month==3 && (current.date+7)>31 && current.day==7 &&
      +                           current.hour==1 && current.dst==0) {
  1196  001D90  0E03               	movlw	3
  1197  001D92  1807               	xorwf	(daylightsavingstime_toggle@current+2)^0,w,c
  1198  001D94  A4D8               	btfss	status,2,c
  1199  001D96  EFCF  F00E         	goto	u2491
  1200  001D9A  EFD1  F00E         	goto	u2490
  1201  001D9E                     u2491:
  1202  001D9E  EF07  F00F         	goto	l2577
  1203  001DA2                     u2490:
  1204  001DA2  C008  F011         	movff	daylightsavingstime_toggle@current+3,??_daylightsavingstime_toggle
  1205  001DA6  6A12               	clrf	(??_daylightsavingstime_toggle+1)^0,c
  1206  001DA8  BE11               	btfsc	??_daylightsavingstime_toggle^0,7,c
  1207  001DAA  0612               	decf	(??_daylightsavingstime_toggle+1)^0,f,c
  1208  001DAC  0E07               	movlw	7
  1209  001DAE  2611               	addwf	??_daylightsavingstime_toggle^0,f,c
  1210  001DB0  0E00               	movlw	0
  1211  001DB2  2212               	addwfc	(??_daylightsavingstime_toggle+1)^0,f,c
  1212  001DB4  BE12               	btfsc	(??_daylightsavingstime_toggle+1)^0,7,c
  1213  001DB6  EFE6  F00E         	goto	u2501
  1214  001DBA  5012               	movf	(??_daylightsavingstime_toggle+1)^0,w,c
  1215  001DBC  E109               	bnz	u2500
  1216  001DBE  0E20               	movlw	32
  1217  001DC0  5C11               	subwf	??_daylightsavingstime_toggle^0,w,c
  1218  001DC2  A0D8               	btfss	status,0,c
  1219  001DC4  EFE6  F00E         	goto	u2501
  1220  001DC8  EFE8  F00E         	goto	u2500
  1221  001DCC                     u2501:
  1222  001DCC  EF07  F00F         	goto	l2577
  1223  001DD0                     u2500:
  1224  001DD0  0E07               	movlw	7
  1225  001DD2  1809               	xorwf	(daylightsavingstime_toggle@current+4)^0,w,c
  1226  001DD4  A4D8               	btfss	status,2,c
  1227  001DD6  EFEF  F00E         	goto	u2511
  1228  001DDA  EFF1  F00E         	goto	u2510
  1229  001DDE                     u2511:
  1230  001DDE  EF07  F00F         	goto	l2577
  1231  001DE2                     u2510:
  1232  001DE2  040A               	decf	(daylightsavingstime_toggle@current+5)^0,w,c
  1233  001DE4  A4D8               	btfss	status,2,c
  1234  001DE6  EFF7  F00E         	goto	u2521
  1235  001DEA  EFF9  F00E         	goto	u2520
  1236  001DEE                     u2521:
  1237  001DEE  EF07  F00F         	goto	l2577
  1238  001DF2                     u2520:
  1239  001DF2  5010               	movf	(daylightsavingstime_toggle@current+11)^0,w,c
  1240  001DF4  A4D8               	btfss	status,2,c
  1241  001DF6  EFFF  F00E         	goto	u2531
  1242  001DFA  EF01  F00F         	goto	u2530
  1243  001DFE                     u2531:
  1244  001DFE  EF07  F00F         	goto	l2577
  1245  001E02                     u2530:
  1246  001E02                     
  1247                           ;dateandtime.c: 16:         current.hour = current.hour+1;
  1248  001E02  280A               	incf	(daylightsavingstime_toggle@current+5)^0,w,c
  1249  001E04  6E0A               	movwf	(daylightsavingstime_toggle@current+5)^0,c
  1250  001E06                     
  1251                           ;dateandtime.c: 17:         current.dst = 1;
  1252  001E06  0E01               	movlw	1
  1253  001E08  6E10               	movwf	(daylightsavingstime_toggle@current+11)^0,c
  1254                           
  1255                           ;dateandtime.c: 18:     } else if (current.month==10 && (current.date+7)>31 && current.d
      +                          ay==7 && current.hour==2 && current.dst==1) {
  1256  001E0A  EF45  F00F         	goto	l2591
  1257  001E0E                     l2577:
  1258  001E0E  0E0A               	movlw	10
  1259  001E10  1807               	xorwf	(daylightsavingstime_toggle@current+2)^0,w,c
  1260  001E12  A4D8               	btfss	status,2,c
  1261  001E14  EF0E  F00F         	goto	u2541
  1262  001E18  EF10  F00F         	goto	u2540
  1263  001E1C                     u2541:
  1264  001E1C  EF45  F00F         	goto	l2591
  1265  001E20                     u2540:
  1266  001E20  C008  F011         	movff	daylightsavingstime_toggle@current+3,??_daylightsavingstime_toggle
  1267  001E24  6A12               	clrf	(??_daylightsavingstime_toggle+1)^0,c
  1268  001E26  BE11               	btfsc	??_daylightsavingstime_toggle^0,7,c
  1269  001E28  0612               	decf	(??_daylightsavingstime_toggle+1)^0,f,c
  1270  001E2A  0E07               	movlw	7
  1271  001E2C  2611               	addwf	??_daylightsavingstime_toggle^0,f,c
  1272  001E2E  0E00               	movlw	0
  1273  001E30  2212               	addwfc	(??_daylightsavingstime_toggle+1)^0,f,c
  1274  001E32  BE12               	btfsc	(??_daylightsavingstime_toggle+1)^0,7,c
  1275  001E34  EF25  F00F         	goto	u2551
  1276  001E38  5012               	movf	(??_daylightsavingstime_toggle+1)^0,w,c
  1277  001E3A  E109               	bnz	u2550
  1278  001E3C  0E20               	movlw	32
  1279  001E3E  5C11               	subwf	??_daylightsavingstime_toggle^0,w,c
  1280  001E40  A0D8               	btfss	status,0,c
  1281  001E42  EF25  F00F         	goto	u2551
  1282  001E46  EF27  F00F         	goto	u2550
  1283  001E4A                     u2551:
  1284  001E4A  EF45  F00F         	goto	l2591
  1285  001E4E                     u2550:
  1286  001E4E  0E07               	movlw	7
  1287  001E50  1809               	xorwf	(daylightsavingstime_toggle@current+4)^0,w,c
  1288  001E52  A4D8               	btfss	status,2,c
  1289  001E54  EF2E  F00F         	goto	u2561
  1290  001E58  EF30  F00F         	goto	u2560
  1291  001E5C                     u2561:
  1292  001E5C  EF45  F00F         	goto	l2591
  1293  001E60                     u2560:
  1294  001E60  0E02               	movlw	2
  1295  001E62  180A               	xorwf	(daylightsavingstime_toggle@current+5)^0,w,c
  1296  001E64  A4D8               	btfss	status,2,c
  1297  001E66  EF37  F00F         	goto	u2571
  1298  001E6A  EF39  F00F         	goto	u2570
  1299  001E6E                     u2571:
  1300  001E6E  EF45  F00F         	goto	l2591
  1301  001E72                     u2570:
  1302  001E72  0410               	decf	(daylightsavingstime_toggle@current+11)^0,w,c
  1303  001E74  A4D8               	btfss	status,2,c
  1304  001E76  EF3F  F00F         	goto	u2581
  1305  001E7A  EF41  F00F         	goto	u2580
  1306  001E7E                     u2581:
  1307  001E7E  EF45  F00F         	goto	l2591
  1308  001E82                     u2580:
  1309  001E82                     
  1310                           ;dateandtime.c: 19:         current.hour = current.hour-1;
  1311  001E82  040A               	decf	(daylightsavingstime_toggle@current+5)^0,w,c
  1312  001E84  6E0A               	movwf	(daylightsavingstime_toggle@current+5)^0,c
  1313  001E86                     
  1314                           ;dateandtime.c: 20:         current.dst = 0;
  1315  001E86  0E00               	movlw	0
  1316  001E88  6E10               	movwf	(daylightsavingstime_toggle@current+11)^0,c
  1317  001E8A                     l2591:
  1318                           
  1319                           ;dateandtime.c: 23:     return current;
  1320  001E8A  EE20  F005         	lfsr	2,daylightsavingstime_toggle@current
  1321  001E8E  EE00  F005         	lfsr	0,?_daylightsavingstime_toggle
  1322  001E92  0E0B               	movlw	11
  1323  001E94                     u2591:
  1324  001E94  CFDB FFEB          	movff	plusw2,plusw0
  1325  001E98  06E8               	decf	wreg,f,c
  1326  001E9A  E2FC               	bc	u2591
  1327  001E9C  0012               	return		;funcret
  1328  001E9E                     __end_of_daylightsavingstime_toggle:
  1329                           	callstack 0
  1330                           
  1331 ;; *************** function _date_check *****************
  1332 ;; Defined at:
  1333 ;;		line 32 in file "dateandtime.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;  current        12    4[COMRAM] struct .
  1336 ;; Auto vars:     Size  Location     Type
  1337 ;;		None
  1338 ;; Return value:  Size  Location     Type
  1339 ;;                  12    4[COMRAM] struct .
  1340 ;; Registers used:
  1341 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  1342 ;; Tracked objects:
  1343 ;;		On entry : 0/0
  1344 ;;		On exit  : 0/0
  1345 ;;		Unchanged: 0/0
  1346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1347 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1349 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1350 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1351 ;;Total ram usage:       14 bytes
  1352 ;; Hardware stack levels used: 1
  1353 ;; Hardware stack levels required when called: 2
  1354 ;; This function calls:
  1355 ;;		Nothing
  1356 ;; This function is called by:
  1357 ;;		_time_incre
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361                           	psect	text3
  1362  00148C                     __ptext3:
  1363                           	callstack 0
  1364  00148C                     _date_check:
  1365                           	callstack 27
  1366  00148C                     
  1367                           ;dateandtime.c: 38:     if ((current.year%4==0 && current.month==2 && current.date>29) |
      +                          | (current.year%4!=0 && current.month==2 && current.date>28) || ((current.month==1 || cu
      +                          rrent.month==3 || current.month==5 || current.month==7 || current.month==8 || current.mo
      +                          nth==10 || current.month==12) && current.date>31) || ((current.month==4 || current.month
      +                          ==6 || current.month==9 || current.month==11) && current.date>30)) {
  1368  00148C  0E03               	movlw	3
  1369  00148E  1405               	andwf	date_check@current^0,w,c
  1370  001490  6E11               	movwf	??_date_check^0,c
  1371  001492  0E00               	movlw	0
  1372  001494  1406               	andwf	(date_check@current+1)^0,w,c
  1373  001496  6E12               	movwf	(??_date_check+1)^0,c
  1374  001498  5011               	movf	??_date_check^0,w,c
  1375  00149A  1012               	iorwf	(??_date_check+1)^0,w,c
  1376  00149C  A4D8               	btfss	status,2,c
  1377  00149E  EF53  F00A         	goto	u2601
  1378  0014A2  EF55  F00A         	goto	u2600
  1379  0014A6                     u2601:
  1380  0014A6  EF68  F00A         	goto	l2601
  1381  0014AA                     u2600:
  1382  0014AA  0E02               	movlw	2
  1383  0014AC  1807               	xorwf	(date_check@current+2)^0,w,c
  1384  0014AE  A4D8               	btfss	status,2,c
  1385  0014B0  EF5C  F00A         	goto	u2611
  1386  0014B4  EF5E  F00A         	goto	u2610
  1387  0014B8                     u2611:
  1388  0014B8  EF68  F00A         	goto	l2601
  1389  0014BC                     u2610:
  1390  0014BC  5008               	movf	(date_check@current+3)^0,w,c
  1391  0014BE  0A80               	xorlw	128
  1392  0014C0  0F62               	addlw	-158
  1393  0014C2  B0D8               	btfsc	status,0,c
  1394  0014C4  EF66  F00A         	goto	u2621
  1395  0014C8  EF68  F00A         	goto	u2620
  1396  0014CC                     u2621:
  1397  0014CC  EF00  F00B         	goto	l2633
  1398  0014D0                     u2620:
  1399  0014D0                     l2601:
  1400  0014D0  0E03               	movlw	3
  1401  0014D2  1405               	andwf	date_check@current^0,w,c
  1402  0014D4  6E11               	movwf	??_date_check^0,c
  1403  0014D6  0E00               	movlw	0
  1404  0014D8  1406               	andwf	(date_check@current+1)^0,w,c
  1405  0014DA  6E12               	movwf	(??_date_check+1)^0,c
  1406  0014DC  5011               	movf	??_date_check^0,w,c
  1407  0014DE  1012               	iorwf	(??_date_check+1)^0,w,c
  1408  0014E0  B4D8               	btfsc	status,2,c
  1409  0014E2  EF75  F00A         	goto	u2631
  1410  0014E6  EF77  F00A         	goto	u2630
  1411  0014EA                     u2631:
  1412  0014EA  EF8A  F00A         	goto	l2607
  1413  0014EE                     u2630:
  1414  0014EE  0E02               	movlw	2
  1415  0014F0  1807               	xorwf	(date_check@current+2)^0,w,c
  1416  0014F2  A4D8               	btfss	status,2,c
  1417  0014F4  EF7E  F00A         	goto	u2641
  1418  0014F8  EF80  F00A         	goto	u2640
  1419  0014FC                     u2641:
  1420  0014FC  EF8A  F00A         	goto	l2607
  1421  001500                     u2640:
  1422  001500  5008               	movf	(date_check@current+3)^0,w,c
  1423  001502  0A80               	xorlw	128
  1424  001504  0F63               	addlw	-157
  1425  001506  B0D8               	btfsc	status,0,c
  1426  001508  EF88  F00A         	goto	u2651
  1427  00150C  EF8A  F00A         	goto	u2650
  1428  001510                     u2651:
  1429  001510  EF00  F00B         	goto	l2633
  1430  001514                     u2650:
  1431  001514                     l2607:
  1432  001514  0407               	decf	(date_check@current+2)^0,w,c
  1433  001516  B4D8               	btfsc	status,2,c
  1434  001518  EF90  F00A         	goto	u2661
  1435  00151C  EF92  F00A         	goto	u2660
  1436  001520                     u2661:
  1437  001520  EFC8  F00A         	goto	l2621
  1438  001524                     u2660:
  1439  001524  0E03               	movlw	3
  1440  001526  1807               	xorwf	(date_check@current+2)^0,w,c
  1441  001528  B4D8               	btfsc	status,2,c
  1442  00152A  EF99  F00A         	goto	u2671
  1443  00152E  EF9B  F00A         	goto	u2670
  1444  001532                     u2671:
  1445  001532  EFC8  F00A         	goto	l2621
  1446  001536                     u2670:
  1447  001536  0E05               	movlw	5
  1448  001538  1807               	xorwf	(date_check@current+2)^0,w,c
  1449  00153A  B4D8               	btfsc	status,2,c
  1450  00153C  EFA2  F00A         	goto	u2681
  1451  001540  EFA4  F00A         	goto	u2680
  1452  001544                     u2681:
  1453  001544  EFC8  F00A         	goto	l2621
  1454  001548                     u2680:
  1455  001548  0E07               	movlw	7
  1456  00154A  1807               	xorwf	(date_check@current+2)^0,w,c
  1457  00154C  B4D8               	btfsc	status,2,c
  1458  00154E  EFAB  F00A         	goto	u2691
  1459  001552  EFAD  F00A         	goto	u2690
  1460  001556                     u2691:
  1461  001556  EFC8  F00A         	goto	l2621
  1462  00155A                     u2690:
  1463  00155A  0E08               	movlw	8
  1464  00155C  1807               	xorwf	(date_check@current+2)^0,w,c
  1465  00155E  B4D8               	btfsc	status,2,c
  1466  001560  EFB4  F00A         	goto	u2701
  1467  001564  EFB6  F00A         	goto	u2700
  1468  001568                     u2701:
  1469  001568  EFC8  F00A         	goto	l2621
  1470  00156C                     u2700:
  1471  00156C  0E0A               	movlw	10
  1472  00156E  1807               	xorwf	(date_check@current+2)^0,w,c
  1473  001570  B4D8               	btfsc	status,2,c
  1474  001572  EFBD  F00A         	goto	u2711
  1475  001576  EFBF  F00A         	goto	u2710
  1476  00157A                     u2711:
  1477  00157A  EFC8  F00A         	goto	l2621
  1478  00157E                     u2710:
  1479  00157E  0E0C               	movlw	12
  1480  001580  1807               	xorwf	(date_check@current+2)^0,w,c
  1481  001582  A4D8               	btfss	status,2,c
  1482  001584  EFC6  F00A         	goto	u2721
  1483  001588  EFC8  F00A         	goto	u2720
  1484  00158C                     u2721:
  1485  00158C  EFD2  F00A         	goto	l2623
  1486  001590                     u2720:
  1487  001590                     l2621:
  1488  001590  5008               	movf	(date_check@current+3)^0,w,c
  1489  001592  0A80               	xorlw	128
  1490  001594  0F60               	addlw	-160
  1491  001596  B0D8               	btfsc	status,0,c
  1492  001598  EFD0  F00A         	goto	u2731
  1493  00159C  EFD2  F00A         	goto	u2730
  1494  0015A0                     u2731:
  1495  0015A0  EF00  F00B         	goto	l2633
  1496  0015A4                     u2730:
  1497  0015A4                     l2623:
  1498  0015A4  0E04               	movlw	4
  1499  0015A6  1807               	xorwf	(date_check@current+2)^0,w,c
  1500  0015A8  B4D8               	btfsc	status,2,c
  1501  0015AA  EFD9  F00A         	goto	u2741
  1502  0015AE  EFDB  F00A         	goto	u2740
  1503  0015B2                     u2741:
  1504  0015B2  EFF6  F00A         	goto	l2631
  1505  0015B6                     u2740:
  1506  0015B6  0E06               	movlw	6
  1507  0015B8  1807               	xorwf	(date_check@current+2)^0,w,c
  1508  0015BA  B4D8               	btfsc	status,2,c
  1509  0015BC  EFE2  F00A         	goto	u2751
  1510  0015C0  EFE4  F00A         	goto	u2750
  1511  0015C4                     u2751:
  1512  0015C4  EFF6  F00A         	goto	l2631
  1513  0015C8                     u2750:
  1514  0015C8  0E09               	movlw	9
  1515  0015CA  1807               	xorwf	(date_check@current+2)^0,w,c
  1516  0015CC  B4D8               	btfsc	status,2,c
  1517  0015CE  EFEB  F00A         	goto	u2761
  1518  0015D2  EFED  F00A         	goto	u2760
  1519  0015D6                     u2761:
  1520  0015D6  EFF6  F00A         	goto	l2631
  1521  0015DA                     u2760:
  1522  0015DA  0E0B               	movlw	11
  1523  0015DC  1807               	xorwf	(date_check@current+2)^0,w,c
  1524  0015DE  A4D8               	btfss	status,2,c
  1525  0015E0  EFF4  F00A         	goto	u2771
  1526  0015E4  EFF6  F00A         	goto	u2770
  1527  0015E8                     u2771:
  1528  0015E8  EF16  F00B         	goto	l2643
  1529  0015EC                     u2770:
  1530  0015EC                     l2631:
  1531  0015EC  5008               	movf	(date_check@current+3)^0,w,c
  1532  0015EE  0A80               	xorlw	128
  1533  0015F0  0F61               	addlw	-159
  1534  0015F2  A0D8               	btfss	status,0,c
  1535  0015F4  EFFE  F00A         	goto	u2781
  1536  0015F8  EF00  F00B         	goto	u2780
  1537  0015FC                     u2781:
  1538  0015FC  EF16  F00B         	goto	l2643
  1539  001600                     u2780:
  1540  001600                     l2633:
  1541                           
  1542                           ;dateandtime.c: 41: ;dateandtime.c: 42:         current.month = current.month+1;
  1543  001600  2807               	incf	(date_check@current+2)^0,w,c
  1544  001602  6E07               	movwf	(date_check@current+2)^0,c
  1545  001604                     
  1546                           ;dateandtime.c: 43:         current.date = 1;
  1547  001604  0E01               	movlw	1
  1548  001606  6E08               	movwf	(date_check@current+3)^0,c
  1549  001608                     
  1550                           ;dateandtime.c: 45:         if (current.month>12) {
  1551  001608  5007               	movf	(date_check@current+2)^0,w,c
  1552  00160A  0A80               	xorlw	128
  1553  00160C  0F73               	addlw	-141
  1554  00160E  A0D8               	btfss	status,0,c
  1555  001610  EF0C  F00B         	goto	u2791
  1556  001614  EF0E  F00B         	goto	u2790
  1557  001618                     u2791:
  1558  001618  EF16  F00B         	goto	l2643
  1559  00161C                     u2790:
  1560  00161C                     
  1561                           ;dateandtime.c: 46:             current.year = current.year+1;
  1562  00161C  0E01               	movlw	1
  1563  00161E  2405               	addwf	date_check@current^0,w,c
  1564  001620  6E05               	movwf	date_check@current^0,c
  1565  001622  0E00               	movlw	0
  1566  001624  2006               	addwfc	(date_check@current+1)^0,w,c
  1567  001626  6E06               	movwf	(date_check@current+1)^0,c
  1568  001628                     
  1569                           ;dateandtime.c: 47:             current.month = 1;
  1570  001628  0E01               	movlw	1
  1571  00162A  6E07               	movwf	(date_check@current+2)^0,c
  1572  00162C                     l2643:
  1573                           
  1574                           ;dateandtime.c: 51:     return current;
  1575  00162C  EE20  F005         	lfsr	2,date_check@current
  1576  001630  EE00  F005         	lfsr	0,?_date_check
  1577  001634  0E0B               	movlw	11
  1578  001636                     u2801:
  1579  001636  CFDB FFEB          	movff	plusw2,plusw0
  1580  00163A  06E8               	decf	wreg,f,c
  1581  00163C  E2FC               	bc	u2801
  1582  00163E  0012               	return		;funcret
  1583  001640                     __end_of_date_check:
  1584                           	callstack 0
  1585                           
  1586 ;; *************** function _sunrise_sunset *****************
  1587 ;; Defined at:
  1588 ;;		line 149 in file "dateandtime.c"
  1589 ;; Parameters:    Size  Location     Type
  1590 ;;  current        12   27[COMRAM] struct .
  1591 ;; Auto vars:     Size  Location     Type
  1592 ;;		None
  1593 ;; Return value:  Size  Location     Type
  1594 ;;                  12   27[COMRAM] struct .
  1595 ;; Registers used:
  1596 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  1597 ;; Tracked objects:
  1598 ;;		On entry : 0/0
  1599 ;;		On exit  : 0/0
  1600 ;;		Unchanged: 0/0
  1601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1602 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1605 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1606 ;;Total ram usage:       12 bytes
  1607 ;; Hardware stack levels used: 1
  1608 ;; Hardware stack levels required when called: 4
  1609 ;; This function calls:
  1610 ;;		_sun_sync
  1611 ;;		_sunrise
  1612 ;; This function is called by:
  1613 ;;		_main
  1614 ;; This function uses a non-reentrant model
  1615 ;;
  1616                           
  1617                           	psect	text4
  1618  00246C                     __ptext4:
  1619                           	callstack 0
  1620  00246C                     _sunrise_sunset:
  1621                           	callstack 26
  1622  00246C                     
  1623                           ;dateandtime.c: 151:     if (sunrise_flag==1) {
  1624  00246C  0455               	decf	_sunrise_flag^0,w,c	;volatile
  1625  00246E  A4D8               	btfss	status,2,c
  1626  002470  EF3C  F012         	goto	u2891
  1627  002474  EF3E  F012         	goto	u2890
  1628  002478                     u2891:
  1629  002478  EF54  F012         	goto	l2755
  1630  00247C                     u2890:
  1631  00247C                     
  1632                           ;dateandtime.c: 152:     current=sunrise(current);
  1633  00247C  EE20  F01C         	lfsr	2,sunrise_sunset@current
  1634  002480  EE00  F005         	lfsr	0,sunrise@current
  1635  002484  0E0B               	movlw	11
  1636  002486                     u2901:
  1637  002486  CFDB FFEB          	movff	plusw2,plusw0
  1638  00248A  06E8               	decf	wreg,f,c
  1639  00248C  E2FC               	bc	u2901
  1640  00248E  ECC3  F014         	call	_sunrise	;wreg free
  1641  002492  EE20  F01C         	lfsr	2,sunrise_sunset@current
  1642  002496  0E0B               	movlw	11
  1643  002498                     u2911:
  1644  002498  CFEB FFDB          	movff	plusw0,plusw2
  1645  00249C  06E8               	decf	wreg,f,c
  1646  00249E  E2FC               	bc	u2911
  1647  0024A0                     
  1648                           ;dateandtime.c: 153:     sunrise_flag=0;
  1649  0024A0  0E00               	movlw	0
  1650  0024A2  6E55               	movwf	_sunrise_flag^0,c	;volatile
  1651                           
  1652                           ;dateandtime.c: 154:     } else if (sunset_flag==1) {
  1653  0024A4  EF70  F012         	goto	l2761
  1654  0024A8                     l2755:
  1655  0024A8  0454               	decf	_sunset_flag^0,w,c	;volatile
  1656  0024AA  A4D8               	btfss	status,2,c
  1657  0024AC  EF5A  F012         	goto	u2921
  1658  0024B0  EF5C  F012         	goto	u2920
  1659  0024B4                     u2921:
  1660  0024B4  EF70  F012         	goto	l2761
  1661  0024B8                     u2920:
  1662  0024B8                     
  1663                           ;dateandtime.c: 155:         current=sun_sync(current);
  1664  0024B8  EE20  F01C         	lfsr	2,sunrise_sunset@current
  1665  0024BC  EE00  F00D         	lfsr	0,sun_sync@current
  1666  0024C0  0E0B               	movlw	11
  1667  0024C2                     u2931:
  1668  0024C2  CFDB FFEB          	movff	plusw2,plusw0
  1669  0024C6  06E8               	decf	wreg,f,c
  1670  0024C8  E2FC               	bc	u2931
  1671  0024CA  EC47  F010         	call	_sun_sync	;wreg free
  1672  0024CE  EE20  F01C         	lfsr	2,sunrise_sunset@current
  1673  0024D2  0E0B               	movlw	11
  1674  0024D4                     u2941:
  1675  0024D4  CFEB FFDB          	movff	plusw0,plusw2
  1676  0024D8  06E8               	decf	wreg,f,c
  1677  0024DA  E2FC               	bc	u2941
  1678  0024DC                     
  1679                           ;dateandtime.c: 156:         sunset_flag=0;
  1680  0024DC  0E00               	movlw	0
  1681  0024DE  6E54               	movwf	_sunset_flag^0,c	;volatile
  1682  0024E0                     l2761:
  1683                           
  1684                           ;dateandtime.c: 159:     return current;
  1685  0024E0  EE20  F01C         	lfsr	2,sunrise_sunset@current
  1686  0024E4  EE00  F01C         	lfsr	0,?_sunrise_sunset
  1687  0024E8  0E0B               	movlw	11
  1688  0024EA                     u2951:
  1689  0024EA  CFDB FFEB          	movff	plusw2,plusw0
  1690  0024EE  06E8               	decf	wreg,f,c
  1691  0024F0  E2FC               	bc	u2951
  1692  0024F2  0012               	return		;funcret
  1693  0024F4                     __end_of_sunrise_sunset:
  1694                           	callstack 0
  1695                           
  1696 ;; *************** function _sun_sync *****************
  1697 ;; Defined at:
  1698 ;;		line 120 in file "dateandtime.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;  current        12   12[COMRAM] struct .
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;  solarnoon_se    1   26[COMRAM] char 
  1703 ;;  solarnoon_mi    1   25[COMRAM] char 
  1704 ;;  solarnoon_ho    1   24[COMRAM] char 
  1705 ;; Return value:  Size  Location     Type
  1706 ;;                  12   12[COMRAM] struct .
  1707 ;; Registers used:
  1708 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1714 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1715 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1717 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1718 ;;Total ram usage:       15 bytes
  1719 ;; Hardware stack levels used: 1
  1720 ;; Hardware stack levels required when called: 3
  1721 ;; This function calls:
  1722 ;;		___awdiv
  1723 ;; This function is called by:
  1724 ;;		_sunrise_sunset
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728                           	psect	text5
  1729  00208E                     __ptext5:
  1730                           	callstack 0
  1731  00208E                     _sun_sync:
  1732                           	callstack 26
  1733  00208E                     
  1734                           ;dateandtime.c: 122:     signed char solarnoon_hour = (current.sunrise_hour + current.ho
      +                          ur)/2;
  1735  00208E  5015               	movf	(sun_sync@current+8)^0,w,c
  1736  002090  2412               	addwf	(sun_sync@current+5)^0,w,c
  1737  002092  6E05               	movwf	___awdiv@dividend^0,c
  1738  002094  6AE8               	clrf	wreg,c
  1739  002096  B0D8               	btfsc	status,0,c
  1740  002098  2AE8               	incf	wreg,f,c
  1741  00209A  BE15               	btfsc	(sun_sync@current+8)^0,7,c
  1742  00209C  06E8               	decf	wreg,f,c
  1743  00209E  BE12               	btfsc	(sun_sync@current+5)^0,7,c
  1744  0020A0  06E8               	decf	wreg,f,c
  1745  0020A2  6E06               	movwf	(___awdiv@dividend+1)^0,c
  1746  0020A4  0E00               	movlw	0
  1747  0020A6  6E08               	movwf	(___awdiv@divisor+1)^0,c
  1748  0020A8  0E02               	movlw	2
  1749  0020AA  6E07               	movwf	___awdiv@divisor^0,c
  1750  0020AC  EC11  F011         	call	___awdiv	;wreg free
  1751  0020B0  5005               	movf	?___awdiv^0,w,c
  1752  0020B2  6E19               	movwf	sun_sync@solarnoon_hour^0,c
  1753                           
  1754                           ;dateandtime.c: 123:     signed char solarnoon_minute = (current.sunrise_minute + curren
      +                          t.minute)/2;
  1755  0020B4  5016               	movf	(sun_sync@current+9)^0,w,c
  1756  0020B6  2413               	addwf	(sun_sync@current+6)^0,w,c
  1757  0020B8  6E05               	movwf	___awdiv@dividend^0,c
  1758  0020BA  6AE8               	clrf	wreg,c
  1759  0020BC  B0D8               	btfsc	status,0,c
  1760  0020BE  2AE8               	incf	wreg,f,c
  1761  0020C0  BE16               	btfsc	(sun_sync@current+9)^0,7,c
  1762  0020C2  06E8               	decf	wreg,f,c
  1763  0020C4  BE13               	btfsc	(sun_sync@current+6)^0,7,c
  1764  0020C6  06E8               	decf	wreg,f,c
  1765  0020C8  6E06               	movwf	(___awdiv@dividend+1)^0,c
  1766  0020CA  0E00               	movlw	0
  1767  0020CC  6E08               	movwf	(___awdiv@divisor+1)^0,c
  1768  0020CE  0E02               	movlw	2
  1769  0020D0  6E07               	movwf	___awdiv@divisor^0,c
  1770  0020D2  EC11  F011         	call	___awdiv	;wreg free
  1771  0020D6  5005               	movf	?___awdiv^0,w,c
  1772  0020D8  6E1A               	movwf	sun_sync@solarnoon_minute^0,c
  1773                           
  1774                           ;dateandtime.c: 124:     signed char solarnoon_second = (current.sunrise_second + curren
      +                          t.second)/2;
  1775  0020DA  5017               	movf	(sun_sync@current+10)^0,w,c
  1776  0020DC  2414               	addwf	(sun_sync@current+7)^0,w,c
  1777  0020DE  6E05               	movwf	___awdiv@dividend^0,c
  1778  0020E0  6AE8               	clrf	wreg,c
  1779  0020E2  B0D8               	btfsc	status,0,c
  1780  0020E4  2AE8               	incf	wreg,f,c
  1781  0020E6  BE17               	btfsc	(sun_sync@current+10)^0,7,c
  1782  0020E8  06E8               	decf	wreg,f,c
  1783  0020EA  BE14               	btfsc	(sun_sync@current+7)^0,7,c
  1784  0020EC  06E8               	decf	wreg,f,c
  1785  0020EE  6E06               	movwf	(___awdiv@dividend+1)^0,c
  1786  0020F0  0E00               	movlw	0
  1787  0020F2  6E08               	movwf	(___awdiv@divisor+1)^0,c
  1788  0020F4  0E02               	movlw	2
  1789  0020F6  6E07               	movwf	___awdiv@divisor^0,c
  1790  0020F8  EC11  F011         	call	___awdiv	;wreg free
  1791  0020FC  5005               	movf	?___awdiv^0,w,c
  1792  0020FE  6E1B               	movwf	sun_sync@solarnoon_second^0,c
  1793  002100                     
  1794                           ;dateandtime.c: 126:     current.second = current.second - (solarnoon_second-0);
  1795  002100  501B               	movf	sun_sync@solarnoon_second^0,w,c
  1796  002102  5C14               	subwf	(sun_sync@current+7)^0,w,c
  1797  002104  6E14               	movwf	(sun_sync@current+7)^0,c
  1798  002106                     
  1799                           ;dateandtime.c: 127:     if (current.second<0) {
  1800  002106  BE14               	btfsc	(sun_sync@current+7)^0,7,c
  1801  002108  EF8A  F010         	goto	u2810
  1802  00210C  EF88  F010         	goto	u2811
  1803  002110                     u2811:
  1804  002110  EF8F  F010         	goto	l307
  1805  002114                     u2810:
  1806  002114                     
  1807                           ;dateandtime.c: 128:         current.second = current.second+60;
  1808  002114  5014               	movf	(sun_sync@current+7)^0,w,c
  1809  002116  0F3C               	addlw	60
  1810  002118  6E14               	movwf	(sun_sync@current+7)^0,c
  1811                           
  1812                           ;dateandtime.c: 129:         current.minute = current.minute-1;
  1813  00211A  0413               	decf	(sun_sync@current+6)^0,w,c
  1814  00211C  6E13               	movwf	(sun_sync@current+6)^0,c
  1815  00211E                     l307:
  1816                           
  1817                           ;dateandtime.c: 131:     current.minute = current.minute - (solarnoon_minute-0);
  1818  00211E  501A               	movf	sun_sync@solarnoon_minute^0,w,c
  1819  002120  5C13               	subwf	(sun_sync@current+6)^0,w,c
  1820  002122  6E13               	movwf	(sun_sync@current+6)^0,c
  1821                           
  1822                           ;dateandtime.c: 132:     if (current.minute<0) {
  1823  002124  BE13               	btfsc	(sun_sync@current+6)^0,7,c
  1824  002126  EF99  F010         	goto	u2820
  1825  00212A  EF97  F010         	goto	u2821
  1826  00212E                     u2821:
  1827  00212E  EF9E  F010         	goto	l308
  1828  002132                     u2820:
  1829  002132                     
  1830                           ;dateandtime.c: 133:         current.minute = current.minute+60;
  1831  002132  5013               	movf	(sun_sync@current+6)^0,w,c
  1832  002134  0F3C               	addlw	60
  1833  002136  6E13               	movwf	(sun_sync@current+6)^0,c
  1834                           
  1835                           ;dateandtime.c: 134:         current.hour = current.hour-1;
  1836  002138  0412               	decf	(sun_sync@current+5)^0,w,c
  1837  00213A  6E12               	movwf	(sun_sync@current+5)^0,c
  1838  00213C                     l308:
  1839                           
  1840                           ;dateandtime.c: 136:     current.hour = current.hour - (solarnoon_hour-12);
  1841  00213C  5019               	movf	sun_sync@solarnoon_hour^0,w,c
  1842  00213E  5C12               	subwf	(sun_sync@current+5)^0,w,c
  1843  002140  0F0C               	addlw	12
  1844  002142  6E12               	movwf	(sun_sync@current+5)^0,c
  1845  002144                     
  1846                           ;dateandtime.c: 142:     return current;
  1847  002144  EE20  F00D         	lfsr	2,sun_sync@current
  1848  002148  EE00  F00D         	lfsr	0,?_sun_sync
  1849  00214C  0E0B               	movlw	11
  1850  00214E                     u2831:
  1851  00214E  CFDB FFEB          	movff	plusw2,plusw0
  1852  002152  06E8               	decf	wreg,f,c
  1853  002154  E2FC               	bc	u2831
  1854  002156  0012               	return		;funcret
  1855  002158                     __end_of_sun_sync:
  1856                           	callstack 0
  1857                           
  1858 ;; *************** function ___awdiv *****************
  1859 ;; Defined at:
  1860 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;  dividend        2    4[COMRAM] int 
  1863 ;;  divisor         2    6[COMRAM] int 
  1864 ;; Auto vars:     Size  Location     Type
  1865 ;;  quotient        2   10[COMRAM] int 
  1866 ;;  sign            1    9[COMRAM] unsigned char 
  1867 ;;  counter         1    8[COMRAM] unsigned char 
  1868 ;; Return value:  Size  Location     Type
  1869 ;;                  2    4[COMRAM] int 
  1870 ;; Registers used:
  1871 ;;		wreg, status,2, status,0
  1872 ;; Tracked objects:
  1873 ;;		On entry : 0/0
  1874 ;;		On exit  : 0/0
  1875 ;;		Unchanged: 0/0
  1876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1877 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1878 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1880 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1881 ;;Total ram usage:        8 bytes
  1882 ;; Hardware stack levels used: 1
  1883 ;; Hardware stack levels required when called: 2
  1884 ;; This function calls:
  1885 ;;		Nothing
  1886 ;; This function is called by:
  1887 ;;		_sun_sync
  1888 ;; This function uses a non-reentrant model
  1889 ;;
  1890                           
  1891                           	psect	text6
  1892  002222                     __ptext6:
  1893                           	callstack 0
  1894  002222                     ___awdiv:
  1895                           	callstack 26
  1896  002222  0E00               	movlw	0
  1897  002224  6E0A               	movwf	___awdiv@sign^0,c
  1898  002226  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  1899  002228  EF1A  F011         	goto	u2370
  1900  00222C  EF18  F011         	goto	u2371
  1901  002230                     u2371:
  1902  002230  EF20  F011         	goto	l2469
  1903  002234                     u2370:
  1904  002234  6C07               	negf	___awdiv@divisor^0,c
  1905  002236  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  1906  002238  B0D8               	btfsc	status,0,c
  1907  00223A  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  1908  00223C  0E01               	movlw	1
  1909  00223E  6E0A               	movwf	___awdiv@sign^0,c
  1910  002240                     l2469:
  1911  002240  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  1912  002242  EF27  F011         	goto	u2380
  1913  002246  EF25  F011         	goto	u2381
  1914  00224A                     u2381:
  1915  00224A  EF2D  F011         	goto	l2475
  1916  00224E                     u2380:
  1917  00224E  6C05               	negf	___awdiv@dividend^0,c
  1918  002250  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  1919  002252  B0D8               	btfsc	status,0,c
  1920  002254  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  1921  002256  0E01               	movlw	1
  1922  002258  1A0A               	xorwf	___awdiv@sign^0,f,c
  1923  00225A                     l2475:
  1924  00225A  0E00               	movlw	0
  1925  00225C  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  1926  00225E  0E00               	movlw	0
  1927  002260  6E0B               	movwf	___awdiv@quotient^0,c
  1928  002262  5007               	movf	___awdiv@divisor^0,w,c
  1929  002264  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  1930  002266  B4D8               	btfsc	status,2,c
  1931  002268  EF38  F011         	goto	u2391
  1932  00226C  EF3A  F011         	goto	u2390
  1933  002270                     u2391:
  1934  002270  EF62  F011         	goto	l2497
  1935  002274                     u2390:
  1936  002274  0E01               	movlw	1
  1937  002276  6E09               	movwf	___awdiv@counter^0,c
  1938  002278  EF42  F011         	goto	l2483
  1939  00227C                     l2481:
  1940  00227C  90D8               	bcf	status,0,c
  1941  00227E  3607               	rlcf	___awdiv@divisor^0,f,c
  1942  002280  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  1943  002282  2A09               	incf	___awdiv@counter^0,f,c
  1944  002284                     l2483:
  1945  002284  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  1946  002286  EF47  F011         	goto	u2401
  1947  00228A  EF49  F011         	goto	u2400
  1948  00228E                     u2401:
  1949  00228E  EF3E  F011         	goto	l2481
  1950  002292                     u2400:
  1951  002292                     l2485:
  1952  002292  90D8               	bcf	status,0,c
  1953  002294  360B               	rlcf	___awdiv@quotient^0,f,c
  1954  002296  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  1955  002298  5007               	movf	___awdiv@divisor^0,w,c
  1956  00229A  5C05               	subwf	___awdiv@dividend^0,w,c
  1957  00229C  5008               	movf	(___awdiv@divisor+1)^0,w,c
  1958  00229E  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  1959  0022A0  A0D8               	btfss	status,0,c
  1960  0022A2  EF55  F011         	goto	u2411
  1961  0022A6  EF57  F011         	goto	u2410
  1962  0022AA                     u2411:
  1963  0022AA  EF5C  F011         	goto	l2493
  1964  0022AE                     u2410:
  1965  0022AE  5007               	movf	___awdiv@divisor^0,w,c
  1966  0022B0  5E05               	subwf	___awdiv@dividend^0,f,c
  1967  0022B2  5008               	movf	(___awdiv@divisor+1)^0,w,c
  1968  0022B4  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  1969  0022B6  800B               	bsf	___awdiv@quotient^0,0,c
  1970  0022B8                     l2493:
  1971  0022B8  90D8               	bcf	status,0,c
  1972  0022BA  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  1973  0022BC  3207               	rrcf	___awdiv@divisor^0,f,c
  1974  0022BE  2E09               	decfsz	___awdiv@counter^0,f,c
  1975  0022C0  EF49  F011         	goto	l2485
  1976  0022C4                     l2497:
  1977  0022C4  500A               	movf	___awdiv@sign^0,w,c
  1978  0022C6  B4D8               	btfsc	status,2,c
  1979  0022C8  EF68  F011         	goto	u2421
  1980  0022CC  EF6A  F011         	goto	u2420
  1981  0022D0                     u2421:
  1982  0022D0  EF6E  F011         	goto	l2501
  1983  0022D4                     u2420:
  1984  0022D4  6C0B               	negf	___awdiv@quotient^0,c
  1985  0022D6  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  1986  0022D8  B0D8               	btfsc	status,0,c
  1987  0022DA  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  1988  0022DC                     l2501:
  1989  0022DC  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  1990  0022E0  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  1991  0022E4  0012               	return		;funcret
  1992  0022E6                     __end_of___awdiv:
  1993                           	callstack 0
  1994                           
  1995 ;; *************** function _Timer0_init *****************
  1996 ;; Defined at:
  1997 ;;		line 9 in file "timers.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;		None
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;		None
  2002 ;; Return value:  Size  Location     Type
  2003 ;;                  1    wreg      void 
  2004 ;; Registers used:
  2005 ;;		wreg, status,2
  2006 ;; Tracked objects:
  2007 ;;		On entry : 0/0
  2008 ;;		On exit  : 0/0
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2015 ;;Total ram usage:        0 bytes
  2016 ;; Hardware stack levels used: 1
  2017 ;; Hardware stack levels required when called: 2
  2018 ;; This function calls:
  2019 ;;		Nothing
  2020 ;; This function is called by:
  2021 ;;		_main
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024                           
  2025                           	psect	text7
  2026  0029A6                     __ptext7:
  2027                           	callstack 0
  2028  0029A6                     _Timer0_init:
  2029                           	callstack 28
  2030  0029A6                     
  2031                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
  2032  0029A6  50D6               	movf	214,w,c	;volatile
  2033  0029A8  0B1F               	andlw	-225
  2034  0029AA  0940               	iorlw	64
  2035  0029AC  6ED6               	movwf	214,c	;volatile
  2036  0029AE                     
  2037                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
  2038  0029AE  88D6               	bsf	214,4,c	;volatile
  2039                           
  2040                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b0000;
  2041  0029B0  0EF0               	movlw	-16
  2042  0029B2  16D6               	andwf	214,f,c	;volatile
  2043  0029B4                     
  2044                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
  2045  0029B4  88D5               	bsf	213,4,c	;volatile
  2046                           
  2047                           ;timers.c: 15:     TMR0H=0b11101110;
  2048  0029B6  0EEE               	movlw	238
  2049  0029B8  6ED4               	movwf	212,c	;volatile
  2050                           
  2051                           ;timers.c: 16:     TMR0L=0b10100011;
  2052  0029BA  0EA3               	movlw	163
  2053  0029BC  6ED3               	movwf	211,c	;volatile
  2054  0029BE                     
  2055                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  2056  0029BE  8ED5               	bsf	213,7,c	;volatile
  2057  0029C0  0012               	return		;funcret
  2058  0029C2                     __end_of_Timer0_init:
  2059                           	callstack 0
  2060                           
  2061 ;; *************** function _LEDarray_init *****************
  2062 ;; Defined at:
  2063 ;;		line 9 in file "LEDarray.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;		None
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;		None
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  1    wreg      void 
  2070 ;; Registers used:
  2071 ;;		None
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2081 ;;Total ram usage:        0 bytes
  2082 ;; Hardware stack levels used: 1
  2083 ;; Hardware stack levels required when called: 2
  2084 ;; This function calls:
  2085 ;;		Nothing
  2086 ;; This function is called by:
  2087 ;;		_main
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           	psect	text8
  2092  002914                     __ptext8:
  2093                           	callstack 0
  2094  002914                     _LEDarray_init:
  2095                           	callstack 28
  2096  002914                     
  2097                           ;LEDarray.c: 11:     LATGbits.LATG0 = 0;
  2098  002914  907F               	bcf	127,0,c	;volatile
  2099                           
  2100                           ;LEDarray.c: 12:     LATGbits.LATG1 = 0;
  2101  002916  927F               	bcf	127,1,c	;volatile
  2102                           
  2103                           ;LEDarray.c: 13:     LATAbits.LATA2 = 0;
  2104  002918  9479               	bcf	121,2,c	;volatile
  2105                           
  2106                           ;LEDarray.c: 14:     LATFbits.LATF6 = 0;
  2107  00291A  9C7E               	bcf	126,6,c	;volatile
  2108                           
  2109                           ;LEDarray.c: 15:     LATAbits.LATA4 = 0;
  2110  00291C  9879               	bcf	121,4,c	;volatile
  2111                           
  2112                           ;LEDarray.c: 16:     LATAbits.LATA5 = 0;
  2113  00291E  9A79               	bcf	121,5,c	;volatile
  2114                           
  2115                           ;LEDarray.c: 17:     LATFbits.LATF0 = 0;
  2116  002920  907E               	bcf	126,0,c	;volatile
  2117                           
  2118                           ;LEDarray.c: 18:     LATBbits.LATB0 = 0;
  2119  002922  907A               	bcf	122,0,c	;volatile
  2120                           
  2121                           ;LEDarray.c: 19:     LATBbits.LATB1 = 0;
  2122  002924  927A               	bcf	122,1,c	;volatile
  2123                           
  2124                           ;LEDarray.c: 22:     TRISGbits.TRISG0 = 0;
  2125  002926  9087               	bcf	135,0,c	;volatile
  2126                           
  2127                           ;LEDarray.c: 23:     TRISGbits.TRISG1 = 0;
  2128  002928  9287               	bcf	135,1,c	;volatile
  2129                           
  2130                           ;LEDarray.c: 24:     TRISAbits.TRISA2 = 0;
  2131  00292A  9481               	bcf	129,2,c	;volatile
  2132                           
  2133                           ;LEDarray.c: 25:     TRISFbits.TRISF6 = 0;
  2134  00292C  9C86               	bcf	134,6,c	;volatile
  2135                           
  2136                           ;LEDarray.c: 26:     TRISAbits.TRISA4 = 0;
  2137  00292E  9881               	bcf	129,4,c	;volatile
  2138                           
  2139                           ;LEDarray.c: 27:     TRISAbits.TRISA5 = 0;
  2140  002930  9A81               	bcf	129,5,c	;volatile
  2141                           
  2142                           ;LEDarray.c: 28:     TRISFbits.TRISF0 = 0;
  2143  002932  9086               	bcf	134,0,c	;volatile
  2144                           
  2145                           ;LEDarray.c: 29:     TRISBbits.TRISB0 = 0;
  2146  002934  9082               	bcf	130,0,c	;volatile
  2147                           
  2148                           ;LEDarray.c: 30:     TRISBbits.TRISB1 = 0;
  2149  002936  9282               	bcf	130,1,c	;volatile
  2150  002938  0012               	return		;funcret
  2151  00293A                     __end_of_LEDarray_init:
  2152                           	callstack 0
  2153                           
  2154 ;; *************** function _LEDarray_disp_bin *****************
  2155 ;; Defined at:
  2156 ;;		line 37 in file "LEDarray.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;  number          1    wreg     char 
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;  number          1    6[COMRAM] char 
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  1    wreg      void 
  2163 ;; Registers used:
  2164 ;;		wreg, status,2
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2171 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2172 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2173 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2174 ;;Total ram usage:        3 bytes
  2175 ;; Hardware stack levels used: 1
  2176 ;; Hardware stack levels required when called: 2
  2177 ;; This function calls:
  2178 ;;		Nothing
  2179 ;; This function is called by:
  2180 ;;		_main
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184                           	psect	text9
  2185  001C6C                     __ptext9:
  2186                           	callstack 0
  2187  001C6C                     _LEDarray_disp_bin:
  2188                           	callstack 28
  2189                           
  2190                           ;incstack = 0
  2191                           ;LEDarray_disp_bin@number stored from wreg
  2192  001C6C  6E07               	movwf	LEDarray_disp_bin@number^0,c
  2193  001C6E                     
  2194                           ;LEDarray.c: 40:     if (number & 0b000000001) {LATGbits.LATG0 = 1;} else {LATGbits.LATG
      +                          0 = 0;}
  2195  001C6E  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  2196  001C72  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  2197  001C74  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  2198  001C76  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  2199  001C78  A005               	btfss	??_LEDarray_disp_bin^0,0,c
  2200  001C7A  EF41  F00E         	goto	u3181
  2201  001C7E  EF43  F00E         	goto	u3180
  2202  001C82                     u3181:
  2203  001C82  EF46  F00E         	goto	l75
  2204  001C86                     u3180:
  2205  001C86  807F               	bsf	127,0,c	;volatile
  2206  001C88  EF47  F00E         	goto	l2845
  2207  001C8C                     l75:
  2208  001C8C  907F               	bcf	127,0,c	;volatile
  2209  001C8E                     l2845:
  2210                           
  2211                           ;LEDarray.c: 41:     if (number & 0b000000010) {LATGbits.LATG1 = 1;} else {LATGbits.LATG
      +                          1 = 0;}
  2212  001C8E  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  2213  001C92  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  2214  001C94  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  2215  001C96  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  2216  001C98  A205               	btfss	??_LEDarray_disp_bin^0,1,c
  2217  001C9A  EF51  F00E         	goto	u3191
  2218  001C9E  EF53  F00E         	goto	u3190
  2219  001CA2                     u3191:
  2220  001CA2  EF56  F00E         	goto	l77
  2221  001CA6                     u3190:
  2222  001CA6  827F               	bsf	127,1,c	;volatile
  2223  001CA8  EF57  F00E         	goto	l2849
  2224  001CAC                     l77:
  2225  001CAC  927F               	bcf	127,1,c	;volatile
  2226  001CAE                     l2849:
  2227                           
  2228                           ;LEDarray.c: 42:     if (number & 0b000000100) {LATAbits.LATA2 = 1;} else {LATAbits.LATA
      +                          2 = 0;}
  2229  001CAE  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  2230  001CB2  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  2231  001CB4  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  2232  001CB6  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  2233  001CB8  A405               	btfss	??_LEDarray_disp_bin^0,2,c
  2234  001CBA  EF61  F00E         	goto	u3201
  2235  001CBE  EF63  F00E         	goto	u3200
  2236  001CC2                     u3201:
  2237  001CC2  EF66  F00E         	goto	l79
  2238  001CC6                     u3200:
  2239  001CC6  8479               	bsf	121,2,c	;volatile
  2240  001CC8  EF67  F00E         	goto	l2853
  2241  001CCC                     l79:
  2242  001CCC  9479               	bcf	121,2,c	;volatile
  2243  001CCE                     l2853:
  2244                           
  2245                           ;LEDarray.c: 43:     if (number & 0b000001000) {LATFbits.LATF6 = 1;} else {LATFbits.LATF
      +                          6 = 0;}
  2246  001CCE  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  2247  001CD2  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  2248  001CD4  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  2249  001CD6  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  2250  001CD8  A605               	btfss	??_LEDarray_disp_bin^0,3,c
  2251  001CDA  EF71  F00E         	goto	u3211
  2252  001CDE  EF73  F00E         	goto	u3210
  2253  001CE2                     u3211:
  2254  001CE2  EF76  F00E         	goto	l81
  2255  001CE6                     u3210:
  2256  001CE6  8C7E               	bsf	126,6,c	;volatile
  2257  001CE8  EF77  F00E         	goto	l2857
  2258  001CEC                     l81:
  2259  001CEC  9C7E               	bcf	126,6,c	;volatile
  2260  001CEE                     l2857:
  2261                           
  2262                           ;LEDarray.c: 44:     if (number & 0b000010000) {LATAbits.LATA4 = 1;} else {LATAbits.LATA
      +                          4 = 0;}
  2263  001CEE  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  2264  001CF2  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  2265  001CF4  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  2266  001CF6  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  2267  001CF8  A805               	btfss	??_LEDarray_disp_bin^0,4,c
  2268  001CFA  EF81  F00E         	goto	u3221
  2269  001CFE  EF83  F00E         	goto	u3220
  2270  001D02                     u3221:
  2271  001D02  EF86  F00E         	goto	l83
  2272  001D06                     u3220:
  2273  001D06  8879               	bsf	121,4,c	;volatile
  2274  001D08  EF87  F00E         	goto	l2861
  2275  001D0C                     l83:
  2276  001D0C  9879               	bcf	121,4,c	;volatile
  2277  001D0E                     l2861:
  2278                           
  2279                           ;LEDarray.c: 45:     if (number & 0b000100000) {LATAbits.LATA5 = 1;} else {LATAbits.LATA
      +                          5 = 0;}
  2280  001D0E  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  2281  001D12  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  2282  001D14  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  2283  001D16  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  2284  001D18  AA05               	btfss	??_LEDarray_disp_bin^0,5,c
  2285  001D1A  EF91  F00E         	goto	u3231
  2286  001D1E  EF93  F00E         	goto	u3230
  2287  001D22                     u3231:
  2288  001D22  EF96  F00E         	goto	l85
  2289  001D26                     u3230:
  2290  001D26  8A79               	bsf	121,5,c	;volatile
  2291  001D28  EF97  F00E         	goto	l2865
  2292  001D2C                     l85:
  2293  001D2C  9A79               	bcf	121,5,c	;volatile
  2294  001D2E                     l2865:
  2295                           
  2296                           ;LEDarray.c: 46:     if (number & 0b001000000) {LATFbits.LATF0 = 1;} else {LATFbits.LATF
      +                          0 = 0;}
  2297  001D2E  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  2298  001D32  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  2299  001D34  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  2300  001D36  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  2301  001D38  AC05               	btfss	??_LEDarray_disp_bin^0,6,c
  2302  001D3A  EFA1  F00E         	goto	u3241
  2303  001D3E  EFA3  F00E         	goto	u3240
  2304  001D42                     u3241:
  2305  001D42  EFA6  F00E         	goto	l87
  2306  001D46                     u3240:
  2307  001D46  807E               	bsf	126,0,c	;volatile
  2308  001D48  EFA7  F00E         	goto	l2869
  2309  001D4C                     l87:
  2310  001D4C  907E               	bcf	126,0,c	;volatile
  2311  001D4E                     l2869:
  2312                           
  2313                           ;LEDarray.c: 47:     if (number & 0b010000000) {LATBbits.LATB0 = 1;} else {LATBbits.LATB
      +                          0 = 0;}
  2314  001D4E  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  2315  001D52  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  2316  001D54  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  2317  001D56  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  2318  001D58  AE05               	btfss	??_LEDarray_disp_bin^0,7,c
  2319  001D5A  EFB1  F00E         	goto	u3251
  2320  001D5E  EFB3  F00E         	goto	u3250
  2321  001D62                     u3251:
  2322  001D62  EFB6  F00E         	goto	l89
  2323  001D66                     u3250:
  2324  001D66  807A               	bsf	122,0,c	;volatile
  2325  001D68  EFB7  F00E         	goto	l2873
  2326  001D6C                     l89:
  2327  001D6C  907A               	bcf	122,0,c	;volatile
  2328  001D6E                     l2873:
  2329                           
  2330                           ;LEDarray.c: 48:     if (number & 0b100000000) {LATBbits.LATB1 = 1;} else {LATBbits.LATB
      +                          1 = 0;}
  2331  001D6E  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  2332  001D72  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  2333  001D74  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  2334  001D76  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  2335  001D78  A006               	btfss	(??_LEDarray_disp_bin+1)^0,0,c
  2336  001D7A  EFC1  F00E         	goto	u3261
  2337  001D7E  EFC3  F00E         	goto	u3260
  2338  001D82                     u3261:
  2339  001D82  EFC6  F00E         	goto	l91
  2340  001D86                     u3260:
  2341  001D86  827A               	bsf	122,1,c	;volatile
  2342  001D88  EFC7  F00E         	goto	l93
  2343  001D8C                     l91:
  2344  001D8C  927A               	bcf	122,1,c	;volatile
  2345  001D8E                     l93:
  2346  001D8E  0012               	return		;funcret
  2347  001D90                     __end_of_LEDarray_disp_bin:
  2348                           	callstack 0
  2349                           
  2350 ;; *************** function _LED_toggle *****************
  2351 ;; Defined at:
  2352 ;;		line 40 in file "LED.c"
  2353 ;; Parameters:    Size  Location     Type
  2354 ;;  current        12   16[COMRAM] struct .
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;		None
  2357 ;; Return value:  Size  Location     Type
  2358 ;;                  12   16[COMRAM] struct .
  2359 ;; Registers used:
  2360 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  2361 ;; Tracked objects:
  2362 ;;		On entry : 0/0
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2366 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2368 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2369 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2370 ;;Total ram usage:       13 bytes
  2371 ;; Hardware stack levels used: 1
  2372 ;; Hardware stack levels required when called: 3
  2373 ;; This function calls:
  2374 ;;		_ADC_getval
  2375 ;;		_sunrise
  2376 ;; This function is called by:
  2377 ;;		_main
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           	psect	text10
  2382  0022E6                     __ptext10:
  2383                           	callstack 0
  2384  0022E6                     _LED_toggle:
  2385                           	callstack 27
  2386  0022E6                     
  2387                           ;LED.c: 41:     if (current.hour==1 && current.minute==0 && current.second==0) {
  2388  0022E6  0416               	decf	(LED_toggle@current+5)^0,w,c
  2389  0022E8  A4D8               	btfss	status,2,c
  2390  0022EA  EF79  F011         	goto	u3081
  2391  0022EE  EF7B  F011         	goto	u3080
  2392  0022F2                     u3081:
  2393  0022F2  EF90  F011         	goto	l2823
  2394  0022F6                     u3080:
  2395  0022F6  5017               	movf	(LED_toggle@current+6)^0,w,c
  2396  0022F8  A4D8               	btfss	status,2,c
  2397  0022FA  EF81  F011         	goto	u3091
  2398  0022FE  EF83  F011         	goto	u3090
  2399  002302                     u3091:
  2400  002302  EF90  F011         	goto	l2823
  2401  002306                     u3090:
  2402  002306  5018               	movf	(LED_toggle@current+7)^0,w,c
  2403  002308  A4D8               	btfss	status,2,c
  2404  00230A  EF89  F011         	goto	u3101
  2405  00230E  EF8B  F011         	goto	u3100
  2406  002312                     u3101:
  2407  002312  EF90  F011         	goto	l2823
  2408  002316                     u3100:
  2409  002316                     
  2410                           ;LED.c: 42:         PIE2bits.C1IE = 0;
  2411  002316  010E               	movlb	14	; () banked
  2412  002318  912B               	bcf	43,0,b	;volatile
  2413                           
  2414                           ;LED.c: 43:         LATDbits.LATD7 = 0;
  2415  00231A  9E7C               	bcf	124,7,c	;volatile
  2416                           
  2417                           ;LED.c: 44:     } else if (current.hour==5 && current.minute==0 && current.second==0) {
  2418  00231C  EFCB  F011         	goto	l2837
  2419  002320                     l2823:
  2420  002320  0E05               	movlw	5
  2421  002322  1816               	xorwf	(LED_toggle@current+5)^0,w,c
  2422  002324  A4D8               	btfss	status,2,c
  2423  002326  EF97  F011         	goto	u3111
  2424  00232A  EF99  F011         	goto	u3110
  2425  00232E                     u3111:
  2426  00232E  EFCB  F011         	goto	l2837
  2427  002332                     u3110:
  2428  002332  5017               	movf	(LED_toggle@current+6)^0,w,c
  2429  002334  A4D8               	btfss	status,2,c
  2430  002336  EF9F  F011         	goto	u3121
  2431  00233A  EFA1  F011         	goto	u3120
  2432  00233E                     u3121:
  2433  00233E  EFCB  F011         	goto	l2837
  2434  002342                     u3120:
  2435  002342  5018               	movf	(LED_toggle@current+7)^0,w,c
  2436  002344  A4D8               	btfss	status,2,c
  2437  002346  EFA7  F011         	goto	u3131
  2438  00234A  EFA9  F011         	goto	u3130
  2439  00234E                     u3131:
  2440  00234E  EFCB  F011         	goto	l2837
  2441  002352                     u3130:
  2442  002352                     
  2443                           ;LED.c: 45:         PIE2bits.C1IE = 1;
  2444  002352  010E               	movlb	14	; () banked
  2445  002354  812B               	bsf	43,0,b	;volatile
  2446  002356                     
  2447                           ; BSR set to: 14
  2448                           ;LED.c: 46:         if (ADC_getval()>=0b11011110) {LATDbits.LATD7 = 1;}
  2449  002356  ECEE  F014         	call	_ADC_getval	;wreg free
  2450  00235A  6E1D               	movwf	??_LED_toggle^0,c
  2451  00235C  0EDD               	movlw	221
  2452  00235E  641D               	cpfsgt	??_LED_toggle^0,c
  2453  002360  EFB4  F011         	goto	u3141
  2454  002364  EFB6  F011         	goto	u3140
  2455  002368                     u3141:
  2456  002368  EFB9  F011         	goto	l2835
  2457  00236C                     u3140:
  2458  00236C  8E7C               	bsf	124,7,c	;volatile
  2459  00236E  EFCB  F011         	goto	l2837
  2460  002372                     l2835:
  2461  002372  EE20  F011         	lfsr	2,LED_toggle@current
  2462  002376  EE00  F005         	lfsr	0,sunrise@current
  2463  00237A  0E0B               	movlw	11
  2464  00237C                     u3151:
  2465  00237C  CFDB FFEB          	movff	plusw2,plusw0
  2466  002380  06E8               	decf	wreg,f,c
  2467  002382  E2FC               	bc	u3151
  2468  002384  ECC3  F014         	call	_sunrise	;wreg free
  2469  002388  EE20  F011         	lfsr	2,LED_toggle@current
  2470  00238C  0E0B               	movlw	11
  2471  00238E                     u3161:
  2472  00238E  CFEB FFDB          	movff	plusw0,plusw2
  2473  002392  06E8               	decf	wreg,f,c
  2474  002394  E2FC               	bc	u3161
  2475  002396                     l2837:
  2476                           
  2477                           ;LED.c: 50:     return current;
  2478  002396  EE20  F011         	lfsr	2,LED_toggle@current
  2479  00239A  EE00  F011         	lfsr	0,?_LED_toggle
  2480  00239E  0E0B               	movlw	11
  2481  0023A0                     u3171:
  2482  0023A0  CFDB FFEB          	movff	plusw2,plusw0
  2483  0023A4  06E8               	decf	wreg,f,c
  2484  0023A6  E2FC               	bc	u3171
  2485  0023A8  0012               	return		;funcret
  2486  0023AA                     __end_of_LED_toggle:
  2487                           	callstack 0
  2488                           
  2489 ;; *************** function _sunrise *****************
  2490 ;; Defined at:
  2491 ;;		line 104 in file "dateandtime.c"
  2492 ;; Parameters:    Size  Location     Type
  2493 ;;  current        12    4[COMRAM] struct .
  2494 ;; Auto vars:     Size  Location     Type
  2495 ;;		None
  2496 ;; Return value:  Size  Location     Type
  2497 ;;                  12    4[COMRAM] struct .
  2498 ;; Registers used:
  2499 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  2500 ;; Tracked objects:
  2501 ;;		On entry : 0/0
  2502 ;;		On exit  : 0/0
  2503 ;;		Unchanged: 0/0
  2504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2505 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2508 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2509 ;;Total ram usage:       12 bytes
  2510 ;; Hardware stack levels used: 1
  2511 ;; Hardware stack levels required when called: 2
  2512 ;; This function calls:
  2513 ;;		Nothing
  2514 ;; This function is called by:
  2515 ;;		_LED_toggle
  2516 ;;		_sunrise_sunset
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520                           	psect	text11
  2521  002986                     __ptext11:
  2522                           	callstack 0
  2523  002986                     _sunrise:
  2524                           	callstack 27
  2525  002986                     
  2526                           ;dateandtime.c: 106:     current.sunrise_hour = current.hour;
  2527  002986  C00A  F00D         	movff	sunrise@current+5,sunrise@current+8
  2528                           
  2529                           ;dateandtime.c: 107:     current.sunrise_minute = current.minute;
  2530  00298A  C00B  F00E         	movff	sunrise@current+6,sunrise@current+9
  2531                           
  2532                           ;dateandtime.c: 108:     current.sunrise_second = current.second;
  2533  00298E  C00C  F00F         	movff	sunrise@current+7,sunrise@current+10
  2534  002992                     
  2535                           ;dateandtime.c: 110:     return current;
  2536  002992  EE20  F005         	lfsr	2,sunrise@current
  2537  002996  EE00  F005         	lfsr	0,?_sunrise
  2538  00299A  0E0B               	movlw	11
  2539  00299C                     u2481:
  2540  00299C  CFDB FFEB          	movff	plusw2,plusw0
  2541  0029A0  06E8               	decf	wreg,f,c
  2542  0029A2  E2FC               	bc	u2481
  2543  0029A4  0012               	return		;funcret
  2544  0029A6                     __end_of_sunrise:
  2545                           	callstack 0
  2546                           
  2547 ;; *************** function _LED2_init *****************
  2548 ;; Defined at:
  2549 ;;		line 29 in file "LED.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;		None
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;		None
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  1    wreg      void 
  2556 ;; Registers used:
  2557 ;;		None
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2567 ;;Total ram usage:        0 bytes
  2568 ;; Hardware stack levels used: 1
  2569 ;; Hardware stack levels required when called: 2
  2570 ;; This function calls:
  2571 ;;		Nothing
  2572 ;; This function is called by:
  2573 ;;		_main
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577                           	psect	text12
  2578  002A16                     __ptext12:
  2579                           	callstack 0
  2580  002A16                     _LED2_init:
  2581                           	callstack 28
  2582  002A16                     
  2583                           ;LED.c: 30:     LATHbits.LATH3 = 1;
  2584  002A16  8680               	bsf	128,3,c	;volatile
  2585                           
  2586                           ;LED.c: 31:     TRISHbits.TRISH3 = 0;
  2587  002A18  9688               	bcf	136,3,c	;volatile
  2588  002A1A  0012               	return		;funcret
  2589  002A1C                     __end_of_LED2_init:
  2590                           	callstack 0
  2591                           
  2592 ;; *************** function _LED1_init *****************
  2593 ;; Defined at:
  2594 ;;		line 10 in file "LED.c"
  2595 ;; Parameters:    Size  Location     Type
  2596 ;;  current        12    5[COMRAM] struct .
  2597 ;; Auto vars:     Size  Location     Type
  2598 ;;		None
  2599 ;; Return value:  Size  Location     Type
  2600 ;;                  1    wreg      void 
  2601 ;; Registers used:
  2602 ;;		wreg, status,2, status,0, cstack
  2603 ;; Tracked objects:
  2604 ;;		On entry : 0/0
  2605 ;;		On exit  : 0/0
  2606 ;;		Unchanged: 0/0
  2607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2608 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2610 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2611 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2612 ;;Total ram usage:       13 bytes
  2613 ;; Hardware stack levels used: 1
  2614 ;; Hardware stack levels required when called: 3
  2615 ;; This function calls:
  2616 ;;		_ADC_getval
  2617 ;; This function is called by:
  2618 ;;		_main
  2619 ;; This function uses a non-reentrant model
  2620 ;;
  2621                           
  2622                           	psect	text13
  2623  0026BA                     __ptext13:
  2624                           	callstack 0
  2625  0026BA                     _LED1_init:
  2626                           	callstack 27
  2627  0026BA                     
  2628                           ;LED.c: 18:     if ((current.hour<1||current.hour>=5) && (ADC_getval()>=0b11011110)) {
  2629  0026BA  500B               	movf	(LED1_init@current+5)^0,w,c
  2630  0026BC  0A80               	xorlw	128
  2631  0026BE  0F7F               	addlw	-129
  2632  0026C0  A0D8               	btfss	status,0,c
  2633  0026C2  EF65  F013         	goto	u2861
  2634  0026C6  EF67  F013         	goto	u2860
  2635  0026CA                     u2861:
  2636  0026CA  EF71  F013         	goto	l2703
  2637  0026CE                     u2860:
  2638  0026CE  500B               	movf	(LED1_init@current+5)^0,w,c
  2639  0026D0  0A80               	xorlw	128
  2640  0026D2  0F7B               	addlw	-133
  2641  0026D4  A0D8               	btfss	status,0,c
  2642  0026D6  EF6F  F013         	goto	u2871
  2643  0026DA  EF71  F013         	goto	u2870
  2644  0026DE                     u2871:
  2645  0026DE  EF7F  F013         	goto	l241
  2646  0026E2                     u2870:
  2647  0026E2                     l2703:
  2648  0026E2  ECEE  F014         	call	_ADC_getval	;wreg free
  2649  0026E6  6E12               	movwf	??_LED1_init^0,c
  2650  0026E8  0EDD               	movlw	221
  2651  0026EA  6412               	cpfsgt	??_LED1_init^0,c
  2652  0026EC  EF7A  F013         	goto	u2881
  2653  0026F0  EF7C  F013         	goto	u2880
  2654  0026F4                     u2881:
  2655  0026F4  EF7F  F013         	goto	l241
  2656  0026F8                     u2880:
  2657  0026F8                     
  2658                           ;LED.c: 19:         LATDbits.LATD7 = 1;
  2659  0026F8  8E7C               	bsf	124,7,c	;volatile
  2660                           
  2661                           ;LED.c: 20:     } else {LATDbits.LATD7 = 0;}
  2662  0026FA  EF80  F013         	goto	l244
  2663  0026FE                     l241:
  2664  0026FE  9E7C               	bcf	124,7,c	;volatile
  2665  002700                     l244:
  2666                           
  2667                           ;LED.c: 22:     TRISDbits.TRISD7 = 0;
  2668  002700  9E84               	bcf	132,7,c	;volatile
  2669  002702  0012               	return		;funcret
  2670  002704                     __end_of_LED1_init:
  2671                           	callstack 0
  2672                           
  2673 ;; *************** function _ADC_getval *****************
  2674 ;; Defined at:
  2675 ;;		line 26 in file "ADC.c"
  2676 ;; Parameters:    Size  Location     Type
  2677 ;;		None
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;  tmpval          1    4[COMRAM] unsigned char 
  2680 ;; Return value:  Size  Location     Type
  2681 ;;                  1    wreg      unsigned char 
  2682 ;; Registers used:
  2683 ;;		wreg, status,2
  2684 ;; Tracked objects:
  2685 ;;		On entry : 0/0
  2686 ;;		On exit  : 0/0
  2687 ;;		Unchanged: 0/0
  2688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2690 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2692 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2693 ;;Total ram usage:        1 bytes
  2694 ;; Hardware stack levels used: 1
  2695 ;; Hardware stack levels required when called: 2
  2696 ;; This function calls:
  2697 ;;		Nothing
  2698 ;; This function is called by:
  2699 ;;		_LED1_init
  2700 ;;		_LED_toggle
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704                           	psect	text14
  2705  0029DC                     __ptext14:
  2706                           	callstack 0
  2707  0029DC                     _ADC_getval:
  2708                           	callstack 27
  2709  0029DC                     
  2710                           ;ADC.c: 27:     unsigned char tmpval;;ADC.c: 29:     ADCON0bits.GO = 1;
  2711  0029DC  8060               	bsf	96,0,c	;volatile
  2712  0029DE                     l50:
  2713  0029DE  B060               	btfsc	96,0,c	;volatile
  2714  0029E0  EFF4  F014         	goto	u2441
  2715  0029E4  EFF6  F014         	goto	u2440
  2716  0029E8                     u2441:
  2717  0029E8  EFEF  F014         	goto	l50
  2718  0029EC                     u2440:
  2719  0029EC                     
  2720                           ;ADC.c: 31:     tmpval = ADRESH;
  2721  0029EC  CF64 F005          	movff	3940,ADC_getval@tmpval	;volatile
  2722  0029F0                     
  2723                           ;ADC.c: 34:     return tmpval;
  2724  0029F0  5005               	movf	ADC_getval@tmpval^0,w,c
  2725  0029F2  0012               	return		;funcret
  2726  0029F4                     __end_of_ADC_getval:
  2727                           	callstack 0
  2728                           
  2729 ;; *************** function _LCD_init *****************
  2730 ;; Defined at:
  2731 ;;		line 56 in file "LCD.c"
  2732 ;; Parameters:    Size  Location     Type
  2733 ;;  current        12   36[BANK0 ] struct .
  2734 ;; Auto vars:     Size  Location     Type
  2735 ;;  buf            40   48[BANK0 ] unsigned char [40]
  2736 ;; Return value:  Size  Location     Type
  2737 ;;                  1    wreg      void 
  2738 ;; Registers used:
  2739 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2740 ;; Tracked objects:
  2741 ;;		On entry : 0/0
  2742 ;;		On exit  : 0/0
  2743 ;;		Unchanged: 0/0
  2744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2745 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2746 ;;      Locals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2747 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2748 ;;      Totals:         2      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2749 ;;Total ram usage:       54 bytes
  2750 ;; Hardware stack levels used: 1
  2751 ;; Hardware stack levels required when called: 10
  2752 ;; This function calls:
  2753 ;;		_LCD_sendbyte
  2754 ;;		_LCD_sendnibble
  2755 ;;		_LCD_sendstring
  2756 ;;		_LCD_setline
  2757 ;;		_sprintf
  2758 ;; This function is called by:
  2759 ;;		_main
  2760 ;; This function uses a non-reentrant model
  2761 ;;
  2762                           
  2763                           	psect	text15
  2764  001FA2                     __ptext15:
  2765                           	callstack 0
  2766  001FA2                     _LCD_init:
  2767                           	callstack 20
  2768  001FA2                     
  2769                           ;LCD.c: 58:     TRISCbits.TRISC6 =0;
  2770  001FA2  9C83               	bcf	131,6,c	;volatile
  2771                           
  2772                           ;LCD.c: 59:     TRISCbits.TRISC2=0;
  2773  001FA4  9483               	bcf	131,2,c	;volatile
  2774                           
  2775                           ;LCD.c: 60:     TRISBbits.TRISB3=0;
  2776  001FA6  9682               	bcf	130,3,c	;volatile
  2777                           
  2778                           ;LCD.c: 61:     TRISBbits.TRISB2=0;
  2779  001FA8  9482               	bcf	130,2,c	;volatile
  2780                           
  2781                           ;LCD.c: 62:     TRISEbits.TRISE3=0;
  2782  001FAA  9685               	bcf	133,3,c	;volatile
  2783                           
  2784                           ;LCD.c: 63:     TRISEbits.TRISE1=0;
  2785  001FAC  9285               	bcf	133,1,c	;volatile
  2786                           
  2787                           ;LCD.c: 66:     LATCbits.LATC6 = 0;
  2788  001FAE  9C7B               	bcf	123,6,c	;volatile
  2789                           
  2790                           ;LCD.c: 67:     LATCbits.LATC2 = 0;
  2791  001FB0  947B               	bcf	123,2,c	;volatile
  2792                           
  2793                           ;LCD.c: 68:     LATBbits.LATB3 = 0;
  2794  001FB2  967A               	bcf	122,3,c	;volatile
  2795                           
  2796                           ;LCD.c: 69:     LATBbits.LATB2 = 0;
  2797  001FB4  947A               	bcf	122,2,c	;volatile
  2798                           
  2799                           ;LCD.c: 70:     LATEbits.LATE3 = 0;
  2800  001FB6  967D               	bcf	125,3,c	;volatile
  2801                           
  2802                           ;LCD.c: 71:     LATEbits.LATE1 = 0;
  2803  001FB8  927D               	bcf	125,1,c	;volatile
  2804  001FBA                     
  2805                           ;LCD.c: 77:     _delay((unsigned long)((45)*(64000000/4000.0)));
  2806  001FBA  0E04               	movlw	4
  2807  001FBC  6E51               	movwf	(??_LCD_init+1)^0,c
  2808  001FBE  0EA8               	movlw	168
  2809  001FC0  6E50               	movwf	??_LCD_init^0,c
  2810  001FC2  0E0C               	movlw	12
  2811  001FC4                     u4207:
  2812  001FC4  2EE8               	decfsz	wreg,f,c
  2813  001FC6  D7FE               	bra	u4207
  2814  001FC8  2E50               	decfsz	??_LCD_init^0,f,c
  2815  001FCA  D7FC               	bra	u4207
  2816  001FCC  2E51               	decfsz	(??_LCD_init+1)^0,f,c
  2817  001FCE  D7FA               	bra	u4207
  2818  001FD0                     
  2819                           ;LCD.c: 78:     LCD_sendnibble(0b0010);
  2820  001FD0  0E02               	movlw	2
  2821  001FD2  EC7A  F012         	call	_LCD_sendnibble
  2822  001FD6                     
  2823                           ;LCD.c: 79:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  2824  001FD6  0EF0               	movlw	240
  2825  001FD8                     u4217:
  2826  001FD8  2EE8               	decfsz	wreg,f,c
  2827  001FDA  D7FE               	bra	u4217
  2828  001FDC                     
  2829                           ;LCD.c: 80:     LCD_sendbyte(0b00101000,0);
  2830  001FDC  0E00               	movlw	0
  2831  001FDE  6E06               	movwf	LCD_sendbyte@type^0,c
  2832  001FE0  0E28               	movlw	40
  2833  001FE2  EC5B  F014         	call	_LCD_sendbyte
  2834  001FE6                     
  2835                           ;LCD.c: 81:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  2836  001FE6  0EF0               	movlw	240
  2837  001FE8                     u4227:
  2838  001FE8  2EE8               	decfsz	wreg,f,c
  2839  001FEA  D7FE               	bra	u4227
  2840  001FEC                     
  2841                           ;LCD.c: 82:     LCD_sendbyte(0b00101000,0);
  2842  001FEC  0E00               	movlw	0
  2843  001FEE  6E06               	movwf	LCD_sendbyte@type^0,c
  2844  001FF0  0E28               	movlw	40
  2845  001FF2  EC5B  F014         	call	_LCD_sendbyte
  2846  001FF6                     
  2847                           ;LCD.c: 83:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  2848  001FF6  0EF0               	movlw	240
  2849  001FF8                     u4237:
  2850  001FF8  2EE8               	decfsz	wreg,f,c
  2851  001FFA  D7FE               	bra	u4237
  2852  001FFC                     
  2853                           ;LCD.c: 86:     LCD_sendbyte(0b00001000,0);
  2854  001FFC  0E00               	movlw	0
  2855  001FFE  6E06               	movwf	LCD_sendbyte@type^0,c
  2856  002000  0E08               	movlw	8
  2857  002002  EC5B  F014         	call	_LCD_sendbyte
  2858  002006                     
  2859                           ;LCD.c: 87:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  2860  002006  0EF0               	movlw	240
  2861  002008                     u4247:
  2862  002008  2EE8               	decfsz	wreg,f,c
  2863  00200A  D7FE               	bra	u4247
  2864  00200C                     
  2865                           ;LCD.c: 88:     LCD_sendbyte(0b00000001,0);
  2866  00200C  0E00               	movlw	0
  2867  00200E  6E06               	movwf	LCD_sendbyte@type^0,c
  2868  002010  0E01               	movlw	1
  2869  002012  EC5B  F014         	call	_LCD_sendbyte
  2870  002016                     
  2871                           ;LCD.c: 89:     _delay((unsigned long)((2)*(64000000/4000.0)));
  2872  002016  0E2A               	movlw	42
  2873  002018  6E50               	movwf	??_LCD_init^0,c
  2874  00201A  0E8E               	movlw	142
  2875  00201C                     u4257:
  2876  00201C  2EE8               	decfsz	wreg,f,c
  2877  00201E  D7FE               	bra	u4257
  2878  002020  2E50               	decfsz	??_LCD_init^0,f,c
  2879  002022  D7FC               	bra	u4257
  2880  002024                     
  2881                           ;LCD.c: 90:     LCD_sendbyte(0b00000110,0);
  2882  002024  0E00               	movlw	0
  2883  002026  6E06               	movwf	LCD_sendbyte@type^0,c
  2884  002028  0E06               	movlw	6
  2885  00202A  EC5B  F014         	call	_LCD_sendbyte
  2886  00202E                     
  2887                           ;LCD.c: 91:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  2888  00202E  0EA0               	movlw	160
  2889  002030                     u4267:
  2890  002030  D000               	nop2	
  2891  002032  2EE8               	decfsz	wreg,f,c
  2892  002034  D7FD               	bra	u4267
  2893  002036                     
  2894                           ;LCD.c: 94:     LCD_sendbyte(0b00001100,0);
  2895  002036  0E00               	movlw	0
  2896  002038  6E06               	movwf	LCD_sendbyte@type^0,c
  2897  00203A  0E0C               	movlw	12
  2898  00203C  EC5B  F014         	call	_LCD_sendbyte
  2899  002040                     
  2900                           ;LCD.c: 95:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  2901  002040  0EA0               	movlw	160
  2902  002042                     u4277:
  2903  002042  D000               	nop2	
  2904  002044  2EE8               	decfsz	wreg,f,c
  2905  002046  D7FD               	bra	u4277
  2906  002048                     
  2907                           ;LCD.c: 98:     char buf[40];;LCD.c: 99:     LCD_setline(1);
  2908  002048  0E01               	movlw	1
  2909  00204A  EC82  F013         	call	_LCD_setline
  2910  00204E                     
  2911                           ;LCD.c: 100:     sprintf(buf,"%04d-%02d-%02d",current.year,current.month,current.date);
  2912  00204E  0E90               	movlw	low LCD_init@buf
  2913  002050  0100               	movlb	0	; () banked
  2914  002052  6F72               	movwf	sprintf@s& (0+255),b
  2915  002054  0E00               	movlw	high LCD_init@buf
  2916  002056  6F73               	movwf	(sprintf@s+1)& (0+255),b
  2917  002058  0E10               	movlw	low STR_1
  2918  00205A  6F74               	movwf	sprintf@fmt& (0+255),b
  2919  00205C  0E0E               	movlw	high STR_1
  2920  00205E  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  2921  002060  C084  F076         	movff	LCD_init@current,?_sprintf+4
  2922  002064  C085  F077         	movff	LCD_init@current+1,?_sprintf+5
  2923  002068  5186               	movf	(LCD_init@current+2)& (0+255),w,b
  2924  00206A  6F78               	movwf	(?_sprintf+6)& (0+255),b
  2925  00206C  6B79               	clrf	(?_sprintf+7)& (0+255),b
  2926  00206E  BF78               	btfsc	(?_sprintf+6)& (0+255),7,b
  2927  002070  0779               	decf	(?_sprintf+7)& (0+255),f,b
  2928  002072  5187               	movf	(LCD_init@current+3)& (0+255),w,b
  2929  002074  6F7A               	movwf	(?_sprintf+8)& (0+255),b
  2930  002076  6B7B               	clrf	(?_sprintf+9)& (0+255),b
  2931  002078  BF7A               	btfsc	(?_sprintf+8)& (0+255),7,b
  2932  00207A  077B               	decf	(?_sprintf+9)& (0+255),f,b
  2933  00207C  EC0B  F013         	call	_sprintf	;wreg free
  2934  002080                     
  2935                           ;LCD.c: 101:     LCD_sendstring(buf);
  2936  002080  0E90               	movlw	low LCD_init@buf
  2937  002082  6E08               	movwf	LCD_sendstring@string^0,c
  2938  002084  0E00               	movlw	high LCD_init@buf
  2939  002086  6E09               	movwf	(LCD_sendstring@string+1)^0,c
  2940  002088  EC41  F014         	call	_LCD_sendstring	;wreg free
  2941  00208C  0012               	return		;funcret
  2942  00208E                     __end_of_LCD_init:
  2943                           	callstack 0
  2944                           
  2945 ;; *************** function _sprintf *****************
  2946 ;; Defined at:
  2947 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  2948 ;; Parameters:    Size  Location     Type
  2949 ;;  s               2   18[BANK0 ] PTR unsigned char 
  2950 ;;		 -> time_incre@buf2(40), time_incre@buf1(40), LCD_init@buf(40), 
  2951 ;;  fmt             2   20[BANK0 ] PTR const unsigned char 
  2952 ;;		 -> STR_3(15), STR_2(15), STR_1(15), 
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;  f               6   30[BANK0 ] struct _IO_FILE
  2955 ;;  ap              2   28[BANK0 ] PTR void [1]
  2956 ;;		 -> ?_sprintf(2), 
  2957 ;;  ret             2    0        int 
  2958 ;; Return value:  Size  Location     Type
  2959 ;;                  2   18[BANK0 ] int 
  2960 ;; Registers used:
  2961 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2962 ;; Tracked objects:
  2963 ;;		On entry : 0/0
  2964 ;;		On exit  : 0/0
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2967 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2968 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2970 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2971 ;;Total ram usage:       18 bytes
  2972 ;; Hardware stack levels used: 1
  2973 ;; Hardware stack levels required when called: 9
  2974 ;; This function calls:
  2975 ;;		_vfprintf
  2976 ;; This function is called by:
  2977 ;;		_LCD_init
  2978 ;;		_time_incre
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           
  2982                           	psect	text16
  2983  002616                     __ptext16:
  2984                           	callstack 0
  2985  002616                     _sprintf:
  2986                           	callstack 20
  2987  002616  0E76               	movlw	low (?_sprintf+4)
  2988  002618  0100               	movlb	0	; () banked
  2989  00261A  6F7C               	movwf	sprintf@ap& (0+255),b
  2990  00261C  0E00               	movlw	high (?_sprintf+4)
  2991  00261E  6F7D               	movwf	(sprintf@ap+1)& (0+255),b
  2992  002620  C072  F07E         	movff	sprintf@s,sprintf@f
  2993  002624  C073  F07F         	movff	sprintf@s+1,sprintf@f+1
  2994  002628                     
  2995                           ; BSR set to: 0
  2996  002628  0E00               	movlw	0
  2997  00262A  6F81               	movwf	(sprintf@f+3)& (0+255),b
  2998  00262C  0E00               	movlw	0
  2999  00262E  6F80               	movwf	(sprintf@f+2)& (0+255),b
  3000  002630                     
  3001                           ; BSR set to: 0
  3002  002630  0E00               	movlw	0
  3003  002632  6F83               	movwf	(sprintf@f+5)& (0+255),b
  3004  002634  0E00               	movlw	0
  3005  002636  6F82               	movwf	(sprintf@f+4)& (0+255),b
  3006  002638                     
  3007                           ; BSR set to: 0
  3008  002638  0E7E               	movlw	low sprintf@f
  3009  00263A  6F6C               	movwf	vfprintf@fp& (0+255),b
  3010  00263C  0E00               	movlw	high sprintf@f
  3011  00263E  6F6D               	movwf	(vfprintf@fp+1)& (0+255),b
  3012  002640  C074  F06E         	movff	sprintf@fmt,vfprintf@fmt
  3013  002644  C075  F06F         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3014  002648  0E7C               	movlw	low sprintf@ap
  3015  00264A  6F70               	movwf	vfprintf@ap& (0+255),b
  3016  00264C  0E00               	movlw	high sprintf@ap
  3017  00264E  6F71               	movwf	(vfprintf@ap+1)& (0+255),b
  3018  002650  ECAE  F012         	call	_vfprintf	;wreg free
  3019  002654  0100               	movlb	0	; () banked
  3020  002656  5180               	movf	(sprintf@f+2)& (0+255),w,b
  3021  002658  2572               	addwf	sprintf@s& (0+255),w,b
  3022  00265A  6ED9               	movwf	fsr2l,c
  3023  00265C  5181               	movf	(sprintf@f+3)& (0+255),w,b
  3024  00265E  2173               	addwfc	(sprintf@s+1)& (0+255),w,b
  3025  002660  6EDA               	movwf	fsr2h,c
  3026  002662  0E00               	movlw	0
  3027  002664  6EDF               	movwf	indf2,c
  3028  002666                     
  3029                           ; BSR set to: 0
  3030  002666  0012               	return		;funcret
  3031  002668                     __end_of_sprintf:
  3032                           	callstack 0
  3033                           
  3034 ;; *************** function _vfprintf *****************
  3035 ;; Defined at:
  3036 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
  3039 ;;		 -> sprintf@f(6), 
  3040 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  3041 ;;		 -> STR_3(15), STR_2(15), STR_1(15), 
  3042 ;;  ap              2   16[BANK0 ] PTR PTR void 
  3043 ;;		 -> sprintf@ap(2), 
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;  cfmt            2   77[COMRAM] PTR unsigned char 
  3046 ;;		 -> STR_3(15), STR_2(15), STR_1(15), 
  3047 ;; Return value:  Size  Location     Type
  3048 ;;                  2   12[BANK0 ] int 
  3049 ;; Registers used:
  3050 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3051 ;; Tracked objects:
  3052 ;;		On entry : 0/0
  3053 ;;		On exit  : 0/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3056 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3057 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3059 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3060 ;;Total ram usage:        8 bytes
  3061 ;; Hardware stack levels used: 1
  3062 ;; Hardware stack levels required when called: 8
  3063 ;; This function calls:
  3064 ;;		_vfpfcnvrt
  3065 ;; This function is called by:
  3066 ;;		_sprintf
  3067 ;; This function uses a non-reentrant model
  3068 ;;
  3069                           
  3070                           	psect	text17
  3071  00255C                     __ptext17:
  3072                           	callstack 0
  3073  00255C                     _vfprintf:
  3074                           	callstack 20
  3075  00255C                     
  3076                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3077  00255C  C06E  F04E         	movff	vfprintf@fmt,vfprintf@cfmt
  3078  002560  C06F  F04F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3079  002564                     
  3080                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3081  002564  0E00               	movlw	0
  3082  002566  0100               	movlb	0	; () banked
  3083  002568  6FED               	movwf	(_nout+1)& (0+255),b
  3084  00256A  0E00               	movlw	0
  3085  00256C  6FEC               	movwf	_nout& (0+255),b
  3086                           
  3087                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3088  00256E  EFCC  F012         	goto	l3317
  3089  002572                     l3315:
  3090                           
  3091                           ; BSR set to: 0
  3092                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3093  002572  C06C  F044         	movff	vfprintf@fp,vfpfcnvrt@fp
  3094  002576  C06D  F045         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3095  00257A  0E4E               	movlw	low vfprintf@cfmt
  3096  00257C  6E46               	movwf	vfpfcnvrt@fmt^0,c
  3097  00257E  0E00               	movlw	high vfprintf@cfmt
  3098  002580  6E47               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3099  002582  C070  F048         	movff	vfprintf@ap,vfpfcnvrt@ap
  3100  002586  C071  F049         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3101  00258A  EC10  F007         	call	_vfpfcnvrt	;wreg free
  3102  00258E  5044               	movf	?_vfpfcnvrt^0,w,c
  3103  002590  0100               	movlb	0	; () banked
  3104  002592  27EC               	addwf	_nout& (0+255),f,b
  3105  002594  5045               	movf	(?_vfpfcnvrt+1)^0,w,c
  3106  002596  23ED               	addwfc	(_nout+1)& (0+255),f,b
  3107  002598                     l3317:
  3108                           
  3109                           ; BSR set to: 0
  3110                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3111  002598  C04E  FFF6         	movff	vfprintf@cfmt,tblptrl
  3112  00259C  C04F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3113  0025A0                     	if	0	;tblptru may be non-zero
  3114  0025A0                     	endif
  3115  0025A0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3116  0025A0  0E00               	movlw	low (__mediumconst shr (0+16))
  3117  0025A2  6EF8               	movwf	tblptru,c
  3118  0025A4                     	endif
  3119  0025A4  0008               	tblrd		*
  3120  0025A6  50F5               	movf	tablat,w,c
  3121  0025A8  0900               	iorlw	0
  3122  0025AA  A4D8               	btfss	status,2,c
  3123  0025AC  EFDA  F012         	goto	u3981
  3124  0025B0  EFDC  F012         	goto	u3980
  3125  0025B4                     u3981:
  3126  0025B4  EFB9  F012         	goto	l3315
  3127  0025B8                     u3980:
  3128  0025B8                     
  3129                           ; BSR set to: 0
  3130                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3131  0025B8  C0EC  F06C         	movff	_nout,?_vfprintf
  3132  0025BC  C0ED  F06D         	movff	_nout+1,?_vfprintf+1
  3133  0025C0                     
  3134                           ; BSR set to: 0
  3135  0025C0  0012               	return		;funcret
  3136  0025C2                     __end_of_vfprintf:
  3137                           	callstack 0
  3138                           
  3139 ;; *************** function _vfpfcnvrt *****************
  3140 ;; Defined at:
  3141 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3142 ;; Parameters:    Size  Location     Type
  3143 ;;  fp              2   67[COMRAM] PTR struct _IO_FILE
  3144 ;;		 -> sprintf@f(6), 
  3145 ;;  fmt             2   69[COMRAM] PTR PTR unsigned char 
  3146 ;;		 -> vfprintf@cfmt(2), 
  3147 ;;  ap              2   71[COMRAM] PTR PTR void 
  3148 ;;		 -> sprintf@ap(2), 
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;  ll              8    0[BANK0 ] long long 
  3151 ;;  llu             8    0        unsigned long long 
  3152 ;;  f               4    0        unsigned long long 
  3153 ;;  vp              3    0        PTR void 
  3154 ;;  ct              3    0        unsigned char [3]
  3155 ;;  cp              3    0        PTR unsigned char 
  3156 ;;  done            2    8[BANK0 ] int 
  3157 ;;  i               2    0        int 
  3158 ;;  c               1    0        unsigned char 
  3159 ;; Return value:  Size  Location     Type
  3160 ;;                  2   67[COMRAM] int 
  3161 ;; Registers used:
  3162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3163 ;; Tracked objects:
  3164 ;;		On entry : 0/0
  3165 ;;		On exit  : 0/0
  3166 ;;		Unchanged: 0/0
  3167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3168 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3169 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3170 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3171 ;;      Totals:        10      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3172 ;;Total ram usage:       22 bytes
  3173 ;; Hardware stack levels used: 1
  3174 ;; Hardware stack levels required when called: 7
  3175 ;; This function calls:
  3176 ;;		_atoi
  3177 ;;		_dtoa
  3178 ;;		_fputc
  3179 ;;		_isdigit
  3180 ;; This function is called by:
  3181 ;;		_vfprintf
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           	psect	text18
  3186  000E20                     __ptext18:
  3187                           	callstack 0
  3188  000E20                     _vfpfcnvrt:
  3189                           	callstack 20
  3190  000E20                     
  3191                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3192  000E20  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3193  000E24  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3194  000E28  CFDE FFF6          	movff	postinc2,tblptrl
  3195  000E2C  CFDD FFF7          	movff	postdec2,tblptrh
  3196  000E30                     	if	0	;tblptru may be non-zero
  3197  000E30                     	endif
  3198  000E30                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3199  000E30  0E00               	movlw	low (__mediumconst shr (0+16))
  3200  000E32  6EF8               	movwf	tblptru,c
  3201  000E34                     	endif
  3202  000E34  0008               	tblrd		*
  3203  000E36  50F5               	movf	tablat,w,c
  3204  000E38  0A25               	xorlw	37
  3205  000E3A  A4D8               	btfss	status,2,c
  3206  000E3C  EF22  F007         	goto	u3871
  3207  000E40  EF24  F007         	goto	u3870
  3208  000E44                     u3871:
  3209  000E44  EFB8  F008         	goto	l3293
  3210  000E48                     u3870:
  3211  000E48                     
  3212                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3213  000E48  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3214  000E4C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3215  000E50  2ADE               	incf	postinc2,f,c
  3216  000E52  0E00               	movlw	0
  3217  000E54  22DD               	addwfc	postdec2,f,c
  3218  000E56                     
  3219                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3220  000E56  0E00               	movlw	0
  3221  000E58  0100               	movlb	0	; () banked
  3222  000E5A  6FEF               	movwf	(_width+1)& (0+255),b
  3223  000E5C  0E00               	movlw	0
  3224  000E5E  6FEE               	movwf	_width& (0+255),b
  3225  000E60  C0EE  F052         	movff	_width,_flags
  3226  000E64  C0EF  F053         	movff	_width+1,_flags+1
  3227  000E68                     
  3228                           ; BSR set to: 0
  3229                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3230  000E68  69F0               	setf	_prec& (0+255),b
  3231  000E6A  69F1               	setf	(_prec+1)& (0+255),b
  3232  000E6C                     
  3233                           ; BSR set to: 0
  3234                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  3235  000E6C  0E00               	movlw	0
  3236  000E6E  6F69               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3237  000E70  0E00               	movlw	0
  3238  000E72  6F68               	movwf	vfpfcnvrt@done& (0+255),b
  3239                           
  3240                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  3241  000E74  EF84  F007         	goto	l3245
  3242  000E78                     l3219:
  3243                           
  3244                           ; BSR set to: 0
  3245                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  3246  000E78  8052               	bsf	_flags^0,0,c
  3247  000E7A                     l3221:
  3248                           
  3249                           ; BSR set to: 0
  3250                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  3251  000E7A  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3252  000E7E  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3253  000E82  2ADE               	incf	postinc2,f,c
  3254  000E84  0E00               	movlw	0
  3255  000E86  22DD               	addwfc	postdec2,f,c
  3256                           
  3257                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  3258  000E88  EF84  F007         	goto	l3245
  3259  000E8C                     l3223:
  3260                           
  3261                           ; BSR set to: 0
  3262                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  3263  000E8C  8252               	bsf	_flags^0,1,c
  3264  000E8E  EF3D  F007         	goto	l3221
  3265  000E92                     l3227:
  3266                           
  3267                           ; BSR set to: 0
  3268                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  3269  000E92  8452               	bsf	_flags^0,2,c
  3270  000E94  EF3D  F007         	goto	l3221
  3271  000E98                     l3231:
  3272                           
  3273                           ; BSR set to: 0
  3274                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  3275  000E98  8652               	bsf	_flags^0,3,c
  3276  000E9A  EF3D  F007         	goto	l3221
  3277  000E9E                     l3235:
  3278                           
  3279                           ; BSR set to: 0
  3280                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  3281  000E9E  8852               	bsf	_flags^0,4,c
  3282  000EA0  EF3D  F007         	goto	l3221
  3283  000EA4                     l3239:
  3284                           
  3285                           ; BSR set to: 0
  3286                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  3287  000EA4  0E00               	movlw	0
  3288  000EA6  6F69               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3289  000EA8  0E01               	movlw	1
  3290  000EAA  6F68               	movwf	vfpfcnvrt@done& (0+255),b
  3291                           
  3292                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  3293  000EAC  EF84  F007         	goto	l3245
  3294  000EB0                     l3243:
  3295                           
  3296                           ; BSR set to: 0
  3297  000EB0  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3298  000EB4  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3299  000EB8  CFDE FFF6          	movff	postinc2,tblptrl
  3300  000EBC  CFDD FFF7          	movff	postdec2,tblptrh
  3301  000EC0                     	if	0	;tblptru may be non-zero
  3302  000EC0                     	endif
  3303  000EC0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3304  000EC0  0E00               	movlw	low (__mediumconst shr (0+16))
  3305  000EC2  6EF8               	movwf	tblptru,c
  3306  000EC4                     	endif
  3307  000EC4  0008               	tblrd		*
  3308  000EC6  50F5               	movf	tablat,w,c
  3309  000EC8  6E4A               	movwf	??_vfpfcnvrt^0,c
  3310  000ECA  6A4B               	clrf	(??_vfpfcnvrt+1)^0,c
  3311                           
  3312                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3313                           ; Switch size 1, requested type "simple"
  3314                           ; Number of cases is 1, Range of values is 0 to 0
  3315                           ; switch strategies available:
  3316                           ; Name         Instructions Cycles
  3317                           ; simple_byte            4     3 (average)
  3318                           ;	Chosen strategy is simple_byte
  3319  000ECC  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
  3320  000ECE  0A00               	xorlw	0	; case 0
  3321  000ED0  B4D8               	btfsc	status,2,c
  3322  000ED2  EF6D  F007         	goto	l3511
  3323  000ED6  EF52  F007         	goto	l3239
  3324  000EDA                     l3511:
  3325                           
  3326                           ; BSR set to: 0
  3327                           ; Switch size 1, requested type "simple"
  3328                           ; Number of cases is 5, Range of values is 32 to 48
  3329                           ; switch strategies available:
  3330                           ; Name         Instructions Cycles
  3331                           ; simple_byte           16     9 (average)
  3332                           ;	Chosen strategy is simple_byte
  3333  000EDA  504A               	movf	??_vfpfcnvrt^0,w,c
  3334  000EDC  0A20               	xorlw	32	; case 32
  3335  000EDE  B4D8               	btfsc	status,2,c
  3336  000EE0  EF4C  F007         	goto	l3231
  3337  000EE4  0A03               	xorlw	3	; case 35
  3338  000EE6  B4D8               	btfsc	status,2,c
  3339  000EE8  EF4F  F007         	goto	l3235
  3340  000EEC  0A08               	xorlw	8	; case 43
  3341  000EEE  B4D8               	btfsc	status,2,c
  3342  000EF0  EF49  F007         	goto	l3227
  3343  000EF4  0A06               	xorlw	6	; case 45
  3344  000EF6  B4D8               	btfsc	status,2,c
  3345  000EF8  EF3C  F007         	goto	l3219
  3346  000EFC  0A1D               	xorlw	29	; case 48
  3347  000EFE  B4D8               	btfsc	status,2,c
  3348  000F00  EF46  F007         	goto	l3223
  3349  000F04  EF52  F007         	goto	l3239
  3350  000F08                     l3245:
  3351                           
  3352                           ; BSR set to: 0
  3353                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  3354  000F08  5168               	movf	vfpfcnvrt@done& (0+255),w,b
  3355  000F0A  1169               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  3356  000F0C  B4D8               	btfsc	status,2,c
  3357  000F0E  EF8B  F007         	goto	u3881
  3358  000F12  EF8D  F007         	goto	u3880
  3359  000F16                     u3881:
  3360  000F16  EF58  F007         	goto	l3243
  3361  000F1A                     u3880:
  3362  000F1A                     
  3363                           ; BSR set to: 0
  3364                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  3365  000F1A  A052               	btfss	_flags^0,0,c
  3366  000F1C  EF92  F007         	goto	u3891
  3367  000F20  EF94  F007         	goto	u3890
  3368  000F24                     u3891:
  3369  000F24  EF95  F007         	goto	l3249
  3370  000F28                     u3890:
  3371  000F28                     
  3372                           ; BSR set to: 0
  3373                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  3374  000F28  9252               	bcf	_flags^0,1,c
  3375  000F2A                     l3249:
  3376                           
  3377                           ; BSR set to: 0
  3378                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  3379  000F2A  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3380  000F2E  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3381  000F32  CFDE FFF6          	movff	postinc2,tblptrl
  3382  000F36  CFDD FFF7          	movff	postdec2,tblptrh
  3383  000F3A                     	if	0	;tblptru may be non-zero
  3384  000F3A                     	endif
  3385  000F3A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3386  000F3A  0E00               	movlw	low (__mediumconst shr (0+16))
  3387  000F3C  6EF8               	movwf	tblptru,c
  3388  000F3E                     	endif
  3389  000F3E  0008               	tblrd		*
  3390  000F40  50F5               	movf	tablat,w,c
  3391  000F42  0A2A               	xorlw	42
  3392  000F44  A4D8               	btfss	status,2,c
  3393  000F46  EFA7  F007         	goto	u3901
  3394  000F4A  EFA9  F007         	goto	u3900
  3395  000F4E                     u3901:
  3396  000F4E  EFD2  F007         	goto	l3257
  3397  000F52                     u3900:
  3398  000F52                     
  3399                           ; BSR set to: 0
  3400                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  3401  000F52  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3402  000F56  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3403  000F5A  2ADE               	incf	postinc2,f,c
  3404  000F5C  0E00               	movlw	0
  3405  000F5E  22DD               	addwfc	postdec2,f,c
  3406                           
  3407                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3408  000F60  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3409  000F64  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3410  000F68  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  3411  000F6C  0E02               	movlw	2
  3412  000F6E  26DE               	addwf	postinc2,f,c
  3413  000F70  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  3414  000F74  0E00               	movlw	0
  3415  000F76  22DD               	addwfc	postdec2,f,c
  3416  000F78  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3417  000F7C  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3418  000F80  CFDE F0EE          	movff	postinc2,_width
  3419  000F84  CFDD F0EF          	movff	postdec2,_width+1
  3420  000F88                     
  3421                           ; BSR set to: 0
  3422                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  3423  000F88  BFEF               	btfsc	(_width+1)& (0+255),7,b
  3424  000F8A  EFCB  F007         	goto	u3910
  3425  000F8E  EFC9  F007         	goto	u3911
  3426  000F92                     u3911:
  3427  000F92  EF18  F008         	goto	l3267
  3428  000F96                     u3910:
  3429  000F96                     
  3430                           ; BSR set to: 0
  3431                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  3432  000F96  8052               	bsf	_flags^0,0,c
  3433                           
  3434                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  3435  000F98  6DEE               	negf	_width& (0+255),b
  3436  000F9A  1FEF               	comf	(_width+1)& (0+255),f,b
  3437  000F9C  B0D8               	btfsc	status,0,c
  3438  000F9E  2BEF               	incf	(_width+1)& (0+255),f,b
  3439  000FA0  EF18  F008         	goto	l3267
  3440  000FA4                     l3257:
  3441                           
  3442                           ; BSR set to: 0
  3443                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  3444  000FA4  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3445  000FA8  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3446  000FAC  CFDE F00C          	movff	postinc2,atoi@s
  3447  000FB0  CFDD F00D          	movff	postdec2,atoi@s+1
  3448  000FB4  EC20  F00B         	call	_atoi	;wreg free
  3449  000FB8  C00C  F0EE         	movff	?_atoi,_width
  3450  000FBC  C00D  F0EF         	movff	?_atoi+1,_width+1
  3451                           
  3452                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3453  000FC0  EFE9  F007         	goto	l3261
  3454  000FC4                     l3259:
  3455                           
  3456                           ; BSR set to: 0
  3457                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  3458  000FC4  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3459  000FC8  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3460  000FCC  2ADE               	incf	postinc2,f,c
  3461  000FCE  0E00               	movlw	0
  3462  000FD0  22DD               	addwfc	postdec2,f,c
  3463  000FD2                     l3261:
  3464  000FD2  0ED0               	movlw	208
  3465  000FD4  6E4A               	movwf	??_vfpfcnvrt^0,c
  3466  000FD6  0EFF               	movlw	255
  3467  000FD8  6E4B               	movwf	(??_vfpfcnvrt+1)^0,c
  3468  000FDA  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3469  000FDE  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3470  000FE2  CFDE FFF6          	movff	postinc2,tblptrl
  3471  000FE6  CFDD FFF7          	movff	postdec2,tblptrh
  3472  000FEA                     	if	0	;tblptru may be non-zero
  3473  000FEA                     	endif
  3474  000FEA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3475  000FEA  0E00               	movlw	low (__mediumconst shr (0+16))
  3476  000FEC  6EF8               	movwf	tblptru,c
  3477  000FEE                     	endif
  3478  000FEE  0008               	tblrd		*
  3479  000FF0  50F5               	movf	tablat,w,c
  3480  000FF2  6E4C               	movwf	(??_vfpfcnvrt+2)^0,c
  3481  000FF4  6A4D               	clrf	(??_vfpfcnvrt+3)^0,c
  3482  000FF6  504A               	movf	??_vfpfcnvrt^0,w,c
  3483  000FF8  264C               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3484  000FFA  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
  3485  000FFC  224D               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3486  000FFE  504D               	movf	(??_vfpfcnvrt+3)^0,w,c
  3487  001000  E10A               	bnz	u3920
  3488  001002  0E0A               	movlw	10
  3489  001004  5C4C               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3490  001006  A0D8               	btfss	status,0,c
  3491  001008  EF08  F008         	goto	u3921
  3492  00100C  EF0B  F008         	goto	u3920
  3493  001010                     u3921:
  3494  001010  0E01               	movlw	1
  3495  001012  EF0C  F008         	goto	u3930
  3496  001016                     u3920:
  3497  001016  0E00               	movlw	0
  3498  001018                     u3930:
  3499  001018  0100               	movlb	0	; () banked
  3500  00101A  6F6A               	movwf	_vfpfcnvrt$2239& (0+255),b
  3501  00101C  6B6B               	clrf	(_vfpfcnvrt$2239+1)& (0+255),b
  3502  00101E                     
  3503                           ; BSR set to: 0
  3504  00101E  516A               	movf	_vfpfcnvrt$2239& (0+255),w,b
  3505  001020  116B               	iorwf	(_vfpfcnvrt$2239+1)& (0+255),w,b
  3506  001022  A4D8               	btfss	status,2,c
  3507  001024  EF16  F008         	goto	u3941
  3508  001028  EF18  F008         	goto	u3940
  3509  00102C                     u3941:
  3510  00102C  EFE2  F007         	goto	l3259
  3511  001030                     u3940:
  3512  001030                     l3267:
  3513                           
  3514                           ; BSR set to: 0
  3515                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3516  001030  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3517  001034  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3518  001038  CFDE FFF6          	movff	postinc2,tblptrl
  3519  00103C  CFDD FFF7          	movff	postdec2,tblptrh
  3520  001040                     	if	0	;tblptru may be non-zero
  3521  001040                     	endif
  3522  001040                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3523  001040  0E00               	movlw	low (__mediumconst shr (0+16))
  3524  001042  6EF8               	movwf	tblptru,c
  3525  001044                     	endif
  3526  001044  0008               	tblrd		*
  3527  001046  50F5               	movf	tablat,w,c
  3528  001048  0A64               	xorlw	100
  3529  00104A  B4D8               	btfsc	status,2,c
  3530  00104C  EF2A  F008         	goto	u3951
  3531  001050  EF2C  F008         	goto	u3950
  3532  001054                     u3951:
  3533  001054  EF40  F008         	goto	l3271
  3534  001058                     u3950:
  3535  001058                     
  3536                           ; BSR set to: 0
  3537  001058  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3538  00105C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3539  001060  CFDE FFF6          	movff	postinc2,tblptrl
  3540  001064  CFDD FFF7          	movff	postdec2,tblptrh
  3541  001068                     	if	0	;tblptru may be non-zero
  3542  001068                     	endif
  3543  001068                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3544  001068  0E00               	movlw	low (__mediumconst shr (0+16))
  3545  00106A  6EF8               	movwf	tblptru,c
  3546  00106C                     	endif
  3547  00106C  0008               	tblrd		*
  3548  00106E  50F5               	movf	tablat,w,c
  3549  001070  0A69               	xorlw	105
  3550  001072  A4D8               	btfss	status,2,c
  3551  001074  EF3E  F008         	goto	u3961
  3552  001078  EF40  F008         	goto	u3960
  3553  00107C                     u3961:
  3554  00107C  EF80  F008         	goto	l3277
  3555  001080                     u3960:
  3556  001080                     l3271:
  3557                           
  3558                           ; BSR set to: 0
  3559                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3560  001080  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3561  001084  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3562  001088  2ADE               	incf	postinc2,f,c
  3563  00108A  0E00               	movlw	0
  3564  00108C  22DD               	addwfc	postdec2,f,c
  3565                           
  3566                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3567  00108E  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3568  001092  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3569  001096  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  3570  00109A  0E02               	movlw	2
  3571  00109C  26DE               	addwf	postinc2,f,c
  3572  00109E  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  3573  0010A2  0E00               	movlw	0
  3574  0010A4  22DD               	addwfc	postdec2,f,c
  3575  0010A6  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3576  0010AA  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3577  0010AE  CFDE F060          	movff	postinc2,vfpfcnvrt@ll
  3578  0010B2  CFDD F061          	movff	postdec2,vfpfcnvrt@ll+1
  3579  0010B6  0E00               	movlw	0
  3580  0010B8  BF61               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3581  0010BA  0EFF               	movlw	-1
  3582  0010BC  6F62               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3583  0010BE  6F63               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3584  0010C0  6F64               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3585  0010C2  6F65               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3586  0010C4  6F66               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3587  0010C6  6F67               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3588  0010C8                     
  3589                           ; BSR set to: 0
  3590                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3591  0010C8  C044  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  3592  0010CC  C045  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3593  0010D0  C060  F022         	movff	vfpfcnvrt@ll,dtoa@d
  3594  0010D4  C061  F023         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3595  0010D8  C062  F024         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3596  0010DC  C063  F025         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3597  0010E0  C064  F026         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3598  0010E4  C065  F027         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3599  0010E8  C066  F028         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3600  0010EC  C067  F029         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3601  0010F0  ECD6  F008         	call	_dtoa	;wreg free
  3602  0010F4  C020  F044         	movff	?_dtoa,?_vfpfcnvrt
  3603  0010F8  C021  F045         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3604  0010FC  EFD5  F008         	goto	l1087
  3605  001100                     l3277:
  3606                           
  3607                           ; BSR set to: 0
  3608                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3609  001100  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3610  001104  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3611  001108  CFDE FFF6          	movff	postinc2,tblptrl
  3612  00110C  CFDD FFF7          	movff	postdec2,tblptrh
  3613  001110                     	if	0	;tblptru may be non-zero
  3614  001110                     	endif
  3615  001110                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3616  001110  0E00               	movlw	low (__mediumconst shr (0+16))
  3617  001112  6EF8               	movwf	tblptru,c
  3618  001114                     	endif
  3619  001114  0008               	tblrd		*
  3620  001116  50F5               	movf	tablat,w,c
  3621  001118  0A25               	xorlw	37
  3622  00111A  A4D8               	btfss	status,2,c
  3623  00111C  EF92  F008         	goto	u3971
  3624  001120  EF94  F008         	goto	u3970
  3625  001124                     u3971:
  3626  001124  EFAB  F008         	goto	l3287
  3627  001128                     u3970:
  3628  001128                     
  3629                           ; BSR set to: 0
  3630                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3631  001128  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3632  00112C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3633  001130  2ADE               	incf	postinc2,f,c
  3634  001132  0E00               	movlw	0
  3635  001134  22DD               	addwfc	postdec2,f,c
  3636  001136                     
  3637                           ; BSR set to: 0
  3638                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3639  001136  0E00               	movlw	0
  3640  001138  6E06               	movwf	(fputc@c+1)^0,c
  3641  00113A  0E25               	movlw	37
  3642  00113C  6E05               	movwf	fputc@c^0,c
  3643  00113E  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  3644  001142  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3645  001146  ECAC  F010         	call	_fputc	;wreg free
  3646  00114A                     l3283:
  3647                           
  3648                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3649  00114A  0E00               	movlw	0
  3650  00114C  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  3651  00114E  0E01               	movlw	1
  3652  001150  6E44               	movwf	?_vfpfcnvrt^0,c
  3653  001152  EFD5  F008         	goto	l1087
  3654  001156                     l3287:
  3655                           
  3656                           ; BSR set to: 0
  3657                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3658  001156  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3659  00115A  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3660  00115E  2ADE               	incf	postinc2,f,c
  3661  001160  0E00               	movlw	0
  3662  001162  22DD               	addwfc	postdec2,f,c
  3663  001164                     
  3664                           ; BSR set to: 0
  3665                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3666  001164  0E00               	movlw	0
  3667  001166  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  3668  001168  0E00               	movlw	0
  3669  00116A  6E44               	movwf	?_vfpfcnvrt^0,c
  3670  00116C  EFD5  F008         	goto	l1087
  3671  001170                     l3293:
  3672                           
  3673                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3674  001170  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3675  001174  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3676  001178  CFDE FFF6          	movff	postinc2,tblptrl
  3677  00117C  CFDD FFF7          	movff	postdec2,tblptrh
  3678  001180                     	if	0	;tblptru may be non-zero
  3679  001180                     	endif
  3680  001180                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3681  001180  0E00               	movlw	low (__mediumconst shr (0+16))
  3682  001182  6EF8               	movwf	tblptru,c
  3683  001184                     	endif
  3684  001184  0008               	tblrd		*
  3685  001186  50F5               	movf	tablat,w,c
  3686  001188  6E05               	movwf	fputc@c^0,c
  3687  00118A  6A06               	clrf	(fputc@c+1)^0,c
  3688  00118C  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  3689  001190  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3690  001194  ECAC  F010         	call	_fputc	;wreg free
  3691  001198                     
  3692                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3693  001198  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3694  00119C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3695  0011A0  2ADE               	incf	postinc2,f,c
  3696  0011A2  0E00               	movlw	0
  3697  0011A4  22DD               	addwfc	postdec2,f,c
  3698  0011A6  EFA5  F008         	goto	l3283
  3699  0011AA                     l1087:
  3700  0011AA  0012               	return		;funcret
  3701  0011AC                     __end_of_vfpfcnvrt:
  3702                           	callstack 0
  3703                           
  3704 ;; *************** function _dtoa *****************
  3705 ;; Defined at:
  3706 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3707 ;; Parameters:    Size  Location     Type
  3708 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  3709 ;;		 -> sprintf@f(6), 
  3710 ;;  d               8   33[COMRAM] long long 
  3711 ;; Auto vars:     Size  Location     Type
  3712 ;;  n               8   57[COMRAM] long long 
  3713 ;;  i               2   65[COMRAM] int 
  3714 ;;  s               2   55[COMRAM] int 
  3715 ;;  w               2   53[COMRAM] int 
  3716 ;;  p               2   51[COMRAM] int 
  3717 ;; Return value:  Size  Location     Type
  3718 ;;                  2   31[COMRAM] int 
  3719 ;; Registers used:
  3720 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3721 ;; Tracked objects:
  3722 ;;		On entry : 0/0
  3723 ;;		On exit  : 0/0
  3724 ;;		Unchanged: 0/0
  3725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3726 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3727 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3728 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3729 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3730 ;;Total ram usage:       36 bytes
  3731 ;; Hardware stack levels used: 1
  3732 ;; Hardware stack levels required when called: 6
  3733 ;; This function calls:
  3734 ;;		___aodiv
  3735 ;;		___aomod
  3736 ;;		_abs
  3737 ;;		_pad
  3738 ;; This function is called by:
  3739 ;;		_vfpfcnvrt
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742                           
  3743                           	psect	text19
  3744  0011AC                     __ptext19:
  3745                           	callstack 0
  3746  0011AC                     _dtoa:
  3747                           	callstack 20
  3748  0011AC                     
  3749                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  3750  0011AC  C022  F03A         	movff	dtoa@d,dtoa@n
  3751  0011B0  C023  F03B         	movff	dtoa@d+1,dtoa@n+1
  3752  0011B4  C024  F03C         	movff	dtoa@d+2,dtoa@n+2
  3753  0011B8  C025  F03D         	movff	dtoa@d+3,dtoa@n+3
  3754  0011BC  C026  F03E         	movff	dtoa@d+4,dtoa@n+4
  3755  0011C0  C027  F03F         	movff	dtoa@d+5,dtoa@n+5
  3756  0011C4  C028  F040         	movff	dtoa@d+6,dtoa@n+6
  3757  0011C8  C029  F041         	movff	dtoa@d+7,dtoa@n+7
  3758  0011CC                     
  3759                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  3760  0011CC  BE41               	btfsc	(dtoa@n+7)^0,7,c
  3761  0011CE  EFEB  F008         	goto	u3651
  3762  0011D2  EFEE  F008         	goto	u3650
  3763  0011D6                     u3651:
  3764  0011D6  0E01               	movlw	1
  3765  0011D8  EFEF  F008         	goto	u3660
  3766  0011DC                     u3650:
  3767  0011DC  0E00               	movlw	0
  3768  0011DE                     u3660:
  3769  0011DE  6E38               	movwf	dtoa@s^0,c
  3770  0011E0  6A39               	clrf	(dtoa@s+1)^0,c
  3771                           
  3772                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  3773  0011E2  5038               	movf	dtoa@s^0,w,c
  3774  0011E4  1039               	iorwf	(dtoa@s+1)^0,w,c
  3775  0011E6  B4D8               	btfsc	status,2,c
  3776  0011E8  EFF8  F008         	goto	u3671
  3777  0011EC  EFFA  F008         	goto	u3670
  3778  0011F0                     u3671:
  3779  0011F0  EF0A  F009         	goto	l3111
  3780  0011F4                     u3670:
  3781  0011F4                     
  3782                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  3783  0011F4  1E41               	comf	(dtoa@n+7)^0,f,c
  3784  0011F6  1E40               	comf	(dtoa@n+6)^0,f,c
  3785  0011F8  1E3F               	comf	(dtoa@n+5)^0,f,c
  3786  0011FA  1E3E               	comf	(dtoa@n+4)^0,f,c
  3787  0011FC  1E3D               	comf	(dtoa@n+3)^0,f,c
  3788  0011FE  1E3C               	comf	(dtoa@n+2)^0,f,c
  3789  001200  1E3B               	comf	(dtoa@n+1)^0,f,c
  3790  001202  6C3A               	negf	dtoa@n^0,c
  3791  001204  0E00               	movlw	0
  3792  001206  223B               	addwfc	(dtoa@n+1)^0,f,c
  3793  001208  223C               	addwfc	(dtoa@n+2)^0,f,c
  3794  00120A  223D               	addwfc	(dtoa@n+3)^0,f,c
  3795  00120C  223E               	addwfc	(dtoa@n+4)^0,f,c
  3796  00120E  223F               	addwfc	(dtoa@n+5)^0,f,c
  3797  001210  2240               	addwfc	(dtoa@n+6)^0,f,c
  3798  001212  2241               	addwfc	(dtoa@n+7)^0,f,c
  3799  001214                     l3111:
  3800                           
  3801                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  3802  001214  0100               	movlb	0	; () banked
  3803  001216  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  3804  001218  EF10  F009         	goto	u3681
  3805  00121C  EF12  F009         	goto	u3680
  3806  001220                     u3681:
  3807  001220  EF13  F009         	goto	l3115
  3808  001224                     u3680:
  3809  001224                     
  3810                           ; BSR set to: 0
  3811                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  3812  001224  9252               	bcf	_flags^0,1,c
  3813  001226                     l3115:
  3814                           
  3815                           ; BSR set to: 0
  3816                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  3817  001226  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  3818  001228  EF20  F009         	goto	u3690
  3819  00122C  51F1               	movf	(_prec+1)& (0+255),w,b
  3820  00122E  E106               	bnz	u3691
  3821  001230  05F0               	decf	_prec& (0+255),w,b
  3822  001232  B0D8               	btfsc	status,0,c
  3823  001234  EF1E  F009         	goto	u3691
  3824  001238  EF20  F009         	goto	u3690
  3825  00123C                     u3691:
  3826  00123C  EF26  F009         	goto	l1038
  3827  001240                     u3690:
  3828  001240                     
  3829                           ; BSR set to: 0
  3830  001240  0E00               	movlw	0
  3831  001242  6E35               	movwf	(dtoa@p+1)^0,c
  3832  001244  0E01               	movlw	1
  3833  001246  6E34               	movwf	dtoa@p^0,c
  3834  001248  EF2A  F009         	goto	l1040
  3835  00124C                     l1038:
  3836                           
  3837                           ; BSR set to: 0
  3838  00124C  C0F0  F034         	movff	_prec,dtoa@p
  3839  001250  C0F1  F035         	movff	_prec+1,dtoa@p+1
  3840  001254                     l1040:
  3841                           
  3842                           ; BSR set to: 0
  3843                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  3844  001254  C0EE  F036         	movff	_width,dtoa@w
  3845  001258  C0EF  F037         	movff	_width+1,dtoa@w+1
  3846  00125C                     
  3847                           ; BSR set to: 0
  3848                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  3849  00125C  5038               	movf	dtoa@s^0,w,c
  3850  00125E  1039               	iorwf	(dtoa@s+1)^0,w,c
  3851  001260  A4D8               	btfss	status,2,c
  3852  001262  EF35  F009         	goto	u3701
  3853  001266  EF37  F009         	goto	u3700
  3854  00126A                     u3701:
  3855  00126A  EF3E  F009         	goto	l3123
  3856  00126E                     u3700:
  3857  00126E                     
  3858                           ; BSR set to: 0
  3859  00126E  A452               	btfss	_flags^0,2,c
  3860  001270  EF3C  F009         	goto	u3711
  3861  001274  EF3E  F009         	goto	u3710
  3862  001278                     u3711:
  3863  001278  EF41  F009         	goto	l3125
  3864  00127C                     u3710:
  3865  00127C                     l3123:
  3866                           
  3867                           ; BSR set to: 0
  3868                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  3869  00127C  0636               	decf	dtoa@w^0,f,c
  3870  00127E  A0D8               	btfss	status,0,c
  3871  001280  0637               	decf	(dtoa@w+1)^0,f,c
  3872  001282                     l3125:
  3873                           
  3874                           ; BSR set to: 0
  3875                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  3876  001282  0E00               	movlw	0
  3877  001284  6E43               	movwf	(dtoa@i+1)^0,c
  3878  001286  0E1F               	movlw	31
  3879  001288  6E42               	movwf	dtoa@i^0,c
  3880  00128A                     
  3881                           ; BSR set to: 0
  3882                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  3883  00128A  0E00               	movlw	0
  3884  00128C  0101               	movlb	1	; () banked
  3885  00128E  6F1F               	movwf	(_dbuf+31)& (0+255),b
  3886                           
  3887                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3888  001290  EFC6  F009         	goto	l3139
  3889  001294                     l3129:
  3890                           
  3891                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  3892  001294  0642               	decf	dtoa@i^0,f,c
  3893  001296  A0D8               	btfss	status,0,c
  3894  001298  0643               	decf	(dtoa@i+1)^0,f,c
  3895  00129A                     
  3896                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3897  00129A  0E00               	movlw	low _dbuf
  3898  00129C  2442               	addwf	dtoa@i^0,w,c
  3899  00129E  6ED9               	movwf	fsr2l,c
  3900  0012A0  0E01               	movlw	high _dbuf
  3901  0012A2  2043               	addwfc	(dtoa@i+1)^0,w,c
  3902  0012A4  6EDA               	movwf	fsr2h,c
  3903  0012A6  C03A  F005         	movff	dtoa@n,___aomod@dividend
  3904  0012AA  C03B  F006         	movff	dtoa@n+1,___aomod@dividend+1
  3905  0012AE  C03C  F007         	movff	dtoa@n+2,___aomod@dividend+2
  3906  0012B2  C03D  F008         	movff	dtoa@n+3,___aomod@dividend+3
  3907  0012B6  C03E  F009         	movff	dtoa@n+4,___aomod@dividend+4
  3908  0012BA  C03F  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  3909  0012BE  C040  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  3910  0012C2  C041  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  3911  0012C6  0E0A               	movlw	10
  3912  0012C8  6E0D               	movwf	___aomod@divisor^0,c
  3913  0012CA  0E00               	movlw	0
  3914  0012CC  6E0E               	movwf	(___aomod@divisor+1)^0,c
  3915  0012CE  0E00               	movlw	0
  3916  0012D0  6E0F               	movwf	(___aomod@divisor+2)^0,c
  3917  0012D2  0E00               	movlw	0
  3918  0012D4  6E10               	movwf	(___aomod@divisor+3)^0,c
  3919  0012D6  0E00               	movlw	0
  3920  0012D8  6E11               	movwf	(___aomod@divisor+4)^0,c
  3921  0012DA  0E00               	movlw	0
  3922  0012DC  6E12               	movwf	(___aomod@divisor+5)^0,c
  3923  0012DE  0E00               	movlw	0
  3924  0012E0  6E13               	movwf	(___aomod@divisor+6)^0,c
  3925  0012E2  0E00               	movlw	0
  3926  0012E4  6E14               	movwf	(___aomod@divisor+7)^0,c
  3927  0012E6  EC84  F00D         	call	___aomod	;wreg free
  3928  0012EA  C005  F02A         	movff	?___aomod,??_dtoa
  3929  0012EE  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  3930  0012F2  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  3931  0012F6  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  3932  0012FA  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  3933  0012FE  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  3934  001302  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  3935  001306  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  3936  00130A  C02A  F017         	movff	??_dtoa,abs@a
  3937  00130E  C02C  F018         	movff	??_dtoa+2,abs@a+1
  3938  001312  ECEA  F013         	call	_abs	;wreg free
  3939  001316  5017               	movf	?_abs^0,w,c
  3940  001318  0F30               	addlw	48
  3941  00131A  6EDF               	movwf	indf2,c
  3942  00131C                     
  3943                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  3944  00131C  0634               	decf	dtoa@p^0,f,c
  3945  00131E  A0D8               	btfss	status,0,c
  3946  001320  0635               	decf	(dtoa@p+1)^0,f,c
  3947  001322                     
  3948                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  3949  001322  0636               	decf	dtoa@w^0,f,c
  3950  001324  A0D8               	btfss	status,0,c
  3951  001326  0637               	decf	(dtoa@w+1)^0,f,c
  3952  001328                     
  3953                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  3954  001328  C03A  F005         	movff	dtoa@n,___aodiv@dividend
  3955  00132C  C03B  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  3956  001330  C03C  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  3957  001334  C03D  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  3958  001338  C03E  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  3959  00133C  C03F  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  3960  001340  C040  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  3961  001344  C041  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  3962  001348  0E0A               	movlw	10
  3963  00134A  6E0D               	movwf	___aodiv@divisor^0,c
  3964  00134C  0E00               	movlw	0
  3965  00134E  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  3966  001350  0E00               	movlw	0
  3967  001352  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  3968  001354  0E00               	movlw	0
  3969  001356  6E10               	movwf	(___aodiv@divisor+3)^0,c
  3970  001358  0E00               	movlw	0
  3971  00135A  6E11               	movwf	(___aodiv@divisor+4)^0,c
  3972  00135C  0E00               	movlw	0
  3973  00135E  6E12               	movwf	(___aodiv@divisor+5)^0,c
  3974  001360  0E00               	movlw	0
  3975  001362  6E13               	movwf	(___aodiv@divisor+6)^0,c
  3976  001364  0E00               	movlw	0
  3977  001366  6E14               	movwf	(___aodiv@divisor+7)^0,c
  3978  001368  ECC0  F00C         	call	___aodiv	;wreg free
  3979  00136C  C005  F03A         	movff	?___aodiv,dtoa@n
  3980  001370  C006  F03B         	movff	?___aodiv+1,dtoa@n+1
  3981  001374  C007  F03C         	movff	?___aodiv+2,dtoa@n+2
  3982  001378  C008  F03D         	movff	?___aodiv+3,dtoa@n+3
  3983  00137C  C009  F03E         	movff	?___aodiv+4,dtoa@n+4
  3984  001380  C00A  F03F         	movff	?___aodiv+5,dtoa@n+5
  3985  001384  C00B  F040         	movff	?___aodiv+6,dtoa@n+6
  3986  001388  C00C  F041         	movff	?___aodiv+7,dtoa@n+7
  3987  00138C                     l3139:
  3988                           
  3989                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3990  00138C  BE43               	btfsc	(dtoa@i+1)^0,7,c
  3991  00138E  EFD1  F009         	goto	u3721
  3992  001392  5043               	movf	(dtoa@i+1)^0,w,c
  3993  001394  E108               	bnz	u3720
  3994  001396  0442               	decf	dtoa@i^0,w,c
  3995  001398  A0D8               	btfss	status,0,c
  3996  00139A  EFD1  F009         	goto	u3721
  3997  00139E  EFD3  F009         	goto	u3720
  3998  0013A2                     u3721:
  3999  0013A2  EF03  F00A         	goto	l3149
  4000  0013A6                     u3720:
  4001  0013A6  503A               	movf	dtoa@n^0,w,c
  4002  0013A8  103B               	iorwf	(dtoa@n+1)^0,w,c
  4003  0013AA  103C               	iorwf	(dtoa@n+2)^0,w,c
  4004  0013AC  103D               	iorwf	(dtoa@n+3)^0,w,c
  4005  0013AE  103E               	iorwf	(dtoa@n+4)^0,w,c
  4006  0013B0  103F               	iorwf	(dtoa@n+5)^0,w,c
  4007  0013B2  1040               	iorwf	(dtoa@n+6)^0,w,c
  4008  0013B4  1041               	iorwf	(dtoa@n+7)^0,w,c
  4009  0013B6  A4D8               	btfss	status,2,c
  4010  0013B8  EFE0  F009         	goto	u3731
  4011  0013BC  EFE2  F009         	goto	u3730
  4012  0013C0                     u3731:
  4013  0013C0  EF4A  F009         	goto	l3129
  4014  0013C4                     u3730:
  4015  0013C4  BE35               	btfsc	(dtoa@p+1)^0,7,c
  4016  0013C6  EFEF  F009         	goto	u3740
  4017  0013CA  5035               	movf	(dtoa@p+1)^0,w,c
  4018  0013CC  E106               	bnz	u3741
  4019  0013CE  0434               	decf	dtoa@p^0,w,c
  4020  0013D0  B0D8               	btfsc	status,0,c
  4021  0013D2  EFED  F009         	goto	u3741
  4022  0013D6  EFEF  F009         	goto	u3740
  4023  0013DA                     u3741:
  4024  0013DA  EF4A  F009         	goto	l3129
  4025  0013DE                     u3740:
  4026  0013DE  BE37               	btfsc	(dtoa@w+1)^0,7,c
  4027  0013E0  EFFA  F009         	goto	u3751
  4028  0013E4  5037               	movf	(dtoa@w+1)^0,w,c
  4029  0013E6  E108               	bnz	u3750
  4030  0013E8  0436               	decf	dtoa@w^0,w,c
  4031  0013EA  A0D8               	btfss	status,0,c
  4032  0013EC  EFFA  F009         	goto	u3751
  4033  0013F0  EFFC  F009         	goto	u3750
  4034  0013F4                     u3751:
  4035  0013F4  EF03  F00A         	goto	l3149
  4036  0013F8                     u3750:
  4037  0013F8  B252               	btfsc	_flags^0,1,c
  4038  0013FA  EF01  F00A         	goto	u3761
  4039  0013FE  EF03  F00A         	goto	u3760
  4040  001402                     u3761:
  4041  001402  EF4A  F009         	goto	l3129
  4042  001406                     u3760:
  4043  001406                     l3149:
  4044                           
  4045                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  4046  001406  5038               	movf	dtoa@s^0,w,c
  4047  001408  1039               	iorwf	(dtoa@s+1)^0,w,c
  4048  00140A  A4D8               	btfss	status,2,c
  4049  00140C  EF0A  F00A         	goto	u3771
  4050  001410  EF0C  F00A         	goto	u3770
  4051  001414                     u3771:
  4052  001414  EF13  F00A         	goto	l3153
  4053  001418                     u3770:
  4054  001418  A452               	btfss	_flags^0,2,c
  4055  00141A  EF11  F00A         	goto	u3781
  4056  00141E  EF13  F00A         	goto	u3780
  4057  001422                     u3781:
  4058  001422  EF31  F00A         	goto	l3163
  4059  001426                     u3780:
  4060  001426                     l3153:
  4061                           
  4062                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  4063  001426  0642               	decf	dtoa@i^0,f,c
  4064  001428  A0D8               	btfss	status,0,c
  4065  00142A  0643               	decf	(dtoa@i+1)^0,f,c
  4066  00142C                     
  4067                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  4068  00142C  5038               	movf	dtoa@s^0,w,c
  4069  00142E  1039               	iorwf	(dtoa@s+1)^0,w,c
  4070  001430  A4D8               	btfss	status,2,c
  4071  001432  EF1D  F00A         	goto	u3791
  4072  001436  EF1F  F00A         	goto	u3790
  4073  00143A                     u3791:
  4074  00143A  EF25  F00A         	goto	l3159
  4075  00143E                     u3790:
  4076  00143E  0E00               	movlw	0
  4077  001440  6E33               	movwf	(_dtoa$2224+1)^0,c
  4078  001442  0E2B               	movlw	43
  4079  001444  6E32               	movwf	_dtoa$2224^0,c
  4080  001446  EF29  F00A         	goto	l3161
  4081  00144A                     l3159:
  4082  00144A  0E00               	movlw	0
  4083  00144C  6E33               	movwf	(_dtoa$2224+1)^0,c
  4084  00144E  0E2D               	movlw	45
  4085  001450  6E32               	movwf	_dtoa$2224^0,c
  4086  001452                     l3161:
  4087  001452  0E00               	movlw	low _dbuf
  4088  001454  2442               	addwf	dtoa@i^0,w,c
  4089  001456  6ED9               	movwf	fsr2l,c
  4090  001458  0E01               	movlw	high _dbuf
  4091  00145A  2043               	addwfc	(dtoa@i+1)^0,w,c
  4092  00145C  6EDA               	movwf	fsr2h,c
  4093  00145E  C032  FFDF         	movff	_dtoa$2224,indf2
  4094  001462                     l3163:
  4095                           
  4096                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  4097  001462  C020  F015         	movff	dtoa@fp,pad@fp
  4098  001466  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  4099  00146A  0E00               	movlw	low _dbuf
  4100  00146C  2442               	addwf	dtoa@i^0,w,c
  4101  00146E  6E17               	movwf	pad@buf^0,c
  4102  001470  0E01               	movlw	high _dbuf
  4103  001472  2043               	addwfc	(dtoa@i+1)^0,w,c
  4104  001474  6E18               	movwf	(pad@buf+1)^0,c
  4105  001476  C036  F019         	movff	dtoa@w,pad@p
  4106  00147A  C037  F01A         	movff	dtoa@w+1,pad@p+1
  4107  00147E  ECD5  F011         	call	_pad	;wreg free
  4108  001482  C015  F020         	movff	?_pad,?_dtoa
  4109  001486  C016  F021         	movff	?_pad+1,?_dtoa+1
  4110  00148A  0012               	return		;funcret
  4111  00148C                     __end_of_dtoa:
  4112                           	callstack 0
  4113                           
  4114 ;; *************** function _pad *****************
  4115 ;; Defined at:
  4116 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4117 ;; Parameters:    Size  Location     Type
  4118 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  4119 ;;		 -> sprintf@f(6), 
  4120 ;;  buf             2   22[COMRAM] PTR unsigned char 
  4121 ;;		 -> dbuf(32), 
  4122 ;;  p               2   24[COMRAM] int 
  4123 ;; Auto vars:     Size  Location     Type
  4124 ;;  w               2   29[COMRAM] int 
  4125 ;;  i               2   27[COMRAM] int 
  4126 ;; Return value:  Size  Location     Type
  4127 ;;                  2   20[COMRAM] int 
  4128 ;; Registers used:
  4129 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4130 ;; Tracked objects:
  4131 ;;		On entry : 0/0
  4132 ;;		On exit  : 0/0
  4133 ;;		Unchanged: 0/0
  4134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4135 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4136 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4137 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4138 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4139 ;;Total ram usage:       11 bytes
  4140 ;; Hardware stack levels used: 1
  4141 ;; Hardware stack levels required when called: 5
  4142 ;; This function calls:
  4143 ;;		_fputc
  4144 ;;		_fputs
  4145 ;;		_strlen
  4146 ;; This function is called by:
  4147 ;;		_dtoa
  4148 ;; This function uses a non-reentrant model
  4149 ;;
  4150                           
  4151                           	psect	text20
  4152  0023AA                     __ptext20:
  4153                           	callstack 0
  4154  0023AA                     _pad:
  4155                           	callstack 20
  4156  0023AA                     
  4157                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4158  0023AA  A052               	btfss	_flags^0,0,c
  4159  0023AC  EFDA  F011         	goto	u3561
  4160  0023B0  EFDC  F011         	goto	u3560
  4161  0023B4                     u3561:
  4162  0023B4  EFE6  F011         	goto	l3067
  4163  0023B8                     u3560:
  4164  0023B8                     
  4165                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4166  0023B8  C017  F00E         	movff	pad@buf,fputs@s
  4167  0023BC  C018  F00F         	movff	pad@buf+1,fputs@s+1
  4168  0023C0  C015  F010         	movff	pad@fp,fputs@fp
  4169  0023C4  C016  F011         	movff	pad@fp+1,fputs@fp+1
  4170  0023C8  ECA7  F013         	call	_fputs	;wreg free
  4171  0023CC                     l3067:
  4172                           
  4173                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4174  0023CC  BE1A               	btfsc	(pad@p+1)^0,7,c
  4175  0023CE  EFEB  F011         	goto	u3571
  4176  0023D2  EFED  F011         	goto	u3570
  4177  0023D6                     u3571:
  4178  0023D6  EFF3  F011         	goto	l3071
  4179  0023DA                     u3570:
  4180  0023DA  C019  F01E         	movff	pad@p,pad@w
  4181  0023DE  C01A  F01F         	movff	pad@p+1,pad@w+1
  4182  0023E2  EFF7  F011         	goto	l1027
  4183  0023E6                     l3071:
  4184  0023E6  0E00               	movlw	0
  4185  0023E8  6E1F               	movwf	(pad@w+1)^0,c
  4186  0023EA  0E00               	movlw	0
  4187  0023EC  6E1E               	movwf	pad@w^0,c
  4188  0023EE                     l1027:
  4189                           
  4190                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4191  0023EE  0E00               	movlw	0
  4192  0023F0  6E1D               	movwf	(pad@i+1)^0,c
  4193  0023F2  0E00               	movlw	0
  4194  0023F4  6E1C               	movwf	pad@i^0,c
  4195                           
  4196                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4197  0023F6  EF09  F012         	goto	l3077
  4198  0023FA                     l3073:
  4199                           
  4200                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4201  0023FA  0E00               	movlw	0
  4202  0023FC  6E06               	movwf	(fputc@c+1)^0,c
  4203  0023FE  0E20               	movlw	32
  4204  002400  6E05               	movwf	fputc@c^0,c
  4205  002402  C015  F007         	movff	pad@fp,fputc@fp
  4206  002406  C016  F008         	movff	pad@fp+1,fputc@fp+1
  4207  00240A  ECAC  F010         	call	_fputc	;wreg free
  4208  00240E                     
  4209                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4210  00240E  4A1C               	infsnz	pad@i^0,f,c
  4211  002410  2A1D               	incf	(pad@i+1)^0,f,c
  4212  002412                     l3077:
  4213                           
  4214                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4215  002412  501E               	movf	pad@w^0,w,c
  4216  002414  5C1C               	subwf	pad@i^0,w,c
  4217  002416  501D               	movf	(pad@i+1)^0,w,c
  4218  002418  0A80               	xorlw	128
  4219  00241A  6E1B               	movwf	??_pad^0,c
  4220  00241C  501F               	movf	(pad@w+1)^0,w,c
  4221  00241E  0A80               	xorlw	128
  4222  002420  581B               	subwfb	??_pad^0,w,c
  4223  002422  A0D8               	btfss	status,0,c
  4224  002424  EF16  F012         	goto	u3581
  4225  002428  EF18  F012         	goto	u3580
  4226  00242C                     u3581:
  4227  00242C  EFFD  F011         	goto	l3073
  4228  002430                     u3580:
  4229  002430                     
  4230                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4231  002430  B052               	btfsc	_flags^0,0,c
  4232  002432  EF1D  F012         	goto	u3591
  4233  002436  EF1F  F012         	goto	u3590
  4234  00243A                     u3591:
  4235  00243A  EF29  F012         	goto	l3081
  4236  00243E                     u3590:
  4237  00243E                     
  4238                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4239  00243E  C017  F00E         	movff	pad@buf,fputs@s
  4240  002442  C018  F00F         	movff	pad@buf+1,fputs@s+1
  4241  002446  C015  F010         	movff	pad@fp,fputs@fp
  4242  00244A  C016  F011         	movff	pad@fp+1,fputs@fp+1
  4243  00244E  ECA7  F013         	call	_fputs	;wreg free
  4244  002452                     l3081:
  4245                           
  4246                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4247  002452  C017  F005         	movff	pad@buf,strlen@s
  4248  002456  C018  F006         	movff	pad@buf+1,strlen@s+1
  4249  00245A  EC26  F014         	call	_strlen	;wreg free
  4250  00245E  501E               	movf	pad@w^0,w,c
  4251  002460  2405               	addwf	?_strlen^0,w,c
  4252  002462  6E15               	movwf	?_pad^0,c
  4253  002464  501F               	movf	(pad@w+1)^0,w,c
  4254  002466  2006               	addwfc	(?_strlen+1)^0,w,c
  4255  002468  6E16               	movwf	(?_pad+1)^0,c
  4256  00246A  0012               	return		;funcret
  4257  00246C                     __end_of_pad:
  4258                           	callstack 0
  4259                           
  4260 ;; *************** function _strlen *****************
  4261 ;; Defined at:
  4262 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  4263 ;; Parameters:    Size  Location     Type
  4264 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4265 ;;		 -> dbuf(32), 
  4266 ;; Auto vars:     Size  Location     Type
  4267 ;;  a               2    6[COMRAM] PTR const unsigned char 
  4268 ;;		 -> dbuf(32), 
  4269 ;; Return value:  Size  Location     Type
  4270 ;;                  2    4[COMRAM] unsigned int 
  4271 ;; Registers used:
  4272 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4273 ;; Tracked objects:
  4274 ;;		On entry : 0/0
  4275 ;;		On exit  : 0/0
  4276 ;;		Unchanged: 0/0
  4277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4278 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4279 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4281 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4282 ;;Total ram usage:        4 bytes
  4283 ;; Hardware stack levels used: 1
  4284 ;; Hardware stack levels required when called: 2
  4285 ;; This function calls:
  4286 ;;		Nothing
  4287 ;; This function is called by:
  4288 ;;		_pad
  4289 ;; This function uses a non-reentrant model
  4290 ;;
  4291                           
  4292                           	psect	text21
  4293  00284C                     __ptext21:
  4294                           	callstack 0
  4295  00284C                     _strlen:
  4296                           	callstack 22
  4297  00284C  C005  F007         	movff	strlen@s,strlen@a
  4298  002850  C006  F008         	movff	strlen@s+1,strlen@a+1
  4299  002854  EF2E  F014         	goto	l2971
  4300  002858                     l2969:
  4301  002858  4A05               	infsnz	strlen@s^0,f,c
  4302  00285A  2A06               	incf	(strlen@s+1)^0,f,c
  4303  00285C                     l2971:
  4304  00285C  C005  FFD9         	movff	strlen@s,fsr2l
  4305  002860  C006  FFDA         	movff	strlen@s+1,fsr2h
  4306  002864  50DF               	movf	indf2,w,c
  4307  002866  A4D8               	btfss	status,2,c
  4308  002868  EF38  F014         	goto	u3421
  4309  00286C  EF3A  F014         	goto	u3420
  4310  002870                     u3421:
  4311  002870  EF2C  F014         	goto	l2969
  4312  002874                     u3420:
  4313  002874  5007               	movf	strlen@a^0,w,c
  4314  002876  5C05               	subwf	strlen@s^0,w,c
  4315  002878  6E05               	movwf	?_strlen^0,c
  4316  00287A  5008               	movf	(strlen@a+1)^0,w,c
  4317  00287C  5806               	subwfb	(strlen@s+1)^0,w,c
  4318  00287E  6E06               	movwf	(?_strlen+1)^0,c
  4319  002880  0012               	return		;funcret
  4320  002882                     __end_of_strlen:
  4321                           	callstack 0
  4322                           
  4323 ;; *************** function _fputs *****************
  4324 ;; Defined at:
  4325 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  4326 ;; Parameters:    Size  Location     Type
  4327 ;;  s               2   13[COMRAM] PTR const unsigned char 
  4328 ;;		 -> dbuf(32), 
  4329 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  4330 ;;		 -> sprintf@f(6), 
  4331 ;; Auto vars:     Size  Location     Type
  4332 ;;  i               2   18[COMRAM] int 
  4333 ;;  c               1   17[COMRAM] unsigned char 
  4334 ;; Return value:  Size  Location     Type
  4335 ;;                  2   13[COMRAM] int 
  4336 ;; Registers used:
  4337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4338 ;; Tracked objects:
  4339 ;;		On entry : 0/0
  4340 ;;		On exit  : 0/0
  4341 ;;		Unchanged: 0/0
  4342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4343 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4344 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4346 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4347 ;;Total ram usage:        7 bytes
  4348 ;; Hardware stack levels used: 1
  4349 ;; Hardware stack levels required when called: 4
  4350 ;; This function calls:
  4351 ;;		_fputc
  4352 ;; This function is called by:
  4353 ;;		_pad
  4354 ;; This function uses a non-reentrant model
  4355 ;;
  4356                           
  4357                           	psect	text22
  4358  00274E                     __ptext22:
  4359                           	callstack 0
  4360  00274E                     _fputs:
  4361                           	callstack 20
  4362  00274E  0E00               	movlw	0
  4363  002750  6E14               	movwf	(fputs@i+1)^0,c
  4364  002752  0E00               	movlw	0
  4365  002754  6E13               	movwf	fputs@i^0,c
  4366  002756  EFB8  F013         	goto	l2965
  4367  00275A                     l2961:
  4368  00275A  C012  F005         	movff	fputs@c,fputc@c
  4369  00275E  6A06               	clrf	(fputc@c+1)^0,c
  4370  002760  C010  F007         	movff	fputs@fp,fputc@fp
  4371  002764  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  4372  002768  ECAC  F010         	call	_fputc	;wreg free
  4373  00276C  4A13               	infsnz	fputs@i^0,f,c
  4374  00276E  2A14               	incf	(fputs@i+1)^0,f,c
  4375  002770                     l2965:
  4376  002770  5013               	movf	fputs@i^0,w,c
  4377  002772  240E               	addwf	fputs@s^0,w,c
  4378  002774  6ED9               	movwf	fsr2l,c
  4379  002776  5014               	movf	(fputs@i+1)^0,w,c
  4380  002778  200F               	addwfc	(fputs@s+1)^0,w,c
  4381  00277A  6EDA               	movwf	fsr2h,c
  4382  00277C  50DF               	movf	indf2,w,c
  4383  00277E  6E12               	movwf	fputs@c^0,c
  4384  002780  5012               	movf	fputs@c^0,w,c
  4385  002782  A4D8               	btfss	status,2,c
  4386  002784  EFC6  F013         	goto	u3411
  4387  002788  EFC8  F013         	goto	u3410
  4388  00278C                     u3411:
  4389  00278C  EFAD  F013         	goto	l2961
  4390  002790                     u3410:
  4391  002790  0012               	return		;funcret
  4392  002792                     __end_of_fputs:
  4393                           	callstack 0
  4394                           
  4395 ;; *************** function _fputc *****************
  4396 ;; Defined at:
  4397 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  4398 ;; Parameters:    Size  Location     Type
  4399 ;;  c               2    4[COMRAM] int 
  4400 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  4401 ;;		 -> sprintf@f(6), 
  4402 ;; Auto vars:     Size  Location     Type
  4403 ;;		None
  4404 ;; Return value:  Size  Location     Type
  4405 ;;                  2    4[COMRAM] int 
  4406 ;; Registers used:
  4407 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4408 ;; Tracked objects:
  4409 ;;		On entry : 0/0
  4410 ;;		On exit  : 0/0
  4411 ;;		Unchanged: 0/0
  4412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4413 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4415 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4416 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4417 ;;Total ram usage:        9 bytes
  4418 ;; Hardware stack levels used: 1
  4419 ;; Hardware stack levels required when called: 3
  4420 ;; This function calls:
  4421 ;;		_putch
  4422 ;; This function is called by:
  4423 ;;		_pad
  4424 ;;		_vfpfcnvrt
  4425 ;;		_fputs
  4426 ;; This function uses a non-reentrant model
  4427 ;;
  4428                           
  4429                           	psect	text23
  4430  002158                     __ptext23:
  4431                           	callstack 0
  4432  002158                     _fputc:
  4433                           	callstack 23
  4434  002158  5007               	movf	fputc@fp^0,w,c
  4435  00215A  1008               	iorwf	(fputc@fp+1)^0,w,c
  4436  00215C  B4D8               	btfsc	status,2,c
  4437  00215E  EFB3  F010         	goto	u3371
  4438  002162  EFB5  F010         	goto	u3370
  4439  002166                     u3371:
  4440  002166  EFBE  F010         	goto	l2949
  4441  00216A                     u3370:
  4442  00216A  5007               	movf	fputc@fp^0,w,c
  4443  00216C  1008               	iorwf	(fputc@fp+1)^0,w,c
  4444  00216E  A4D8               	btfss	status,2,c
  4445  002170  EFBC  F010         	goto	u3381
  4446  002174  EFBE  F010         	goto	u3380
  4447  002178                     u3381:
  4448  002178  EFC3  F010         	goto	l2951
  4449  00217C                     u3380:
  4450  00217C                     l2949:
  4451  00217C  5005               	movf	fputc@c^0,w,c
  4452  00217E  EC0E  F015         	call	_putch
  4453  002182  EF10  F011         	goto	l1158
  4454  002186                     l2951:
  4455  002186  EE20 F004          	lfsr	2,4
  4456  00218A  5007               	movf	fputc@fp^0,w,c
  4457  00218C  26D9               	addwf	fsr2l,f,c
  4458  00218E  5008               	movf	(fputc@fp+1)^0,w,c
  4459  002190  22DA               	addwfc	fsr2h,f,c
  4460  002192  50DE               	movf	postinc2,w,c
  4461  002194  10DE               	iorwf	postinc2,w,c
  4462  002196  B4D8               	btfsc	status,2,c
  4463  002198  EFD0  F010         	goto	u3391
  4464  00219C  EFD2  F010         	goto	u3390
  4465  0021A0                     u3391:
  4466  0021A0  EFED  F010         	goto	l2955
  4467  0021A4                     u3390:
  4468  0021A4  EE20 F004          	lfsr	2,4
  4469  0021A8  5007               	movf	fputc@fp^0,w,c
  4470  0021AA  26D9               	addwf	fsr2l,f,c
  4471  0021AC  5008               	movf	(fputc@fp+1)^0,w,c
  4472  0021AE  22DA               	addwfc	fsr2h,f,c
  4473  0021B0  EE10 F002          	lfsr	1,2
  4474  0021B4  5007               	movf	fputc@fp^0,w,c
  4475  0021B6  26E1               	addwf	fsr1l,f,c
  4476  0021B8  5008               	movf	(fputc@fp+1)^0,w,c
  4477  0021BA  22E2               	addwfc	fsr1h,f,c
  4478  0021BC  50DE               	movf	postinc2,w,c
  4479  0021BE  5CE6               	subwf	postinc1,w,c
  4480  0021C0  50E6               	movf	postinc1,w,c
  4481  0021C2  0A80               	xorlw	128
  4482  0021C4  6E0D               	movwf	(??_fputc+4)^0,c
  4483  0021C6  50DE               	movf	postinc2,w,c
  4484  0021C8  0A80               	xorlw	128
  4485  0021CA  580D               	subwfb	(??_fputc+4)^0,w,c
  4486  0021CC  B0D8               	btfsc	status,0,c
  4487  0021CE  EFEB  F010         	goto	u3401
  4488  0021D2  EFED  F010         	goto	u3400
  4489  0021D6                     u3401:
  4490  0021D6  EF10  F011         	goto	l1158
  4491  0021DA                     u3400:
  4492  0021DA                     l2955:
  4493  0021DA  EE20 F002          	lfsr	2,2
  4494  0021DE  5007               	movf	fputc@fp^0,w,c
  4495  0021E0  26D9               	addwf	fsr2l,f,c
  4496  0021E2  5008               	movf	(fputc@fp+1)^0,w,c
  4497  0021E4  22DA               	addwfc	fsr2h,f,c
  4498  0021E6  CFDE F009          	movff	postinc2,??_fputc
  4499  0021EA  CFDD F00A          	movff	postdec2,??_fputc+1
  4500  0021EE  C007  FFD9         	movff	fputc@fp,fsr2l
  4501  0021F2  C008  FFDA         	movff	fputc@fp+1,fsr2h
  4502  0021F6  CFDE F00B          	movff	postinc2,??_fputc+2
  4503  0021FA  CFDD F00C          	movff	postdec2,??_fputc+3
  4504  0021FE  5009               	movf	??_fputc^0,w,c
  4505  002200  240B               	addwf	(??_fputc+2)^0,w,c
  4506  002202  6ED9               	movwf	fsr2l,c
  4507  002204  500A               	movf	(??_fputc+1)^0,w,c
  4508  002206  200C               	addwfc	(??_fputc+3)^0,w,c
  4509  002208  6EDA               	movwf	fsr2h,c
  4510  00220A  C005  FFDF         	movff	fputc@c,indf2
  4511  00220E  EE20 F002          	lfsr	2,2
  4512  002212  5007               	movf	fputc@fp^0,w,c
  4513  002214  26D9               	addwf	fsr2l,f,c
  4514  002216  5008               	movf	(fputc@fp+1)^0,w,c
  4515  002218  22DA               	addwfc	fsr2h,f,c
  4516  00221A  2ADE               	incf	postinc2,f,c
  4517  00221C  0E00               	movlw	0
  4518  00221E  22DD               	addwfc	postdec2,f,c
  4519  002220                     l1158:
  4520  002220  0012               	return		;funcret
  4521  002222                     __end_of_fputc:
  4522                           	callstack 0
  4523                           
  4524 ;; *************** function _putch *****************
  4525 ;; Defined at:
  4526 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  4527 ;; Parameters:    Size  Location     Type
  4528 ;;  c               1    wreg     unsigned char 
  4529 ;; Auto vars:     Size  Location     Type
  4530 ;;  c               1    0[COMRAM] unsigned char 
  4531 ;; Return value:  Size  Location     Type
  4532 ;;                  1    wreg      void 
  4533 ;; Registers used:
  4534 ;;		wreg
  4535 ;; Tracked objects:
  4536 ;;		On entry : 0/0
  4537 ;;		On exit  : 0/0
  4538 ;;		Unchanged: 0/0
  4539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4544 ;;Total ram usage:        0 bytes
  4545 ;; Hardware stack levels used: 1
  4546 ;; Hardware stack levels required when called: 2
  4547 ;; This function calls:
  4548 ;;		Nothing
  4549 ;; This function is called by:
  4550 ;;		_fputc
  4551 ;; This function uses a non-reentrant model
  4552 ;;
  4553                           
  4554                           	psect	text24
  4555  002A1C                     __ptext24:
  4556                           	callstack 0
  4557  002A1C                     _putch:
  4558                           	callstack 23
  4559  002A1C  0012               	return		;funcret
  4560  002A1E                     __end_of_putch:
  4561                           	callstack 0
  4562                           
  4563 ;; *************** function _abs *****************
  4564 ;; Defined at:
  4565 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  4566 ;; Parameters:    Size  Location     Type
  4567 ;;  a               2   22[COMRAM] int 
  4568 ;; Auto vars:     Size  Location     Type
  4569 ;;		None
  4570 ;; Return value:  Size  Location     Type
  4571 ;;                  2   22[COMRAM] int 
  4572 ;; Registers used:
  4573 ;;		wreg, status,2, status,0
  4574 ;; Tracked objects:
  4575 ;;		On entry : 0/0
  4576 ;;		On exit  : 0/0
  4577 ;;		Unchanged: 0/0
  4578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4579 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4581 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4582 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4583 ;;Total ram usage:        4 bytes
  4584 ;; Hardware stack levels used: 1
  4585 ;; Hardware stack levels required when called: 2
  4586 ;; This function calls:
  4587 ;;		Nothing
  4588 ;; This function is called by:
  4589 ;;		_dtoa
  4590 ;; This function uses a non-reentrant model
  4591 ;;
  4592                           
  4593                           	psect	text25
  4594  0027D4                     __ptext25:
  4595                           	callstack 0
  4596  0027D4                     _abs:
  4597                           	callstack 23
  4598  0027D4  BE18               	btfsc	(abs@a+1)^0,7,c
  4599  0027D6  EFF7  F013         	goto	u3600
  4600  0027DA  5018               	movf	(abs@a+1)^0,w,c
  4601  0027DC  E106               	bnz	u3601
  4602  0027DE  0417               	decf	abs@a^0,w,c
  4603  0027E0  B0D8               	btfsc	status,0,c
  4604  0027E2  EFF5  F013         	goto	u3601
  4605  0027E6  EFF7  F013         	goto	u3600
  4606  0027EA                     u3601:
  4607  0027EA  EF05  F014         	goto	l1098
  4608  0027EE                     u3600:
  4609  0027EE  C017  F019         	movff	abs@a,??_abs
  4610  0027F2  C018  F01A         	movff	abs@a+1,??_abs+1
  4611  0027F6  1E19               	comf	??_abs^0,f,c
  4612  0027F8  1E1A               	comf	(??_abs+1)^0,f,c
  4613  0027FA  4A19               	infsnz	??_abs^0,f,c
  4614  0027FC  2A1A               	incf	(??_abs+1)^0,f,c
  4615  0027FE  C019  F017         	movff	??_abs,?_abs
  4616  002802  C01A  F018         	movff	??_abs+1,?_abs+1
  4617  002806  EF09  F014         	goto	l1101
  4618  00280A                     l1098:
  4619  00280A  C017  F017         	movff	abs@a,?_abs
  4620  00280E  C018  F018         	movff	abs@a+1,?_abs+1
  4621  002812                     l1101:
  4622  002812  0012               	return		;funcret
  4623  002814                     __end_of_abs:
  4624                           	callstack 0
  4625                           
  4626 ;; *************** function ___aomod *****************
  4627 ;; Defined at:
  4628 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;  dividend        8    4[COMRAM] long long 
  4631 ;;  divisor         8   12[COMRAM] long long 
  4632 ;; Auto vars:     Size  Location     Type
  4633 ;;  sign            1   21[COMRAM] unsigned char 
  4634 ;;  counter         1   20[COMRAM] unsigned char 
  4635 ;; Return value:  Size  Location     Type
  4636 ;;                  8    4[COMRAM] long long 
  4637 ;; Registers used:
  4638 ;;		wreg, status,2, status,0
  4639 ;; Tracked objects:
  4640 ;;		On entry : 0/0
  4641 ;;		On exit  : 0/0
  4642 ;;		Unchanged: 0/0
  4643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4644 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4645 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4647 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4648 ;;Total ram usage:       18 bytes
  4649 ;; Hardware stack levels used: 1
  4650 ;; Hardware stack levels required when called: 2
  4651 ;; This function calls:
  4652 ;;		Nothing
  4653 ;; This function is called by:
  4654 ;;		_dtoa
  4655 ;; This function uses a non-reentrant model
  4656 ;;
  4657                           
  4658                           	psect	text26
  4659  001B08                     __ptext26:
  4660                           	callstack 0
  4661  001B08                     ___aomod:
  4662                           	callstack 23
  4663  001B08  0E00               	movlw	0
  4664  001B0A  6E16               	movwf	___aomod@sign^0,c
  4665  001B0C  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  4666  001B0E  EF8D  F00D         	goto	u3500
  4667  001B12  EF8B  F00D         	goto	u3501
  4668  001B16                     u3501:
  4669  001B16  EF9F  F00D         	goto	l3035
  4670  001B1A                     u3500:
  4671  001B1A  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  4672  001B1C  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  4673  001B1E  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  4674  001B20  1E09               	comf	(___aomod@dividend+4)^0,f,c
  4675  001B22  1E08               	comf	(___aomod@dividend+3)^0,f,c
  4676  001B24  1E07               	comf	(___aomod@dividend+2)^0,f,c
  4677  001B26  1E06               	comf	(___aomod@dividend+1)^0,f,c
  4678  001B28  6C05               	negf	___aomod@dividend^0,c
  4679  001B2A  0E00               	movlw	0
  4680  001B2C  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  4681  001B2E  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  4682  001B30  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  4683  001B32  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  4684  001B34  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  4685  001B36  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  4686  001B38  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  4687  001B3A  0E01               	movlw	1
  4688  001B3C  6E16               	movwf	___aomod@sign^0,c
  4689  001B3E                     l3035:
  4690  001B3E  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  4691  001B40  EFA6  F00D         	goto	u3510
  4692  001B44  EFA4  F00D         	goto	u3511
  4693  001B48                     u3511:
  4694  001B48  EFB6  F00D         	goto	l3039
  4695  001B4C                     u3510:
  4696  001B4C  1E14               	comf	(___aomod@divisor+7)^0,f,c
  4697  001B4E  1E13               	comf	(___aomod@divisor+6)^0,f,c
  4698  001B50  1E12               	comf	(___aomod@divisor+5)^0,f,c
  4699  001B52  1E11               	comf	(___aomod@divisor+4)^0,f,c
  4700  001B54  1E10               	comf	(___aomod@divisor+3)^0,f,c
  4701  001B56  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  4702  001B58  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  4703  001B5A  6C0D               	negf	___aomod@divisor^0,c
  4704  001B5C  0E00               	movlw	0
  4705  001B5E  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  4706  001B60  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  4707  001B62  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  4708  001B64  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  4709  001B66  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  4710  001B68  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  4711  001B6A  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  4712  001B6C                     l3039:
  4713  001B6C  500D               	movf	___aomod@divisor^0,w,c
  4714  001B6E  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  4715  001B70  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  4716  001B72  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  4717  001B74  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  4718  001B76  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  4719  001B78  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  4720  001B7A  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  4721  001B7C  B4D8               	btfsc	status,2,c
  4722  001B7E  EFC3  F00D         	goto	u3521
  4723  001B82  EFC5  F00D         	goto	u3520
  4724  001B86                     u3521:
  4725  001B86  EF0D  F00E         	goto	l3055
  4726  001B8A                     u3520:
  4727  001B8A  0E01               	movlw	1
  4728  001B8C  6E15               	movwf	___aomod@counter^0,c
  4729  001B8E  EFD3  F00D         	goto	l3045
  4730  001B92                     l3043:
  4731  001B92  90D8               	bcf	status,0,c
  4732  001B94  360D               	rlcf	___aomod@divisor^0,f,c
  4733  001B96  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  4734  001B98  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  4735  001B9A  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  4736  001B9C  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  4737  001B9E  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  4738  001BA0  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  4739  001BA2  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  4740  001BA4  2A15               	incf	___aomod@counter^0,f,c
  4741  001BA6                     l3045:
  4742  001BA6  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  4743  001BA8  EFD8  F00D         	goto	u3531
  4744  001BAC  EFDA  F00D         	goto	u3530
  4745  001BB0                     u3531:
  4746  001BB0  EFC9  F00D         	goto	l3043
  4747  001BB4                     u3530:
  4748  001BB4                     l3047:
  4749  001BB4  500D               	movf	___aomod@divisor^0,w,c
  4750  001BB6  5C05               	subwf	___aomod@dividend^0,w,c
  4751  001BB8  500E               	movf	(___aomod@divisor+1)^0,w,c
  4752  001BBA  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  4753  001BBC  500F               	movf	(___aomod@divisor+2)^0,w,c
  4754  001BBE  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  4755  001BC0  5010               	movf	(___aomod@divisor+3)^0,w,c
  4756  001BC2  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  4757  001BC4  5011               	movf	(___aomod@divisor+4)^0,w,c
  4758  001BC6  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  4759  001BC8  5012               	movf	(___aomod@divisor+5)^0,w,c
  4760  001BCA  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  4761  001BCC  5013               	movf	(___aomod@divisor+6)^0,w,c
  4762  001BCE  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  4763  001BD0  5014               	movf	(___aomod@divisor+7)^0,w,c
  4764  001BD2  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  4765  001BD4  A0D8               	btfss	status,0,c
  4766  001BD6  EFEF  F00D         	goto	u3541
  4767  001BDA  EFF1  F00D         	goto	u3540
  4768  001BDE                     u3541:
  4769  001BDE  EF01  F00E         	goto	l3051
  4770  001BE2                     u3540:
  4771  001BE2  500D               	movf	___aomod@divisor^0,w,c
  4772  001BE4  5E05               	subwf	___aomod@dividend^0,f,c
  4773  001BE6  500E               	movf	(___aomod@divisor+1)^0,w,c
  4774  001BE8  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  4775  001BEA  500F               	movf	(___aomod@divisor+2)^0,w,c
  4776  001BEC  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  4777  001BEE  5010               	movf	(___aomod@divisor+3)^0,w,c
  4778  001BF0  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  4779  001BF2  5011               	movf	(___aomod@divisor+4)^0,w,c
  4780  001BF4  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  4781  001BF6  5012               	movf	(___aomod@divisor+5)^0,w,c
  4782  001BF8  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  4783  001BFA  5013               	movf	(___aomod@divisor+6)^0,w,c
  4784  001BFC  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  4785  001BFE  5014               	movf	(___aomod@divisor+7)^0,w,c
  4786  001C00  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  4787  001C02                     l3051:
  4788  001C02  90D8               	bcf	status,0,c
  4789  001C04  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  4790  001C06  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  4791  001C08  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  4792  001C0A  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  4793  001C0C  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  4794  001C0E  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  4795  001C10  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  4796  001C12  320D               	rrcf	___aomod@divisor^0,f,c
  4797  001C14  2E15               	decfsz	___aomod@counter^0,f,c
  4798  001C16  EFDA  F00D         	goto	l3047
  4799  001C1A                     l3055:
  4800  001C1A  5016               	movf	___aomod@sign^0,w,c
  4801  001C1C  B4D8               	btfsc	status,2,c
  4802  001C1E  EF13  F00E         	goto	u3551
  4803  001C22  EF15  F00E         	goto	u3550
  4804  001C26                     u3551:
  4805  001C26  EF25  F00E         	goto	l3059
  4806  001C2A                     u3550:
  4807  001C2A  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  4808  001C2C  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  4809  001C2E  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  4810  001C30  1E09               	comf	(___aomod@dividend+4)^0,f,c
  4811  001C32  1E08               	comf	(___aomod@dividend+3)^0,f,c
  4812  001C34  1E07               	comf	(___aomod@dividend+2)^0,f,c
  4813  001C36  1E06               	comf	(___aomod@dividend+1)^0,f,c
  4814  001C38  6C05               	negf	___aomod@dividend^0,c
  4815  001C3A  0E00               	movlw	0
  4816  001C3C  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  4817  001C3E  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  4818  001C40  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  4819  001C42  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  4820  001C44  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  4821  001C46  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  4822  001C48  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  4823  001C4A                     l3059:
  4824  001C4A  C005  F005         	movff	___aomod@dividend,?___aomod
  4825  001C4E  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  4826  001C52  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  4827  001C56  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  4828  001C5A  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  4829  001C5E  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  4830  001C62  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  4831  001C66  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  4832  001C6A  0012               	return		;funcret
  4833  001C6C                     __end_of___aomod:
  4834                           	callstack 0
  4835                           
  4836 ;; *************** function ___aodiv *****************
  4837 ;; Defined at:
  4838 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  4839 ;; Parameters:    Size  Location     Type
  4840 ;;  dividend        8    4[COMRAM] long long 
  4841 ;;  divisor         8   12[COMRAM] long long 
  4842 ;; Auto vars:     Size  Location     Type
  4843 ;;  quotient        8   22[COMRAM] long long 
  4844 ;;  sign            1   21[COMRAM] unsigned char 
  4845 ;;  counter         1   20[COMRAM] unsigned char 
  4846 ;; Return value:  Size  Location     Type
  4847 ;;                  8    4[COMRAM] long long 
  4848 ;; Registers used:
  4849 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4850 ;; Tracked objects:
  4851 ;;		On entry : 0/0
  4852 ;;		On exit  : 0/0
  4853 ;;		Unchanged: 0/0
  4854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4855 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4856 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4858 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4859 ;;Total ram usage:       26 bytes
  4860 ;; Hardware stack levels used: 1
  4861 ;; Hardware stack levels required when called: 2
  4862 ;; This function calls:
  4863 ;;		Nothing
  4864 ;; This function is called by:
  4865 ;;		_dtoa
  4866 ;; This function uses a non-reentrant model
  4867 ;;
  4868                           
  4869                           	psect	text27
  4870  001980                     __ptext27:
  4871                           	callstack 0
  4872  001980                     ___aodiv:
  4873                           	callstack 23
  4874  001980  0E00               	movlw	0
  4875  001982  6E16               	movwf	___aodiv@sign^0,c
  4876  001984  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  4877  001986  EFC9  F00C         	goto	u3430
  4878  00198A  EFC7  F00C         	goto	u3431
  4879  00198E                     u3431:
  4880  00198E  EFDB  F00C         	goto	l2991
  4881  001992                     u3430:
  4882  001992  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  4883  001994  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  4884  001996  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  4885  001998  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  4886  00199A  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  4887  00199C  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  4888  00199E  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  4889  0019A0  6C0D               	negf	___aodiv@divisor^0,c
  4890  0019A2  0E00               	movlw	0
  4891  0019A4  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  4892  0019A6  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  4893  0019A8  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  4894  0019AA  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  4895  0019AC  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  4896  0019AE  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  4897  0019B0  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  4898  0019B2  0E01               	movlw	1
  4899  0019B4  6E16               	movwf	___aodiv@sign^0,c
  4900  0019B6                     l2991:
  4901  0019B6  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  4902  0019B8  EFE2  F00C         	goto	u3440
  4903  0019BC  EFE0  F00C         	goto	u3441
  4904  0019C0                     u3441:
  4905  0019C0  EFF4  F00C         	goto	l2997
  4906  0019C4                     u3440:
  4907  0019C4  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  4908  0019C6  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  4909  0019C8  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  4910  0019CA  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  4911  0019CC  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  4912  0019CE  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  4913  0019D0  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  4914  0019D2  6C05               	negf	___aodiv@dividend^0,c
  4915  0019D4  0E00               	movlw	0
  4916  0019D6  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  4917  0019D8  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  4918  0019DA  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  4919  0019DC  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  4920  0019DE  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  4921  0019E0  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  4922  0019E2  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  4923  0019E4  0E01               	movlw	1
  4924  0019E6  1A16               	xorwf	___aodiv@sign^0,f,c
  4925  0019E8                     l2997:
  4926  0019E8  EE20  F017         	lfsr	2,___aodiv@quotient
  4927  0019EC  0E07               	movlw	7
  4928  0019EE                     u3451:
  4929  0019EE  6ADE               	clrf	postinc2,c
  4930  0019F0  06E8               	decf	wreg,f,c
  4931  0019F2  E2FD               	bc	u3451
  4932  0019F4  500D               	movf	___aodiv@divisor^0,w,c
  4933  0019F6  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  4934  0019F8  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  4935  0019FA  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  4936  0019FC  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  4937  0019FE  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  4938  001A00  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  4939  001A02  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  4940  001A04  B4D8               	btfsc	status,2,c
  4941  001A06  EF07  F00D         	goto	u3461
  4942  001A0A  EF09  F00D         	goto	u3460
  4943  001A0E                     u3461:
  4944  001A0E  EF5B  F00D         	goto	l3019
  4945  001A12                     u3460:
  4946  001A12  0E01               	movlw	1
  4947  001A14  6E15               	movwf	___aodiv@counter^0,c
  4948  001A16  EF17  F00D         	goto	l3005
  4949  001A1A                     l3003:
  4950  001A1A  90D8               	bcf	status,0,c
  4951  001A1C  360D               	rlcf	___aodiv@divisor^0,f,c
  4952  001A1E  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  4953  001A20  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  4954  001A22  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  4955  001A24  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  4956  001A26  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  4957  001A28  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  4958  001A2A  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  4959  001A2C  2A15               	incf	___aodiv@counter^0,f,c
  4960  001A2E                     l3005:
  4961  001A2E  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  4962  001A30  EF1C  F00D         	goto	u3471
  4963  001A34  EF1E  F00D         	goto	u3470
  4964  001A38                     u3471:
  4965  001A38  EF0D  F00D         	goto	l3003
  4966  001A3C                     u3470:
  4967  001A3C                     l3007:
  4968  001A3C  90D8               	bcf	status,0,c
  4969  001A3E  3617               	rlcf	___aodiv@quotient^0,f,c
  4970  001A40  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  4971  001A42  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  4972  001A44  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  4973  001A46  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  4974  001A48  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  4975  001A4A  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  4976  001A4C  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  4977  001A4E  500D               	movf	___aodiv@divisor^0,w,c
  4978  001A50  5C05               	subwf	___aodiv@dividend^0,w,c
  4979  001A52  500E               	movf	(___aodiv@divisor+1)^0,w,c
  4980  001A54  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  4981  001A56  500F               	movf	(___aodiv@divisor+2)^0,w,c
  4982  001A58  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  4983  001A5A  5010               	movf	(___aodiv@divisor+3)^0,w,c
  4984  001A5C  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  4985  001A5E  5011               	movf	(___aodiv@divisor+4)^0,w,c
  4986  001A60  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  4987  001A62  5012               	movf	(___aodiv@divisor+5)^0,w,c
  4988  001A64  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  4989  001A66  5013               	movf	(___aodiv@divisor+6)^0,w,c
  4990  001A68  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  4991  001A6A  5014               	movf	(___aodiv@divisor+7)^0,w,c
  4992  001A6C  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  4993  001A6E  A0D8               	btfss	status,0,c
  4994  001A70  EF3C  F00D         	goto	u3481
  4995  001A74  EF3E  F00D         	goto	u3480
  4996  001A78                     u3481:
  4997  001A78  EF4F  F00D         	goto	l3015
  4998  001A7C                     u3480:
  4999  001A7C  500D               	movf	___aodiv@divisor^0,w,c
  5000  001A7E  5E05               	subwf	___aodiv@dividend^0,f,c
  5001  001A80  500E               	movf	(___aodiv@divisor+1)^0,w,c
  5002  001A82  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  5003  001A84  500F               	movf	(___aodiv@divisor+2)^0,w,c
  5004  001A86  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  5005  001A88  5010               	movf	(___aodiv@divisor+3)^0,w,c
  5006  001A8A  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  5007  001A8C  5011               	movf	(___aodiv@divisor+4)^0,w,c
  5008  001A8E  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  5009  001A90  5012               	movf	(___aodiv@divisor+5)^0,w,c
  5010  001A92  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  5011  001A94  5013               	movf	(___aodiv@divisor+6)^0,w,c
  5012  001A96  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  5013  001A98  5014               	movf	(___aodiv@divisor+7)^0,w,c
  5014  001A9A  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  5015  001A9C  8017               	bsf	___aodiv@quotient^0,0,c
  5016  001A9E                     l3015:
  5017  001A9E  90D8               	bcf	status,0,c
  5018  001AA0  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  5019  001AA2  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  5020  001AA4  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  5021  001AA6  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  5022  001AA8  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  5023  001AAA  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  5024  001AAC  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  5025  001AAE  320D               	rrcf	___aodiv@divisor^0,f,c
  5026  001AB0  2E15               	decfsz	___aodiv@counter^0,f,c
  5027  001AB2  EF1E  F00D         	goto	l3007
  5028  001AB6                     l3019:
  5029  001AB6  5016               	movf	___aodiv@sign^0,w,c
  5030  001AB8  B4D8               	btfsc	status,2,c
  5031  001ABA  EF61  F00D         	goto	u3491
  5032  001ABE  EF63  F00D         	goto	u3490
  5033  001AC2                     u3491:
  5034  001AC2  EF73  F00D         	goto	l3023
  5035  001AC6                     u3490:
  5036  001AC6  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  5037  001AC8  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  5038  001ACA  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  5039  001ACC  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  5040  001ACE  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  5041  001AD0  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  5042  001AD2  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  5043  001AD4  6C17               	negf	___aodiv@quotient^0,c
  5044  001AD6  0E00               	movlw	0
  5045  001AD8  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  5046  001ADA  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  5047  001ADC  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  5048  001ADE  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  5049  001AE0  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  5050  001AE2  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  5051  001AE4  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  5052  001AE6                     l3023:
  5053  001AE6  C017  F005         	movff	___aodiv@quotient,?___aodiv
  5054  001AEA  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  5055  001AEE  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  5056  001AF2  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  5057  001AF6  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  5058  001AFA  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  5059  001AFE  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  5060  001B02  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  5061  001B06  0012               	return		;funcret
  5062  001B08                     __end_of___aodiv:
  5063                           	callstack 0
  5064                           
  5065 ;; *************** function _atoi *****************
  5066 ;; Defined at:
  5067 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  5068 ;; Parameters:    Size  Location     Type
  5069 ;;  s               2   11[COMRAM] PTR const unsigned char 
  5070 ;;		 -> STR_3(15), STR_2(15), STR_1(15), 
  5071 ;; Auto vars:     Size  Location     Type
  5072 ;;  n               2   24[COMRAM] int 
  5073 ;;  neg             2   17[COMRAM] int 
  5074 ;; Return value:  Size  Location     Type
  5075 ;;                  2   11[COMRAM] int 
  5076 ;; Registers used:
  5077 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5078 ;; Tracked objects:
  5079 ;;		On entry : 0/0
  5080 ;;		On exit  : 0/0
  5081 ;;		Unchanged: 0/0
  5082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5083 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5084 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5085 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5086 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5087 ;;Total ram usage:       15 bytes
  5088 ;; Hardware stack levels used: 1
  5089 ;; Hardware stack levels required when called: 3
  5090 ;; This function calls:
  5091 ;;		___wmul
  5092 ;;		_isdigit
  5093 ;;		_isspace
  5094 ;; This function is called by:
  5095 ;;		_vfpfcnvrt
  5096 ;; This function uses a non-reentrant model
  5097 ;;
  5098                           
  5099                           	psect	text28
  5100  001640                     __ptext28:
  5101                           	callstack 0
  5102  001640                     _atoi:
  5103                           	callstack 23
  5104  001640  0E00               	movlw	0
  5105  001642  6E1A               	movwf	(atoi@n+1)^0,c
  5106  001644  0E00               	movlw	0
  5107  001646  6E19               	movwf	atoi@n^0,c
  5108  001648  0E00               	movlw	0
  5109  00164A  6E13               	movwf	(atoi@neg+1)^0,c
  5110  00164C  0E00               	movlw	0
  5111  00164E  6E12               	movwf	atoi@neg^0,c
  5112  001650  EF2C  F00B         	goto	l3171
  5113  001654                     l3169:
  5114  001654  4A0C               	infsnz	atoi@s^0,f,c
  5115  001656  2A0D               	incf	(atoi@s+1)^0,f,c
  5116  001658                     l3171:
  5117  001658  0E01               	movlw	1
  5118  00165A  6E18               	movwf	_atoi$2260^0,c
  5119  00165C  C00C  FFF6         	movff	atoi@s,tblptrl
  5120  001660  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5121  001664                     	if	0	;tblptru may be non-zero
  5122  001664                     	endif
  5123  001664                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5124  001664  0E00               	movlw	low (__mediumconst shr (0+16))
  5125  001666  6EF8               	movwf	tblptru,c
  5126  001668                     	endif
  5127  001668  0008               	tblrd		*
  5128  00166A  50F5               	movf	tablat,w,c
  5129  00166C  0A20               	xorlw	32
  5130  00166E  B4D8               	btfsc	status,2,c
  5131  001670  EF3C  F00B         	goto	u3801
  5132  001674  EF3E  F00B         	goto	u3800
  5133  001678                     u3801:
  5134  001678  EF5D  F00B         	goto	l3179
  5135  00167C                     u3800:
  5136  00167C  0EF7               	movlw	247
  5137  00167E  6E0E               	movwf	??_atoi^0,c
  5138  001680  0EFF               	movlw	255
  5139  001682  6E0F               	movwf	(??_atoi+1)^0,c
  5140  001684  C00C  FFF6         	movff	atoi@s,tblptrl
  5141  001688  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5142  00168C                     	if	0	;tblptru may be non-zero
  5143  00168C                     	endif
  5144  00168C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5145  00168C  0E00               	movlw	low (__mediumconst shr (0+16))
  5146  00168E  6EF8               	movwf	tblptru,c
  5147  001690                     	endif
  5148  001690  0008               	tblrd		*
  5149  001692  50F5               	movf	tablat,w,c
  5150  001694  6E10               	movwf	(??_atoi+2)^0,c
  5151  001696  6A11               	clrf	(??_atoi+3)^0,c
  5152  001698  500E               	movf	??_atoi^0,w,c
  5153  00169A  2610               	addwf	(??_atoi+2)^0,f,c
  5154  00169C  500F               	movf	(??_atoi+1)^0,w,c
  5155  00169E  2211               	addwfc	(??_atoi+3)^0,f,c
  5156  0016A0  5011               	movf	(??_atoi+3)^0,w,c
  5157  0016A2  E109               	bnz	u3810
  5158  0016A4  0E05               	movlw	5
  5159  0016A6  5C10               	subwf	(??_atoi+2)^0,w,c
  5160  0016A8  A0D8               	btfss	status,0,c
  5161  0016AA  EF59  F00B         	goto	u3811
  5162  0016AE  EF5B  F00B         	goto	u3810
  5163  0016B2                     u3811:
  5164  0016B2  EF5D  F00B         	goto	l3179
  5165  0016B6                     u3810:
  5166  0016B6  0E00               	movlw	0
  5167  0016B8  6E18               	movwf	_atoi$2260^0,c
  5168  0016BA                     l3179:
  5169  0016BA  C018  F014         	movff	_atoi$2260,_atoi$2259
  5170  0016BE  6A15               	clrf	(_atoi$2259+1)^0,c
  5171  0016C0  5014               	movf	_atoi$2259^0,w,c
  5172  0016C2  1015               	iorwf	(_atoi$2259+1)^0,w,c
  5173  0016C4  A4D8               	btfss	status,2,c
  5174  0016C6  EF67  F00B         	goto	u3821
  5175  0016CA  EF69  F00B         	goto	u3820
  5176  0016CE                     u3821:
  5177  0016CE  EF2A  F00B         	goto	l3169
  5178  0016D2                     u3820:
  5179  0016D2  EF73  F00B         	goto	l3189
  5180  0016D6                     l3185:
  5181  0016D6  0E00               	movlw	0
  5182  0016D8  6E13               	movwf	(atoi@neg+1)^0,c
  5183  0016DA  0E01               	movlw	1
  5184  0016DC  6E12               	movwf	atoi@neg^0,c
  5185  0016DE                     l3187:
  5186  0016DE  4A0C               	infsnz	atoi@s^0,f,c
  5187  0016E0  2A0D               	incf	(atoi@s+1)^0,f,c
  5188  0016E2  EFAC  F00B         	goto	l3195
  5189  0016E6                     l3189:
  5190  0016E6  C00C  FFF6         	movff	atoi@s,tblptrl
  5191  0016EA  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5192  0016EE                     	if	0	;tblptru may be non-zero
  5193  0016EE                     	endif
  5194  0016EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5195  0016EE  0E00               	movlw	low (__mediumconst shr (0+16))
  5196  0016F0  6EF8               	movwf	tblptru,c
  5197  0016F2                     	endif
  5198  0016F2  0008               	tblrd		*
  5199  0016F4  50F5               	movf	tablat,w,c
  5200  0016F6  6E0E               	movwf	??_atoi^0,c
  5201  0016F8  6A0F               	clrf	(??_atoi+1)^0,c
  5202                           
  5203                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5204                           ; Switch size 1, requested type "simple"
  5205                           ; Number of cases is 1, Range of values is 0 to 0
  5206                           ; switch strategies available:
  5207                           ; Name         Instructions Cycles
  5208                           ; simple_byte            4     3 (average)
  5209                           ;	Chosen strategy is simple_byte
  5210  0016FA  500F               	movf	(??_atoi+1)^0,w,c
  5211  0016FC  0A00               	xorlw	0	; case 0
  5212  0016FE  B4D8               	btfsc	status,2,c
  5213  001700  EF84  F00B         	goto	l3513
  5214  001704  EFAC  F00B         	goto	l3195
  5215  001708                     l3513:
  5216                           
  5217                           ; Switch size 1, requested type "simple"
  5218                           ; Number of cases is 2, Range of values is 43 to 45
  5219                           ; switch strategies available:
  5220                           ; Name         Instructions Cycles
  5221                           ; simple_byte            7     4 (average)
  5222                           ;	Chosen strategy is simple_byte
  5223  001708  500E               	movf	??_atoi^0,w,c
  5224  00170A  0A2B               	xorlw	43	; case 43
  5225  00170C  B4D8               	btfsc	status,2,c
  5226  00170E  EF6F  F00B         	goto	l3187
  5227  001712  0A06               	xorlw	6	; case 45
  5228  001714  B4D8               	btfsc	status,2,c
  5229  001716  EF6B  F00B         	goto	l3185
  5230  00171A  EFAC  F00B         	goto	l3195
  5231  00171E                     l3191:
  5232  00171E  C019  F005         	movff	atoi@n,___wmul@multiplier
  5233  001722  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  5234  001726  0E00               	movlw	0
  5235  001728  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  5236  00172A  0E0A               	movlw	10
  5237  00172C  6E07               	movwf	___wmul@multiplicand^0,c
  5238  00172E  EC9D  F014         	call	___wmul	;wreg free
  5239  001732  C00C  FFF6         	movff	atoi@s,tblptrl
  5240  001736  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5241  00173A                     	if	0	;tblptru may be non-zero
  5242  00173A                     	endif
  5243  00173A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5244  00173A  0E00               	movlw	low (__mediumconst shr (0+16))
  5245  00173C  6EF8               	movwf	tblptru,c
  5246  00173E                     	endif
  5247  00173E  0008               	tblrd		*
  5248  001740  50F5               	movf	tablat,w,c
  5249  001742  5E05               	subwf	?___wmul^0,f,c
  5250  001744  0E00               	movlw	0
  5251  001746  5A06               	subwfb	(?___wmul+1)^0,f,c
  5252  001748  0E30               	movlw	48
  5253  00174A  2405               	addwf	?___wmul^0,w,c
  5254  00174C  6E19               	movwf	atoi@n^0,c
  5255  00174E  0E00               	movlw	0
  5256  001750  2006               	addwfc	(?___wmul+1)^0,w,c
  5257  001752  6E1A               	movwf	(atoi@n+1)^0,c
  5258  001754  EF6F  F00B         	goto	l3187
  5259  001758                     l3195:
  5260  001758  0ED0               	movlw	208
  5261  00175A  6E0E               	movwf	??_atoi^0,c
  5262  00175C  0EFF               	movlw	255
  5263  00175E  6E0F               	movwf	(??_atoi+1)^0,c
  5264  001760  C00C  FFF6         	movff	atoi@s,tblptrl
  5265  001764  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5266  001768                     	if	0	;tblptru may be non-zero
  5267  001768                     	endif
  5268  001768                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5269  001768  0E00               	movlw	low (__mediumconst shr (0+16))
  5270  00176A  6EF8               	movwf	tblptru,c
  5271  00176C                     	endif
  5272  00176C  0008               	tblrd		*
  5273  00176E  50F5               	movf	tablat,w,c
  5274  001770  6E10               	movwf	(??_atoi+2)^0,c
  5275  001772  6A11               	clrf	(??_atoi+3)^0,c
  5276  001774  500E               	movf	??_atoi^0,w,c
  5277  001776  2610               	addwf	(??_atoi+2)^0,f,c
  5278  001778  500F               	movf	(??_atoi+1)^0,w,c
  5279  00177A  2211               	addwfc	(??_atoi+3)^0,f,c
  5280  00177C  5011               	movf	(??_atoi+3)^0,w,c
  5281  00177E  E10A               	bnz	u3830
  5282  001780  0E0A               	movlw	10
  5283  001782  5C10               	subwf	(??_atoi+2)^0,w,c
  5284  001784  A0D8               	btfss	status,0,c
  5285  001786  EFC7  F00B         	goto	u3831
  5286  00178A  EFCA  F00B         	goto	u3830
  5287  00178E                     u3831:
  5288  00178E  0E01               	movlw	1
  5289  001790  EFCB  F00B         	goto	u3840
  5290  001794                     u3830:
  5291  001794  0E00               	movlw	0
  5292  001796                     u3840:
  5293  001796  6E16               	movwf	_atoi$2261^0,c
  5294  001798  6A17               	clrf	(_atoi$2261+1)^0,c
  5295  00179A  5016               	movf	_atoi$2261^0,w,c
  5296  00179C  1017               	iorwf	(_atoi$2261+1)^0,w,c
  5297  00179E  A4D8               	btfss	status,2,c
  5298  0017A0  EFD4  F00B         	goto	u3851
  5299  0017A4  EFD6  F00B         	goto	u3850
  5300  0017A8                     u3851:
  5301  0017A8  EF8F  F00B         	goto	l3191
  5302  0017AC                     u3850:
  5303  0017AC  5012               	movf	atoi@neg^0,w,c
  5304  0017AE  1013               	iorwf	(atoi@neg+1)^0,w,c
  5305  0017B0  A4D8               	btfss	status,2,c
  5306  0017B2  EFDD  F00B         	goto	u3861
  5307  0017B6  EFDF  F00B         	goto	u3860
  5308  0017BA                     u3861:
  5309  0017BA  EFED  F00B         	goto	l1129
  5310  0017BE                     u3860:
  5311  0017BE  C019  F00E         	movff	atoi@n,??_atoi
  5312  0017C2  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  5313  0017C6  1E0E               	comf	??_atoi^0,f,c
  5314  0017C8  1E0F               	comf	(??_atoi+1)^0,f,c
  5315  0017CA  4A0E               	infsnz	??_atoi^0,f,c
  5316  0017CC  2A0F               	incf	(??_atoi+1)^0,f,c
  5317  0017CE  C00E  F00C         	movff	??_atoi,?_atoi
  5318  0017D2  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  5319  0017D6  EFF1  F00B         	goto	l1132
  5320  0017DA                     l1129:
  5321  0017DA  C019  F00C         	movff	atoi@n,?_atoi
  5322  0017DE  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  5323  0017E2                     l1132:
  5324  0017E2  0012               	return		;funcret
  5325  0017E4                     __end_of_atoi:
  5326                           	callstack 0
  5327                           
  5328 ;; *************** function _isspace *****************
  5329 ;; Defined at:
  5330 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  5331 ;; Parameters:    Size  Location     Type
  5332 ;;  c               2    4[COMRAM] int 
  5333 ;; Auto vars:     Size  Location     Type
  5334 ;;		None
  5335 ;; Return value:  Size  Location     Type
  5336 ;;                  2    4[COMRAM] int 
  5337 ;; Registers used:
  5338 ;;		wreg, status,2, status,0
  5339 ;; Tracked objects:
  5340 ;;		On entry : 0/0
  5341 ;;		On exit  : 0/0
  5342 ;;		Unchanged: 0/0
  5343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5344 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5345 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5346 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5347 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5348 ;;Total ram usage:        7 bytes
  5349 ;; Hardware stack levels used: 1
  5350 ;; Hardware stack levels required when called: 2
  5351 ;; This function calls:
  5352 ;;		Nothing
  5353 ;; This function is called by:
  5354 ;;		_atoi
  5355 ;; This function uses a non-reentrant model
  5356 ;;
  5357                           
  5358                           	psect	text29
  5359  002668                     __ptext29:
  5360                           	callstack 0
  5361  002668                     _isspace:
  5362                           	callstack 23
  5363  002668  0E01               	movlw	1
  5364  00266A  6E0B               	movwf	_isspace$2277^0,c
  5365  00266C  0E20               	movlw	32
  5366  00266E  1805               	xorwf	isspace@c^0,w,c
  5367  002670  1006               	iorwf	(isspace@c+1)^0,w,c
  5368  002672  B4D8               	btfsc	status,2,c
  5369  002674  EF3E  F013         	goto	u3631
  5370  002678  EF40  F013         	goto	u3630
  5371  00267C                     u3631:
  5372  00267C  EF59  F013         	goto	l3101
  5373  002680                     u3630:
  5374  002680  0EF7               	movlw	247
  5375  002682  6E07               	movwf	??_isspace^0,c
  5376  002684  0EFF               	movlw	255
  5377  002686  6E08               	movwf	(??_isspace+1)^0,c
  5378  002688  C005  F009         	movff	isspace@c,??_isspace+2
  5379  00268C  C006  F00A         	movff	isspace@c+1,??_isspace+3
  5380  002690  5007               	movf	??_isspace^0,w,c
  5381  002692  2609               	addwf	(??_isspace+2)^0,f,c
  5382  002694  5008               	movf	(??_isspace+1)^0,w,c
  5383  002696  220A               	addwfc	(??_isspace+3)^0,f,c
  5384  002698  500A               	movf	(??_isspace+3)^0,w,c
  5385  00269A  E109               	bnz	u3640
  5386  00269C  0E05               	movlw	5
  5387  00269E  5C09               	subwf	(??_isspace+2)^0,w,c
  5388  0026A0  A0D8               	btfss	status,0,c
  5389  0026A2  EF55  F013         	goto	u3641
  5390  0026A6  EF57  F013         	goto	u3640
  5391  0026AA                     u3641:
  5392  0026AA  EF59  F013         	goto	l3101
  5393  0026AE                     u3640:
  5394  0026AE  0E00               	movlw	0
  5395  0026B0  6E0B               	movwf	_isspace$2277^0,c
  5396  0026B2                     l3101:
  5397  0026B2  C00B  F005         	movff	_isspace$2277,?_isspace
  5398  0026B6  6A06               	clrf	(?_isspace+1)^0,c
  5399  0026B8  0012               	return		;funcret
  5400  0026BA                     __end_of_isspace:
  5401                           	callstack 0
  5402                           
  5403 ;; *************** function _isdigit *****************
  5404 ;; Defined at:
  5405 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  5406 ;; Parameters:    Size  Location     Type
  5407 ;;  c               2    4[COMRAM] int 
  5408 ;; Auto vars:     Size  Location     Type
  5409 ;;		None
  5410 ;; Return value:  Size  Location     Type
  5411 ;;                  2    4[COMRAM] int 
  5412 ;; Registers used:
  5413 ;;		wreg, status,2, status,0
  5414 ;; Tracked objects:
  5415 ;;		On entry : 0/0
  5416 ;;		On exit  : 0/0
  5417 ;;		Unchanged: 0/0
  5418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5419 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5421 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5422 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5423 ;;Total ram usage:        6 bytes
  5424 ;; Hardware stack levels used: 1
  5425 ;; Hardware stack levels required when called: 2
  5426 ;; This function calls:
  5427 ;;		Nothing
  5428 ;; This function is called by:
  5429 ;;		_vfpfcnvrt
  5430 ;;		_atoi
  5431 ;; This function uses a non-reentrant model
  5432 ;;
  5433                           
  5434                           	psect	text30
  5435  002814                     __ptext30:
  5436                           	callstack 0
  5437  002814                     _isdigit:
  5438                           	callstack 24
  5439  002814  0ED0               	movlw	208
  5440  002816  6E07               	movwf	??_isdigit^0,c
  5441  002818  0EFF               	movlw	255
  5442  00281A  6E08               	movwf	(??_isdigit+1)^0,c
  5443  00281C  C005  F009         	movff	isdigit@c,??_isdigit+2
  5444  002820  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  5445  002824  5007               	movf	??_isdigit^0,w,c
  5446  002826  2609               	addwf	(??_isdigit+2)^0,f,c
  5447  002828  5008               	movf	(??_isdigit+1)^0,w,c
  5448  00282A  220A               	addwfc	(??_isdigit+3)^0,f,c
  5449  00282C  500A               	movf	(??_isdigit+3)^0,w,c
  5450  00282E  E10A               	bnz	u3610
  5451  002830  0E0A               	movlw	10
  5452  002832  5C09               	subwf	(??_isdigit+2)^0,w,c
  5453  002834  A0D8               	btfss	status,0,c
  5454  002836  EF1F  F014         	goto	u3611
  5455  00283A  EF22  F014         	goto	u3610
  5456  00283E                     u3611:
  5457  00283E  0E01               	movlw	1
  5458  002840  EF23  F014         	goto	u3620
  5459  002844                     u3610:
  5460  002844  0E00               	movlw	0
  5461  002846                     u3620:
  5462  002846  6E05               	movwf	?_isdigit^0,c
  5463  002848  6A06               	clrf	(?_isdigit+1)^0,c
  5464  00284A  0012               	return		;funcret
  5465  00284C                     __end_of_isdigit:
  5466                           	callstack 0
  5467                           
  5468 ;; *************** function ___wmul *****************
  5469 ;; Defined at:
  5470 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  5471 ;; Parameters:    Size  Location     Type
  5472 ;;  multiplier      2    4[COMRAM] unsigned int 
  5473 ;;  multiplicand    2    6[COMRAM] unsigned int 
  5474 ;; Auto vars:     Size  Location     Type
  5475 ;;  product         2    8[COMRAM] unsigned int 
  5476 ;; Return value:  Size  Location     Type
  5477 ;;                  2    4[COMRAM] unsigned int 
  5478 ;; Registers used:
  5479 ;;		wreg, status,2, status,0, prodl, prodh
  5480 ;; Tracked objects:
  5481 ;;		On entry : 0/0
  5482 ;;		On exit  : 0/0
  5483 ;;		Unchanged: 0/0
  5484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5485 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5486 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5488 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5489 ;;Total ram usage:        6 bytes
  5490 ;; Hardware stack levels used: 1
  5491 ;; Hardware stack levels required when called: 2
  5492 ;; This function calls:
  5493 ;;		Nothing
  5494 ;; This function is called by:
  5495 ;;		_atoi
  5496 ;; This function uses a non-reentrant model
  5497 ;;
  5498                           
  5499                           	psect	text31
  5500  00293A                     __ptext31:
  5501                           	callstack 0
  5502  00293A                     ___wmul:
  5503                           	callstack 23
  5504  00293A  5005               	movf	___wmul@multiplier^0,w,c
  5505  00293C  0207               	mulwf	___wmul@multiplicand^0,c
  5506  00293E  CFF3 F009          	movff	prodl,___wmul@product
  5507  002942  CFF4 F00A          	movff	prodh,___wmul@product+1
  5508  002946  5005               	movf	___wmul@multiplier^0,w,c
  5509  002948  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  5510  00294A  50F3               	movf	243,w,c
  5511  00294C  260A               	addwf	(___wmul@product+1)^0,f,c
  5512  00294E  5006               	movf	(___wmul@multiplier+1)^0,w,c
  5513  002950  0207               	mulwf	___wmul@multiplicand^0,c
  5514  002952  50F3               	movf	243,w,c
  5515  002954  260A               	addwf	(___wmul@product+1)^0,f,c
  5516  002956  C009  F005         	movff	___wmul@product,?___wmul
  5517  00295A  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  5518  00295E  0012               	return		;funcret
  5519  002960                     __end_of___wmul:
  5520                           	callstack 0
  5521                           
  5522 ;; *************** function _LCD_setline *****************
  5523 ;; Defined at:
  5524 ;;		line 111 in file "LCD.c"
  5525 ;; Parameters:    Size  Location     Type
  5526 ;;  line            1    wreg     unsigned char 
  5527 ;; Auto vars:     Size  Location     Type
  5528 ;;  line            1    7[COMRAM] unsigned char 
  5529 ;; Return value:  Size  Location     Type
  5530 ;;                  1    wreg      void 
  5531 ;; Registers used:
  5532 ;;		wreg, status,2, status,0, cstack
  5533 ;; Tracked objects:
  5534 ;;		On entry : 0/0
  5535 ;;		On exit  : 0/0
  5536 ;;		Unchanged: 0/0
  5537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5539 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5541 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5542 ;;Total ram usage:        1 bytes
  5543 ;; Hardware stack levels used: 1
  5544 ;; Hardware stack levels required when called: 5
  5545 ;; This function calls:
  5546 ;;		_LCD_sendbyte
  5547 ;; This function is called by:
  5548 ;;		_LCD_init
  5549 ;;		_time_incre
  5550 ;; This function uses a non-reentrant model
  5551 ;;
  5552                           
  5553                           	psect	text32
  5554  002704                     __ptext32:
  5555                           	callstack 0
  5556  002704                     _LCD_setline:
  5557                           	callstack 24
  5558                           
  5559                           ;incstack = 0
  5560                           ;LCD_setline@line stored from wreg
  5561  002704  6E08               	movwf	LCD_setline@line^0,c
  5562  002706                     
  5563                           ;LCD.c: 113:     if (line==1) {LCD_sendbyte(0x80,0);}
  5564  002706  0408               	decf	LCD_setline@line^0,w,c
  5565  002708  A4D8               	btfss	status,2,c
  5566  00270A  EF89  F013         	goto	u2451
  5567  00270E  EF8B  F013         	goto	u2450
  5568  002712                     u2451:
  5569  002712  EF90  F013         	goto	l2529
  5570  002716                     u2450:
  5571  002716  0E00               	movlw	0
  5572  002718  6E06               	movwf	LCD_sendbyte@type^0,c
  5573  00271A  0E80               	movlw	128
  5574  00271C  EC5B  F014         	call	_LCD_sendbyte
  5575  002720                     l2529:
  5576                           
  5577                           ;LCD.c: 114:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  5578  002720  0EA0               	movlw	160
  5579  002722                     u4287:
  5580  002722  D000               	nop2	
  5581  002724  2EE8               	decfsz	wreg,f,c
  5582  002726  D7FD               	bra	u4287
  5583  002728                     
  5584                           ;LCD.c: 117:     if (line==2) {LCD_sendbyte(0xC0,0);}
  5585  002728  0E02               	movlw	2
  5586  00272A  1808               	xorwf	LCD_setline@line^0,w,c
  5587  00272C  A4D8               	btfss	status,2,c
  5588  00272E  EF9B  F013         	goto	u2461
  5589  002732  EF9D  F013         	goto	u2460
  5590  002736                     u2461:
  5591  002736  EFA2  F013         	goto	l2535
  5592  00273A                     u2460:
  5593  00273A  0E00               	movlw	0
  5594  00273C  6E06               	movwf	LCD_sendbyte@type^0,c
  5595  00273E  0EC0               	movlw	192
  5596  002740  EC5B  F014         	call	_LCD_sendbyte
  5597  002744                     l2535:
  5598                           
  5599                           ;LCD.c: 118:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  5600  002744  0EA0               	movlw	160
  5601  002746                     u4297:
  5602  002746  D000               	nop2	
  5603  002748  2EE8               	decfsz	wreg,f,c
  5604  00274A  D7FD               	bra	u4297
  5605  00274C  0012               	return		;funcret
  5606  00274E                     __end_of_LCD_setline:
  5607                           	callstack 0
  5608                           
  5609 ;; *************** function _LCD_sendstring *****************
  5610 ;; Defined at:
  5611 ;;		line 125 in file "LCD.c"
  5612 ;; Parameters:    Size  Location     Type
  5613 ;;  string          2    7[COMRAM] PTR unsigned char 
  5614 ;;		 -> time_incre@buf2(40), time_incre@buf1(40), LCD_init@buf(40), 
  5615 ;; Auto vars:     Size  Location     Type
  5616 ;;		None
  5617 ;; Return value:  Size  Location     Type
  5618 ;;                  1    wreg      void 
  5619 ;; Registers used:
  5620 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5621 ;; Tracked objects:
  5622 ;;		On entry : 0/0
  5623 ;;		On exit  : 0/0
  5624 ;;		Unchanged: 0/0
  5625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5626 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5629 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5630 ;;Total ram usage:        2 bytes
  5631 ;; Hardware stack levels used: 1
  5632 ;; Hardware stack levels required when called: 5
  5633 ;; This function calls:
  5634 ;;		_LCD_sendbyte
  5635 ;; This function is called by:
  5636 ;;		_LCD_init
  5637 ;;		_time_incre
  5638 ;; This function uses a non-reentrant model
  5639 ;;
  5640                           
  5641                           	psect	text33
  5642  002882                     __ptext33:
  5643                           	callstack 0
  5644  002882                     _LCD_sendstring:
  5645                           	callstack 24
  5646  002882                     
  5647                           ;LCD.c: 127:     while (*string != 0) {
  5648  002882  EF4E  F014         	goto	l2555
  5649  002886                     l2551:
  5650                           
  5651                           ;LCD.c: 128:         LCD_sendbyte(*string++,1);
  5652  002886  0E01               	movlw	1
  5653  002888  6E06               	movwf	LCD_sendbyte@type^0,c
  5654  00288A  C008  FFD9         	movff	LCD_sendstring@string,fsr2l
  5655  00288E  C009  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  5656  002892  50DF               	movf	indf2,w,c
  5657  002894  EC5B  F014         	call	_LCD_sendbyte
  5658  002898  4A08               	infsnz	LCD_sendstring@string^0,f,c
  5659  00289A  2A09               	incf	(LCD_sendstring@string+1)^0,f,c
  5660  00289C                     l2555:
  5661                           
  5662                           ;LCD.c: 127:     while (*string != 0) {
  5663  00289C  C008  FFD9         	movff	LCD_sendstring@string,fsr2l
  5664  0028A0  C009  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  5665  0028A4  50DF               	movf	indf2,w,c
  5666  0028A6  A4D8               	btfss	status,2,c
  5667  0028A8  EF58  F014         	goto	u2471
  5668  0028AC  EF5A  F014         	goto	u2470
  5669  0028B0                     u2471:
  5670  0028B0  EF43  F014         	goto	l2551
  5671  0028B4                     u2470:
  5672  0028B4  0012               	return		;funcret
  5673  0028B6                     __end_of_LCD_sendstring:
  5674                           	callstack 0
  5675                           
  5676 ;; *************** function _LCD_sendbyte *****************
  5677 ;; Defined at:
  5678 ;;		line 37 in file "LCD.c"
  5679 ;; Parameters:    Size  Location     Type
  5680 ;;  Byte            1    wreg     unsigned char 
  5681 ;;  type            1    5[COMRAM] unsigned char 
  5682 ;; Auto vars:     Size  Location     Type
  5683 ;;  Byte            1    6[COMRAM] unsigned char 
  5684 ;; Return value:  Size  Location     Type
  5685 ;;                  1    wreg      void 
  5686 ;; Registers used:
  5687 ;;		wreg, status,2, status,0, cstack
  5688 ;; Tracked objects:
  5689 ;;		On entry : 0/0
  5690 ;;		On exit  : 0/0
  5691 ;;		Unchanged: 0/0
  5692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5693 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5694 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5696 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5697 ;;Total ram usage:        2 bytes
  5698 ;; Hardware stack levels used: 1
  5699 ;; Hardware stack levels required when called: 4
  5700 ;; This function calls:
  5701 ;;		_LCD_sendnibble
  5702 ;; This function is called by:
  5703 ;;		_LCD_init
  5704 ;;		_LCD_setline
  5705 ;;		_LCD_sendstring
  5706 ;; This function uses a non-reentrant model
  5707 ;;
  5708                           
  5709                           	psect	text34
  5710  0028B6                     __ptext34:
  5711                           	callstack 0
  5712  0028B6                     _LCD_sendbyte:
  5713                           	callstack 24
  5714                           
  5715                           ;incstack = 0
  5716                           ;LCD_sendbyte@Byte stored from wreg
  5717  0028B6  6E07               	movwf	LCD_sendbyte@Byte^0,c
  5718  0028B8                     
  5719                           ;LCD.c: 39:     if (type) {LATCbits.LATC6 = 1;} else {LATCbits.LATC6 = 0;}
  5720  0028B8  5006               	movf	LCD_sendbyte@type^0,w,c
  5721  0028BA  B4D8               	btfsc	status,2,c
  5722  0028BC  EF62  F014         	goto	u2361
  5723  0028C0  EF64  F014         	goto	u2360
  5724  0028C4                     u2361:
  5725  0028C4  EF67  F014         	goto	l208
  5726  0028C8                     u2360:
  5727  0028C8  8C7B               	bsf	123,6,c	;volatile
  5728  0028CA  EF68  F014         	goto	l2457
  5729  0028CE                     l208:
  5730  0028CE  9C7B               	bcf	123,6,c	;volatile
  5731  0028D0                     l2457:
  5732                           
  5733                           ;LCD.c: 42:     LCD_sendnibble(Byte>>4);
  5734  0028D0  3807               	swapf	LCD_sendbyte@Byte^0,w,c
  5735  0028D2  0B0F               	andlw	15
  5736  0028D4  EC7A  F012         	call	_LCD_sendnibble
  5737                           
  5738                           ;LCD.c: 45:     LCD_sendnibble(Byte&0b00001111);
  5739  0028D8  5007               	movf	LCD_sendbyte@Byte^0,w,c
  5740  0028DA  0B0F               	andlw	15
  5741  0028DC  EC7A  F012         	call	_LCD_sendnibble
  5742  0028E0                     
  5743                           ;LCD.c: 48:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  5744  0028E0  0EA0               	movlw	160
  5745  0028E2                     u4307:
  5746  0028E2  D000               	nop2	
  5747  0028E4  2EE8               	decfsz	wreg,f,c
  5748  0028E6  D7FD               	bra	u4307
  5749  0028E8  0012               	return		;funcret
  5750  0028EA                     __end_of_LCD_sendbyte:
  5751                           	callstack 0
  5752                           
  5753 ;; *************** function _LCD_sendnibble *****************
  5754 ;; Defined at:
  5755 ;;		line 21 in file "LCD.c"
  5756 ;; Parameters:    Size  Location     Type
  5757 ;;  number          1    wreg     unsigned char 
  5758 ;; Auto vars:     Size  Location     Type
  5759 ;;  number          1    4[COMRAM] unsigned char 
  5760 ;; Return value:  Size  Location     Type
  5761 ;;                  1    wreg      void 
  5762 ;; Registers used:
  5763 ;;		wreg, cstack
  5764 ;; Tracked objects:
  5765 ;;		On entry : 0/0
  5766 ;;		On exit  : 0/0
  5767 ;;		Unchanged: 0/0
  5768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5770 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5772 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5773 ;;Total ram usage:        1 bytes
  5774 ;; Hardware stack levels used: 1
  5775 ;; Hardware stack levels required when called: 3
  5776 ;; This function calls:
  5777 ;;		_LCD_E_TOG
  5778 ;; This function is called by:
  5779 ;;		_LCD_sendbyte
  5780 ;;		_LCD_init
  5781 ;; This function uses a non-reentrant model
  5782 ;;
  5783                           
  5784                           	psect	text35
  5785  0024F4                     __ptext35:
  5786                           	callstack 0
  5787  0024F4                     _LCD_sendnibble:
  5788                           	callstack 24
  5789                           
  5790                           ;incstack = 0
  5791                           ;LCD_sendnibble@number stored from wreg
  5792  0024F4  6E05               	movwf	LCD_sendnibble@number^0,c
  5793  0024F6                     
  5794                           ;LCD.c: 23:     if (number & 0b0001) {LATBbits.LATB3 = 1;} else {LATBbits.LATB3 = 0;}
  5795  0024F6  A005               	btfss	LCD_sendnibble@number^0,0,c
  5796  0024F8  EF80  F012         	goto	u2211
  5797  0024FC  EF82  F012         	goto	u2210
  5798  002500                     u2211:
  5799  002500  EF85  F012         	goto	l197
  5800  002504                     u2210:
  5801  002504  867A               	bsf	122,3,c	;volatile
  5802  002506  EF86  F012         	goto	l2341
  5803  00250A                     l197:
  5804  00250A  967A               	bcf	122,3,c	;volatile
  5805  00250C                     l2341:
  5806                           
  5807                           ;LCD.c: 24:     if (number & 0b0010) {LATBbits.LATB2 = 1;} else {LATBbits.LATB2 = 0;}
  5808  00250C  A205               	btfss	LCD_sendnibble@number^0,1,c
  5809  00250E  EF8B  F012         	goto	u2221
  5810  002512  EF8D  F012         	goto	u2220
  5811  002516                     u2221:
  5812  002516  EF90  F012         	goto	l199
  5813  00251A                     u2220:
  5814  00251A  847A               	bsf	122,2,c	;volatile
  5815  00251C  EF91  F012         	goto	l2345
  5816  002520                     l199:
  5817  002520  947A               	bcf	122,2,c	;volatile
  5818  002522                     l2345:
  5819                           
  5820                           ;LCD.c: 25:     if (number & 0b0100) {LATEbits.LATE3 = 1;} else {LATEbits.LATE3 = 0;}
  5821  002522  A405               	btfss	LCD_sendnibble@number^0,2,c
  5822  002524  EF96  F012         	goto	u2231
  5823  002528  EF98  F012         	goto	u2230
  5824  00252C                     u2231:
  5825  00252C  EF9B  F012         	goto	l201
  5826  002530                     u2230:
  5827  002530  867D               	bsf	125,3,c	;volatile
  5828  002532  EF9C  F012         	goto	l2349
  5829  002536                     l201:
  5830  002536  967D               	bcf	125,3,c	;volatile
  5831  002538                     l2349:
  5832                           
  5833                           ;LCD.c: 26:     if (number & 0b1000) {LATEbits.LATE1 = 1;} else {LATEbits.LATE1 = 0;}
  5834  002538  A605               	btfss	LCD_sendnibble@number^0,3,c
  5835  00253A  EFA1  F012         	goto	u2241
  5836  00253E  EFA3  F012         	goto	u2240
  5837  002542                     u2241:
  5838  002542  EFA6  F012         	goto	l203
  5839  002546                     u2240:
  5840  002546  827D               	bsf	125,1,c	;volatile
  5841  002548  EFA7  F012         	goto	l2353
  5842  00254C                     l203:
  5843  00254C  927D               	bcf	125,1,c	;volatile
  5844  00254E                     l2353:
  5845                           
  5846                           ;LCD.c: 28:     LCD_E_TOG();
  5847  00254E  EC04  F015         	call	_LCD_E_TOG	;wreg free
  5848  002552                     
  5849                           ;LCD.c: 29:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  5850  002552  0E1A               	movlw	26
  5851  002554                     u4317:
  5852  002554  2EE8               	decfsz	wreg,f,c
  5853  002556  D7FE               	bra	u4317
  5854  002558  D000               	nop2	
  5855  00255A  0012               	return		;funcret
  5856  00255C                     __end_of_LCD_sendnibble:
  5857                           	callstack 0
  5858                           
  5859 ;; *************** function _LCD_E_TOG *****************
  5860 ;; Defined at:
  5861 ;;		line 11 in file "LCD.c"
  5862 ;; Parameters:    Size  Location     Type
  5863 ;;		None
  5864 ;; Auto vars:     Size  Location     Type
  5865 ;;		None
  5866 ;; Return value:  Size  Location     Type
  5867 ;;                  1    wreg      void 
  5868 ;; Registers used:
  5869 ;;		wreg
  5870 ;; Tracked objects:
  5871 ;;		On entry : 0/0
  5872 ;;		On exit  : 0/0
  5873 ;;		Unchanged: 0/0
  5874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5879 ;;Total ram usage:        0 bytes
  5880 ;; Hardware stack levels used: 1
  5881 ;; Hardware stack levels required when called: 2
  5882 ;; This function calls:
  5883 ;;		Nothing
  5884 ;; This function is called by:
  5885 ;;		_LCD_sendnibble
  5886 ;; This function uses a non-reentrant model
  5887 ;;
  5888                           
  5889                           	psect	text36
  5890  002A08                     __ptext36:
  5891                           	callstack 0
  5892  002A08                     _LCD_E_TOG:
  5893                           	callstack 24
  5894  002A08                     
  5895                           ;LCD.c: 12:  LATCbits.LATC2 = 1;
  5896  002A08  847B               	bsf	123,2,c	;volatile
  5897  002A0A                     
  5898                           ;LCD.c: 13:  _delay((unsigned long)((2)*(64000000/4000000.0)));
  5899  002A0A  0E0A               	movlw	10
  5900  002A0C                     u4327:
  5901  002A0C  2EE8               	decfsz	wreg,f,c
  5902  002A0E  D7FE               	bra	u4327
  5903  002A10  D000               	nop2	
  5904  002A12                     
  5905                           ;LCD.c: 14:  LATCbits.LATC2 = 0;
  5906  002A12  947B               	bcf	123,2,c	;volatile
  5907  002A14  0012               	return		;funcret
  5908  002A16                     __end_of_LCD_E_TOG:
  5909                           	callstack 0
  5910                           
  5911 ;; *************** function _Interrupts_init *****************
  5912 ;; Defined at:
  5913 ;;		line 12 in file "interrupts.c"
  5914 ;; Parameters:    Size  Location     Type
  5915 ;;  current        12    4[COMRAM] struct .
  5916 ;; Auto vars:     Size  Location     Type
  5917 ;;		None
  5918 ;; Return value:  Size  Location     Type
  5919 ;;                  1    wreg      void 
  5920 ;; Registers used:
  5921 ;;		wreg, status,2, status,0
  5922 ;; Tracked objects:
  5923 ;;		On entry : 0/0
  5924 ;;		On exit  : 0/0
  5925 ;;		Unchanged: 0/0
  5926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5927 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5930 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5931 ;;Total ram usage:       12 bytes
  5932 ;; Hardware stack levels used: 1
  5933 ;; Hardware stack levels required when called: 2
  5934 ;; This function calls:
  5935 ;;		Nothing
  5936 ;; This function is called by:
  5937 ;;		_main
  5938 ;; This function uses a non-reentrant model
  5939 ;;
  5940                           
  5941                           	psect	text37
  5942  002792                     __ptext37:
  5943                           	callstack 0
  5944  002792                     _Interrupts_init:
  5945                           	callstack 28
  5946  002792                     
  5947                           ;interrupts.c: 13:     if (current.hour<1 || current.hour>=5) {
  5948  002792  500A               	movf	(Interrupts_init@current+5)^0,w,c
  5949  002794  0A80               	xorlw	128
  5950  002796  0F7F               	addlw	-129
  5951  002798  A0D8               	btfss	status,0,c
  5952  00279A  EFD1  F013         	goto	u2841
  5953  00279E  EFD3  F013         	goto	u2840
  5954  0027A2                     u2841:
  5955  0027A2  EFDD  F013         	goto	l138
  5956  0027A6                     u2840:
  5957  0027A6  500A               	movf	(Interrupts_init@current+5)^0,w,c
  5958  0027A8  0A80               	xorlw	128
  5959  0027AA  0F7B               	addlw	-133
  5960  0027AC  A0D8               	btfss	status,0,c
  5961  0027AE  EFDB  F013         	goto	u2851
  5962  0027B2  EFDD  F013         	goto	u2850
  5963  0027B6                     u2851:
  5964  0027B6  EFE1  F013         	goto	l136
  5965  0027BA                     u2850:
  5966  0027BA                     l138:
  5967                           
  5968                           ;interrupts.c: 14:         PIE2bits.C1IE = 1;
  5969  0027BA  010E               	movlb	14	; () banked
  5970  0027BC  812B               	bsf	43,0,b	;volatile
  5971                           
  5972                           ;interrupts.c: 15:     } else {PIE2bits.C1IE = 0;}
  5973  0027BE  EFE3  F013         	goto	l139
  5974  0027C2                     l136:
  5975  0027C2  010E               	movlb	14	; () banked
  5976  0027C4  912B               	bcf	43,0,b	;volatile
  5977  0027C6                     l139:
  5978                           
  5979                           ; BSR set to: 14
  5980                           ;interrupts.c: 16:     PIE0bits.TMR0IE = 1;
  5981  0027C6  8B29               	bsf	41,5,b	;volatile
  5982                           
  5983                           ;interrupts.c: 18:     IPR2bits.C1IP = 1;
  5984  0027C8  8121               	bsf	33,0,b	;volatile
  5985                           
  5986                           ;interrupts.c: 19:     IPR0bits.TMR0IP = 0;
  5987  0027CA  9B1F               	bcf	31,5,b	;volatile
  5988                           
  5989                           ;interrupts.c: 21:     INTCONbits.IPEN = 1;
  5990  0027CC  8AF2               	bsf	242,5,c	;volatile
  5991                           
  5992                           ;interrupts.c: 22:     INTCONbits.PEIE = 1;
  5993  0027CE  8CF2               	bsf	242,6,c	;volatile
  5994                           
  5995                           ;interrupts.c: 23:     INTCONbits.GIE = 1;
  5996  0027D0  8EF2               	bsf	242,7,c	;volatile
  5997  0027D2                     
  5998                           ; BSR set to: 14
  5999  0027D2  0012               	return		;funcret
  6000  0027D4                     __end_of_Interrupts_init:
  6001                           	callstack 0
  6002                           
  6003 ;; *************** function _Comp1_init *****************
  6004 ;; Defined at:
  6005 ;;		line 24 in file "comparator.c"
  6006 ;; Parameters:    Size  Location     Type
  6007 ;;		None
  6008 ;; Auto vars:     Size  Location     Type
  6009 ;;		None
  6010 ;; Return value:  Size  Location     Type
  6011 ;;                  1    wreg      void 
  6012 ;; Registers used:
  6013 ;;		wreg, status,2, cstack
  6014 ;; Tracked objects:
  6015 ;;		On entry : 0/0
  6016 ;;		On exit  : 0/0
  6017 ;;		Unchanged: 0/0
  6018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6023 ;;Total ram usage:        0 bytes
  6024 ;; Hardware stack levels used: 1
  6025 ;; Hardware stack levels required when called: 3
  6026 ;; This function calls:
  6027 ;;		_DAC_init
  6028 ;; This function is called by:
  6029 ;;		_main
  6030 ;; This function uses a non-reentrant model
  6031 ;;
  6032                           
  6033                           	psect	text38
  6034  002960                     __ptext38:
  6035                           	callstack 0
  6036  002960                     _Comp1_init:
  6037                           	callstack 27
  6038  002960                     
  6039                           ;comparator.c: 25:     TRISFbits.TRISF7=1;
  6040  002960  8E86               	bsf	134,7,c	;volatile
  6041  002962                     
  6042                           ;comparator.c: 26:     CM1NCHbits.NCH=0b011;
  6043  002962  010E               	movlb	14	; () banked
  6044  002964  51D2               	movf	210,w,b	;volatile
  6045  002966  0BF8               	andlw	-8
  6046  002968  0903               	iorlw	3
  6047  00296A  6FD2               	movwf	210,b	;volatile
  6048                           
  6049                           ;comparator.c: 27:     CM1PCHbits.PCH=0b101;
  6050  00296C  51D3               	movf	211,w,b	;volatile
  6051  00296E  0BF8               	andlw	-8
  6052  002970  0905               	iorlw	5
  6053  002972  6FD3               	movwf	211,b	;volatile
  6054  002974                     
  6055                           ; BSR set to: 14
  6056                           ;comparator.c: 28:     CM1CON0bits.HYS=1;
  6057  002974  83D0               	bsf	208,1,b	;volatile
  6058  002976                     
  6059                           ; BSR set to: 14
  6060                           ;comparator.c: 29:     CM1CON0bits.POL=1;
  6061  002976  89D0               	bsf	208,4,b	;volatile
  6062  002978                     
  6063                           ; BSR set to: 14
  6064                           ;comparator.c: 30:     CM1CON1bits.INTP=1;
  6065  002978  83D1               	bsf	209,1,b	;volatile
  6066  00297A                     
  6067                           ; BSR set to: 14
  6068                           ;comparator.c: 31:     CM1CON1bits.INTN=1;
  6069  00297A  81D1               	bsf	209,0,b	;volatile
  6070  00297C                     
  6071                           ; BSR set to: 14
  6072                           ;comparator.c: 32:     DAC_init();
  6073  00297C  ECFA  F014         	call	_DAC_init	;wreg free
  6074  002980                     
  6075                           ;comparator.c: 33:     CM1CON0bits.EN=1;
  6076  002980  010E               	movlb	14	; () banked
  6077  002982  8FD0               	bsf	208,7,b	;volatile
  6078  002984                     
  6079                           ; BSR set to: 14
  6080  002984  0012               	return		;funcret
  6081  002986                     __end_of_Comp1_init:
  6082                           	callstack 0
  6083                           
  6084 ;; *************** function _DAC_init *****************
  6085 ;; Defined at:
  6086 ;;		line 8 in file "comparator.c"
  6087 ;; Parameters:    Size  Location     Type
  6088 ;;		None
  6089 ;; Auto vars:     Size  Location     Type
  6090 ;;		None
  6091 ;; Return value:  Size  Location     Type
  6092 ;;                  1    wreg      void 
  6093 ;; Registers used:
  6094 ;;		wreg, status,2
  6095 ;; Tracked objects:
  6096 ;;		On entry : 0/0
  6097 ;;		On exit  : 0/0
  6098 ;;		Unchanged: 0/0
  6099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6104 ;;Total ram usage:        0 bytes
  6105 ;; Hardware stack levels used: 1
  6106 ;; Hardware stack levels required when called: 2
  6107 ;; This function calls:
  6108 ;;		Nothing
  6109 ;; This function is called by:
  6110 ;;		_Comp1_init
  6111 ;; This function uses a non-reentrant model
  6112 ;;
  6113                           
  6114                           	psect	text39
  6115  0029F4                     __ptext39:
  6116                           	callstack 0
  6117  0029F4                     _DAC_init:
  6118                           	callstack 27
  6119  0029F4                     
  6120                           ;comparator.c: 9:     DAC1CON0bits.PSS=0b00;
  6121  0029F4  0EF3               	movlw	-13
  6122  0029F6  010E               	movlb	14	; () banked
  6123  0029F8  17C6               	andwf	198,f,b	;volatile
  6124  0029FA                     
  6125                           ; BSR set to: 14
  6126                           ;comparator.c: 10:     DAC1CON0bits.NSS=0b0;
  6127  0029FA  91C6               	bcf	198,0,b	;volatile
  6128                           
  6129                           ;comparator.c: 15:     DAC1CON1bits.DAC1R=0b11011;
  6130  0029FC  51C7               	movf	199,w,b	;volatile
  6131  0029FE  0BE0               	andlw	-32
  6132  002A00  091B               	iorlw	27
  6133  002A02  6FC7               	movwf	199,b	;volatile
  6134  002A04                     
  6135                           ; BSR set to: 14
  6136                           ;comparator.c: 16:     DAC1CON0bits.DAC1EN=1;
  6137  002A04  8FC6               	bsf	198,7,b	;volatile
  6138  002A06                     
  6139                           ; BSR set to: 14
  6140  002A06  0012               	return		;funcret
  6141  002A08                     __end_of_DAC_init:
  6142                           	callstack 0
  6143                           
  6144 ;; *************** function _ADC_init *****************
  6145 ;; Defined at:
  6146 ;;		line 8 in file "ADC.c"
  6147 ;; Parameters:    Size  Location     Type
  6148 ;;		None
  6149 ;; Auto vars:     Size  Location     Type
  6150 ;;		None
  6151 ;; Return value:  Size  Location     Type
  6152 ;;                  1    wreg      void 
  6153 ;; Registers used:
  6154 ;;		wreg, status,2
  6155 ;; Tracked objects:
  6156 ;;		On entry : 0/0
  6157 ;;		On exit  : 0/0
  6158 ;;		Unchanged: 0/0
  6159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6164 ;;Total ram usage:        0 bytes
  6165 ;; Hardware stack levels used: 1
  6166 ;; Hardware stack levels required when called: 2
  6167 ;; This function calls:
  6168 ;;		Nothing
  6169 ;; This function is called by:
  6170 ;;		_main
  6171 ;; This function uses a non-reentrant model
  6172 ;;
  6173                           
  6174                           	psect	text40
  6175  0029C2                     __ptext40:
  6176                           	callstack 0
  6177  0029C2                     _ADC_init:
  6178                           	callstack 28
  6179  0029C2                     
  6180                           ;ADC.c: 10:     TRISFbits.TRISF7=1;
  6181  0029C2  8E86               	bsf	134,7,c	;volatile
  6182                           
  6183                           ;ADC.c: 11:     ANSELFbits.ANSELF7=1;
  6184  0029C4  010E               	movlb	14	; () banked
  6185  0029C6  8FB4               	bsf	180,7,b	;volatile
  6186                           
  6187                           ;ADC.c: 14:     ADREFbits.ADNREF = 0;
  6188  0029C8  010F               	movlb	15	; () banked
  6189  0029CA  9958               	bcf	88,4,b	;volatile
  6190  0029CC                     
  6191                           ; BSR set to: 15
  6192                           ;ADC.c: 15:     ADREFbits.ADPREF = 0b00;
  6193  0029CC  0EFC               	movlw	-4
  6194  0029CE  1758               	andwf	88,f,b	;volatile
  6195                           
  6196                           ;ADC.c: 16:     ADPCH=0b101111;
  6197  0029D0  0E2F               	movlw	47
  6198  0029D2  6F5F               	movwf	95,b	;volatile
  6199  0029D4                     
  6200                           ; BSR set to: 15
  6201                           ;ADC.c: 17:     ADCON0bits.ADFM = 0;
  6202  0029D4  9460               	bcf	96,2,c	;volatile
  6203  0029D6                     
  6204                           ; BSR set to: 15
  6205                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
  6206  0029D6  8860               	bsf	96,4,c	;volatile
  6207  0029D8                     
  6208                           ; BSR set to: 15
  6209                           ;ADC.c: 19:     ADCON0bits.ADON = 1;
  6210  0029D8  8E60               	bsf	96,7,c	;volatile
  6211  0029DA                     
  6212                           ; BSR set to: 15
  6213  0029DA  0012               	return		;funcret
  6214  0029DC                     __end_of_ADC_init:
  6215                           	callstack 0
  6216                           
  6217 ;; *************** function _LowISR *****************
  6218 ;; Defined at:
  6219 ;;		line 50 in file "interrupts.c"
  6220 ;; Parameters:    Size  Location     Type
  6221 ;;		None
  6222 ;; Auto vars:     Size  Location     Type
  6223 ;;		None
  6224 ;; Return value:  Size  Location     Type
  6225 ;;                  1    wreg      void 
  6226 ;; Registers used:
  6227 ;;		wreg, status,2
  6228 ;; Tracked objects:
  6229 ;;		On entry : 0/0
  6230 ;;		On exit  : 0/0
  6231 ;;		Unchanged: 0/0
  6232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6235 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6236 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6237 ;;Total ram usage:        3 bytes
  6238 ;; Hardware stack levels used: 1
  6239 ;; Hardware stack levels required when called: 1
  6240 ;; This function calls:
  6241 ;;		Nothing
  6242 ;; This function is called by:
  6243 ;;		Interrupt level 1
  6244 ;; This function uses a non-reentrant model
  6245 ;;
  6246                           
  6247                           	psect	intcodelo
  6248  000018                     __pintcodelo:
  6249                           	callstack 0
  6250  000018                     _LowISR:
  6251                           	callstack 20
  6252                           
  6253                           ; BSR set to: 15
  6254                           ;incstack = 0
  6255  000018  8056               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  6256  00001A  CFD8 F002          	movff	status,??_LowISR
  6257  00001E  CFE8 F003          	movff	wreg,??_LowISR+1
  6258  000022  CFE0 F004          	movff	bsr,??_LowISR+2
  6259  000026                     
  6260                           ;interrupts.c: 51:     if (PIR0bits.TMR0IF) {
  6261  000026  010E               	movlb	14	; () banked
  6262  000028  AB33               	btfss	51,5,b	;volatile
  6263  00002A  EF19  F000         	goto	i1u336_21
  6264  00002E  EF1B  F000         	goto	i1u336_20
  6265  000032                     i1u336_21:
  6266  000032  EF24  F000         	goto	i1l160
  6267  000036                     i1u336_20:
  6268  000036                     
  6269                           ; BSR set to: 14
  6270                           ;interrupts.c: 52:         TMR0H = 0b11101110;
  6271  000036  0EEE               	movlw	238
  6272  000038  6ED4               	movwf	212,c	;volatile
  6273                           
  6274                           ;interrupts.c: 53:         TMR0L = 0b10100011;
  6275  00003A  0EA3               	movlw	163
  6276  00003C  6ED3               	movwf	211,c	;volatile
  6277                           
  6278                           ;interrupts.c: 54:         time_flag = 1;
  6279  00003E  0E01               	movlw	1
  6280  000040  0100               	movlb	0	; () banked
  6281  000042  6FF2               	movwf	_time_flag& (0+255),b	;volatile
  6282  000044                     
  6283                           ; BSR set to: 0
  6284                           ;interrupts.c: 55:         PIR0bits.TMR0IF = 0;
  6285  000044  010E               	movlb	14	; () banked
  6286  000046  9B33               	bcf	51,5,b	;volatile
  6287  000048                     i1l160:
  6288                           
  6289                           ; BSR set to: 14
  6290  000048  C004  FFE0         	movff	??_LowISR+2,bsr
  6291  00004C  C003  FFE8         	movff	??_LowISR+1,wreg
  6292  000050  C002  FFD8         	movff	??_LowISR,status
  6293  000054  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  6294  000056  0010               	retfie	
  6295  000058                     __end_of_LowISR:
  6296                           	callstack 0
  6297                           
  6298 ;; *************** function _HighISR *****************
  6299 ;; Defined at:
  6300 ;;		line 34 in file "interrupts.c"
  6301 ;; Parameters:    Size  Location     Type
  6302 ;;		None
  6303 ;; Auto vars:     Size  Location     Type
  6304 ;;		None
  6305 ;; Return value:  Size  Location     Type
  6306 ;;                  1    wreg      void 
  6307 ;; Registers used:
  6308 ;;		wreg, status,2, status,0
  6309 ;; Tracked objects:
  6310 ;;		On entry : 0/0
  6311 ;;		On exit  : 0/0
  6312 ;;		Unchanged: 0/0
  6313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6316 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6317 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6318 ;;Total ram usage:        1 bytes
  6319 ;; Hardware stack levels used: 1
  6320 ;; This function calls:
  6321 ;;		Nothing
  6322 ;; This function is called by:
  6323 ;;		Interrupt level 2
  6324 ;; This function uses a non-reentrant model
  6325 ;;
  6326                           
  6327                           	psect	intcode
  6328  000008                     __pintcode:
  6329                           	callstack 0
  6330  000008                     _HighISR:
  6331                           	callstack 20
  6332                           
  6333                           ; BSR set to: 14
  6334                           ;incstack = 0
  6335  000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6336  00000A  EFE1  F012         	goto	int_func
  6337                           
  6338                           	psect	intcode_body
  6339  0025C2                     __pintcode_body:
  6340                           	callstack 20
  6341  0025C2                     int_func:
  6342                           	callstack 20
  6343  0025C2                     
  6344                           ;interrupts.c: 35:     if (PIR2bits.C1IF) {
  6345  0025C2  010E               	movlb	14	; () banked
  6346  0025C4  A135               	btfss	53,0,b	;volatile
  6347  0025C6  EFE7  F012         	goto	i2u166_41
  6348  0025CA  EFE9  F012         	goto	i2u166_40
  6349  0025CE                     i2u166_41:
  6350  0025CE  EF09  F013         	goto	i2l152
  6351  0025D2                     i2u166_40:
  6352  0025D2                     
  6353                           ; BSR set to: 14
  6354                           ;interrupts.c: 36:         LATDbits.LATD7 = !LATDbits.LATD7;
  6355  0025D2  AE7C               	btfss	124,7,c	;volatile
  6356  0025D4  EFEE  F012         	goto	i2u167_41
  6357  0025D8  EFF2  F012         	goto	i2u167_40
  6358  0025DC                     i2u167_41:
  6359  0025DC  6A01               	clrf	??_HighISR^0,c
  6360  0025DE  2A01               	incf	??_HighISR^0,f,c
  6361  0025E0  EFF3  F012         	goto	i2u168_48
  6362  0025E4                     i2u167_40:
  6363  0025E4  6A01               	clrf	??_HighISR^0,c
  6364  0025E6                     i2u168_48:
  6365  0025E6  3201               	rrcf	??_HighISR^0,f,c
  6366  0025E8  3201               	rrcf	??_HighISR^0,f,c
  6367  0025EA  507C               	movf	124,w,c	;volatile
  6368  0025EC  1801               	xorwf	??_HighISR^0,w,c
  6369  0025EE  0B7F               	andlw	-129
  6370  0025F0  1801               	xorwf	??_HighISR^0,w,c
  6371  0025F2  6E7C               	movwf	124,c	;volatile
  6372  0025F4                     
  6373                           ;interrupts.c: 37:         if (LATDbits.LATD7==0) {sunrise_flag=1;}
  6374  0025F4  BE7C               	btfsc	124,7,c	;volatile
  6375  0025F6  EFFF  F012         	goto	i2u169_41
  6376  0025FA  EF01  F013         	goto	i2u169_40
  6377  0025FE                     i2u169_41:
  6378  0025FE  EF05  F013         	goto	i2l2017
  6379  002602                     i2u169_40:
  6380  002602  0E01               	movlw	1
  6381  002604  6E55               	movwf	_sunrise_flag^0,c	;volatile
  6382  002606  EF07  F013         	goto	i2l2019
  6383  00260A                     i2l2017:
  6384  00260A  0E01               	movlw	1
  6385  00260C  6E54               	movwf	_sunset_flag^0,c	;volatile
  6386  00260E                     i2l2019:
  6387                           
  6388                           ;interrupts.c: 39:         PIR2bits.C1IF = 0;
  6389  00260E  010E               	movlb	14	; () banked
  6390  002610  9135               	bcf	53,0,b	;volatile
  6391  002612                     i2l152:
  6392                           
  6393                           ; BSR set to: 14
  6394  002612  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6395  002614  0011               	retfie		f
  6396  002616                     __end_of_HighISR:
  6397                           	callstack 0
  6398                           
  6399                           	psect	rparam
  6400  0000                     
  6401                           	psect	temp
  6402  000056                     btemp:
  6403                           	callstack 0
  6404  000056                     	ds	1
  6405  0000                     int$flags	set	btemp
  6406  0000                     wtemp8	set	btemp+1
  6407  0000                     ttemp5	set	btemp+1
  6408  0000                     ttemp6	set	btemp+4
  6409  0000                     ttemp7	set	btemp+8
  6410                           
  6411                           	psect	idloc
  6412                           
  6413                           ;Config register IDLOC0 @ 0x200000
  6414                           ;	unspecified, using default values
  6415  200000                     	org	2097152
  6416  200000  0FFF               	dw	4095
  6417                           
  6418                           ;Config register IDLOC1 @ 0x200002
  6419                           ;	unspecified, using default values
  6420  200002                     	org	2097154
  6421  200002  0FFF               	dw	4095
  6422                           
  6423                           ;Config register IDLOC2 @ 0x200004
  6424                           ;	unspecified, using default values
  6425  200004                     	org	2097156
  6426  200004  0FFF               	dw	4095
  6427                           
  6428                           ;Config register IDLOC3 @ 0x200006
  6429                           ;	unspecified, using default values
  6430  200006                     	org	2097158
  6431  200006  0FFF               	dw	4095
  6432                           
  6433                           ;Config register IDLOC4 @ 0x200008
  6434                           ;	unspecified, using default values
  6435  200008                     	org	2097160
  6436  200008  0FFF               	dw	4095
  6437                           
  6438                           ;Config register IDLOC5 @ 0x20000A
  6439                           ;	unspecified, using default values
  6440  20000A                     	org	2097162
  6441  20000A  0FFF               	dw	4095
  6442                           
  6443                           ;Config register IDLOC6 @ 0x20000C
  6444                           ;	unspecified, using default values
  6445  20000C                     	org	2097164
  6446  20000C  0FFF               	dw	4095
  6447                           
  6448                           ;Config register IDLOC7 @ 0x20000E
  6449                           ;	unspecified, using default values
  6450  20000E                     	org	2097166
  6451  20000E  0FFF               	dw	4095
  6452                           
  6453                           	psect	config
  6454                           
  6455                           ;Config register CONFIG1L @ 0x300000
  6456                           ;	External Oscillator mode Selection bits
  6457                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  6458                           ;	Power-up default value for COSC bits
  6459                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  6460  300000                     	org	3145728
  6461  300000  AA                 	db	170
  6462                           
  6463                           ;Config register CONFIG1H @ 0x300001
  6464                           ;	unspecified, using default values
  6465                           ;	Clock Out Enable bit
  6466                           ;	CLKOUTEN = 0x1, unprogrammed default
  6467                           ;	Clock Switch Enable bit
  6468                           ;	CSWEN = 0x1, unprogrammed default
  6469                           ;	Fail-Safe Clock Monitor Enable bit
  6470                           ;	FCMEN = 0x1, unprogrammed default
  6471  300001                     	org	3145729
  6472  300001  FF                 	db	255
  6473                           
  6474                           ;Config register CONFIG2L @ 0x300002
  6475                           ;	unspecified, using default values
  6476                           ;	Master Clear Enable bit
  6477                           ;	MCLRE = 0x1, unprogrammed default
  6478                           ;	Power-up Timer Enable bit
  6479                           ;	PWRTE = 0x1, unprogrammed default
  6480                           ;	Low-power BOR enable bit
  6481                           ;	LPBOREN = 0x1, unprogrammed default
  6482                           ;	Brown-out Reset Enable bits
  6483                           ;	BOREN = 0x3, unprogrammed default
  6484  300002                     	org	3145730
  6485  300002  FF                 	db	255
  6486                           
  6487                           ;Config register CONFIG2H @ 0x300003
  6488                           ;	unspecified, using default values
  6489                           ;	Brown Out Reset Voltage selection bits
  6490                           ;	BORV = 0x3, unprogrammed default
  6491                           ;	ZCD Disable bit
  6492                           ;	ZCD = 0x1, unprogrammed default
  6493                           ;	PPSLOCK bit One-Way Set Enable bit
  6494                           ;	PPS1WAY = 0x1, unprogrammed default
  6495                           ;	Stack Full/Underflow Reset Enable bit
  6496                           ;	STVREN = 0x1, unprogrammed default
  6497                           ;	Debugger Enable bit
  6498                           ;	DEBUG = 0x1, unprogrammed default
  6499                           ;	Extended Instruction Set Enable bit
  6500                           ;	XINST = 0x1, unprogrammed default
  6501  300003                     	org	3145731
  6502  300003  FF                 	db	255
  6503                           
  6504                           ;Config register CONFIG3L @ 0x300004
  6505                           ;	WDT Period Select bits
  6506                           ;	WDTCPS = 0x1F, unprogrammed default
  6507                           ;	WDT operating mode
  6508                           ;	WDTE = OFF, WDT Disabled
  6509  300004                     	org	3145732
  6510  300004  9F                 	db	159
  6511                           
  6512                           ;Config register CONFIG3H @ 0x300005
  6513                           ;	unspecified, using default values
  6514                           ;	WDT Window Select bits
  6515                           ;	WDTCWS = 0x7, unprogrammed default
  6516                           ;	WDT input clock selector
  6517                           ;	WDTCCS = 0x7, unprogrammed default
  6518  300005                     	org	3145733
  6519  300005  FF                 	db	255
  6520                           
  6521                           ;Config register CONFIG4L @ 0x300006
  6522                           ;	unspecified, using default values
  6523                           ;	Write Protection Block 0
  6524                           ;	WRT0 = 0x1, unprogrammed default
  6525                           ;	Write Protection Block 1
  6526                           ;	WRT1 = 0x1, unprogrammed default
  6527                           ;	Write Protection Block 2
  6528                           ;	WRT2 = 0x1, unprogrammed default
  6529                           ;	Write Protection Block 3
  6530                           ;	WRT3 = 0x1, unprogrammed default
  6531                           ;	Write Protection Block 3
  6532                           ;	WRT4 = 0x1, unprogrammed default
  6533                           ;	Write Protection Block 3
  6534                           ;	WRT5 = 0x1, unprogrammed default
  6535                           ;	Write Protection Block 3
  6536                           ;	WRT6 = 0x1, unprogrammed default
  6537                           ;	Write Protection Block 3
  6538                           ;	WRT7 = 0x1, unprogrammed default
  6539  300006                     	org	3145734
  6540  300006  FF                 	db	255
  6541                           
  6542                           ;Config register CONFIG4H @ 0x300007
  6543                           ;	unspecified, using default values
  6544                           ;	Configuration Register Write Protection bit
  6545                           ;	WRTC = 0x1, unprogrammed default
  6546                           ;	Boot Block Write Protection bit
  6547                           ;	WRTB = 0x1, unprogrammed default
  6548                           ;	Data EEPROM Write Protection bit
  6549                           ;	WRTD = 0x1, unprogrammed default
  6550                           ;	Scanner Enable bit
  6551                           ;	SCANE = 0x1, unprogrammed default
  6552                           ;	Low Voltage Programming Enable bit
  6553                           ;	LVP = 0x1, unprogrammed default
  6554  300007                     	org	3145735
  6555  300007  FF                 	db	255
  6556                           
  6557                           ;Config register CONFIG5L @ 0x300008
  6558                           ;	unspecified, using default values
  6559                           ;	UserNVM Program Memory Code Protection bit
  6560                           ;	CP = 0x1, unprogrammed default
  6561                           ;	DataNVM Memory Code Protection bit
  6562                           ;	CPD = 0x1, unprogrammed default
  6563  300008                     	org	3145736
  6564  300008  FF                 	db	255
  6565                           
  6566                           ;Config register CONFIG5H @ 0x300009
  6567                           ;	unspecified, using default values
  6568  300009                     	org	3145737
  6569  300009  FF                 	db	255
  6570                           
  6571                           ;Config register CONFIG6L @ 0x30000A
  6572                           ;	unspecified, using default values
  6573                           ;	Table Read Protection Block 0
  6574                           ;	EBTR0 = 0x1, unprogrammed default
  6575                           ;	Table Read Protection Block 1
  6576                           ;	EBTR1 = 0x1, unprogrammed default
  6577                           ;	Table Read Protection Block 2
  6578                           ;	EBTR2 = 0x1, unprogrammed default
  6579                           ;	Table Read Protection Block 3
  6580                           ;	EBTR3 = 0x1, unprogrammed default
  6581                           ;	Table Read Protection Block 4
  6582                           ;	EBTR4 = 0x1, unprogrammed default
  6583                           ;	Table Read Protection Block 5
  6584                           ;	EBTR5 = 0x1, unprogrammed default
  6585                           ;	Table Read Protection Block 6
  6586                           ;	EBTR6 = 0x1, unprogrammed default
  6587                           ;	Table Read Protection Block 7
  6588                           ;	EBTR7 = 0x1, unprogrammed default
  6589  30000A                     	org	3145738
  6590  30000A  FF                 	db	255
  6591                           
  6592                           ;Config register CONFIG6H @ 0x30000B
  6593                           ;	unspecified, using default values
  6594                           ;	Boot Block Table Read Protection bit
  6595                           ;	EBTRB = 0x1, unprogrammed default
  6596  30000B                     	org	3145739
  6597  30000B  FF                 	db	255
  6598                           tosu	equ	0xFFF
  6599                           tosh	equ	0xFFE
  6600                           tosl	equ	0xFFD
  6601                           stkptr	equ	0xFFC
  6602                           pclatu	equ	0xFFB
  6603                           pclath	equ	0xFFA
  6604                           pcl	equ	0xFF9
  6605                           tblptru	equ	0xFF8
  6606                           tblptrh	equ	0xFF7
  6607                           tblptrl	equ	0xFF6
  6608                           tablat	equ	0xFF5
  6609                           prodh	equ	0xFF4
  6610                           prodl	equ	0xFF3
  6611                           indf0	equ	0xFEF
  6612                           postinc0	equ	0xFEE
  6613                           postdec0	equ	0xFED
  6614                           preinc0	equ	0xFEC
  6615                           plusw0	equ	0xFEB
  6616                           fsr0h	equ	0xFEA
  6617                           fsr0l	equ	0xFE9
  6618                           wreg	equ	0xFE8
  6619                           indf1	equ	0xFE7
  6620                           postinc1	equ	0xFE6
  6621                           postdec1	equ	0xFE5
  6622                           preinc1	equ	0xFE4
  6623                           plusw1	equ	0xFE3
  6624                           fsr1h	equ	0xFE2
  6625                           fsr1l	equ	0xFE1
  6626                           bsr	equ	0xFE0
  6627                           indf2	equ	0xFDF
  6628                           postinc2	equ	0xFDE
  6629                           postdec2	equ	0xFDD
  6630                           preinc2	equ	0xFDC
  6631                           plusw2	equ	0xFDB
  6632                           fsr2h	equ	0xFDA
  6633                           fsr2l	equ	0xFD9
  6634                           status	equ	0xFD8

Data Sizes:
    Strings     30
    Constant    0
    Data        0
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     81      85
    BANK0           160    140     147
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> time_incre@buf2(BANK0[40]), time_incre@buf1(BANK0[40]), LCD_init@buf(BANK0[40]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 40
		 -> time_incre@buf2(BANK0[40]), time_incre@buf1(BANK0[40]), LCD_init@buf(BANK0[40]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2141_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 40
		 -> time_incre@buf2(BANK0[40]), time_incre@buf1(BANK0[40]), LCD_init@buf(BANK0[40]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> time_incre@buf2(BANK0[40]), time_incre@buf1(BANK0[40]), LCD_init@buf(BANK0[40]), 

    LCD_sendstring@string	PTR unsigned char  size(2) Largest target is 40
		 -> time_incre@buf2(BANK0[40]), time_incre@buf1(BANK0[40]), LCD_init@buf(BANK0[40]), 


Critical Paths under _main in COMRAM

    _main->_LCD_init
    _sunrise_sunset->_sun_sync
    _sun_sync->___awdiv
    _LED_toggle->_sunrise
    _LED1_init->_ADC_getval
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _LCD_setline->_LCD_sendbyte
    _LCD_sendstring->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_time_incre
    _time_incre->_sprintf
    _LCD_init->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   33499
                                            128 BANK0     12    12      0
                           _ADC_init
                         _Comp1_init
                    _Interrupts_init
                           _LCD_init
                          _LED1_init
                          _LED2_init
                         _LED_toggle
                  _LEDarray_disp_bin
                      _LEDarray_init
                        _Timer0_init
                     _sunrise_sunset
                         _time_incre
 ---------------------------------------------------------------------------------
 (1) _time_incre                                          93    81     12   15539
                                             79 COMRAM     1     1      0
                                             36 BANK0     92    80     12
                     _LCD_sendstring
                        _LCD_setline
                         _date_check
         _daylightsavingstime_toggle
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _daylightsavingstime_toggle                          14     2     12     470
                                              4 COMRAM    14     2     12
 ---------------------------------------------------------------------------------
 (2) _date_check                                          14     2     12     674
                                              4 COMRAM    14     2     12
 ---------------------------------------------------------------------------------
 (1) _sunrise_sunset                                      12     0     12    1895
                                             27 COMRAM    12     0     12
                           _sun_sync
                            _sunrise
 ---------------------------------------------------------------------------------
 (2) _sun_sync                                            15     3     12    1436
                                             12 COMRAM    15     3     12
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     756
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    3     3      0     198
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LED_toggle                                          13     1     12     597
                                             16 COMRAM    13     1     12
                         _ADC_getval
                            _sunrise
 ---------------------------------------------------------------------------------
 (2) _sunrise                                             12     0     12     315
                                              4 COMRAM    12     0     12
 ---------------------------------------------------------------------------------
 (1) _LED2_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED1_init                                           13     1     12     145
                                              5 COMRAM    13     1     12
                         _ADC_getval
 ---------------------------------------------------------------------------------
 (2) _ADC_getval                                           1     1      0      23
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                            54    42     12   14401
                                             79 COMRAM     2     2      0
                                             36 BANK0     52    40     12
                       _LCD_sendbyte
                     _LCD_sendnibble
                     _LCD_sendstring
                        _LCD_setline
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    10     10   11213
                                             18 BANK0     18     8     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   10361
                                             77 COMRAM     2     2      0
                                             12 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6    9831
                                             67 COMRAM    10     4      6
                                              0 BANK0     12    12      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5683
                                             31 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3417
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1615
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     512
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _LCD_setline                                          1     1      0     882
                                              7 COMRAM     1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (2) _LCD_sendstring                                       2     0      2    1111
                                              7 COMRAM     2     0      2
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (3) _LCD_sendbyte                                         2     1      1     838
                                              5 COMRAM     2     1      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (4) _LCD_sendnibble                                       1     1      0      88
                                              4 COMRAM     1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (5) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                     12     0     12     122
                                              4 COMRAM    12     0     12
 ---------------------------------------------------------------------------------
 (1) _Comp1_init                                           0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _LowISR                                              3     3      0       0
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _HighISR                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Comp1_init
     _DAC_init
   _Interrupts_init
   _LCD_init
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
     _LCD_sendnibble
     _LCD_sendstring
       _LCD_sendbyte
     _LCD_setline
       _LCD_sendbyte
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
           _isdigit
   _LED1_init
     _ADC_getval
   _LED2_init
   _LED_toggle
     _ADC_getval
     _sunrise
   _LEDarray_disp_bin
   _LEDarray_init
   _Timer0_init
   _sunrise_sunset
     _sun_sync
       ___awdiv
     _sunrise
   _time_incre
     _LCD_sendstring
     _LCD_setline
     _date_check
     _daylightsavingstime_toggle
     _sprintf

 _LowISR (ROOT)

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8C      93       5       91.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     51      55       1       90.4%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     108       8        0.0%
DATA                 0      0     108       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Nov 09 14:41:11 2021

                                 l50 29DE                                   l52 29EC  
                                 l53 29F2                                   l47 29DA  
                                 l72 2938                                   l81 1CEC  
                                 l91 1D8C                                   l83 1D0C  
                                 l75 1C8C                                   l93 1D8E  
                                 l85 1D2C                                   l77 1CAC  
                                 l87 1D4C                                   l79 1CCC  
                                 l89 1D6C                         ___awdiv@sign 000A  
                                 bsr 000FE0                  ___wmul@multiplicand 0007  
                  ??_Interrupts_init 0011                                  l110 2A06  
                                l113 2984                                  l201 2536  
                                l210 28E8                                  l203 254C  
                                l140 27D2                                  l205 255A  
                                l213 208C                                  l301 197E  
                                l136 27C2                                  l208 28CE  
                                l224 28B4                                  l304 29A4  
                                l241 26FE                                  l138 27BA  
                                l218 274C                                  l139 27C6  
                                l171 29C0                                  l307 211E  
                                l315 24F2                                  l244 2700  
                                l308 213C                                  l245 2702  
                                l309 2156                                  l318 295E  
                                l432 1B06                                  l248 2A1A  
                                l256 23A8                                  l194 2A14  
                                l276 1E9C                                  l197 250A  
                                l445 1C6A                                  l293 163E  
                                l199 2520                                  l297 1968  
                                l549 22E4                                  l996 2666  
                                _abs 27D4                                  _pad 23AA  
                                wreg 000FE8               Interrupts_init@current 0005  
                __size_of_ADC_getval 0018                          ?_LED_toggle 0011  
                 __size_of_LED1_init 004A                   __size_of_LED2_init 0006  
                               l1101 2812                                 l1030 2430  
                               l1032 246A                                 l1040 1254  
                               l1027 23EE                                 ?_abs 0017  
                               l1132 17E2                                 l1038 124C  
                               l1135 284A                                 l1143 26B8  
                               l1072 0F1A                                 l1129 17DA  
                               l3001 1A12                                 l1058 148A  
                               l3011 1A7C                                 l3003 1A1A  
                               l3101 26B2                                 l3021 1AC6  
                               l3013 1A9C                                 l3005 1A2E  
                               l1093 25B8                                 l1158 2220  
                               l1166 2790                                 l1094 25C0  
                               l2231 2A12                                 l3023 1AE6  
                               l3015 1A9E                                 l3007 1A3C  
                               l3031 1B1A                                 l1175 2880  
                               l3111 1214                                 l1087 11AA  
                               l3201 17AC                                 l3017 1AB0  
                               l3009 1A4E                                 l3041 1B8A  
                               l3033 1B3A                                 l1169 2A1C  
                               l3121 126E                                 l3113 1224  
                               l3105 11AC                                 l1098 280A  
                               l2227 2A08                                 l3203 17BE  
                               l3019 1AB6                                 l3051 1C02  
                               l3043 1B92                                 l3035 1B3E  
                               l3027 1B08                                 l3131 129A  
                               l3123 127C                                 l3115 1226  
                               l3107 11CC                                 l3211 0E48  
                               l2229 2A0A                                 l2341 250C  
                               l3053 1C14                                 l3045 1BA6  
                               l3037 1B4C                                 l3029 1B0C  
                               l3141 13A6                                 l3133 131C  
                               l3125 1282                                 l3117 1240  
                               l3109 11F4                                 l3221 0E7A  
                               l3213 0E56                                 l2501 22DC  
                               l2351 2546                                 l2343 251A  
                               l3047 1BB4                                 l3055 1C1A  
                               l3039 1B6C                                 l3071 23E6  
                               l3063 23AA                                 l3151 1418  
                               l3143 13C4                                 l3135 1322  
                               l3127 128A                                 l3119 125C  
                               l3231 0E98                                 l3223 0E8C  
                               l3215 0E68                                 l3311 255C  
                               l2521 29FA                                 l2353 254E  
                               l2345 2522                                 l2337 24F6  
                               l3057 1C2A                                 l3049 1BE2  
                               l3081 2452                                 l3073 23FA  
                               l3065 23B8                                 l3161 1452  
                               l3153 1426                                 l3145 13DE  
                               l3137 1328                                 l3129 1294  
                               l3217 0E6C                                 l3209 0E20  
                               l3313 2564                                 l3321 2628  
                               l2513 29DC                                 l2601 14D0  
                               l3401 18E2                                 l2523 2A04  
                               l2355 2552                                 l2347 2530  
                               l2339 2504                                 l2531 2728  
                               l3171 1658                                 l3059 1C4A  
                               l3075 240E                                 l3067 23CC  
                               l3155 142C                                 l3163 1462  
                               l3147 13F8                                 l3139 138C  
                               l3251 0F52                                 l3243 0EB0  
                               l3235 0E9E                                 l3227 0E92  
                               l3219 0E78                                 l3315 2572  
                               l3323 2630                                 l3331 1FA2  
                               l2515 29F0                                 l2611 1536  
                               l2603 14EE                                 l3411 1950  
                               l3403 1906                                 l2349 2538  
                               l2453 28B8                                 l2533 273A  
                               l2525 2706                                 l3093 2668  
                               l3173 165C                                 l3085 27D4  
                               l3077 2412                                 l3069 23DA  
                               l3157 143E                                 l3149 1406  
                               l3261 0FD2                                 l3253 0F88  
                               l3245 0F08                                 l3317 2598  
                               l3325 2638                                 l3341 1FE6  
                               l3333 1FBA                                 l2701 26CE  
                               l2461 2222                                 l2613 1548  
                               l2621 1590                                 l2605 1500  
                               l3413 1964                                 l3405 190C  
                               l3421 1ED0                                 l2519 29F4  
                               l2455 28C8                                 l2551 2886  
                               l2535 2744                                 l2527 2716  
                               l3095 266C                                 l3191 171E  
                               l3183 16C0                                 l3175 167C  
                               l3167 1640                                 l3087 27EE  
                               l3079 243E                                 l3159 144A  
                               l3271 1080                                 l3255 0F96  
                               l3247 0F28                                 l3511 0EDA  
                               l3239 0EA4                                 l3327 2654  
                               l3319 2616                                 l3351 200C  
                               l3343 1FEC                                 l3335 1FD0  
                               l2703 26E2                                 l2471 224E  
                               l2463 2226                                 l2631 15EC  
                               l2623 15A4                                 l2615 155A  
                               l2607 1514                                 l3407 193E  
                               l3415 196C                                 l3431 1F10  
                               l3423 1ED4                                 l2457 28D0  
                               l2553 2898                                 l2529 2720  
                               l3089 2814                                 l3097 2680  
                               l3513 1708                                 l3185 16D6  
                               l3177 16B6                                 l3169 1654  
                               l3281 1136                                 l3273 10C8  
                               l3265 101E                                 l3257 0FA4  
                               l3249 0F2A                                 l3361 2040  
                               l3353 2016                                 l3345 1FF6  
                               l3337 1FD6                                 l2705 26F8  
                               l2481 227C                                 l2473 2256  
                               l2465 2234                                 l2641 1628  
                               l2625 15B6                                 l2617 156C  
                               l2609 1524                                 l2633 1600  
                               l3409 194A                                 l3433 1F26  
                               l3425 1ED8                                 l2459 28E0  
                               l2555 289C                                 l3099 26AE  
                               l3195 1758                                 l3187 16DE  
                               l3179 16BA                                 l3283 114A  
                               l3259 0FC4                                 l3267 1030  
                               l3363 2048                                 l3355 2024  
                               l3347 1FFC                                 l3339 1FDC  
                               l2707 2A16                                 l2491 22B6  
                               l2483 2284                                 l2475 225A  
                               l2467 223C                                 l2651 2106  
                               l2635 1604                                 l2643 162C  
                               l2627 15C8                                 l2619 157E  
                               l2571 1DF2                                 l2563 1D90  
                               l3371 17F6                                 l3435 1F4A  
                               l3427 1EDC                                 l3419 1E9E  
                               l2661 29C2                                 l2549 2882  
                               l3189 16E6                                 l3277 1100  
                               l3269 1058                                 l3293 1170  
                               l3365 204E                                 l3357 202E  
                               l3349 2006                                 l2557 2986  
                               l2821 2316                                 l2709 2914  
                               l2493 22B8                                 l2485 2292  
                               l2477 2262                                 l2469 2240  
                               l2653 2114                                 l2637 1608  
                               l2629 15DA                                 l2581 1E4E  
                               l2573 1E02                                 l2565 1DA2  
                               l3381 1856                                 l3373 17FA  
                               l3437 1F6E                                 l3429 1EF2  
                               l2663 29CC                                 l2671 2960  
                               l3199 179A                                 l3295 1198  
                               l3279 1128                                 l3287 1156  
                               l3367 2080                                 l3359 2036  
                               l2559 2992                                 l2831 2356  
                               l2823 2320                                 l2815 22E6  
                               l2495 22BE                                 l2487 2298  
                               l2479 2274                                 l2655 2132  
                               l2647 208E                                 l2751 247C  
                               l2639 161C                                 l2583 1E60  
                               l2591 1E8A                                 l2575 1E06  
                               l2567 1DD0                                 l3391 189C  
                               l3383 187A                                 l3375 1800  
                               l3439 1F92                                 l2665 29D4  
                               l2681 297A                                 l2673 2962  
                               l3289 1164                                 l2833 236C  
                               l2825 2332                                 l2817 22F6  
                               l2841 1C6E                                 l2489 22AE  
                               l2497 22C4                                 l2657 2144  
                               l2649 2100                                 l2761 24E0  
                               l2753 24A0                                 l2585 1E72  
                               l2569 1DE2                                 l2577 1E0E  
                               l3393 18A0                                 l3385 1880  
                               l3377 1834                                 l3369 17E4  
                               l2667 29D6                                 l2683 297C  
                               l2675 2974                                 l2835 2372  
                               l2827 2342                                 l2819 2306  
                               l2851 1CC6                                 l2843 1C86  
                               l2691 29B4                                 l2499 22D4  
                               l2755 24A8                                 l2595 148C  
                               l2587 1E82                                 l2579 1E20  
                               l3395 18C4                                 l3387 1884  
                               l3379 1840                                 l2669 29D8  
                               l2685 2980                                 l2677 2976  
                               l2829 2352                                 l2837 2396  
                               l2861 1D0E                                 l2853 1CCE  
                               l2845 1C8E                                 l2693 29BE  
                               l2757 24B8                                 l2749 246C  
                               l2597 14AA                                 l2589 1E86  
                               l3397 18DA                                 l3389 1898  
                               ?_pad 0015                                 l2679 2978  
                               l2695 2792                                 l2951 2186  
                               l2871 1D66                                 l2863 1D26  
                               l2855 1CE6                                 l2847 1CA6  
                               l2687 29A6                                 l2759 24DC  
                               l2599 14BC                                 l3399 18DE  
                               l2697 27A6                                 l2953 21A4  
                               l2945 2158                                 l2961 275A  
                               l2873 1D6E                                 l2865 1D2E  
                               l2857 1CEE                                 l2849 1CAE  
                               l2689 29AE                                 l2955 21DA  
                               l2947 216A                                 l2963 276C  
                               l2971 285C                                 l2699 26BA  
                               l2875 1D86                                 l2867 1D46  
                               l2859 1D06                                 l2949 217C  
                               l2965 2770                                 l2973 2874  
                               l2869 1D4E                                 l2991 19B6  
                               l2983 1980                                 l2959 274E  
                               l2967 284C                                 l2977 293A  
                               l2993 19C4                                 l2985 1984  
                               l2969 2858                                 l2979 2956  
                               l2995 19E4                                 l2987 1992  
                               l2997 19E8                                 l2989 19B2  
                               l2999 19F4                                 STR_1 0E10  
                               STR_2 0E01                                 STR_3 0E10  
                               u2210 2504                                 u2211 2500  
                               u2220 251A                                 u3100 2316  
                               u2221 2516                                 u3101 2312  
                               u2230 2530                                 u3110 2332  
                               u2231 252C                                 u3111 232E  
                               u2240 2546                                 u3120 2342  
                               u3200 1CC6                                 u2400 2292  
                               u4000 1856                                 u2241 2542  
                               u3121 233E                                 u3201 1CC2  
                               u2401 228E                                 u4001 1852  
                               u3130 2352                                 u3210 1CE6  
                               u2410 22AE                                 u4010 1868  
                               u3131 234E                                 u3211 1CE2  
                               u2411 22AA                                 u4011 1860  
                               u3140 236C                                 u3220 1D06  
                               u2420 22D4                                 u2500 1DD0  
                               u3141 2368                                 u3221 1D02  
                               u2421 22D0                                 u2501 1DCC  
                               u4101 1976                                 u3230 1D26  
                               u2510 1DE2                                 u4030 1898  
                               u3151 237C                                 u3231 1D22  
                               u2511 1DDE                                 u4031 1894  
                               u4111 1EE6                                 u2360 28C8  
                               u3400 21DA                                 u2440 29EC  
                               u3080 22F6                                 u3240 1D46  
                               u2600 14AA                                 u2520 1DF2  
                               u2361 28C4                                 u3401 21D6  
                               u2441 29E8                                 u3161 238E  
                               u3081 22F2                                 u3241 1D42  
                               u2601 14A6                                 u2521 1DEE  
                               u4041 18AA                                 u4121 1EFC  
                               u2450 2716                                 u3410 2790  
                               u3090 2306                                 u3250 1D66  
                               u2370 2234                                 u2610 14BC  
                               u2530 1E02                                 u2451 2712  
                               u3411 278C                                 u3171 23A0  
                               u3091 2302                                 u3251 1D62  
                               u2371 2230                                 u2611 14B8  
                               u2531 1DFE                                 u4051 18BC  
                               u4131 1F1A                                 u2460 273A  
                               u3500 1B1A                                 u3420 2874  
                               u3260 1D86                                 u3180 1C86  
                               u2380 224E                                 u2700 156C  
                               u2620 14D0                                 u2540 1E20  
                               u4060 18DA                                 u4028 186A  
                               u2461 2736                                 u3501 1B16  
                               u3421 2870                                 u3261 1D82  
                               u3181 1C82                                 u2381 224A  
                               u2701 1568                                 u2621 14CC  
                               u2541 1E1C                                 u4061 18D6  
                               u4141 1F30                                 u2470 28B4  
                               u3430 1992                                 u3510 1B4C  
                               u3190 1CA6                                 u2390 2274  
                               u2710 157E                                 u2630 14EE  
                               u2550 1E4E                                 u2471 28B0  
                               u3431 198E                                 u3511 1B48  
                               u4207 1FC4                                 u3191 1CA2  
                               u2391 2270                                 u2711 157A  
                               u2631 14EA                                 u2551 1E4A  
                               u4071 18EC                                 u4151 1F42  
                               u3440 19C4                                 u3520 1B8A  
                               u3600 27EE                                 u2720 1590  
                               u2640 1500                                 u2560 1E60  
                               u3441 19C0                                 u3521 1B86  
                               u3601 27EA                                 u4217 1FD8  
                               u2481 299C                                 u2801 1636  
                               u2721 158C                                 u2641 14FC  
                               u2561 1E5C                                 u4081 18FE  
                               u4161 1F54                                 u3610 2844  
                               u3530 1BB4                                 u3370 216A  
                               u2810 2114                                 u2730 15A4  
                               u2650 1514                                 u2570 1E72  
                               u2490 1DA2                                 u4090 1964  
                               u4307 28E2                                 u3611 283E  
                               u3451 19EE                                 u3531 1BB0  
                               u3371 2166                                 u4227 1FE8  
                               u2811 2110                                 u2731 15A0  
                               u2651 1510                                 u2571 1E6E  
                               u2491 1D9E                                 u4091 1960  
                               u4171 1F66                                 u3620 2846  
                               u3460 1A12                                 u3540 1BE2  
                               u3380 217C                                 u3700 126E  
                               u2820 2132                                 u2740 15B6  
                               u2660 1524                                 u2580 1E82  
                               u4317 2554                                 u3461 1A0E  
                               u3541 1BDE                                 u3381 2178  
                               u3701 126A                                 u4237 1FF8  
                               u2821 212E                                 u2901 2486  
                               u2741 15B2                                 u2661 1520  
                               u2581 1E7E                                 u4181 1F78  
                               u3630 2680                                 u3470 1A3C  
                               u3550 1C2A                                 u3390 21A4  
                               u3710 127C                                 u2750 15C8  
                               u2670 1536                                 u4327 2A0C  
                               u3631 267C                                 u3471 1A38  
                               u3551 1C26                                 u3391 21A0  
                               u3711 1278                                 u4247 2008  
                               u2831 214E                                 u2911 2498  
                               u2751 15C4                                 u2671 1532  
                               u2591 1E94                                 u4191 1F8A  
                               u2840 27A6                                 u3640 26AE  
                               u3800 167C                                 u3480 1A7C  
                               u3560 23B8                                 u3720 13A6  
                               u2920 24B8                                 u2760 15DA  
                               u2680 1548                                 u2841 27A2  
                               u3641 26AA                                 u3801 1678  
                               u3481 1A78                                 u3561 23B4  
                               u3721 13A2                                 u4257 201C  
                               u2921 24B4                                 u2761 15D6  
                               u2681 1544                                 u2850 27BA  
                               u3810 16B6                                 u3490 1AC6  
                               u3570 23DA                                 u3730 13C4  
                               u3650 11DC                                 u2770 15EC  
                               u2690 155A                                 u2851 27B6  
                               u3811 16B2                                 u3491 1AC2  
                               u3571 23D6                                 u3731 13C0  
                               u3651 11D6                                 u4267 2030  
                               u2931 24C2                                 u2771 15E8  
                               u2691 1556                                 u3820 16D2  
                               u3580 2430                                 u3740 13DE  
                               u3660 11DE                                 u3900 0F52  
                               u2860 26CE                                 u2780 1600  
                               u3821 16CE                                 u3581 242C  
                               u3741 13DA                                 u3901 0F4E  
                               u4277 2042                                 u2861 26CA  
                               u2941 24D4                                 u2781 15FC  
                               u3830 1794                                 u3590 243E  
                               u3750 13F8                                 u3670 11F4  
                               u3910 0F96                                 u2870 26E2  
                               u2790 161C                                 u4287 2722  
                               u3831 178E                                 u3591 243A  
                               u3751 13F4                                 u3671 11F0  
                               u3911 0F92                                 u2871 26DE  
                               u2951 24EA                                 u2791 1618  
                               u3840 1796                                 u3760 1406  
                               u3680 1224                                 u3920 1016  
                               u2880 26F8                                 u4297 2746  
                               u3761 1402                                 u3681 1220  
                               u3921 1010                                 u2881 26F4  
                               u3850 17AC                                 u3770 1418  
                               u3690 1240                                 u3930 1018  
                               u2890 247C                                 u3851 17A8  
                               u3771 1414                                 u3691 123C  
                               u2891 2478                                 u3860 17BE  
                               u3780 1426                                 u3940 1030  
                               u3861 17BA                                 u3781 1422  
                               u3941 102C                                 u3790 143E  
                               u3950 1058                                 u3870 0E48  
                               u3791 143A                                 u3951 1054  
                               u3871 0E44                                 u3960 1080  
                               u3880 0F1A                                 u3961 107C  
                               u3881 0F16                                 u3970 1128  
                               u3890 0F28                                 u3971 1124  
                               u3891 0F24                                 u3980 25B8  
                               u3981 25B4                                 u3990 17F6  
                               u3991 17F2                          main@current 00E0  
                 __size_of_LCD_E_TOG 000E                                 abs@a 0017  
                               _dbuf 0100                                 _atoi 1640  
                               _main 1E9E                                 _dtoa 11AC  
                               _prec 00F0                                 _nout 00EC  
                               pad@i 001C                                 pad@p 0019  
                               fsr1h 000FE2                                 fsr2h 000FDA  
                               indf2 000FDF                                 fsr1l 000FE1  
                               pad@w 001E                                 fsr2l 000FD9  
                               btemp 0056                         ?_LCD_setline 0001  
                               prodh 000FF4                                 prodl 000FF3  
                               start 0058                     __end_of_ADC_init 29DC  
                   __end_of_DAC_init 2A08                      __end_of_HighISR 2616  
                   ??_sunrise_sunset 0028                         ___param_bank 000000  
                         _Comp1_init 2960                                ??_abs 0019  
                              ??_pad 001B                          _sunset_flag 0054  
                   __end_of_LCD_init 208E                      __end_of___aodiv 1B08  
                              ?_atoi 000C                                ?_main 0001  
                              ?_dtoa 0020                      __end_of___aomod 1C6C  
                              _ADPCH 000F5F                      __end_of___awdiv 22E6  
                    ___awdiv@divisor 0007                                i1l160 0048  
                              i2l152 2612                      ___awdiv@counter 0009  
                       vfpfcnvrt@fmt 0046                                _TMR0H 000FD4  
                              _TMR0L 000FD3                                _flags 0052  
                              _fputc 2158                                _fputs 274E  
                    __end_of_isdigit 284C                                atoi@n 0019  
                              pad@fp 0015                                atoi@s 000C  
                              _width 00EE                                _putch 2A1C  
                              dtoa@d 0022                                dtoa@i 0042  
                              dtoa@n 003A                                dtoa@p 0034  
                              dtoa@s 0038                                dtoa@w 0036  
                    __end_of_isspace 26BA                        ?_LCD_sendbyte 0006  
                    LCD_init@current 0084                                tablat 000FF5  
                              plusw0 000FEB                                plusw2 000FDB  
                              ttemp5 0057                                ttemp6 005A  
                              ttemp7 005E                                status 000FD8  
                              wtemp8 0057                      __end_of_sprintf 2668  
                    __end_of_sunrise 29A6              __size_of_LCD_sendnibble 0068  
            __size_of_LCD_sendstring 0034                          LCD_init@buf 0090  
                    __initialization 28EA                         __end_of_atoi 17E4  
                       __end_of_main 1FA2                         __end_of_dtoa 148C  
                  __end_of_LED1_init 2704                  __size_of_LED_toggle 00C4  
                  __end_of_LED2_init 2A1C                    LED_toggle@current 0011  
                  __end_of_LCD_E_TOG 2A16                               ??_atoi 000E  
                             ??_main 0052                               ??_dtoa 002A  
                      __activetblptr 000003               __size_of_LEDarray_init 0026  
                       _sunrise_flag 0055                               ?_fputc 0005  
                             ?_fputs 000E                               _ADRESH 000F64  
                     ??_LCD_sendbyte 0007                     ___awdiv@dividend 0005  
                             ?_putch 0001                               i2l2011 25D2  
       ??_daylightsavingstime_toggle 0011                               i2l2013 25F4  
                             i1l2901 0036                               i2l2015 2602  
                             i1l2903 0044                               i2l2017 260A  
                             i2l2009 25C2                               i2l2019 260E  
                             i1l2899 0026                        vfpfcnvrt@done 0068  
                          ??_HighISR 0001                    _LEDarray_disp_bin 1C6C  
                             _LowISR 0018                   ?_LEDarray_disp_bin 0001  
                       ??_ADC_getval 0005                        ??_Timer0_init 0005  
                       vfprintf@cfmt 004E                            ??___aodiv 0015  
                          ??___aomod 0015                               ___wmul 293A  
                        ?_Comp1_init 0001                            ??___awdiv 0009  
                ??_LEDarray_disp_bin 0005                               clear_0 28F0  
                             clear_1 28FC                     ___awdiv@quotient 000B  
                             isa$std 000001                               pad@buf 0017  
                             dtoa@fp 0020                               _strlen 284C  
                             fputc@c 0005                               fputs@c 0012  
                             fputs@i 0013                               fputs@s 000E  
                          ??_isdigit 0007                         __mediumconst 0000  
                          ??_isspace 0007                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
        ?_daylightsavingstime_toggle 0005                            ?_ADC_init 0001  
                             putch@c 0001                            ?_DAC_init 0001  
                   __end_of_vfprintf 25C2                            ??_sprintf 0050  
                 __end_of_ADC_getval 29F4                            ??_sunrise 0011  
                   __end_of_sun_sync 2158            __end_of_LEDarray_disp_bin 1D90  
                         __accesstop 0060              __end_of__initialization 290A  
                          ?_LCD_init 0084                        ___rparam_used 000001  
                      _LEDarray_init 2914                      _Interrupts_init 2792  
               __size_of_LCD_setline 004A                       __pcstackCOMRAM 0001  
                      __end_of_fputc 2222                        __end_of_fputs 2792  
                      __end_of_putch 2A1E                  __end_of_Timer0_init 29C2  
                         ??_ADC_init 0005                           ??_DAC_init 0005  
                       ??_LED_toggle 001D                              ??_fputc 0009  
                            ??_fputs 0012                              ??_putch 0005  
                __size_of_Comp1_init 0026                           __pbssBANK0 00EC  
                         __pbssBANK1 0100                       _LCD_sendnibble 24F4  
                         _date_check 148C                           ??_LCD_init 0050  
                     ?_LEDarray_init 0001                       _LCD_sendstring 2882  
                            ?_LowISR 0001                              ?___wmul 0005  
               __end_of_LCD_sendbyte 28EA                   __end_of_LED_toggle 23AA  
                            ?_strlen 0005                     LED1_init@current 0006  
                 __size_of_vfpfcnvrt 038C               __end_of_LCD_sendnibble 255C  
         __size_of_LEDarray_disp_bin 0124              __end_of_Interrupts_init 27D4  
                            _HighISR 0008               __end_of_LCD_sendstring 28B6  
                          _ADREFbits 000F58                              __Hparam 0000  
                            __Lparam 0000                      __size_of_LowISR 0040  
                  date_check@current 0005                          _Timer0_init 29A6  
                            ___aodiv 1980                              ___aomod 1B08  
                            ___awdiv 2222                      __size_of___wmul 0026  
                          ?_vfprintf 006C                         __psmallconst 0E00  
                            __pcinit 28EA                            ?_sun_sync 000D  
                            __ramtop 0E00                              __ptext0 1E9E  
                            __ptext1 17E4                              __ptext2 1D90  
                            __ptext3 148C                              __ptext4 246C  
                            __ptext5 208E                              __ptext6 2222  
                            __ptext7 29A6                              __ptext8 2914  
                            __ptext9 1C6C                            _LED1_init 26BA  
                    __size_of_strlen 0036                            _LED2_init 2A16  
                       __size_of_abs 0040                         __size_of_pad 00C2  
                            _isdigit 2814                              _isspace 2668  
                          _LCD_E_TOG 2A08                      LCD_setline@line 0008  
                            atoi@neg 0012                              _sprintf 2616  
                     __pintcode_body 25C2                              _sunrise 2986  
               end_of_initialization 290A                      ?_LCD_sendnibble 0001  
                   ADC_getval@tmpval 0005                              fputc@fp 0007  
                    ??_LEDarray_init 0005                              int_func 25C2  
                            fputs@fp 0010                          ?_date_check 0005  
                    ?_LCD_sendstring 0008                    __end_of_vfpfcnvrt 11AC  
                            postdec2 000FDD                         ??_Comp1_init 0005  
                            postinc0 000FEE                              postinc1 000FE6  
                            postinc2 000FDE                           ??_vfprintf 004E  
                         _time_incre 17E4                              strlen@a 0007  
                            strlen@s 0005                           ??_sun_sync 0019  
                         ?_LED1_init 0006                           ?_LED2_init 0001  
            __size_of_sunrise_sunset 0088                           ?_LCD_E_TOG 0001  
                          _TRISAbits 000F81                            _TRISBbits 000F82  
                          _TRISCbits 000F83                            _TRISDbits 000F84  
                          _TRISEbits 000F85                            _TRISFbits 000F86  
                          _TRISGbits 000F87                            _TRISHbits 000F88  
                  __size_of_ADC_init 001A                    __size_of_DAC_init 0014  
                 __end_of_Comp1_init 2986                          _CM1CON0bits 000ED0  
                        _CM1CON1bits 000ED1                     ?_Interrupts_init 0005  
              __size_of_LCD_sendbyte 0034                    __size_of_LCD_init 00EC  
                     __end_of_LowISR 0058                          vfpfcnvrt@ap 0048  
                        vfpfcnvrt@fp 0044                          vfpfcnvrt@ll 0060  
                     __end_of___wmul 2960                 LCD_sendnibble@number 0005  
                __size_of_date_check 01B4                       __end_of_strlen 2882  
                start_initialization 28EA                          __end_of_abs 2814  
                        __end_of_pad 246C                         _LCD_sendbyte 28B6  
                      ??_LCD_setline 0008                             ??_LowISR 0002  
                        vfprintf@fmt 006E                 LCD_sendstring@string 0008  
                           ??___wmul 0009                          ?_time_incre 0084  
                  time_incre@current 0084                             ??_strlen 0007  
                        ??_LED1_init 0012                          ??_LED2_init 0005  
              sunrise_sunset@current 001C                          __pbssCOMRAM 0052  
                        ??_LCD_E_TOG 0005                        __pcstackBANK0 0060  
                   ___aodiv@dividend 0005                             ?_HighISR 0001  
                          _atoi$2260 0018                            _atoi$2261 0016  
                          _atoi$2259 0014                            _dtoa$2224 0032  
                       ?_Timer0_init 0001                            __pintcode 0008  
                           ?___aodiv 0005                             ?___aomod 0005  
                           ?___awdiv 0005                     ___aodiv@quotient 0017  
                __end_of_LCD_setline 274E                          __pintcodelo 0018  
                  __size_of_vfprintf 0066                       _sunrise_sunset 246C  
                        __smallconst 0E00                    __size_of_sun_sync 00CA  
                           ?_isdigit 0005                             ?_isspace 0005  
                   ??_LCD_sendnibble 0005               sun_sync@solarnoon_hour 0019  
                           _ADC_init 29C2                             _DAC_init 29F4  
                   ??_LCD_sendstring 000A                             ?_sprintf 0072  
                     __size_of_fputc 00CA                       __size_of_fputs 0044  
                           ?_sunrise 0005                       __size_of_putch 0002  
                   LCD_sendbyte@Byte 0007                  __size_of_time_incre 019C  
                   LCD_sendbyte@type 0006                         ??_date_check 0011  
                     ___wmul@product 0009                             _LATAbits 000F79  
                           _LATBbits 000F7A                             _LATCbits 000F7B  
                           _LATDbits 000F7C                             _LATEbits 000F7D  
                           _LATFbits 000F7E                             _LATGbits 000F7F  
                           _LATHbits 000F80                             _LCD_init 1FA2  
                           _IPR0bits 000E1F                             _PIE0bits 000E29  
                           _IPR2bits 000E21                             _PIE2bits 000E2B  
                           i1u336_20 0036                             i1u336_21 0032  
                           i2u166_40 25D2                             i2u166_41 25CE  
                           i2u167_40 25E4                             i2u167_41 25DC  
                           _PIR0bits 000E33                             i2u169_40 2602  
                           i2u168_48 25E6                             i2u169_41 25FE  
                           _PIR2bits 000E35                            _time_flag 00F2  
                          _vfpfcnvrt 0E20               __end_of_sunrise_sunset 24F4  
                         _ADCON0bits 000F60                    ___wmul@multiplier 0005  
                 __end_of_date_check 1640                         _isspace$2277 000B  
                         _CM1NCHbits 000ED2                           _CM1PCHbits 000ED3  
                   __size_of_HighISR 260E                __end_of_LEDarray_init 293A  
                        _LCD_setline 2704                             __Hrparam 0000  
                         _ADC_getval 29DC             sun_sync@solarnoon_minute 001A  
           sun_sync@solarnoon_second 001B                           vfprintf@ap 0070  
                           __Lrparam 0000                           vfprintf@fp 006C  
                   __size_of___aodiv 0188                     __size_of___aomod 0164  
                   __size_of___awdiv 00C4                           ?_vfpfcnvrt 0044  
                    ?_sunrise_sunset 001C  __size_of_daylightsavingstime_toggle 010E  
                    ___aodiv@divisor 000D                      ___aodiv@counter 0015  
                         _ANSELFbits 000EB4                       time_incre@buf1 0090  
                     time_incre@buf2 00B8                           sprintf@fmt 0074  
                         _T0CON0bits 000FD5                           _T0CON1bits 000FD6  
                   __size_of_isdigit 0038                     __size_of_isspace 0052  
                           __ptext10 22E6                             __ptext11 2986  
                           __ptext20 23AA                             __ptext12 2A16  
                           __ptext21 284C                             __ptext13 26BA  
                           __ptext30 2814                             __ptext22 274E  
                           __ptext14 29DC                             __ptext31 293A  
                           __ptext23 2158                             __ptext15 1FA2  
                           __ptext40 29C2                             __ptext32 2704  
                           __ptext24 2A1C                             __ptext16 2616  
                           __ptext33 2882                             __ptext25 27D4  
                           __ptext17 255C                             __ptext34 28B6  
                           __ptext26 1B08                             __ptext18 0E20  
                           __ptext35 24F4                             __ptext27 1980  
                           __ptext19 11AC                             __ptext36 2A08  
                           __ptext28 1640                             __ptext37 2792  
                           __ptext29 2668                             __ptext38 2960  
                           __ptext39 29F4                       sunrise@current 0005  
            LEDarray_disp_bin@number 0007                     __size_of_sprintf 0052  
                   __size_of_sunrise 0020                        __size_of_atoi 01A4  
                      __size_of_main 0104                        __size_of_dtoa 02E0  
                           isa$xinst 000000             __size_of_Interrupts_init 0042  
                           int$flags 0056                 __size_of_Timer0_init 001C  
                       ??_time_incre 0050                             _vfprintf 255C  
                           _sun_sync 208E                     ___aomod@dividend 0005  
                     _vfpfcnvrt$2239 006A                           _INTCONbits 000FF2  
                           isdigit@c 0005                           _LED_toggle 22E6  
                           intlevel1 0000                             intlevel2 0000  
                          sprintf@ap 007C                         _DAC1CON0bits 000EC6  
                       _DAC1CON1bits 000EC7                   __end_of_time_incre 1980  
                           isspace@c 0005    daylightsavingstime_toggle@current 0005  
                        ?_ADC_getval 0001                      ___aomod@divisor 000D  
                        ??_vfpfcnvrt 004A                      ___aomod@counter 0015  
                           sprintf@f 007E                             sprintf@s 0072  
                    sun_sync@current 000D   __end_of_daylightsavingstime_toggle 1E9E  
         _daylightsavingstime_toggle 1D90                         ___aodiv@sign 0016  
                       ___aomod@sign 0016  
