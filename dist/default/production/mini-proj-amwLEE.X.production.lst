

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Nov 09 11:53:25 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    59                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    60                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    61  0000                     
    62                           ; Version 2.20
    63                           ; Generated 05/05/2020 GMT
    64                           ; 
    65                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC18F67K40 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96  0000                     _PIR0bits	set	3635
    97  0000                     _PIR2bits	set	3637
    98  0000                     _IPR0bits	set	3615
    99  0000                     _IPR2bits	set	3617
   100  0000                     _PIE0bits	set	3625
   101  0000                     _PIE2bits	set	3627
   102  0000                     _CM1CON1bits	set	3793
   103  0000                     _CM1CON0bits	set	3792
   104  0000                     _CM1PCHbits	set	3795
   105  0000                     _CM1NCHbits	set	3794
   106  0000                     _DAC1CON1bits	set	3783
   107  0000                     _DAC1CON0bits	set	3782
   108  0000                     _ANSELFbits	set	3764
   109  0000                     _ADPCH	set	3935
   110  0000                     _ADREFbits	set	3928
   111  0000                     _TRISHbits	set	3976
   112  0000                     _LATHbits	set	3968
   113  0000                     _TRISDbits	set	3972
   114  0000                     _TRISEbits	set	3973
   115  0000                     _TRISCbits	set	3971
   116  0000                     _LATEbits	set	3965
   117  0000                     _LATCbits	set	3963
   118  0000                     _T0CON0bits	set	4053
   119  0000                     _T0CON1bits	set	4054
   120  0000                     _TMR0L	set	4051
   121  0000                     _TMR0H	set	4052
   122  0000                     _LATDbits	set	3964
   123  0000                     _INTCONbits	set	4082
   124  0000                     _TRISBbits	set	3970
   125  0000                     _TRISAbits	set	3969
   126  0000                     _TRISGbits	set	3975
   127  0000                     _LATBbits	set	3962
   128  0000                     _LATFbits	set	3966
   129  0000                     _LATAbits	set	3961
   130  0000                     _LATGbits	set	3967
   131  0000                     _ADRESH	set	3940
   132  0000                     _ADCON0bits	set	3936
   133  0000                     _TRISFbits	set	3974
   134                           
   135                           	psect	smallconst
   136  000E00                     __psmallconst:
   137                           	callstack 0
   138  000E00  00                 	db	0
   139  000E01                     STR_2:
   140                           
   141                           ; BSR set to: 14
   142  000E01  25                 	db	37
   143  000E02  30                 	db	48	;'0'
   144  000E03  32                 	db	50	;'2'
   145  000E04  64                 	db	100	;'d'
   146  000E05  3A                 	db	58	;':'
   147  000E06  25                 	db	37
   148  000E07  30                 	db	48	;'0'
   149  000E08  32                 	db	50	;'2'
   150  000E09  64                 	db	100	;'d'
   151  000E0A  3A                 	db	58	;':'
   152  000E0B  25                 	db	37
   153  000E0C  30                 	db	48	;'0'
   154  000E0D  32                 	db	50	;'2'
   155  000E0E  64                 	db	100	;'d'
   156  000E0F  00                 	db	0
   157  000E10                     STR_1:
   158                           
   159                           ; BSR set to: 14
   160  000E10  25                 	db	37
   161  000E11  30                 	db	48	;'0'
   162  000E12  34                 	db	52	;'4'
   163  000E13  64                 	db	100	;'d'
   164  000E14  2D                 	db	45
   165  000E15  25                 	db	37
   166  000E16  30                 	db	48	;'0'
   167  000E17  32                 	db	50	;'2'
   168  000E18  64                 	db	100	;'d'
   169  000E19  2D                 	db	45
   170  000E1A  25                 	db	37
   171  000E1B  30                 	db	48	;'0'
   172  000E1C  32                 	db	50	;'2'
   173  000E1D  64                 	db	100	;'d'
   174  000E1E  00                 	db	0
   175  000E1F  00                 	db	0	; dummy byte at the end
   176  0000                     
   177                           ; #config settings
   178                           
   179                           	psect	cinit
   180  0028BE                     __pcinit:
   181                           	callstack 0
   182  0028BE                     start_initialization:
   183                           	callstack 0
   184  0028BE                     __initialization:
   185                           	callstack 0
   186                           
   187                           ; Clear objects allocated to BANK1 (32 bytes)
   188  0028BE  EE01  F000         	lfsr	0,__pbssBANK1
   189  0028C2  0E20               	movlw	32
   190  0028C4                     clear_0:
   191  0028C4  6AEE               	clrf	postinc0,c
   192  0028C6  06E8               	decf	wreg,f,c
   193  0028C8  E1FD               	bnz	clear_0
   194                           
   195                           ; Clear objects allocated to BANK0 (7 bytes)
   196  0028CA  EE00  F0EA         	lfsr	0,__pbssBANK0
   197  0028CE  0E07               	movlw	7
   198  0028D0                     clear_1:
   199  0028D0  6AEE               	clrf	postinc0,c
   200  0028D2  06E8               	decf	wreg,f,c
   201  0028D4  E1FD               	bnz	clear_1
   202                           
   203                           ; Clear objects allocated to COMRAM (4 bytes)
   204  0028D6  6A55               	clrf	(__pbssCOMRAM+3)& (0+255),c
   205  0028D8  6A54               	clrf	(__pbssCOMRAM+2)& (0+255),c
   206  0028DA  6A53               	clrf	(__pbssCOMRAM+1)& (0+255),c
   207  0028DC  6A52               	clrf	__pbssCOMRAM& (0+255),c
   208  0028DE                     end_of_initialization:
   209                           	callstack 0
   210  0028DE                     __end_of__initialization:
   211                           	callstack 0
   212  0028DE  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   213  0028E0  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   214  0028E2  0100               	movlb	0
   215  0028E4  EFC8  F00E         	goto	_main	;jump to C main() function
   216                           
   217                           	psect	bssCOMRAM
   218  000052                     __pbssCOMRAM:
   219                           	callstack 0
   220  000052                     _flags:
   221                           	callstack 0
   222  000052                     	ds	2
   223  000054                     _sunset_flag:
   224                           	callstack 0
   225  000054                     	ds	1
   226  000055                     _sunrise_flag:
   227                           	callstack 0
   228  000055                     	ds	1
   229                           
   230                           	psect	bssBANK0
   231  0000EA                     __pbssBANK0:
   232                           	callstack 0
   233  0000EA                     _nout:
   234                           	callstack 0
   235  0000EA                     	ds	2
   236  0000EC                     _width:
   237                           	callstack 0
   238  0000EC                     	ds	2
   239  0000EE                     _prec:
   240                           	callstack 0
   241  0000EE                     	ds	2
   242  0000F0                     _time_flag:
   243                           	callstack 0
   244  0000F0                     	ds	1
   245                           
   246                           	psect	bssBANK1
   247  000100                     __pbssBANK1:
   248                           	callstack 0
   249  000100                     _dbuf:
   250                           	callstack 0
   251  000100                     	ds	32
   252                           
   253                           	psect	cstackBANK0
   254  000060                     __pcstackBANK0:
   255                           	callstack 0
   256  000060                     vfpfcnvrt@ll:
   257                           	callstack 0
   258                           
   259                           ; 8 bytes @ 0x0
   260  000060                     	ds	8
   261  000068                     vfpfcnvrt@done:
   262                           	callstack 0
   263                           
   264                           ; 2 bytes @ 0x8
   265  000068                     	ds	2
   266  00006A                     _vfpfcnvrt$2223:
   267                           	callstack 0
   268                           
   269                           ; 2 bytes @ 0xA
   270  00006A                     	ds	2
   271  00006C                     ?_vfprintf:
   272                           	callstack 0
   273  00006C                     vfprintf@fp:
   274                           	callstack 0
   275                           
   276                           ; 2 bytes @ 0xC
   277  00006C                     	ds	2
   278  00006E                     vfprintf@fmt:
   279                           	callstack 0
   280                           
   281                           ; 2 bytes @ 0xE
   282  00006E                     	ds	2
   283  000070                     vfprintf@ap:
   284                           	callstack 0
   285                           
   286                           ; 2 bytes @ 0x10
   287  000070                     	ds	2
   288  000072                     ?_sprintf:
   289                           	callstack 0
   290  000072                     sprintf@s:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0x12
   294  000072                     	ds	2
   295  000074                     sprintf@fmt:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0x14
   299  000074                     	ds	8
   300  00007C                     sprintf@ap:
   301                           	callstack 0
   302                           
   303                           ; 2 bytes @ 0x1C
   304  00007C                     	ds	2
   305  00007E                     sprintf@f:
   306                           	callstack 0
   307                           
   308                           ; 6 bytes @ 0x1E
   309  00007E                     	ds	6
   310  000084                     ?_time_incre:
   311                           	callstack 0
   312  000084                     LCD_init@current:
   313                           	callstack 0
   314  000084                     time_incre@current:
   315                           	callstack 0
   316                           
   317                           ; 11 bytes @ 0x24
   318  000084                     	ds	11
   319  00008F                     LCD_init@buf:
   320                           	callstack 0
   321  00008F                     time_incre@buf1:
   322                           	callstack 0
   323                           
   324                           ; 40 bytes @ 0x2F
   325  00008F                     	ds	40
   326  0000B7                     time_incre@buf2:
   327                           	callstack 0
   328                           
   329                           ; 40 bytes @ 0x57
   330  0000B7                     	ds	40
   331  0000DF                     main@current:
   332                           	callstack 0
   333                           
   334                           ; 11 bytes @ 0x7F
   335  0000DF                     	ds	11
   336                           
   337                           	psect	cstackCOMRAM
   338  000001                     __pcstackCOMRAM:
   339                           	callstack 0
   340  000001                     ??_HighISR:
   341  000001                     
   342                           ; 1 bytes @ 0x0
   343  000001                     	ds	1
   344  000002                     ??_LowISR:
   345                           
   346                           ; 1 bytes @ 0x1
   347  000002                     	ds	3
   348  000005                     ??_LEDarray_disp_bin:
   349  000005                     ?_strlen:
   350                           	callstack 0
   351  000005                     ?_isdigit:
   352                           	callstack 0
   353  000005                     ?_isspace:
   354                           	callstack 0
   355  000005                     ?___wmul:
   356                           	callstack 0
   357  000005                     ?___awdiv:
   358                           	callstack 0
   359  000005                     ?___aodiv:
   360                           	callstack 0
   361  000005                     ?___aomod:
   362                           	callstack 0
   363  000005                     ?_sunrise:
   364                           	callstack 0
   365  000005                     ?_daylightsavingstime_toggle:
   366                           	callstack 0
   367  000005                     ?_date_check:
   368                           	callstack 0
   369  000005                     ADC_getval@tmpval:
   370                           	callstack 0
   371  000005                     LCD_sendnibble@number:
   372                           	callstack 0
   373  000005                     ___wmul@multiplier:
   374                           	callstack 0
   375  000005                     ___awdiv@dividend:
   376                           	callstack 0
   377  000005                     isdigit@c:
   378                           	callstack 0
   379  000005                     isspace@c:
   380                           	callstack 0
   381  000005                     fputc@c:
   382                           	callstack 0
   383  000005                     strlen@s:
   384                           	callstack 0
   385  000005                     ___aodiv@dividend:
   386                           	callstack 0
   387  000005                     ___aomod@dividend:
   388                           	callstack 0
   389  000005                     Interrupts_init@current:
   390                           	callstack 0
   391  000005                     daylightsavingstime_toggle@current:
   392                           	callstack 0
   393  000005                     date_check@current:
   394                           	callstack 0
   395  000005                     sunrise@current:
   396                           	callstack 0
   397                           
   398                           ; 11 bytes @ 0x4
   399  000005                     	ds	1
   400  000006                     LCD_sendbyte@type:
   401                           	callstack 0
   402  000006                     LED1_init@current:
   403                           	callstack 0
   404                           
   405                           ; 11 bytes @ 0x5
   406  000006                     	ds	1
   407  000007                     ??_isdigit:
   408  000007                     ??_isspace:
   409  000007                     LEDarray_disp_bin@number:
   410                           	callstack 0
   411  000007                     LCD_sendbyte@Byte:
   412                           	callstack 0
   413  000007                     ___wmul@multiplicand:
   414                           	callstack 0
   415  000007                     ___awdiv@divisor:
   416                           	callstack 0
   417  000007                     fputc@fp:
   418                           	callstack 0
   419  000007                     strlen@a:
   420                           	callstack 0
   421                           
   422                           ; 2 bytes @ 0x6
   423  000007                     	ds	1
   424  000008                     LCD_setline@line:
   425                           	callstack 0
   426  000008                     LCD_sendstring@string:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x7
   430  000008                     	ds	1
   431  000009                     ??_fputc:
   432  000009                     ___awdiv@counter:
   433                           	callstack 0
   434  000009                     ___wmul@product:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x8
   438  000009                     	ds	1
   439  00000A                     ___awdiv@sign:
   440                           	callstack 0
   441                           
   442                           ; 1 bytes @ 0x9
   443  00000A                     	ds	1
   444  00000B                     _isspace$2261:
   445                           	callstack 0
   446  00000B                     ___awdiv@quotient:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0xA
   450  00000B                     	ds	1
   451  00000C                     ?_atoi:
   452                           	callstack 0
   453  00000C                     atoi@s:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0xB
   457  00000C                     	ds	1
   458  00000D                     ?_sun_sync:
   459                           	callstack 0
   460  00000D                     ___aodiv@divisor:
   461                           	callstack 0
   462  00000D                     ___aomod@divisor:
   463                           	callstack 0
   464  00000D                     sun_sync@current:
   465                           	callstack 0
   466                           
   467                           ; 11 bytes @ 0xC
   468  00000D                     	ds	1
   469  00000E                     ??_atoi:
   470  00000E                     fputs@s:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0xD
   474  00000E                     	ds	2
   475  000010                     ??_daylightsavingstime_toggle:
   476  000010                     ??_date_check:
   477  000010                     ?_LED_toggle:
   478                           	callstack 0
   479  000010                     fputs@fp:
   480                           	callstack 0
   481  000010                     LED_toggle@current:
   482                           	callstack 0
   483                           
   484                           ; 11 bytes @ 0xF
   485  000010                     	ds	1
   486  000011                     ??_LED1_init:
   487                           
   488                           ; 1 bytes @ 0x10
   489  000011                     	ds	1
   490  000012                     fputs@c:
   491                           	callstack 0
   492  000012                     atoi@neg:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x11
   496  000012                     	ds	1
   497  000013                     fputs@i:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x12
   501  000013                     	ds	1
   502  000014                     _atoi$2243:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x13
   506  000014                     	ds	1
   507  000015                     ?_pad:
   508                           	callstack 0
   509  000015                     ___aodiv@counter:
   510                           	callstack 0
   511  000015                     ___aomod@counter:
   512                           	callstack 0
   513  000015                     pad@fp:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x14
   517  000015                     	ds	1
   518  000016                     ___aodiv@sign:
   519                           	callstack 0
   520  000016                     ___aomod@sign:
   521                           	callstack 0
   522  000016                     _atoi$2245:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x15
   526  000016                     	ds	1
   527  000017                     ?_abs:
   528                           	callstack 0
   529  000017                     pad@buf:
   530                           	callstack 0
   531  000017                     abs@a:
   532                           	callstack 0
   533  000017                     ___aodiv@quotient:
   534                           	callstack 0
   535                           
   536                           ; 8 bytes @ 0x16
   537  000017                     	ds	1
   538  000018                     sun_sync@solarnoon_hour:
   539                           	callstack 0
   540  000018                     _atoi$2244:
   541                           	callstack 0
   542                           
   543                           ; 1 bytes @ 0x17
   544  000018                     	ds	1
   545  000019                     ??_abs:
   546  000019                     sun_sync@solarnoon_minute:
   547                           	callstack 0
   548  000019                     pad@p:
   549                           	callstack 0
   550  000019                     atoi@n:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x18
   554  000019                     	ds	1
   555  00001A                     sun_sync@solarnoon_second:
   556                           	callstack 0
   557                           
   558                           ; 1 bytes @ 0x19
   559  00001A                     	ds	1
   560  00001B                     ??_LED_toggle:
   561  00001B                     ??_pad:
   562  00001B                     ?_sunrise_sunset:
   563                           	callstack 0
   564  00001B                     sunrise_sunset@current:
   565                           	callstack 0
   566                           
   567                           ; 11 bytes @ 0x1A
   568  00001B                     	ds	1
   569  00001C                     pad@i:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x1B
   573  00001C                     	ds	2
   574  00001E                     pad@w:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x1D
   578  00001E                     	ds	2
   579  000020                     ?_dtoa:
   580                           	callstack 0
   581  000020                     dtoa@fp:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x1F
   585  000020                     	ds	2
   586  000022                     dtoa@d:
   587                           	callstack 0
   588                           
   589                           ; 8 bytes @ 0x21
   590  000022                     	ds	4
   591  000026                     
   592                           ; 1 bytes @ 0x25
   593  000026                     	ds	4
   594  00002A                     ??_dtoa:
   595                           
   596                           ; 1 bytes @ 0x29
   597  00002A                     	ds	8
   598  000032                     _dtoa$2208:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x31
   602  000032                     	ds	2
   603  000034                     dtoa@p:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x33
   607  000034                     	ds	2
   608  000036                     dtoa@w:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x35
   612  000036                     	ds	2
   613  000038                     dtoa@s:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x37
   617  000038                     	ds	2
   618  00003A                     dtoa@n:
   619                           	callstack 0
   620                           
   621                           ; 8 bytes @ 0x39
   622  00003A                     	ds	8
   623  000042                     dtoa@i:
   624                           	callstack 0
   625                           
   626                           ; 2 bytes @ 0x41
   627  000042                     	ds	2
   628  000044                     ?_vfpfcnvrt:
   629                           	callstack 0
   630  000044                     vfpfcnvrt@fp:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x43
   634  000044                     	ds	2
   635  000046                     vfpfcnvrt@fmt:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x45
   639  000046                     	ds	2
   640  000048                     vfpfcnvrt@ap:
   641                           	callstack 0
   642                           
   643                           ; 2 bytes @ 0x47
   644  000048                     	ds	2
   645  00004A                     ??_vfpfcnvrt:
   646                           
   647                           ; 1 bytes @ 0x49
   648  00004A                     	ds	4
   649  00004E                     vfprintf@cfmt:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x4D
   653  00004E                     	ds	2
   654  000050                     ??_LCD_init:
   655  000050                     ??_time_incre:
   656  000050                     
   657                           ; 1 bytes @ 0x4F
   658  000050                     	ds	2
   659  000052                     
   660                           ; 1 bytes @ 0x51
   661 ;;
   662 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   663 ;;
   664 ;; *************** function _main *****************
   665 ;; Defined at:
   666 ;;		line 7 in file "main.c"
   667 ;; Parameters:    Size  Location     Type
   668 ;;		None
   669 ;; Auto vars:     Size  Location     Type
   670 ;;  current        11  127[BANK0 ] struct .
   671 ;; Return value:  Size  Location     Type
   672 ;;                  1    wreg      void 
   673 ;; Registers used:
   674 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   675 ;; Tracked objects:
   676 ;;		On entry : 0/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   681 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   683 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   684 ;;Total ram usage:       11 bytes
   685 ;; Hardware stack levels required when called: 11
   686 ;; This function calls:
   687 ;;		_ADC_init
   688 ;;		_Comp1_init
   689 ;;		_Interrupts_init
   690 ;;		_LCD_init
   691 ;;		_LED1_init
   692 ;;		_LED2_init
   693 ;;		_LED_toggle
   694 ;;		_LEDarray_disp_bin
   695 ;;		_LEDarray_init
   696 ;;		_Timer0_init
   697 ;;		_sunrise_sunset
   698 ;;		_time_incre
   699 ;; This function is called by:
   700 ;;		Startup code after reset
   701 ;; This function uses a non-reentrant model
   702 ;;
   703                           
   704                           	psect	text0
   705  001D90                     __ptext0:
   706                           	callstack 0
   707  001D90                     _main:
   708                           	callstack 20
   709  001D90                     
   710                           ;main.c: 12:     dateandtime current;;main.c: 13:     current.year = 2021;
   711  001D90  0E07               	movlw	7
   712  001D92  0100               	movlb	0	; () banked
   713  001D94  6FE0               	movwf	(main@current+1)& (0+255),b
   714  001D96  0EE5               	movlw	229
   715  001D98  6FDF               	movwf	main@current& (0+255),b
   716                           
   717                           ;main.c: 14:     current.month = 11;
   718  001D9A  0E0B               	movlw	11
   719  001D9C  6FE1               	movwf	(main@current+2)& (0+255),b
   720                           
   721                           ;main.c: 15:     current.date = 9;
   722  001D9E  0E09               	movlw	9
   723  001DA0  6FE2               	movwf	(main@current+3)& (0+255),b
   724                           
   725                           ;main.c: 16:     current.day = 2;
   726  001DA2  0E02               	movlw	2
   727  001DA4  6FE3               	movwf	(main@current+4)& (0+255),b
   728                           
   729                           ;main.c: 17:     current.hour = 7;
   730  001DA6  0E07               	movlw	7
   731  001DA8  6FE4               	movwf	(main@current+5)& (0+255),b
   732                           
   733                           ;main.c: 18:     current.minute = 30;
   734  001DAA  0E1E               	movlw	30
   735  001DAC  6FE5               	movwf	(main@current+6)& (0+255),b
   736                           
   737                           ;main.c: 19:     current.second = 0;
   738  001DAE  0E00               	movlw	0
   739  001DB0  6FE6               	movwf	(main@current+7)& (0+255),b
   740                           
   741                           ;main.c: 20:     current.sunrise_hour = 7;
   742  001DB2  0E07               	movlw	7
   743  001DB4  6FE7               	movwf	(main@current+8)& (0+255),b
   744                           
   745                           ;main.c: 21:     current.sunrise_minute = 0;
   746  001DB6  0E00               	movlw	0
   747  001DB8  6FE8               	movwf	(main@current+9)& (0+255),b
   748                           
   749                           ;main.c: 22:     current.sunrise_second = 0;
   750  001DBA  0E00               	movlw	0
   751  001DBC  6FE9               	movwf	(main@current+10)& (0+255),b
   752  001DBE                     
   753                           ; BSR set to: 0
   754                           ;main.c: 25:     ADC_init();
   755  001DBE  ECCB  F014         	call	_ADC_init	;wreg free
   756  001DC2                     
   757                           ;main.c: 26:     Comp1_init();
   758  001DC2  EC9A  F014         	call	_Comp1_init	;wreg free
   759  001DC6                     
   760                           ;main.c: 27:     Timer0_init();
   761  001DC6  ECBD  F014         	call	_Timer0_init	;wreg free
   762  001DCA                     
   763                           ;main.c: 28:     Interrupts_init(current);
   764  001DCA  EE20  F0DF         	lfsr	2,main@current
   765  001DCE  EE00  F005         	lfsr	0,Interrupts_init@current
   766  001DD2  0E0A               	movlw	10
   767  001DD4                     u4071:
   768  001DD4  CFDB FFEB          	movff	plusw2,plusw0
   769  001DD8  06E8               	decf	wreg,f,c
   770  001DDA  E2FC               	bc	u4071
   771  001DDC  ECB3  F013         	call	_Interrupts_init	;wreg free
   772  001DE0                     
   773                           ;main.c: 29:     LED1_init(current);
   774  001DE0  EE20  F0DF         	lfsr	2,main@current
   775  001DE4  EE00  F006         	lfsr	0,LED1_init@current
   776  001DE8  0E0A               	movlw	10
   777  001DEA                     u4081:
   778  001DEA  CFDB FFEB          	movff	plusw2,plusw0
   779  001DEE  06E8               	decf	wreg,f,c
   780  001DF0  E2FC               	bc	u4081
   781  001DF2  EC47  F013         	call	_LED1_init	;wreg free
   782                           
   783                           ;main.c: 30:     LED2_init();
   784  001DF6  ECF5  F014         	call	_LED2_init	;wreg free
   785                           
   786                           ;main.c: 31:     LEDarray_init();
   787  001DFA  EC74  F014         	call	_LEDarray_init	;wreg free
   788  001DFE                     
   789                           ;main.c: 32:     LCD_init(current);
   790  001DFE  EE20  F0DF         	lfsr	2,main@current
   791  001E02  EE00  F084         	lfsr	0,LCD_init@current
   792  001E06  0E0A               	movlw	10
   793  001E08                     u4091:
   794  001E08  CFDB FFEB          	movff	plusw2,plusw0
   795  001E0C  06E8               	decf	wreg,f,c
   796  001E0E  E2FC               	bc	u4091
   797  001E10  EC48  F00F         	call	_LCD_init	;wreg free
   798  001E14                     l3417:
   799                           
   800                           ;main.c: 36:         current = sunrise_sunset(current);
   801  001E14  EE20  F0DF         	lfsr	2,main@current
   802  001E18  EE00  F01B         	lfsr	0,sunrise_sunset@current
   803  001E1C  0E0A               	movlw	10
   804  001E1E                     u4101:
   805  001E1E  CFDB FFEB          	movff	plusw2,plusw0
   806  001E22  06E8               	decf	wreg,f,c
   807  001E24  E2FC               	bc	u4101
   808  001E26  EC20  F012         	call	_sunrise_sunset	;wreg free
   809  001E2A  EE20  F0DF         	lfsr	2,main@current
   810  001E2E  0E0A               	movlw	10
   811  001E30                     u4111:
   812  001E30  CFEB FFDB          	movff	plusw0,plusw2
   813  001E34  06E8               	decf	wreg,f,c
   814  001E36  E2FC               	bc	u4111
   815  001E38                     
   816                           ;main.c: 40:         current = time_incre(current);
   817  001E38  EE20  F0DF         	lfsr	2,main@current
   818  001E3C  EE00  F084         	lfsr	0,time_incre@current
   819  001E40  0E0A               	movlw	10
   820  001E42                     u4121:
   821  001E42  CFDB FFEB          	movff	plusw2,plusw0
   822  001E46  06E8               	decf	wreg,f,c
   823  001E48  E2FC               	bc	u4121
   824  001E4A  ECF2  F00B         	call	_time_incre	;wreg free
   825  001E4E  EE20  F0DF         	lfsr	2,main@current
   826  001E52  0E0A               	movlw	10
   827  001E54                     u4131:
   828  001E54  CFEB FFDB          	movff	plusw0,plusw2
   829  001E58  06E8               	decf	wreg,f,c
   830  001E5A  E2FC               	bc	u4131
   831  001E5C                     
   832                           ;main.c: 44:         current = LED_toggle(current);
   833  001E5C  EE20  F0DF         	lfsr	2,main@current
   834  001E60  EE00  F010         	lfsr	0,LED_toggle@current
   835  001E64  0E0A               	movlw	10
   836  001E66                     u4141:
   837  001E66  CFDB FFEB          	movff	plusw2,plusw0
   838  001E6A  06E8               	decf	wreg,f,c
   839  001E6C  E2FC               	bc	u4141
   840  001E6E  EC5D  F011         	call	_LED_toggle	;wreg free
   841  001E72  EE20  F0DF         	lfsr	2,main@current
   842  001E76  0E0A               	movlw	10
   843  001E78                     u4151:
   844  001E78  CFEB FFDB          	movff	plusw0,plusw2
   845  001E7C  06E8               	decf	wreg,f,c
   846  001E7E  E2FC               	bc	u4151
   847  001E80                     
   848                           ;main.c: 49:         LEDarray_disp_bin(current.hour);
   849  001E80  0100               	movlb	0	; () banked
   850  001E82  51E4               	movf	(main@current+5)& (0+255),w,b
   851  001E84  EC36  F00E         	call	_LEDarray_disp_bin
   852  001E88  EF0A  F00F         	goto	l3417
   853  001E8C  EF2C  F000         	goto	start
   854  001E90                     __end_of_main:
   855                           	callstack 0
   856                           
   857 ;; *************** function _time_incre *****************
   858 ;; Defined at:
   859 ;;		line 57 in file "dateandtime.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;  current        11   36[BANK0 ] struct .
   862 ;; Auto vars:     Size  Location     Type
   863 ;;  buf2           40   87[BANK0 ] unsigned char [40]
   864 ;;  buf1           40   47[BANK0 ] unsigned char [40]
   865 ;; Return value:  Size  Location     Type
   866 ;;                  11   36[BANK0 ] struct .
   867 ;; Registers used:
   868 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   869 ;; Tracked objects:
   870 ;;		On entry : 0/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   874 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   875 ;;      Locals:         0      80       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   876 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   877 ;;      Totals:         1      91       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   878 ;;Total ram usage:       92 bytes
   879 ;; Hardware stack levels used: 1
   880 ;; Hardware stack levels required when called: 10
   881 ;; This function calls:
   882 ;;		_LCD_sendstring
   883 ;;		_LCD_setline
   884 ;;		_date_check
   885 ;;		_daylightsavingstime_toggle
   886 ;;		_sprintf
   887 ;; This function is called by:
   888 ;;		_main
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           	psect	text1
   893  0017E4                     __ptext1:
   894                           	callstack 0
   895  0017E4                     _time_incre:
   896                           	callstack 20
   897  0017E4                     
   898                           ;dateandtime.c: 59:     if (time_flag==1) {
   899  0017E4  0100               	movlb	0	; () banked
   900  0017E6  05F0               	decf	_time_flag& (0+255),w,b	;volatile
   901  0017E8  A4D8               	btfss	status,2,c
   902  0017EA  EFF9  F00B         	goto	u3951
   903  0017EE  EFFB  F00B         	goto	u3950
   904  0017F2                     u3951:
   905  0017F2  EFB6  F00C         	goto	l3399
   906  0017F6                     u3950:
   907  0017F6                     
   908                           ; BSR set to: 0
   909                           ;dateandtime.c: 60:         current.second = current.second+1;
   910  0017F6  298B               	incf	(time_incre@current+7)& (0+255),w,b
   911  0017F8  6F8B               	movwf	(time_incre@current+7)& (0+255),b
   912  0017FA                     
   913                           ; BSR set to: 0
   914                           ;dateandtime.c: 62:         char buf1[40];;dateandtime.c: 63:         LCD_setline(2);
   915  0017FA  0E02               	movlw	2
   916  0017FC  EC6C  F013         	call	_LCD_setline
   917  001800                     
   918                           ;dateandtime.c: 64:         sprintf(buf1,"%02d:%02d:%02d",current.hour,current.minute,cu
      +                          rrent.second);
   919  001800  0E8F               	movlw	low time_incre@buf1
   920  001802  0100               	movlb	0	; () banked
   921  001804  6F72               	movwf	sprintf@s& (0+255),b
   922  001806  0E00               	movlw	high time_incre@buf1
   923  001808  6F73               	movwf	(sprintf@s+1)& (0+255),b
   924  00180A  0E01               	movlw	low STR_2
   925  00180C  6F74               	movwf	sprintf@fmt& (0+255),b
   926  00180E  0E0E               	movlw	high STR_2
   927  001810  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
   928  001812  5189               	movf	(time_incre@current+5)& (0+255),w,b
   929  001814  6F76               	movwf	(?_sprintf+4)& (0+255),b
   930  001816  6B77               	clrf	(?_sprintf+5)& (0+255),b
   931  001818  BF76               	btfsc	(?_sprintf+4)& (0+255),7,b
   932  00181A  0777               	decf	(?_sprintf+5)& (0+255),f,b
   933  00181C  518A               	movf	(time_incre@current+6)& (0+255),w,b
   934  00181E  6F78               	movwf	(?_sprintf+6)& (0+255),b
   935  001820  6B79               	clrf	(?_sprintf+7)& (0+255),b
   936  001822  BF78               	btfsc	(?_sprintf+6)& (0+255),7,b
   937  001824  0779               	decf	(?_sprintf+7)& (0+255),f,b
   938  001826  518B               	movf	(time_incre@current+7)& (0+255),w,b
   939  001828  6F7A               	movwf	(?_sprintf+8)& (0+255),b
   940  00182A  6B7B               	clrf	(?_sprintf+9)& (0+255),b
   941  00182C  BF7A               	btfsc	(?_sprintf+8)& (0+255),7,b
   942  00182E  077B               	decf	(?_sprintf+9)& (0+255),f,b
   943  001830  ECF5  F012         	call	_sprintf	;wreg free
   944  001834                     
   945                           ;dateandtime.c: 65:         LCD_sendstring(buf1);
   946  001834  0E8F               	movlw	low time_incre@buf1
   947  001836  6E08               	movwf	LCD_sendstring@string^0,c
   948  001838  0E00               	movlw	high time_incre@buf1
   949  00183A  6E09               	movwf	(LCD_sendstring@string+1)^0,c
   950  00183C  EC2B  F014         	call	_LCD_sendstring	;wreg free
   951  001840                     
   952                           ;dateandtime.c: 67:         if (current.second>59) {
   953  001840  0100               	movlb	0	; () banked
   954  001842  518B               	movf	(time_incre@current+7)& (0+255),w,b
   955  001844  0A80               	xorlw	128
   956  001846  0F44               	addlw	-188
   957  001848  A0D8               	btfss	status,0,c
   958  00184A  EF29  F00C         	goto	u3961
   959  00184E  EF2B  F00C         	goto	u3960
   960  001852                     u3961:
   961  001852  EFB4  F00C         	goto	l297
   962  001856                     u3960:
   963  001856                     
   964                           ; BSR set to: 0
   965                           ;dateandtime.c: 68:             LATHbits.LATH3 = !LATHbits.LATH3;
   966  001856  A680               	btfss	128,3,c	;volatile
   967  001858  EF30  F00C         	goto	u3971
   968  00185C  EF34  F00C         	goto	u3970
   969  001860                     u3971:
   970  001860  6A50               	clrf	??_time_incre^0,c
   971  001862  2A50               	incf	??_time_incre^0,f,c
   972  001864  EF35  F00C         	goto	u3988
   973  001868                     u3970:
   974  001868  6A50               	clrf	??_time_incre^0,c
   975  00186A                     u3988:
   976  00186A  4650               	rlncf	??_time_incre^0,f,c
   977  00186C  4650               	rlncf	??_time_incre^0,f,c
   978  00186E  4650               	rlncf	??_time_incre^0,f,c
   979  001870  5080               	movf	128,w,c	;volatile
   980  001872  1850               	xorwf	??_time_incre^0,w,c
   981  001874  0BF7               	andlw	-9
   982  001876  1850               	xorwf	??_time_incre^0,w,c
   983  001878  6E80               	movwf	128,c	;volatile
   984  00187A                     
   985                           ;dateandtime.c: 69:             current.second = 0;
   986  00187A  0E00               	movlw	0
   987  00187C  0100               	movlb	0	; () banked
   988  00187E  6F8B               	movwf	(time_incre@current+7)& (0+255),b
   989  001880                     
   990                           ; BSR set to: 0
   991                           ;dateandtime.c: 70:             current.minute = current.minute+1;
   992  001880  298A               	incf	(time_incre@current+6)& (0+255),w,b
   993  001882  6F8A               	movwf	(time_incre@current+6)& (0+255),b
   994  001884                     
   995                           ; BSR set to: 0
   996                           ;dateandtime.c: 71:             if (current.minute>59) {
   997  001884  518A               	movf	(time_incre@current+6)& (0+255),w,b
   998  001886  0A80               	xorlw	128
   999  001888  0F44               	addlw	-188
  1000  00188A  A0D8               	btfss	status,0,c
  1001  00188C  EF4A  F00C         	goto	u3991
  1002  001890  EF4C  F00C         	goto	u3990
  1003  001894                     u3991:
  1004  001894  EFB4  F00C         	goto	l297
  1005  001898                     u3990:
  1006  001898                     
  1007                           ; BSR set to: 0
  1008                           ;dateandtime.c: 72:                 current.minute = 0;
  1009  001898  0E00               	movlw	0
  1010  00189A  6F8A               	movwf	(time_incre@current+6)& (0+255),b
  1011  00189C                     
  1012                           ; BSR set to: 0
  1013                           ;dateandtime.c: 73:                 current.hour = current.hour+1;
  1014  00189C  2989               	incf	(time_incre@current+5)& (0+255),w,b
  1015  00189E  6F89               	movwf	(time_incre@current+5)& (0+255),b
  1016  0018A0                     
  1017                           ; BSR set to: 0
  1018                           ;dateandtime.c: 74:                 current = daylightsavingstime_toggle(current);
  1019  0018A0  EE20  F084         	lfsr	2,time_incre@current
  1020  0018A4  EE00  F005         	lfsr	0,daylightsavingstime_toggle@current
  1021  0018A8  0E0A               	movlw	10
  1022  0018AA                     u4001:
  1023  0018AA  CFDB FFEB          	movff	plusw2,plusw0
  1024  0018AE  06E8               	decf	wreg,f,c
  1025  0018B0  E2FC               	bc	u4001
  1026  0018B2  ECBE  F00F         	call	_daylightsavingstime_toggle	;wreg free
  1027  0018B6  EE20  F084         	lfsr	2,time_incre@current
  1028  0018BA  0E0A               	movlw	10
  1029  0018BC                     u4011:
  1030  0018BC  CFEB FFDB          	movff	plusw0,plusw2
  1031  0018C0  06E8               	decf	wreg,f,c
  1032  0018C2  E2FC               	bc	u4011
  1033  0018C4                     
  1034                           ;dateandtime.c: 75:                 if (current.hour>23) {
  1035  0018C4  0100               	movlb	0	; () banked
  1036  0018C6  5189               	movf	(time_incre@current+5)& (0+255),w,b
  1037  0018C8  0A80               	xorlw	128
  1038  0018CA  0F68               	addlw	-152
  1039  0018CC  A0D8               	btfss	status,0,c
  1040  0018CE  EF6B  F00C         	goto	u4021
  1041  0018D2  EF6D  F00C         	goto	u4020
  1042  0018D6                     u4021:
  1043  0018D6  EFB4  F00C         	goto	l297
  1044  0018DA                     u4020:
  1045  0018DA                     
  1046                           ; BSR set to: 0
  1047                           ;dateandtime.c: 76:                     current.hour = 0;
  1048  0018DA  0E00               	movlw	0
  1049  0018DC  6F89               	movwf	(time_incre@current+5)& (0+255),b
  1050  0018DE                     
  1051                           ; BSR set to: 0
  1052                           ;dateandtime.c: 77:                     current.date = current.date+1;
  1053  0018DE  2987               	incf	(time_incre@current+3)& (0+255),w,b
  1054  0018E0  6F87               	movwf	(time_incre@current+3)& (0+255),b
  1055  0018E2                     
  1056                           ; BSR set to: 0
  1057                           ;dateandtime.c: 78:                     current = date_check(current);
  1058  0018E2  EE20  F084         	lfsr	2,time_incre@current
  1059  0018E6  EE00  F005         	lfsr	0,date_check@current
  1060  0018EA  0E0A               	movlw	10
  1061  0018EC                     u4031:
  1062  0018EC  CFDB FFEB          	movff	plusw2,plusw0
  1063  0018F0  06E8               	decf	wreg,f,c
  1064  0018F2  E2FC               	bc	u4031
  1065  0018F4  EC46  F00A         	call	_date_check	;wreg free
  1066  0018F8  EE20  F084         	lfsr	2,time_incre@current
  1067  0018FC  0E0A               	movlw	10
  1068  0018FE                     u4041:
  1069  0018FE  CFEB FFDB          	movff	plusw0,plusw2
  1070  001902  06E8               	decf	wreg,f,c
  1071  001904  E2FC               	bc	u4041
  1072  001906                     
  1073                           ;dateandtime.c: 80:                     char buf2[40];;dateandtime.c: 81:               
      +                                LCD_setline(1);
  1074  001906  0E01               	movlw	1
  1075  001908  EC6C  F013         	call	_LCD_setline
  1076  00190C                     
  1077                           ;dateandtime.c: 82:                     sprintf(buf2,"%04d-%02d-%02d",current.year,curre
      +                          nt.month,current.date);
  1078  00190C  0EB7               	movlw	low time_incre@buf2
  1079  00190E  0100               	movlb	0	; () banked
  1080  001910  6F72               	movwf	sprintf@s& (0+255),b
  1081  001912  0E00               	movlw	high time_incre@buf2
  1082  001914  6F73               	movwf	(sprintf@s+1)& (0+255),b
  1083  001916  0E10               	movlw	low STR_1
  1084  001918  6F74               	movwf	sprintf@fmt& (0+255),b
  1085  00191A  0E0E               	movlw	high STR_1
  1086  00191C  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  1087  00191E  C084  F076         	movff	time_incre@current,?_sprintf+4
  1088  001922  C085  F077         	movff	time_incre@current+1,?_sprintf+5
  1089  001926  5186               	movf	(time_incre@current+2)& (0+255),w,b
  1090  001928  6F78               	movwf	(?_sprintf+6)& (0+255),b
  1091  00192A  6B79               	clrf	(?_sprintf+7)& (0+255),b
  1092  00192C  BF78               	btfsc	(?_sprintf+6)& (0+255),7,b
  1093  00192E  0779               	decf	(?_sprintf+7)& (0+255),f,b
  1094  001930  5187               	movf	(time_incre@current+3)& (0+255),w,b
  1095  001932  6F7A               	movwf	(?_sprintf+8)& (0+255),b
  1096  001934  6B7B               	clrf	(?_sprintf+9)& (0+255),b
  1097  001936  BF7A               	btfsc	(?_sprintf+8)& (0+255),7,b
  1098  001938  077B               	decf	(?_sprintf+9)& (0+255),f,b
  1099  00193A  ECF5  F012         	call	_sprintf	;wreg free
  1100  00193E                     
  1101                           ;dateandtime.c: 83:                     LCD_sendstring(buf2);
  1102  00193E  0EB7               	movlw	low time_incre@buf2
  1103  001940  6E08               	movwf	LCD_sendstring@string^0,c
  1104  001942  0E00               	movlw	high time_incre@buf2
  1105  001944  6E09               	movwf	(LCD_sendstring@string+1)^0,c
  1106  001946  EC2B  F014         	call	_LCD_sendstring	;wreg free
  1107  00194A                     
  1108                           ;dateandtime.c: 85:                     current.day = current.day+1;
  1109  00194A  0100               	movlb	0	; () banked
  1110  00194C  2988               	incf	(time_incre@current+4)& (0+255),w,b
  1111  00194E  6F88               	movwf	(time_incre@current+4)& (0+255),b
  1112  001950                     
  1113                           ; BSR set to: 0
  1114                           ;dateandtime.c: 86:                     if (current.day>7) {
  1115  001950  5188               	movf	(time_incre@current+4)& (0+255),w,b
  1116  001952  0A80               	xorlw	128
  1117  001954  0F78               	addlw	-136
  1118  001956  A0D8               	btfss	status,0,c
  1119  001958  EFB0  F00C         	goto	u4051
  1120  00195C  EFB2  F00C         	goto	u4050
  1121  001960                     u4051:
  1122  001960  EFB4  F00C         	goto	l297
  1123  001964                     u4050:
  1124  001964                     
  1125                           ; BSR set to: 0
  1126                           ;dateandtime.c: 87:                         current.day = 1;
  1127  001964  0E01               	movlw	1
  1128  001966  6F88               	movwf	(time_incre@current+4)& (0+255),b
  1129  001968                     l297:
  1130                           
  1131                           ; BSR set to: 0
  1132                           ;dateandtime.c: 92:         time_flag=0;
  1133  001968  0E00               	movlw	0
  1134  00196A  6FF0               	movwf	_time_flag& (0+255),b	;volatile
  1135  00196C                     l3399:
  1136                           
  1137                           ; BSR set to: 0
  1138                           ;dateandtime.c: 95:     return current;
  1139  00196C  EE20  F084         	lfsr	2,time_incre@current
  1140  001970  EE00  F084         	lfsr	0,?_time_incre
  1141  001974  0E0A               	movlw	10
  1142  001976                     u4061:
  1143  001976  CFDB FFEB          	movff	plusw2,plusw0
  1144  00197A  06E8               	decf	wreg,f,c
  1145  00197C  E2FC               	bc	u4061
  1146  00197E                     
  1147                           ; BSR set to: 0
  1148  00197E  0012               	return		;funcret
  1149  001980                     __end_of_time_incre:
  1150                           	callstack 0
  1151                           
  1152 ;; *************** function _daylightsavingstime_toggle *****************
  1153 ;; Defined at:
  1154 ;;		line 13 in file "dateandtime.c"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;  current        11    4[COMRAM] struct .
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;		None
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  11    4[COMRAM] struct .
  1161 ;; Registers used:
  1162 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  1163 ;; Tracked objects:
  1164 ;;		On entry : 0/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1168 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1170 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1171 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1172 ;;Total ram usage:       13 bytes
  1173 ;; Hardware stack levels used: 1
  1174 ;; Hardware stack levels required when called: 2
  1175 ;; This function calls:
  1176 ;;		Nothing
  1177 ;; This function is called by:
  1178 ;;		_time_incre
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182                           	psect	text2
  1183  001F7C                     __ptext2:
  1184                           	callstack 0
  1185  001F7C                     _daylightsavingstime_toggle:
  1186                           	callstack 27
  1187  001F7C                     
  1188                           ;dateandtime.c: 15:     if (current.month==3 && (current.date+7)>31 && current.day==7 &&
      +                           current.hour==1) {
  1189  001F7C  0E03               	movlw	3
  1190  001F7E  1807               	xorwf	(daylightsavingstime_toggle@current+2)^0,w,c
  1191  001F80  A4D8               	btfss	status,2,c
  1192  001F82  EFC5  F00F         	goto	u2471
  1193  001F86  EFC7  F00F         	goto	u2470
  1194  001F8A                     u2471:
  1195  001F8A  EFF3  F00F         	goto	l2565
  1196  001F8E                     u2470:
  1197  001F8E  C008  F010         	movff	daylightsavingstime_toggle@current+3,??_daylightsavingstime_toggle
  1198  001F92  6A11               	clrf	(??_daylightsavingstime_toggle+1)^0,c
  1199  001F94  BE10               	btfsc	??_daylightsavingstime_toggle^0,7,c
  1200  001F96  0611               	decf	(??_daylightsavingstime_toggle+1)^0,f,c
  1201  001F98  0E07               	movlw	7
  1202  001F9A  2610               	addwf	??_daylightsavingstime_toggle^0,f,c
  1203  001F9C  0E00               	movlw	0
  1204  001F9E  2211               	addwfc	(??_daylightsavingstime_toggle+1)^0,f,c
  1205  001FA0  BE11               	btfsc	(??_daylightsavingstime_toggle+1)^0,7,c
  1206  001FA2  EFDC  F00F         	goto	u2481
  1207  001FA6  5011               	movf	(??_daylightsavingstime_toggle+1)^0,w,c
  1208  001FA8  E109               	bnz	u2480
  1209  001FAA  0E20               	movlw	32
  1210  001FAC  5C10               	subwf	??_daylightsavingstime_toggle^0,w,c
  1211  001FAE  A0D8               	btfss	status,0,c
  1212  001FB0  EFDC  F00F         	goto	u2481
  1213  001FB4  EFDE  F00F         	goto	u2480
  1214  001FB8                     u2481:
  1215  001FB8  EFF3  F00F         	goto	l2565
  1216  001FBC                     u2480:
  1217  001FBC  0E07               	movlw	7
  1218  001FBE  1809               	xorwf	(daylightsavingstime_toggle@current+4)^0,w,c
  1219  001FC0  A4D8               	btfss	status,2,c
  1220  001FC2  EFE5  F00F         	goto	u2491
  1221  001FC6  EFE7  F00F         	goto	u2490
  1222  001FCA                     u2491:
  1223  001FCA  EFF3  F00F         	goto	l2565
  1224  001FCE                     u2490:
  1225  001FCE  040A               	decf	(daylightsavingstime_toggle@current+5)^0,w,c
  1226  001FD0  A4D8               	btfss	status,2,c
  1227  001FD2  EFED  F00F         	goto	u2501
  1228  001FD6  EFEF  F00F         	goto	u2500
  1229  001FDA                     u2501:
  1230  001FDA  EFF3  F00F         	goto	l2565
  1231  001FDE                     u2500:
  1232  001FDE                     
  1233                           ;dateandtime.c: 16:         current.hour = current.hour+1;
  1234  001FDE  280A               	incf	(daylightsavingstime_toggle@current+5)^0,w,c
  1235  001FE0  6E0A               	movwf	(daylightsavingstime_toggle@current+5)^0,c
  1236                           
  1237                           ;dateandtime.c: 17:     } else if (current.month==10 && (current.date+7)>31 && current.d
      +                          ay==7 && current.hour==2) {
  1238  001FE2  EF27  F010         	goto	l2575
  1239  001FE6                     l2565:
  1240  001FE6  0E0A               	movlw	10
  1241  001FE8  1807               	xorwf	(daylightsavingstime_toggle@current+2)^0,w,c
  1242  001FEA  A4D8               	btfss	status,2,c
  1243  001FEC  EFFA  F00F         	goto	u2511
  1244  001FF0  EFFC  F00F         	goto	u2510
  1245  001FF4                     u2511:
  1246  001FF4  EF27  F010         	goto	l2575
  1247  001FF8                     u2510:
  1248  001FF8  C008  F010         	movff	daylightsavingstime_toggle@current+3,??_daylightsavingstime_toggle
  1249  001FFC  6A11               	clrf	(??_daylightsavingstime_toggle+1)^0,c
  1250  001FFE  BE10               	btfsc	??_daylightsavingstime_toggle^0,7,c
  1251  002000  0611               	decf	(??_daylightsavingstime_toggle+1)^0,f,c
  1252  002002  0E07               	movlw	7
  1253  002004  2610               	addwf	??_daylightsavingstime_toggle^0,f,c
  1254  002006  0E00               	movlw	0
  1255  002008  2211               	addwfc	(??_daylightsavingstime_toggle+1)^0,f,c
  1256  00200A  BE11               	btfsc	(??_daylightsavingstime_toggle+1)^0,7,c
  1257  00200C  EF11  F010         	goto	u2521
  1258  002010  5011               	movf	(??_daylightsavingstime_toggle+1)^0,w,c
  1259  002012  E109               	bnz	u2520
  1260  002014  0E20               	movlw	32
  1261  002016  5C10               	subwf	??_daylightsavingstime_toggle^0,w,c
  1262  002018  A0D8               	btfss	status,0,c
  1263  00201A  EF11  F010         	goto	u2521
  1264  00201E  EF13  F010         	goto	u2520
  1265  002022                     u2521:
  1266  002022  EF27  F010         	goto	l2575
  1267  002026                     u2520:
  1268  002026  0E07               	movlw	7
  1269  002028  1809               	xorwf	(daylightsavingstime_toggle@current+4)^0,w,c
  1270  00202A  A4D8               	btfss	status,2,c
  1271  00202C  EF1A  F010         	goto	u2531
  1272  002030  EF1C  F010         	goto	u2530
  1273  002034                     u2531:
  1274  002034  EF27  F010         	goto	l2575
  1275  002038                     u2530:
  1276  002038  0E02               	movlw	2
  1277  00203A  180A               	xorwf	(daylightsavingstime_toggle@current+5)^0,w,c
  1278  00203C  A4D8               	btfss	status,2,c
  1279  00203E  EF23  F010         	goto	u2541
  1280  002042  EF25  F010         	goto	u2540
  1281  002046                     u2541:
  1282  002046  EF27  F010         	goto	l2575
  1283  00204A                     u2540:
  1284  00204A                     
  1285                           ;dateandtime.c: 18:         current.hour = current.hour-1;
  1286  00204A  040A               	decf	(daylightsavingstime_toggle@current+5)^0,w,c
  1287  00204C  6E0A               	movwf	(daylightsavingstime_toggle@current+5)^0,c
  1288  00204E                     l2575:
  1289                           
  1290                           ;dateandtime.c: 21:     return current;
  1291  00204E  EE20  F005         	lfsr	2,daylightsavingstime_toggle@current
  1292  002052  EE00  F005         	lfsr	0,?_daylightsavingstime_toggle
  1293  002056  0E0A               	movlw	10
  1294  002058                     u2551:
  1295  002058  CFDB FFEB          	movff	plusw2,plusw0
  1296  00205C  06E8               	decf	wreg,f,c
  1297  00205E  E2FC               	bc	u2551
  1298  002060  0012               	return		;funcret
  1299  002062                     __end_of_daylightsavingstime_toggle:
  1300                           	callstack 0
  1301                           
  1302 ;; *************** function _date_check *****************
  1303 ;; Defined at:
  1304 ;;		line 30 in file "dateandtime.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;  current        11    4[COMRAM] struct .
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;		None
  1309 ;; Return value:  Size  Location     Type
  1310 ;;                  11    4[COMRAM] struct .
  1311 ;; Registers used:
  1312 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1318 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1320 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1321 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1322 ;;Total ram usage:       13 bytes
  1323 ;; Hardware stack levels used: 1
  1324 ;; Hardware stack levels required when called: 2
  1325 ;; This function calls:
  1326 ;;		Nothing
  1327 ;; This function is called by:
  1328 ;;		_time_incre
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           	psect	text3
  1333  00148C                     __ptext3:
  1334                           	callstack 0
  1335  00148C                     _date_check:
  1336                           	callstack 27
  1337  00148C                     
  1338                           ;dateandtime.c: 36:     if ((current.year%4==0 && current.month==2 && current.date>29) |
      +                          | (current.year%4!=0 && current.month==2 && current.date>28) || ((current.month==1 || cu
      +                          rrent.month==3 || current.month==5 || current.month==7 || current.month==8 || current.mo
      +                          nth==10 || current.month==12) && current.date>31) || ((current.month==4 || current.month
      +                          ==6 || current.month==9 || current.month==11) && current.date>30)) {
  1339  00148C  0E03               	movlw	3
  1340  00148E  1405               	andwf	date_check@current^0,w,c
  1341  001490  6E10               	movwf	??_date_check^0,c
  1342  001492  0E00               	movlw	0
  1343  001494  1406               	andwf	(date_check@current+1)^0,w,c
  1344  001496  6E11               	movwf	(??_date_check+1)^0,c
  1345  001498  5010               	movf	??_date_check^0,w,c
  1346  00149A  1011               	iorwf	(??_date_check+1)^0,w,c
  1347  00149C  A4D8               	btfss	status,2,c
  1348  00149E  EF53  F00A         	goto	u2561
  1349  0014A2  EF55  F00A         	goto	u2560
  1350  0014A6                     u2561:
  1351  0014A6  EF68  F00A         	goto	l2585
  1352  0014AA                     u2560:
  1353  0014AA  0E02               	movlw	2
  1354  0014AC  1807               	xorwf	(date_check@current+2)^0,w,c
  1355  0014AE  A4D8               	btfss	status,2,c
  1356  0014B0  EF5C  F00A         	goto	u2571
  1357  0014B4  EF5E  F00A         	goto	u2570
  1358  0014B8                     u2571:
  1359  0014B8  EF68  F00A         	goto	l2585
  1360  0014BC                     u2570:
  1361  0014BC  5008               	movf	(date_check@current+3)^0,w,c
  1362  0014BE  0A80               	xorlw	128
  1363  0014C0  0F62               	addlw	-158
  1364  0014C2  B0D8               	btfsc	status,0,c
  1365  0014C4  EF66  F00A         	goto	u2581
  1366  0014C8  EF68  F00A         	goto	u2580
  1367  0014CC                     u2581:
  1368  0014CC  EF00  F00B         	goto	l2617
  1369  0014D0                     u2580:
  1370  0014D0                     l2585:
  1371  0014D0  0E03               	movlw	3
  1372  0014D2  1405               	andwf	date_check@current^0,w,c
  1373  0014D4  6E10               	movwf	??_date_check^0,c
  1374  0014D6  0E00               	movlw	0
  1375  0014D8  1406               	andwf	(date_check@current+1)^0,w,c
  1376  0014DA  6E11               	movwf	(??_date_check+1)^0,c
  1377  0014DC  5010               	movf	??_date_check^0,w,c
  1378  0014DE  1011               	iorwf	(??_date_check+1)^0,w,c
  1379  0014E0  B4D8               	btfsc	status,2,c
  1380  0014E2  EF75  F00A         	goto	u2591
  1381  0014E6  EF77  F00A         	goto	u2590
  1382  0014EA                     u2591:
  1383  0014EA  EF8A  F00A         	goto	l2591
  1384  0014EE                     u2590:
  1385  0014EE  0E02               	movlw	2
  1386  0014F0  1807               	xorwf	(date_check@current+2)^0,w,c
  1387  0014F2  A4D8               	btfss	status,2,c
  1388  0014F4  EF7E  F00A         	goto	u2601
  1389  0014F8  EF80  F00A         	goto	u2600
  1390  0014FC                     u2601:
  1391  0014FC  EF8A  F00A         	goto	l2591
  1392  001500                     u2600:
  1393  001500  5008               	movf	(date_check@current+3)^0,w,c
  1394  001502  0A80               	xorlw	128
  1395  001504  0F63               	addlw	-157
  1396  001506  B0D8               	btfsc	status,0,c
  1397  001508  EF88  F00A         	goto	u2611
  1398  00150C  EF8A  F00A         	goto	u2610
  1399  001510                     u2611:
  1400  001510  EF00  F00B         	goto	l2617
  1401  001514                     u2610:
  1402  001514                     l2591:
  1403  001514  0407               	decf	(date_check@current+2)^0,w,c
  1404  001516  B4D8               	btfsc	status,2,c
  1405  001518  EF90  F00A         	goto	u2621
  1406  00151C  EF92  F00A         	goto	u2620
  1407  001520                     u2621:
  1408  001520  EFC8  F00A         	goto	l2605
  1409  001524                     u2620:
  1410  001524  0E03               	movlw	3
  1411  001526  1807               	xorwf	(date_check@current+2)^0,w,c
  1412  001528  B4D8               	btfsc	status,2,c
  1413  00152A  EF99  F00A         	goto	u2631
  1414  00152E  EF9B  F00A         	goto	u2630
  1415  001532                     u2631:
  1416  001532  EFC8  F00A         	goto	l2605
  1417  001536                     u2630:
  1418  001536  0E05               	movlw	5
  1419  001538  1807               	xorwf	(date_check@current+2)^0,w,c
  1420  00153A  B4D8               	btfsc	status,2,c
  1421  00153C  EFA2  F00A         	goto	u2641
  1422  001540  EFA4  F00A         	goto	u2640
  1423  001544                     u2641:
  1424  001544  EFC8  F00A         	goto	l2605
  1425  001548                     u2640:
  1426  001548  0E07               	movlw	7
  1427  00154A  1807               	xorwf	(date_check@current+2)^0,w,c
  1428  00154C  B4D8               	btfsc	status,2,c
  1429  00154E  EFAB  F00A         	goto	u2651
  1430  001552  EFAD  F00A         	goto	u2650
  1431  001556                     u2651:
  1432  001556  EFC8  F00A         	goto	l2605
  1433  00155A                     u2650:
  1434  00155A  0E08               	movlw	8
  1435  00155C  1807               	xorwf	(date_check@current+2)^0,w,c
  1436  00155E  B4D8               	btfsc	status,2,c
  1437  001560  EFB4  F00A         	goto	u2661
  1438  001564  EFB6  F00A         	goto	u2660
  1439  001568                     u2661:
  1440  001568  EFC8  F00A         	goto	l2605
  1441  00156C                     u2660:
  1442  00156C  0E0A               	movlw	10
  1443  00156E  1807               	xorwf	(date_check@current+2)^0,w,c
  1444  001570  B4D8               	btfsc	status,2,c
  1445  001572  EFBD  F00A         	goto	u2671
  1446  001576  EFBF  F00A         	goto	u2670
  1447  00157A                     u2671:
  1448  00157A  EFC8  F00A         	goto	l2605
  1449  00157E                     u2670:
  1450  00157E  0E0C               	movlw	12
  1451  001580  1807               	xorwf	(date_check@current+2)^0,w,c
  1452  001582  A4D8               	btfss	status,2,c
  1453  001584  EFC6  F00A         	goto	u2681
  1454  001588  EFC8  F00A         	goto	u2680
  1455  00158C                     u2681:
  1456  00158C  EFD2  F00A         	goto	l2607
  1457  001590                     u2680:
  1458  001590                     l2605:
  1459  001590  5008               	movf	(date_check@current+3)^0,w,c
  1460  001592  0A80               	xorlw	128
  1461  001594  0F60               	addlw	-160
  1462  001596  B0D8               	btfsc	status,0,c
  1463  001598  EFD0  F00A         	goto	u2691
  1464  00159C  EFD2  F00A         	goto	u2690
  1465  0015A0                     u2691:
  1466  0015A0  EF00  F00B         	goto	l2617
  1467  0015A4                     u2690:
  1468  0015A4                     l2607:
  1469  0015A4  0E04               	movlw	4
  1470  0015A6  1807               	xorwf	(date_check@current+2)^0,w,c
  1471  0015A8  B4D8               	btfsc	status,2,c
  1472  0015AA  EFD9  F00A         	goto	u2701
  1473  0015AE  EFDB  F00A         	goto	u2700
  1474  0015B2                     u2701:
  1475  0015B2  EFF6  F00A         	goto	l2615
  1476  0015B6                     u2700:
  1477  0015B6  0E06               	movlw	6
  1478  0015B8  1807               	xorwf	(date_check@current+2)^0,w,c
  1479  0015BA  B4D8               	btfsc	status,2,c
  1480  0015BC  EFE2  F00A         	goto	u2711
  1481  0015C0  EFE4  F00A         	goto	u2710
  1482  0015C4                     u2711:
  1483  0015C4  EFF6  F00A         	goto	l2615
  1484  0015C8                     u2710:
  1485  0015C8  0E09               	movlw	9
  1486  0015CA  1807               	xorwf	(date_check@current+2)^0,w,c
  1487  0015CC  B4D8               	btfsc	status,2,c
  1488  0015CE  EFEB  F00A         	goto	u2721
  1489  0015D2  EFED  F00A         	goto	u2720
  1490  0015D6                     u2721:
  1491  0015D6  EFF6  F00A         	goto	l2615
  1492  0015DA                     u2720:
  1493  0015DA  0E0B               	movlw	11
  1494  0015DC  1807               	xorwf	(date_check@current+2)^0,w,c
  1495  0015DE  A4D8               	btfss	status,2,c
  1496  0015E0  EFF4  F00A         	goto	u2731
  1497  0015E4  EFF6  F00A         	goto	u2730
  1498  0015E8                     u2731:
  1499  0015E8  EF16  F00B         	goto	l2627
  1500  0015EC                     u2730:
  1501  0015EC                     l2615:
  1502  0015EC  5008               	movf	(date_check@current+3)^0,w,c
  1503  0015EE  0A80               	xorlw	128
  1504  0015F0  0F61               	addlw	-159
  1505  0015F2  A0D8               	btfss	status,0,c
  1506  0015F4  EFFE  F00A         	goto	u2741
  1507  0015F8  EF00  F00B         	goto	u2740
  1508  0015FC                     u2741:
  1509  0015FC  EF16  F00B         	goto	l2627
  1510  001600                     u2740:
  1511  001600                     l2617:
  1512                           
  1513                           ;dateandtime.c: 39: ;dateandtime.c: 40:         current.month = current.month+1;
  1514  001600  2807               	incf	(date_check@current+2)^0,w,c
  1515  001602  6E07               	movwf	(date_check@current+2)^0,c
  1516  001604                     
  1517                           ;dateandtime.c: 41:         current.date = 1;
  1518  001604  0E01               	movlw	1
  1519  001606  6E08               	movwf	(date_check@current+3)^0,c
  1520  001608                     
  1521                           ;dateandtime.c: 43:         if (current.month>12) {
  1522  001608  5007               	movf	(date_check@current+2)^0,w,c
  1523  00160A  0A80               	xorlw	128
  1524  00160C  0F73               	addlw	-141
  1525  00160E  A0D8               	btfss	status,0,c
  1526  001610  EF0C  F00B         	goto	u2751
  1527  001614  EF0E  F00B         	goto	u2750
  1528  001618                     u2751:
  1529  001618  EF16  F00B         	goto	l2627
  1530  00161C                     u2750:
  1531  00161C                     
  1532                           ;dateandtime.c: 44:             current.year = current.year+1;
  1533  00161C  0E01               	movlw	1
  1534  00161E  2405               	addwf	date_check@current^0,w,c
  1535  001620  6E05               	movwf	date_check@current^0,c
  1536  001622  0E00               	movlw	0
  1537  001624  2006               	addwfc	(date_check@current+1)^0,w,c
  1538  001626  6E06               	movwf	(date_check@current+1)^0,c
  1539  001628                     
  1540                           ;dateandtime.c: 45:             current.month = 1;
  1541  001628  0E01               	movlw	1
  1542  00162A  6E07               	movwf	(date_check@current+2)^0,c
  1543  00162C                     l2627:
  1544                           
  1545                           ;dateandtime.c: 49:     return current;
  1546  00162C  EE20  F005         	lfsr	2,date_check@current
  1547  001630  EE00  F005         	lfsr	0,?_date_check
  1548  001634  0E0A               	movlw	10
  1549  001636                     u2761:
  1550  001636  CFDB FFEB          	movff	plusw2,plusw0
  1551  00163A  06E8               	decf	wreg,f,c
  1552  00163C  E2FC               	bc	u2761
  1553  00163E  0012               	return		;funcret
  1554  001640                     __end_of_date_check:
  1555                           	callstack 0
  1556                           
  1557 ;; *************** function _sunrise_sunset *****************
  1558 ;; Defined at:
  1559 ;;		line 147 in file "dateandtime.c"
  1560 ;; Parameters:    Size  Location     Type
  1561 ;;  current        11   26[COMRAM] struct .
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;		None
  1564 ;; Return value:  Size  Location     Type
  1565 ;;                  11   26[COMRAM] struct .
  1566 ;; Registers used:
  1567 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  1568 ;; Tracked objects:
  1569 ;;		On entry : 0/0
  1570 ;;		On exit  : 0/0
  1571 ;;		Unchanged: 0/0
  1572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1573 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1576 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1577 ;;Total ram usage:       11 bytes
  1578 ;; Hardware stack levels used: 1
  1579 ;; Hardware stack levels required when called: 4
  1580 ;; This function calls:
  1581 ;;		_sun_sync
  1582 ;;		_sunrise
  1583 ;; This function is called by:
  1584 ;;		_main
  1585 ;; This function uses a non-reentrant model
  1586 ;;
  1587                           
  1588                           	psect	text4
  1589  002440                     __ptext4:
  1590                           	callstack 0
  1591  002440                     _sunrise_sunset:
  1592                           	callstack 26
  1593  002440                     
  1594                           ;dateandtime.c: 149:     if (sunrise_flag==1) {
  1595  002440  0455               	decf	_sunrise_flag^0,w,c	;volatile
  1596  002442  A4D8               	btfss	status,2,c
  1597  002444  EF26  F012         	goto	u2851
  1598  002448  EF28  F012         	goto	u2850
  1599  00244C                     u2851:
  1600  00244C  EF3E  F012         	goto	l2739
  1601  002450                     u2850:
  1602  002450                     
  1603                           ;dateandtime.c: 150:     current=sunrise(current);
  1604  002450  EE20  F01B         	lfsr	2,sunrise_sunset@current
  1605  002454  EE00  F005         	lfsr	0,sunrise@current
  1606  002458  0E0A               	movlw	10
  1607  00245A                     u2861:
  1608  00245A  CFDB FFEB          	movff	plusw2,plusw0
  1609  00245E  06E8               	decf	wreg,f,c
  1610  002460  E2FC               	bc	u2861
  1611  002462  ECAD  F014         	call	_sunrise	;wreg free
  1612  002466  EE20  F01B         	lfsr	2,sunrise_sunset@current
  1613  00246A  0E0A               	movlw	10
  1614  00246C                     u2871:
  1615  00246C  CFEB FFDB          	movff	plusw0,plusw2
  1616  002470  06E8               	decf	wreg,f,c
  1617  002472  E2FC               	bc	u2871
  1618  002474                     
  1619                           ;dateandtime.c: 151:     sunrise_flag=0;
  1620  002474  0E00               	movlw	0
  1621  002476  6E55               	movwf	_sunrise_flag^0,c	;volatile
  1622                           
  1623                           ;dateandtime.c: 152:     } else if (sunset_flag==1) {
  1624  002478  EF5A  F012         	goto	l2745
  1625  00247C                     l2739:
  1626  00247C  0454               	decf	_sunset_flag^0,w,c	;volatile
  1627  00247E  A4D8               	btfss	status,2,c
  1628  002480  EF44  F012         	goto	u2881
  1629  002484  EF46  F012         	goto	u2880
  1630  002488                     u2881:
  1631  002488  EF5A  F012         	goto	l2745
  1632  00248C                     u2880:
  1633  00248C                     
  1634                           ;dateandtime.c: 153:         current=sun_sync(current);
  1635  00248C  EE20  F01B         	lfsr	2,sunrise_sunset@current
  1636  002490  EE00  F00D         	lfsr	0,sun_sync@current
  1637  002494  0E0A               	movlw	10
  1638  002496                     u2891:
  1639  002496  CFDB FFEB          	movff	plusw2,plusw0
  1640  00249A  06E8               	decf	wreg,f,c
  1641  00249C  E2FC               	bc	u2891
  1642  00249E  EC31  F010         	call	_sun_sync	;wreg free
  1643  0024A2  EE20  F01B         	lfsr	2,sunrise_sunset@current
  1644  0024A6  0E0A               	movlw	10
  1645  0024A8                     u2901:
  1646  0024A8  CFEB FFDB          	movff	plusw0,plusw2
  1647  0024AC  06E8               	decf	wreg,f,c
  1648  0024AE  E2FC               	bc	u2901
  1649  0024B0                     
  1650                           ;dateandtime.c: 154:         sunset_flag=0;
  1651  0024B0  0E00               	movlw	0
  1652  0024B2  6E54               	movwf	_sunset_flag^0,c	;volatile
  1653  0024B4                     l2745:
  1654                           
  1655                           ;dateandtime.c: 157:     return current;
  1656  0024B4  EE20  F01B         	lfsr	2,sunrise_sunset@current
  1657  0024B8  EE00  F01B         	lfsr	0,?_sunrise_sunset
  1658  0024BC  0E0A               	movlw	10
  1659  0024BE                     u2911:
  1660  0024BE  CFDB FFEB          	movff	plusw2,plusw0
  1661  0024C2  06E8               	decf	wreg,f,c
  1662  0024C4  E2FC               	bc	u2911
  1663  0024C6  0012               	return		;funcret
  1664  0024C8                     __end_of_sunrise_sunset:
  1665                           	callstack 0
  1666                           
  1667 ;; *************** function _sun_sync *****************
  1668 ;; Defined at:
  1669 ;;		line 118 in file "dateandtime.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;  current        11   12[COMRAM] struct .
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;  solarnoon_se    1   25[COMRAM] char 
  1674 ;;  solarnoon_mi    1   24[COMRAM] char 
  1675 ;;  solarnoon_ho    1   23[COMRAM] char 
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  11   12[COMRAM] struct .
  1678 ;; Registers used:
  1679 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1685 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1686 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1688 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1689 ;;Total ram usage:       14 bytes
  1690 ;; Hardware stack levels used: 1
  1691 ;; Hardware stack levels required when called: 3
  1692 ;; This function calls:
  1693 ;;		___awdiv
  1694 ;; This function is called by:
  1695 ;;		_sunrise_sunset
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699                           	psect	text5
  1700  002062                     __ptext5:
  1701                           	callstack 0
  1702  002062                     _sun_sync:
  1703                           	callstack 26
  1704  002062                     
  1705                           ;dateandtime.c: 120:     signed char solarnoon_hour = (current.sunrise_hour + current.ho
      +                          ur)/2;
  1706  002062  5015               	movf	(sun_sync@current+8)^0,w,c
  1707  002064  2412               	addwf	(sun_sync@current+5)^0,w,c
  1708  002066  6E05               	movwf	___awdiv@dividend^0,c
  1709  002068  6AE8               	clrf	wreg,c
  1710  00206A  B0D8               	btfsc	status,0,c
  1711  00206C  2AE8               	incf	wreg,f,c
  1712  00206E  BE15               	btfsc	(sun_sync@current+8)^0,7,c
  1713  002070  06E8               	decf	wreg,f,c
  1714  002072  BE12               	btfsc	(sun_sync@current+5)^0,7,c
  1715  002074  06E8               	decf	wreg,f,c
  1716  002076  6E06               	movwf	(___awdiv@dividend+1)^0,c
  1717  002078  0E00               	movlw	0
  1718  00207A  6E08               	movwf	(___awdiv@divisor+1)^0,c
  1719  00207C  0E02               	movlw	2
  1720  00207E  6E07               	movwf	___awdiv@divisor^0,c
  1721  002080  ECFB  F010         	call	___awdiv	;wreg free
  1722  002084  5005               	movf	?___awdiv^0,w,c
  1723  002086  6E18               	movwf	sun_sync@solarnoon_hour^0,c
  1724                           
  1725                           ;dateandtime.c: 121:     signed char solarnoon_minute = (current.sunrise_minute + curren
      +                          t.minute)/2;
  1726  002088  5016               	movf	(sun_sync@current+9)^0,w,c
  1727  00208A  2413               	addwf	(sun_sync@current+6)^0,w,c
  1728  00208C  6E05               	movwf	___awdiv@dividend^0,c
  1729  00208E  6AE8               	clrf	wreg,c
  1730  002090  B0D8               	btfsc	status,0,c
  1731  002092  2AE8               	incf	wreg,f,c
  1732  002094  BE16               	btfsc	(sun_sync@current+9)^0,7,c
  1733  002096  06E8               	decf	wreg,f,c
  1734  002098  BE13               	btfsc	(sun_sync@current+6)^0,7,c
  1735  00209A  06E8               	decf	wreg,f,c
  1736  00209C  6E06               	movwf	(___awdiv@dividend+1)^0,c
  1737  00209E  0E00               	movlw	0
  1738  0020A0  6E08               	movwf	(___awdiv@divisor+1)^0,c
  1739  0020A2  0E02               	movlw	2
  1740  0020A4  6E07               	movwf	___awdiv@divisor^0,c
  1741  0020A6  ECFB  F010         	call	___awdiv	;wreg free
  1742  0020AA  5005               	movf	?___awdiv^0,w,c
  1743  0020AC  6E19               	movwf	sun_sync@solarnoon_minute^0,c
  1744                           
  1745                           ;dateandtime.c: 122:     signed char solarnoon_second = (current.sunrise_second + curren
      +                          t.second)/2;
  1746  0020AE  5017               	movf	(sun_sync@current+10)^0,w,c
  1747  0020B0  2414               	addwf	(sun_sync@current+7)^0,w,c
  1748  0020B2  6E05               	movwf	___awdiv@dividend^0,c
  1749  0020B4  6AE8               	clrf	wreg,c
  1750  0020B6  B0D8               	btfsc	status,0,c
  1751  0020B8  2AE8               	incf	wreg,f,c
  1752  0020BA  BE17               	btfsc	(sun_sync@current+10)^0,7,c
  1753  0020BC  06E8               	decf	wreg,f,c
  1754  0020BE  BE14               	btfsc	(sun_sync@current+7)^0,7,c
  1755  0020C0  06E8               	decf	wreg,f,c
  1756  0020C2  6E06               	movwf	(___awdiv@dividend+1)^0,c
  1757  0020C4  0E00               	movlw	0
  1758  0020C6  6E08               	movwf	(___awdiv@divisor+1)^0,c
  1759  0020C8  0E02               	movlw	2
  1760  0020CA  6E07               	movwf	___awdiv@divisor^0,c
  1761  0020CC  ECFB  F010         	call	___awdiv	;wreg free
  1762  0020D0  5005               	movf	?___awdiv^0,w,c
  1763  0020D2  6E1A               	movwf	sun_sync@solarnoon_second^0,c
  1764  0020D4                     
  1765                           ;dateandtime.c: 124:     current.second = current.second - (solarnoon_second-0);
  1766  0020D4  501A               	movf	sun_sync@solarnoon_second^0,w,c
  1767  0020D6  5C14               	subwf	(sun_sync@current+7)^0,w,c
  1768  0020D8  6E14               	movwf	(sun_sync@current+7)^0,c
  1769  0020DA                     
  1770                           ;dateandtime.c: 125:     if (current.second<0) {
  1771  0020DA  BE14               	btfsc	(sun_sync@current+7)^0,7,c
  1772  0020DC  EF74  F010         	goto	u2770
  1773  0020E0  EF72  F010         	goto	u2771
  1774  0020E4                     u2771:
  1775  0020E4  EF79  F010         	goto	l307
  1776  0020E8                     u2770:
  1777  0020E8                     
  1778                           ;dateandtime.c: 126:         current.second = current.second+60;
  1779  0020E8  5014               	movf	(sun_sync@current+7)^0,w,c
  1780  0020EA  0F3C               	addlw	60
  1781  0020EC  6E14               	movwf	(sun_sync@current+7)^0,c
  1782                           
  1783                           ;dateandtime.c: 127:         current.minute = current.minute-1;
  1784  0020EE  0413               	decf	(sun_sync@current+6)^0,w,c
  1785  0020F0  6E13               	movwf	(sun_sync@current+6)^0,c
  1786  0020F2                     l307:
  1787                           
  1788                           ;dateandtime.c: 129:     current.minute = current.minute - (solarnoon_minute-0);
  1789  0020F2  5019               	movf	sun_sync@solarnoon_minute^0,w,c
  1790  0020F4  5C13               	subwf	(sun_sync@current+6)^0,w,c
  1791  0020F6  6E13               	movwf	(sun_sync@current+6)^0,c
  1792                           
  1793                           ;dateandtime.c: 130:     if (current.minute<0) {
  1794  0020F8  BE13               	btfsc	(sun_sync@current+6)^0,7,c
  1795  0020FA  EF83  F010         	goto	u2780
  1796  0020FE  EF81  F010         	goto	u2781
  1797  002102                     u2781:
  1798  002102  EF88  F010         	goto	l308
  1799  002106                     u2780:
  1800  002106                     
  1801                           ;dateandtime.c: 131:         current.minute = current.minute+60;
  1802  002106  5013               	movf	(sun_sync@current+6)^0,w,c
  1803  002108  0F3C               	addlw	60
  1804  00210A  6E13               	movwf	(sun_sync@current+6)^0,c
  1805                           
  1806                           ;dateandtime.c: 132:         current.hour = current.hour-1;
  1807  00210C  0412               	decf	(sun_sync@current+5)^0,w,c
  1808  00210E  6E12               	movwf	(sun_sync@current+5)^0,c
  1809  002110                     l308:
  1810                           
  1811                           ;dateandtime.c: 134:     current.hour = current.hour - (solarnoon_hour-12);
  1812  002110  5018               	movf	sun_sync@solarnoon_hour^0,w,c
  1813  002112  5C12               	subwf	(sun_sync@current+5)^0,w,c
  1814  002114  0F0C               	addlw	12
  1815  002116  6E12               	movwf	(sun_sync@current+5)^0,c
  1816  002118                     
  1817                           ;dateandtime.c: 140:     return current;
  1818  002118  EE20  F00D         	lfsr	2,sun_sync@current
  1819  00211C  EE00  F00D         	lfsr	0,?_sun_sync
  1820  002120  0E0A               	movlw	10
  1821  002122                     u2791:
  1822  002122  CFDB FFEB          	movff	plusw2,plusw0
  1823  002126  06E8               	decf	wreg,f,c
  1824  002128  E2FC               	bc	u2791
  1825  00212A  0012               	return		;funcret
  1826  00212C                     __end_of_sun_sync:
  1827                           	callstack 0
  1828                           
  1829 ;; *************** function ___awdiv *****************
  1830 ;; Defined at:
  1831 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  1832 ;; Parameters:    Size  Location     Type
  1833 ;;  dividend        2    4[COMRAM] int 
  1834 ;;  divisor         2    6[COMRAM] int 
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;  quotient        2   10[COMRAM] int 
  1837 ;;  sign            1    9[COMRAM] unsigned char 
  1838 ;;  counter         1    8[COMRAM] unsigned char 
  1839 ;; Return value:  Size  Location     Type
  1840 ;;                  2    4[COMRAM] int 
  1841 ;; Registers used:
  1842 ;;		wreg, status,2, status,0
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1848 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1849 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1851 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1852 ;;Total ram usage:        8 bytes
  1853 ;; Hardware stack levels used: 1
  1854 ;; Hardware stack levels required when called: 2
  1855 ;; This function calls:
  1856 ;;		Nothing
  1857 ;; This function is called by:
  1858 ;;		_sun_sync
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862                           	psect	text6
  1863  0021F6                     __ptext6:
  1864                           	callstack 0
  1865  0021F6                     ___awdiv:
  1866                           	callstack 26
  1867  0021F6  0E00               	movlw	0
  1868  0021F8  6E0A               	movwf	___awdiv@sign^0,c
  1869  0021FA  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  1870  0021FC  EF04  F011         	goto	u2350
  1871  002200  EF02  F011         	goto	u2351
  1872  002204                     u2351:
  1873  002204  EF0A  F011         	goto	l2461
  1874  002208                     u2350:
  1875  002208  6C07               	negf	___awdiv@divisor^0,c
  1876  00220A  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  1877  00220C  B0D8               	btfsc	status,0,c
  1878  00220E  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  1879  002210  0E01               	movlw	1
  1880  002212  6E0A               	movwf	___awdiv@sign^0,c
  1881  002214                     l2461:
  1882  002214  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  1883  002216  EF11  F011         	goto	u2360
  1884  00221A  EF0F  F011         	goto	u2361
  1885  00221E                     u2361:
  1886  00221E  EF17  F011         	goto	l2467
  1887  002222                     u2360:
  1888  002222  6C05               	negf	___awdiv@dividend^0,c
  1889  002224  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  1890  002226  B0D8               	btfsc	status,0,c
  1891  002228  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  1892  00222A  0E01               	movlw	1
  1893  00222C  1A0A               	xorwf	___awdiv@sign^0,f,c
  1894  00222E                     l2467:
  1895  00222E  0E00               	movlw	0
  1896  002230  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  1897  002232  0E00               	movlw	0
  1898  002234  6E0B               	movwf	___awdiv@quotient^0,c
  1899  002236  5007               	movf	___awdiv@divisor^0,w,c
  1900  002238  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  1901  00223A  B4D8               	btfsc	status,2,c
  1902  00223C  EF22  F011         	goto	u2371
  1903  002240  EF24  F011         	goto	u2370
  1904  002244                     u2371:
  1905  002244  EF4C  F011         	goto	l2489
  1906  002248                     u2370:
  1907  002248  0E01               	movlw	1
  1908  00224A  6E09               	movwf	___awdiv@counter^0,c
  1909  00224C  EF2C  F011         	goto	l2475
  1910  002250                     l2473:
  1911  002250  90D8               	bcf	status,0,c
  1912  002252  3607               	rlcf	___awdiv@divisor^0,f,c
  1913  002254  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  1914  002256  2A09               	incf	___awdiv@counter^0,f,c
  1915  002258                     l2475:
  1916  002258  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  1917  00225A  EF31  F011         	goto	u2381
  1918  00225E  EF33  F011         	goto	u2380
  1919  002262                     u2381:
  1920  002262  EF28  F011         	goto	l2473
  1921  002266                     u2380:
  1922  002266                     l2477:
  1923  002266  90D8               	bcf	status,0,c
  1924  002268  360B               	rlcf	___awdiv@quotient^0,f,c
  1925  00226A  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  1926  00226C  5007               	movf	___awdiv@divisor^0,w,c
  1927  00226E  5C05               	subwf	___awdiv@dividend^0,w,c
  1928  002270  5008               	movf	(___awdiv@divisor+1)^0,w,c
  1929  002272  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  1930  002274  A0D8               	btfss	status,0,c
  1931  002276  EF3F  F011         	goto	u2391
  1932  00227A  EF41  F011         	goto	u2390
  1933  00227E                     u2391:
  1934  00227E  EF46  F011         	goto	l2485
  1935  002282                     u2390:
  1936  002282  5007               	movf	___awdiv@divisor^0,w,c
  1937  002284  5E05               	subwf	___awdiv@dividend^0,f,c
  1938  002286  5008               	movf	(___awdiv@divisor+1)^0,w,c
  1939  002288  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  1940  00228A  800B               	bsf	___awdiv@quotient^0,0,c
  1941  00228C                     l2485:
  1942  00228C  90D8               	bcf	status,0,c
  1943  00228E  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  1944  002290  3207               	rrcf	___awdiv@divisor^0,f,c
  1945  002292  2E09               	decfsz	___awdiv@counter^0,f,c
  1946  002294  EF33  F011         	goto	l2477
  1947  002298                     l2489:
  1948  002298  500A               	movf	___awdiv@sign^0,w,c
  1949  00229A  B4D8               	btfsc	status,2,c
  1950  00229C  EF52  F011         	goto	u2401
  1951  0022A0  EF54  F011         	goto	u2400
  1952  0022A4                     u2401:
  1953  0022A4  EF58  F011         	goto	l2493
  1954  0022A8                     u2400:
  1955  0022A8  6C0B               	negf	___awdiv@quotient^0,c
  1956  0022AA  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  1957  0022AC  B0D8               	btfsc	status,0,c
  1958  0022AE  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  1959  0022B0                     l2493:
  1960  0022B0  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  1961  0022B4  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  1962  0022B8  0012               	return		;funcret
  1963  0022BA                     __end_of___awdiv:
  1964                           	callstack 0
  1965                           
  1966 ;; *************** function _Timer0_init *****************
  1967 ;; Defined at:
  1968 ;;		line 9 in file "timers.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;		None
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;		None
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  1    wreg      void 
  1975 ;; Registers used:
  1976 ;;		wreg, status,2
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1986 ;;Total ram usage:        0 bytes
  1987 ;; Hardware stack levels used: 1
  1988 ;; Hardware stack levels required when called: 2
  1989 ;; This function calls:
  1990 ;;		Nothing
  1991 ;; This function is called by:
  1992 ;;		_main
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           	psect	text7
  1997  00297A                     __ptext7:
  1998                           	callstack 0
  1999  00297A                     _Timer0_init:
  2000                           	callstack 28
  2001  00297A                     
  2002                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
  2003  00297A  50D6               	movf	214,w,c	;volatile
  2004  00297C  0B1F               	andlw	-225
  2005  00297E  0940               	iorlw	64
  2006  002980  6ED6               	movwf	214,c	;volatile
  2007  002982                     
  2008                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
  2009  002982  88D6               	bsf	214,4,c	;volatile
  2010                           
  2011                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b0000;
  2012  002984  0EF0               	movlw	-16
  2013  002986  16D6               	andwf	214,f,c	;volatile
  2014  002988                     
  2015                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
  2016  002988  88D5               	bsf	213,4,c	;volatile
  2017                           
  2018                           ;timers.c: 15:     TMR0H=0b11101110;
  2019  00298A  0EEE               	movlw	238
  2020  00298C  6ED4               	movwf	212,c	;volatile
  2021                           
  2022                           ;timers.c: 16:     TMR0L=0b10100011;
  2023  00298E  0EA3               	movlw	163
  2024  002990  6ED3               	movwf	211,c	;volatile
  2025  002992                     
  2026                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  2027  002992  8ED5               	bsf	213,7,c	;volatile
  2028  002994  0012               	return		;funcret
  2029  002996                     __end_of_Timer0_init:
  2030                           	callstack 0
  2031                           
  2032 ;; *************** function _LEDarray_init *****************
  2033 ;; Defined at:
  2034 ;;		line 9 in file "LEDarray.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;		None
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;		None
  2039 ;; Return value:  Size  Location     Type
  2040 ;;                  1    wreg      void 
  2041 ;; Registers used:
  2042 ;;		None
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2052 ;;Total ram usage:        0 bytes
  2053 ;; Hardware stack levels used: 1
  2054 ;; Hardware stack levels required when called: 2
  2055 ;; This function calls:
  2056 ;;		Nothing
  2057 ;; This function is called by:
  2058 ;;		_main
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062                           	psect	text8
  2063  0028E8                     __ptext8:
  2064                           	callstack 0
  2065  0028E8                     _LEDarray_init:
  2066                           	callstack 28
  2067  0028E8                     
  2068                           ;LEDarray.c: 11:     LATGbits.LATG0 = 0;
  2069  0028E8  907F               	bcf	127,0,c	;volatile
  2070                           
  2071                           ;LEDarray.c: 12:     LATGbits.LATG1 = 0;
  2072  0028EA  927F               	bcf	127,1,c	;volatile
  2073                           
  2074                           ;LEDarray.c: 13:     LATAbits.LATA2 = 0;
  2075  0028EC  9479               	bcf	121,2,c	;volatile
  2076                           
  2077                           ;LEDarray.c: 14:     LATFbits.LATF6 = 0;
  2078  0028EE  9C7E               	bcf	126,6,c	;volatile
  2079                           
  2080                           ;LEDarray.c: 15:     LATAbits.LATA4 = 0;
  2081  0028F0  9879               	bcf	121,4,c	;volatile
  2082                           
  2083                           ;LEDarray.c: 16:     LATAbits.LATA5 = 0;
  2084  0028F2  9A79               	bcf	121,5,c	;volatile
  2085                           
  2086                           ;LEDarray.c: 17:     LATFbits.LATF0 = 0;
  2087  0028F4  907E               	bcf	126,0,c	;volatile
  2088                           
  2089                           ;LEDarray.c: 18:     LATBbits.LATB0 = 0;
  2090  0028F6  907A               	bcf	122,0,c	;volatile
  2091                           
  2092                           ;LEDarray.c: 19:     LATBbits.LATB1 = 0;
  2093  0028F8  927A               	bcf	122,1,c	;volatile
  2094                           
  2095                           ;LEDarray.c: 22:     TRISGbits.TRISG0 = 0;
  2096  0028FA  9087               	bcf	135,0,c	;volatile
  2097                           
  2098                           ;LEDarray.c: 23:     TRISGbits.TRISG1 = 0;
  2099  0028FC  9287               	bcf	135,1,c	;volatile
  2100                           
  2101                           ;LEDarray.c: 24:     TRISAbits.TRISA2 = 0;
  2102  0028FE  9481               	bcf	129,2,c	;volatile
  2103                           
  2104                           ;LEDarray.c: 25:     TRISFbits.TRISF6 = 0;
  2105  002900  9C86               	bcf	134,6,c	;volatile
  2106                           
  2107                           ;LEDarray.c: 26:     TRISAbits.TRISA4 = 0;
  2108  002902  9881               	bcf	129,4,c	;volatile
  2109                           
  2110                           ;LEDarray.c: 27:     TRISAbits.TRISA5 = 0;
  2111  002904  9A81               	bcf	129,5,c	;volatile
  2112                           
  2113                           ;LEDarray.c: 28:     TRISFbits.TRISF0 = 0;
  2114  002906  9086               	bcf	134,0,c	;volatile
  2115                           
  2116                           ;LEDarray.c: 29:     TRISBbits.TRISB0 = 0;
  2117  002908  9082               	bcf	130,0,c	;volatile
  2118                           
  2119                           ;LEDarray.c: 30:     TRISBbits.TRISB1 = 0;
  2120  00290A  9282               	bcf	130,1,c	;volatile
  2121  00290C  0012               	return		;funcret
  2122  00290E                     __end_of_LEDarray_init:
  2123                           	callstack 0
  2124                           
  2125 ;; *************** function _LEDarray_disp_bin *****************
  2126 ;; Defined at:
  2127 ;;		line 37 in file "LEDarray.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;  number          1    wreg     char 
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;  number          1    6[COMRAM] char 
  2132 ;; Return value:  Size  Location     Type
  2133 ;;                  1    wreg      void 
  2134 ;; Registers used:
  2135 ;;		wreg, status,2
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2142 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2143 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2144 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2145 ;;Total ram usage:        3 bytes
  2146 ;; Hardware stack levels used: 1
  2147 ;; Hardware stack levels required when called: 2
  2148 ;; This function calls:
  2149 ;;		Nothing
  2150 ;; This function is called by:
  2151 ;;		_main
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           	psect	text9
  2156  001C6C                     __ptext9:
  2157                           	callstack 0
  2158  001C6C                     _LEDarray_disp_bin:
  2159                           	callstack 28
  2160                           
  2161                           ;incstack = 0
  2162                           ;LEDarray_disp_bin@number stored from wreg
  2163  001C6C  6E07               	movwf	LEDarray_disp_bin@number^0,c
  2164  001C6E                     
  2165                           ;LEDarray.c: 40:     if (number & 0b000000001) {LATGbits.LATG0 = 1;} else {LATGbits.LATG
      +                          0 = 0;}
  2166  001C6E  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  2167  001C72  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  2168  001C74  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  2169  001C76  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  2170  001C78  A005               	btfss	??_LEDarray_disp_bin^0,0,c
  2171  001C7A  EF41  F00E         	goto	u3141
  2172  001C7E  EF43  F00E         	goto	u3140
  2173  001C82                     u3141:
  2174  001C82  EF46  F00E         	goto	l75
  2175  001C86                     u3140:
  2176  001C86  807F               	bsf	127,0,c	;volatile
  2177  001C88  EF47  F00E         	goto	l2829
  2178  001C8C                     l75:
  2179  001C8C  907F               	bcf	127,0,c	;volatile
  2180  001C8E                     l2829:
  2181                           
  2182                           ;LEDarray.c: 41:     if (number & 0b000000010) {LATGbits.LATG1 = 1;} else {LATGbits.LATG
      +                          1 = 0;}
  2183  001C8E  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  2184  001C92  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  2185  001C94  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  2186  001C96  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  2187  001C98  A205               	btfss	??_LEDarray_disp_bin^0,1,c
  2188  001C9A  EF51  F00E         	goto	u3151
  2189  001C9E  EF53  F00E         	goto	u3150
  2190  001CA2                     u3151:
  2191  001CA2  EF56  F00E         	goto	l77
  2192  001CA6                     u3150:
  2193  001CA6  827F               	bsf	127,1,c	;volatile
  2194  001CA8  EF57  F00E         	goto	l2833
  2195  001CAC                     l77:
  2196  001CAC  927F               	bcf	127,1,c	;volatile
  2197  001CAE                     l2833:
  2198                           
  2199                           ;LEDarray.c: 42:     if (number & 0b000000100) {LATAbits.LATA2 = 1;} else {LATAbits.LATA
      +                          2 = 0;}
  2200  001CAE  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  2201  001CB2  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  2202  001CB4  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  2203  001CB6  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  2204  001CB8  A405               	btfss	??_LEDarray_disp_bin^0,2,c
  2205  001CBA  EF61  F00E         	goto	u3161
  2206  001CBE  EF63  F00E         	goto	u3160
  2207  001CC2                     u3161:
  2208  001CC2  EF66  F00E         	goto	l79
  2209  001CC6                     u3160:
  2210  001CC6  8479               	bsf	121,2,c	;volatile
  2211  001CC8  EF67  F00E         	goto	l2837
  2212  001CCC                     l79:
  2213  001CCC  9479               	bcf	121,2,c	;volatile
  2214  001CCE                     l2837:
  2215                           
  2216                           ;LEDarray.c: 43:     if (number & 0b000001000) {LATFbits.LATF6 = 1;} else {LATFbits.LATF
      +                          6 = 0;}
  2217  001CCE  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  2218  001CD2  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  2219  001CD4  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  2220  001CD6  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  2221  001CD8  A605               	btfss	??_LEDarray_disp_bin^0,3,c
  2222  001CDA  EF71  F00E         	goto	u3171
  2223  001CDE  EF73  F00E         	goto	u3170
  2224  001CE2                     u3171:
  2225  001CE2  EF76  F00E         	goto	l81
  2226  001CE6                     u3170:
  2227  001CE6  8C7E               	bsf	126,6,c	;volatile
  2228  001CE8  EF77  F00E         	goto	l2841
  2229  001CEC                     l81:
  2230  001CEC  9C7E               	bcf	126,6,c	;volatile
  2231  001CEE                     l2841:
  2232                           
  2233                           ;LEDarray.c: 44:     if (number & 0b000010000) {LATAbits.LATA4 = 1;} else {LATAbits.LATA
      +                          4 = 0;}
  2234  001CEE  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  2235  001CF2  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  2236  001CF4  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  2237  001CF6  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  2238  001CF8  A805               	btfss	??_LEDarray_disp_bin^0,4,c
  2239  001CFA  EF81  F00E         	goto	u3181
  2240  001CFE  EF83  F00E         	goto	u3180
  2241  001D02                     u3181:
  2242  001D02  EF86  F00E         	goto	l83
  2243  001D06                     u3180:
  2244  001D06  8879               	bsf	121,4,c	;volatile
  2245  001D08  EF87  F00E         	goto	l2845
  2246  001D0C                     l83:
  2247  001D0C  9879               	bcf	121,4,c	;volatile
  2248  001D0E                     l2845:
  2249                           
  2250                           ;LEDarray.c: 45:     if (number & 0b000100000) {LATAbits.LATA5 = 1;} else {LATAbits.LATA
      +                          5 = 0;}
  2251  001D0E  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  2252  001D12  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  2253  001D14  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  2254  001D16  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  2255  001D18  AA05               	btfss	??_LEDarray_disp_bin^0,5,c
  2256  001D1A  EF91  F00E         	goto	u3191
  2257  001D1E  EF93  F00E         	goto	u3190
  2258  001D22                     u3191:
  2259  001D22  EF96  F00E         	goto	l85
  2260  001D26                     u3190:
  2261  001D26  8A79               	bsf	121,5,c	;volatile
  2262  001D28  EF97  F00E         	goto	l2849
  2263  001D2C                     l85:
  2264  001D2C  9A79               	bcf	121,5,c	;volatile
  2265  001D2E                     l2849:
  2266                           
  2267                           ;LEDarray.c: 46:     if (number & 0b001000000) {LATFbits.LATF0 = 1;} else {LATFbits.LATF
      +                          0 = 0;}
  2268  001D2E  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  2269  001D32  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  2270  001D34  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  2271  001D36  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  2272  001D38  AC05               	btfss	??_LEDarray_disp_bin^0,6,c
  2273  001D3A  EFA1  F00E         	goto	u3201
  2274  001D3E  EFA3  F00E         	goto	u3200
  2275  001D42                     u3201:
  2276  001D42  EFA6  F00E         	goto	l87
  2277  001D46                     u3200:
  2278  001D46  807E               	bsf	126,0,c	;volatile
  2279  001D48  EFA7  F00E         	goto	l2853
  2280  001D4C                     l87:
  2281  001D4C  907E               	bcf	126,0,c	;volatile
  2282  001D4E                     l2853:
  2283                           
  2284                           ;LEDarray.c: 47:     if (number & 0b010000000) {LATBbits.LATB0 = 1;} else {LATBbits.LATB
      +                          0 = 0;}
  2285  001D4E  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  2286  001D52  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  2287  001D54  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  2288  001D56  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  2289  001D58  AE05               	btfss	??_LEDarray_disp_bin^0,7,c
  2290  001D5A  EFB1  F00E         	goto	u3211
  2291  001D5E  EFB3  F00E         	goto	u3210
  2292  001D62                     u3211:
  2293  001D62  EFB6  F00E         	goto	l89
  2294  001D66                     u3210:
  2295  001D66  807A               	bsf	122,0,c	;volatile
  2296  001D68  EFB7  F00E         	goto	l2857
  2297  001D6C                     l89:
  2298  001D6C  907A               	bcf	122,0,c	;volatile
  2299  001D6E                     l2857:
  2300                           
  2301                           ;LEDarray.c: 48:     if (number & 0b100000000) {LATBbits.LATB1 = 1;} else {LATBbits.LATB
      +                          1 = 0;}
  2302  001D6E  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  2303  001D72  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  2304  001D74  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  2305  001D76  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  2306  001D78  A006               	btfss	(??_LEDarray_disp_bin+1)^0,0,c
  2307  001D7A  EFC1  F00E         	goto	u3221
  2308  001D7E  EFC3  F00E         	goto	u3220
  2309  001D82                     u3221:
  2310  001D82  EFC6  F00E         	goto	l91
  2311  001D86                     u3220:
  2312  001D86  827A               	bsf	122,1,c	;volatile
  2313  001D88  EFC7  F00E         	goto	l93
  2314  001D8C                     l91:
  2315  001D8C  927A               	bcf	122,1,c	;volatile
  2316  001D8E                     l93:
  2317  001D8E  0012               	return		;funcret
  2318  001D90                     __end_of_LEDarray_disp_bin:
  2319                           	callstack 0
  2320                           
  2321 ;; *************** function _LED_toggle *****************
  2322 ;; Defined at:
  2323 ;;		line 40 in file "LED.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;  current        11   15[COMRAM] struct .
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;		None
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  11   15[COMRAM] struct .
  2330 ;; Registers used:
  2331 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2337 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2339 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2340 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2341 ;;Total ram usage:       12 bytes
  2342 ;; Hardware stack levels used: 1
  2343 ;; Hardware stack levels required when called: 3
  2344 ;; This function calls:
  2345 ;;		_ADC_getval
  2346 ;;		_sunrise
  2347 ;; This function is called by:
  2348 ;;		_main
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           	psect	text10
  2353  0022BA                     __ptext10:
  2354                           	callstack 0
  2355  0022BA                     _LED_toggle:
  2356                           	callstack 27
  2357  0022BA                     
  2358                           ;LED.c: 41:     if (current.hour==1 && current.minute==0 && current.second==0) {
  2359  0022BA  0415               	decf	(LED_toggle@current+5)^0,w,c
  2360  0022BC  A4D8               	btfss	status,2,c
  2361  0022BE  EF63  F011         	goto	u3041
  2362  0022C2  EF65  F011         	goto	u3040
  2363  0022C6                     u3041:
  2364  0022C6  EF7A  F011         	goto	l2807
  2365  0022CA                     u3040:
  2366  0022CA  5016               	movf	(LED_toggle@current+6)^0,w,c
  2367  0022CC  A4D8               	btfss	status,2,c
  2368  0022CE  EF6B  F011         	goto	u3051
  2369  0022D2  EF6D  F011         	goto	u3050
  2370  0022D6                     u3051:
  2371  0022D6  EF7A  F011         	goto	l2807
  2372  0022DA                     u3050:
  2373  0022DA  5017               	movf	(LED_toggle@current+7)^0,w,c
  2374  0022DC  A4D8               	btfss	status,2,c
  2375  0022DE  EF73  F011         	goto	u3061
  2376  0022E2  EF75  F011         	goto	u3060
  2377  0022E6                     u3061:
  2378  0022E6  EF7A  F011         	goto	l2807
  2379  0022EA                     u3060:
  2380  0022EA                     
  2381                           ;LED.c: 42:         PIE2bits.C1IE = 0;
  2382  0022EA  010E               	movlb	14	; () banked
  2383  0022EC  912B               	bcf	43,0,b	;volatile
  2384                           
  2385                           ;LED.c: 43:         LATDbits.LATD7 = 0;
  2386  0022EE  9E7C               	bcf	124,7,c	;volatile
  2387                           
  2388                           ;LED.c: 44:     } else if (current.hour==5 && current.minute==0 && current.second==0) {
  2389  0022F0  EFB5  F011         	goto	l2821
  2390  0022F4                     l2807:
  2391  0022F4  0E05               	movlw	5
  2392  0022F6  1815               	xorwf	(LED_toggle@current+5)^0,w,c
  2393  0022F8  A4D8               	btfss	status,2,c
  2394  0022FA  EF81  F011         	goto	u3071
  2395  0022FE  EF83  F011         	goto	u3070
  2396  002302                     u3071:
  2397  002302  EFB5  F011         	goto	l2821
  2398  002306                     u3070:
  2399  002306  5016               	movf	(LED_toggle@current+6)^0,w,c
  2400  002308  A4D8               	btfss	status,2,c
  2401  00230A  EF89  F011         	goto	u3081
  2402  00230E  EF8B  F011         	goto	u3080
  2403  002312                     u3081:
  2404  002312  EFB5  F011         	goto	l2821
  2405  002316                     u3080:
  2406  002316  5017               	movf	(LED_toggle@current+7)^0,w,c
  2407  002318  A4D8               	btfss	status,2,c
  2408  00231A  EF91  F011         	goto	u3091
  2409  00231E  EF93  F011         	goto	u3090
  2410  002322                     u3091:
  2411  002322  EFB5  F011         	goto	l2821
  2412  002326                     u3090:
  2413  002326                     
  2414                           ;LED.c: 45:         PIE2bits.C1IE = 1;
  2415  002326  010E               	movlb	14	; () banked
  2416  002328  812B               	bsf	43,0,b	;volatile
  2417  00232A                     
  2418                           ; BSR set to: 14
  2419                           ;LED.c: 46:         if (ADC_getval()>=0b11011110) {LATDbits.LATD7 = 1;}
  2420  00232A  ECD8  F014         	call	_ADC_getval	;wreg free
  2421  00232E  6E1B               	movwf	??_LED_toggle^0,c
  2422  002330  0EDD               	movlw	221
  2423  002332  641B               	cpfsgt	??_LED_toggle^0,c
  2424  002334  EF9E  F011         	goto	u3101
  2425  002338  EFA0  F011         	goto	u3100
  2426  00233C                     u3101:
  2427  00233C  EFA3  F011         	goto	l2819
  2428  002340                     u3100:
  2429  002340  8E7C               	bsf	124,7,c	;volatile
  2430  002342  EFB5  F011         	goto	l2821
  2431  002346                     l2819:
  2432  002346  EE20  F010         	lfsr	2,LED_toggle@current
  2433  00234A  EE00  F005         	lfsr	0,sunrise@current
  2434  00234E  0E0A               	movlw	10
  2435  002350                     u3111:
  2436  002350  CFDB FFEB          	movff	plusw2,plusw0
  2437  002354  06E8               	decf	wreg,f,c
  2438  002356  E2FC               	bc	u3111
  2439  002358  ECAD  F014         	call	_sunrise	;wreg free
  2440  00235C  EE20  F010         	lfsr	2,LED_toggle@current
  2441  002360  0E0A               	movlw	10
  2442  002362                     u3121:
  2443  002362  CFEB FFDB          	movff	plusw0,plusw2
  2444  002366  06E8               	decf	wreg,f,c
  2445  002368  E2FC               	bc	u3121
  2446  00236A                     l2821:
  2447                           
  2448                           ;LED.c: 50:     return current;
  2449  00236A  EE20  F010         	lfsr	2,LED_toggle@current
  2450  00236E  EE00  F010         	lfsr	0,?_LED_toggle
  2451  002372  0E0A               	movlw	10
  2452  002374                     u3131:
  2453  002374  CFDB FFEB          	movff	plusw2,plusw0
  2454  002378  06E8               	decf	wreg,f,c
  2455  00237A  E2FC               	bc	u3131
  2456  00237C  0012               	return		;funcret
  2457  00237E                     __end_of_LED_toggle:
  2458                           	callstack 0
  2459                           
  2460 ;; *************** function _sunrise *****************
  2461 ;; Defined at:
  2462 ;;		line 102 in file "dateandtime.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;  current        11    4[COMRAM] struct .
  2465 ;; Auto vars:     Size  Location     Type
  2466 ;;		None
  2467 ;; Return value:  Size  Location     Type
  2468 ;;                  11    4[COMRAM] struct .
  2469 ;; Registers used:
  2470 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2476 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2479 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2480 ;;Total ram usage:       11 bytes
  2481 ;; Hardware stack levels used: 1
  2482 ;; Hardware stack levels required when called: 2
  2483 ;; This function calls:
  2484 ;;		Nothing
  2485 ;; This function is called by:
  2486 ;;		_LED_toggle
  2487 ;;		_sunrise_sunset
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491                           	psect	text11
  2492  00295A                     __ptext11:
  2493                           	callstack 0
  2494  00295A                     _sunrise:
  2495                           	callstack 27
  2496  00295A                     
  2497                           ;dateandtime.c: 104:     current.sunrise_hour = current.hour;
  2498  00295A  C00A  F00D         	movff	sunrise@current+5,sunrise@current+8
  2499                           
  2500                           ;dateandtime.c: 105:     current.sunrise_minute = current.minute;
  2501  00295E  C00B  F00E         	movff	sunrise@current+6,sunrise@current+9
  2502                           
  2503                           ;dateandtime.c: 106:     current.sunrise_second = current.second;
  2504  002962  C00C  F00F         	movff	sunrise@current+7,sunrise@current+10
  2505  002966                     
  2506                           ;dateandtime.c: 108:     return current;
  2507  002966  EE20  F005         	lfsr	2,sunrise@current
  2508  00296A  EE00  F005         	lfsr	0,?_sunrise
  2509  00296E  0E0A               	movlw	10
  2510  002970                     u2461:
  2511  002970  CFDB FFEB          	movff	plusw2,plusw0
  2512  002974  06E8               	decf	wreg,f,c
  2513  002976  E2FC               	bc	u2461
  2514  002978  0012               	return		;funcret
  2515  00297A                     __end_of_sunrise:
  2516                           	callstack 0
  2517                           
  2518 ;; *************** function _LED2_init *****************
  2519 ;; Defined at:
  2520 ;;		line 29 in file "LED.c"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;		None
  2523 ;; Auto vars:     Size  Location     Type
  2524 ;;		None
  2525 ;; Return value:  Size  Location     Type
  2526 ;;                  1    wreg      void 
  2527 ;; Registers used:
  2528 ;;		None
  2529 ;; Tracked objects:
  2530 ;;		On entry : 0/0
  2531 ;;		On exit  : 0/0
  2532 ;;		Unchanged: 0/0
  2533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2538 ;;Total ram usage:        0 bytes
  2539 ;; Hardware stack levels used: 1
  2540 ;; Hardware stack levels required when called: 2
  2541 ;; This function calls:
  2542 ;;		Nothing
  2543 ;; This function is called by:
  2544 ;;		_main
  2545 ;; This function uses a non-reentrant model
  2546 ;;
  2547                           
  2548                           	psect	text12
  2549  0029EA                     __ptext12:
  2550                           	callstack 0
  2551  0029EA                     _LED2_init:
  2552                           	callstack 28
  2553  0029EA                     
  2554                           ;LED.c: 30:     LATHbits.LATH3 = 1;
  2555  0029EA  8680               	bsf	128,3,c	;volatile
  2556                           
  2557                           ;LED.c: 31:     TRISHbits.TRISH3 = 0;
  2558  0029EC  9688               	bcf	136,3,c	;volatile
  2559  0029EE  0012               	return		;funcret
  2560  0029F0                     __end_of_LED2_init:
  2561                           	callstack 0
  2562                           
  2563 ;; *************** function _LED1_init *****************
  2564 ;; Defined at:
  2565 ;;		line 10 in file "LED.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;  current        11    5[COMRAM] struct .
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;		None
  2570 ;; Return value:  Size  Location     Type
  2571 ;;                  1    wreg      void 
  2572 ;; Registers used:
  2573 ;;		wreg, status,2, status,0, cstack
  2574 ;; Tracked objects:
  2575 ;;		On entry : 0/0
  2576 ;;		On exit  : 0/0
  2577 ;;		Unchanged: 0/0
  2578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2579 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2581 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2582 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2583 ;;Total ram usage:       12 bytes
  2584 ;; Hardware stack levels used: 1
  2585 ;; Hardware stack levels required when called: 3
  2586 ;; This function calls:
  2587 ;;		_ADC_getval
  2588 ;; This function is called by:
  2589 ;;		_main
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593                           	psect	text13
  2594  00268E                     __ptext13:
  2595                           	callstack 0
  2596  00268E                     _LED1_init:
  2597                           	callstack 27
  2598  00268E                     
  2599                           ;LED.c: 18:     if ((current.hour<1||current.hour>=5) && (ADC_getval()>=0b11011110)) {
  2600  00268E  500B               	movf	(LED1_init@current+5)^0,w,c
  2601  002690  0A80               	xorlw	128
  2602  002692  0F7F               	addlw	-129
  2603  002694  A0D8               	btfss	status,0,c
  2604  002696  EF4F  F013         	goto	u2821
  2605  00269A  EF51  F013         	goto	u2820
  2606  00269E                     u2821:
  2607  00269E  EF5B  F013         	goto	l2687
  2608  0026A2                     u2820:
  2609  0026A2  500B               	movf	(LED1_init@current+5)^0,w,c
  2610  0026A4  0A80               	xorlw	128
  2611  0026A6  0F7B               	addlw	-133
  2612  0026A8  A0D8               	btfss	status,0,c
  2613  0026AA  EF59  F013         	goto	u2831
  2614  0026AE  EF5B  F013         	goto	u2830
  2615  0026B2                     u2831:
  2616  0026B2  EF69  F013         	goto	l241
  2617  0026B6                     u2830:
  2618  0026B6                     l2687:
  2619  0026B6  ECD8  F014         	call	_ADC_getval	;wreg free
  2620  0026BA  6E11               	movwf	??_LED1_init^0,c
  2621  0026BC  0EDD               	movlw	221
  2622  0026BE  6411               	cpfsgt	??_LED1_init^0,c
  2623  0026C0  EF64  F013         	goto	u2841
  2624  0026C4  EF66  F013         	goto	u2840
  2625  0026C8                     u2841:
  2626  0026C8  EF69  F013         	goto	l241
  2627  0026CC                     u2840:
  2628  0026CC                     
  2629                           ;LED.c: 19:         LATDbits.LATD7 = 1;
  2630  0026CC  8E7C               	bsf	124,7,c	;volatile
  2631                           
  2632                           ;LED.c: 20:     } else {LATDbits.LATD7 = 0;}
  2633  0026CE  EF6A  F013         	goto	l244
  2634  0026D2                     l241:
  2635  0026D2  9E7C               	bcf	124,7,c	;volatile
  2636  0026D4                     l244:
  2637                           
  2638                           ;LED.c: 22:     TRISDbits.TRISD7 = 0;
  2639  0026D4  9E84               	bcf	132,7,c	;volatile
  2640  0026D6  0012               	return		;funcret
  2641  0026D8                     __end_of_LED1_init:
  2642                           	callstack 0
  2643                           
  2644 ;; *************** function _ADC_getval *****************
  2645 ;; Defined at:
  2646 ;;		line 26 in file "ADC.c"
  2647 ;; Parameters:    Size  Location     Type
  2648 ;;		None
  2649 ;; Auto vars:     Size  Location     Type
  2650 ;;  tmpval          1    4[COMRAM] unsigned char 
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  1    wreg      unsigned char 
  2653 ;; Registers used:
  2654 ;;		wreg, status,2
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2661 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2663 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2664 ;;Total ram usage:        1 bytes
  2665 ;; Hardware stack levels used: 1
  2666 ;; Hardware stack levels required when called: 2
  2667 ;; This function calls:
  2668 ;;		Nothing
  2669 ;; This function is called by:
  2670 ;;		_LED1_init
  2671 ;;		_LED_toggle
  2672 ;; This function uses a non-reentrant model
  2673 ;;
  2674                           
  2675                           	psect	text14
  2676  0029B0                     __ptext14:
  2677                           	callstack 0
  2678  0029B0                     _ADC_getval:
  2679                           	callstack 27
  2680  0029B0                     
  2681                           ;ADC.c: 27:     unsigned char tmpval;;ADC.c: 29:     ADCON0bits.GO = 1;
  2682  0029B0  8060               	bsf	96,0,c	;volatile
  2683  0029B2                     l50:
  2684  0029B2  B060               	btfsc	96,0,c	;volatile
  2685  0029B4  EFDE  F014         	goto	u2421
  2686  0029B8  EFE0  F014         	goto	u2420
  2687  0029BC                     u2421:
  2688  0029BC  EFD9  F014         	goto	l50
  2689  0029C0                     u2420:
  2690  0029C0                     
  2691                           ;ADC.c: 31:     tmpval = ADRESH;
  2692  0029C0  CF64 F005          	movff	3940,ADC_getval@tmpval	;volatile
  2693  0029C4                     
  2694                           ;ADC.c: 34:     return tmpval;
  2695  0029C4  5005               	movf	ADC_getval@tmpval^0,w,c
  2696  0029C6  0012               	return		;funcret
  2697  0029C8                     __end_of_ADC_getval:
  2698                           	callstack 0
  2699                           
  2700 ;; *************** function _LCD_init *****************
  2701 ;; Defined at:
  2702 ;;		line 54 in file "LCD.c"
  2703 ;; Parameters:    Size  Location     Type
  2704 ;;  current        11   36[BANK0 ] struct .
  2705 ;; Auto vars:     Size  Location     Type
  2706 ;;  buf            40   47[BANK0 ] unsigned char [40]
  2707 ;; Return value:  Size  Location     Type
  2708 ;;                  1    wreg      void 
  2709 ;; Registers used:
  2710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2711 ;; Tracked objects:
  2712 ;;		On entry : 0/0
  2713 ;;		On exit  : 0/0
  2714 ;;		Unchanged: 0/0
  2715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2716 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2717 ;;      Locals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2718 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2719 ;;      Totals:         2      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2720 ;;Total ram usage:       53 bytes
  2721 ;; Hardware stack levels used: 1
  2722 ;; Hardware stack levels required when called: 10
  2723 ;; This function calls:
  2724 ;;		_LCD_sendbyte
  2725 ;;		_LCD_sendnibble
  2726 ;;		_LCD_sendstring
  2727 ;;		_LCD_setline
  2728 ;;		_sprintf
  2729 ;; This function is called by:
  2730 ;;		_main
  2731 ;; This function uses a non-reentrant model
  2732 ;;
  2733                           
  2734                           	psect	text15
  2735  001E90                     __ptext15:
  2736                           	callstack 0
  2737  001E90                     _LCD_init:
  2738                           	callstack 20
  2739  001E90                     
  2740                           ;LCD.c: 54: void LCD_init(dateandtime current);LCD.c: 55: {;LCD.c: 57:     TRISCbits.TRI
      +                          SC6 =0;
  2741  001E90  9C83               	bcf	131,6,c	;volatile
  2742                           
  2743                           ;LCD.c: 58:     TRISCbits.TRISC2=0;
  2744  001E92  9483               	bcf	131,2,c	;volatile
  2745                           
  2746                           ;LCD.c: 59:     TRISBbits.TRISB3=0;
  2747  001E94  9682               	bcf	130,3,c	;volatile
  2748                           
  2749                           ;LCD.c: 60:     TRISBbits.TRISB2=0;
  2750  001E96  9482               	bcf	130,2,c	;volatile
  2751                           
  2752                           ;LCD.c: 61:     TRISEbits.TRISE3=0;
  2753  001E98  9685               	bcf	133,3,c	;volatile
  2754                           
  2755                           ;LCD.c: 62:     TRISEbits.TRISE1=0;
  2756  001E9A  9285               	bcf	133,1,c	;volatile
  2757                           
  2758                           ;LCD.c: 65:     LATCbits.LATC6 = 0;
  2759  001E9C  9C7B               	bcf	123,6,c	;volatile
  2760                           
  2761                           ;LCD.c: 66:     LATCbits.LATC2 = 0;
  2762  001E9E  947B               	bcf	123,2,c	;volatile
  2763                           
  2764                           ;LCD.c: 67:     LATBbits.LATB3 = 0;
  2765  001EA0  967A               	bcf	122,3,c	;volatile
  2766                           
  2767                           ;LCD.c: 68:     LATBbits.LATB2 = 0;
  2768  001EA2  947A               	bcf	122,2,c	;volatile
  2769                           
  2770                           ;LCD.c: 69:     LATEbits.LATE3 = 0;
  2771  001EA4  967D               	bcf	125,3,c	;volatile
  2772                           
  2773                           ;LCD.c: 70:     LATEbits.LATE1 = 0;
  2774  001EA6  927D               	bcf	125,1,c	;volatile
  2775  001EA8                     
  2776                           ;LCD.c: 76:     _delay((unsigned long)((45)*(64000000/4000.0)));
  2777  001EA8  0E04               	movlw	4
  2778  001EAA  6E51               	movwf	(??_LCD_init+1)^0,c
  2779  001EAC  0EA8               	movlw	168
  2780  001EAE  6E50               	movwf	??_LCD_init^0,c
  2781  001EB0  0E0C               	movlw	12
  2782  001EB2                     u4167:
  2783  001EB2  2EE8               	decfsz	wreg,f,c
  2784  001EB4  D7FE               	bra	u4167
  2785  001EB6  2E50               	decfsz	??_LCD_init^0,f,c
  2786  001EB8  D7FC               	bra	u4167
  2787  001EBA  2E51               	decfsz	(??_LCD_init+1)^0,f,c
  2788  001EBC  D7FA               	bra	u4167
  2789  001EBE                     
  2790                           ;LCD.c: 77:     LCD_sendnibble(0b0010);
  2791  001EBE  0E02               	movlw	2
  2792  001EC0  EC64  F012         	call	_LCD_sendnibble
  2793  001EC4                     
  2794                           ;LCD.c: 78:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  2795  001EC4  0EF0               	movlw	240
  2796  001EC6                     u4177:
  2797  001EC6  2EE8               	decfsz	wreg,f,c
  2798  001EC8  D7FE               	bra	u4177
  2799  001ECA                     
  2800                           ;LCD.c: 79:     LCD_sendbyte(0b00101000,0);
  2801  001ECA  0E00               	movlw	0
  2802  001ECC  6E06               	movwf	LCD_sendbyte@type^0,c
  2803  001ECE  0E28               	movlw	40
  2804  001ED0  EC45  F014         	call	_LCD_sendbyte
  2805  001ED4                     
  2806                           ;LCD.c: 80:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  2807  001ED4  0EF0               	movlw	240
  2808  001ED6                     u4187:
  2809  001ED6  2EE8               	decfsz	wreg,f,c
  2810  001ED8  D7FE               	bra	u4187
  2811  001EDA                     
  2812                           ;LCD.c: 81:     LCD_sendbyte(0b00101000,0);
  2813  001EDA  0E00               	movlw	0
  2814  001EDC  6E06               	movwf	LCD_sendbyte@type^0,c
  2815  001EDE  0E28               	movlw	40
  2816  001EE0  EC45  F014         	call	_LCD_sendbyte
  2817  001EE4                     
  2818                           ;LCD.c: 82:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  2819  001EE4  0EF0               	movlw	240
  2820  001EE6                     u4197:
  2821  001EE6  2EE8               	decfsz	wreg,f,c
  2822  001EE8  D7FE               	bra	u4197
  2823  001EEA                     
  2824                           ;LCD.c: 85:     LCD_sendbyte(0b00001000,0);
  2825  001EEA  0E00               	movlw	0
  2826  001EEC  6E06               	movwf	LCD_sendbyte@type^0,c
  2827  001EEE  0E08               	movlw	8
  2828  001EF0  EC45  F014         	call	_LCD_sendbyte
  2829  001EF4                     
  2830                           ;LCD.c: 86:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  2831  001EF4  0EF0               	movlw	240
  2832  001EF6                     u4207:
  2833  001EF6  2EE8               	decfsz	wreg,f,c
  2834  001EF8  D7FE               	bra	u4207
  2835  001EFA                     
  2836                           ;LCD.c: 87:     LCD_sendbyte(0b00000001,0);
  2837  001EFA  0E00               	movlw	0
  2838  001EFC  6E06               	movwf	LCD_sendbyte@type^0,c
  2839  001EFE  0E01               	movlw	1
  2840  001F00  EC45  F014         	call	_LCD_sendbyte
  2841  001F04                     
  2842                           ;LCD.c: 88:     _delay((unsigned long)((2)*(64000000/4000.0)));
  2843  001F04  0E2A               	movlw	42
  2844  001F06  6E50               	movwf	??_LCD_init^0,c
  2845  001F08  0E8E               	movlw	142
  2846  001F0A                     u4217:
  2847  001F0A  2EE8               	decfsz	wreg,f,c
  2848  001F0C  D7FE               	bra	u4217
  2849  001F0E  2E50               	decfsz	??_LCD_init^0,f,c
  2850  001F10  D7FC               	bra	u4217
  2851  001F12                     
  2852                           ;LCD.c: 89:     LCD_sendbyte(0b00000110,0);
  2853  001F12  0E00               	movlw	0
  2854  001F14  6E06               	movwf	LCD_sendbyte@type^0,c
  2855  001F16  0E06               	movlw	6
  2856  001F18  EC45  F014         	call	_LCD_sendbyte
  2857  001F1C                     
  2858                           ;LCD.c: 90:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  2859  001F1C  0EA0               	movlw	160
  2860  001F1E                     u4227:
  2861  001F1E  D000               	nop2	
  2862  001F20  2EE8               	decfsz	wreg,f,c
  2863  001F22  D7FD               	bra	u4227
  2864  001F24                     
  2865                           ;LCD.c: 93:     LCD_sendbyte(0b00001100,0);
  2866  001F24  0E00               	movlw	0
  2867  001F26  6E06               	movwf	LCD_sendbyte@type^0,c
  2868  001F28  0E0C               	movlw	12
  2869  001F2A  EC45  F014         	call	_LCD_sendbyte
  2870  001F2E                     
  2871                           ;LCD.c: 94:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  2872  001F2E  0EA0               	movlw	160
  2873  001F30                     u4237:
  2874  001F30  D000               	nop2	
  2875  001F32  2EE8               	decfsz	wreg,f,c
  2876  001F34  D7FD               	bra	u4237
  2877  001F36                     
  2878                           ;LCD.c: 97:     char buf[40];;LCD.c: 98:     LCD_setline(1);
  2879  001F36  0E01               	movlw	1
  2880  001F38  EC6C  F013         	call	_LCD_setline
  2881  001F3C                     
  2882                           ;LCD.c: 99:     sprintf(buf,"%04d-%02d-%02d",current.year,current.month,current.date);
  2883  001F3C  0E8F               	movlw	low LCD_init@buf
  2884  001F3E  0100               	movlb	0	; () banked
  2885  001F40  6F72               	movwf	sprintf@s& (0+255),b
  2886  001F42  0E00               	movlw	high LCD_init@buf
  2887  001F44  6F73               	movwf	(sprintf@s+1)& (0+255),b
  2888  001F46  0E10               	movlw	low STR_1
  2889  001F48  6F74               	movwf	sprintf@fmt& (0+255),b
  2890  001F4A  0E0E               	movlw	high STR_1
  2891  001F4C  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  2892  001F4E  C084  F076         	movff	LCD_init@current,?_sprintf+4
  2893  001F52  C085  F077         	movff	LCD_init@current+1,?_sprintf+5
  2894  001F56  5186               	movf	(LCD_init@current+2)& (0+255),w,b
  2895  001F58  6F78               	movwf	(?_sprintf+6)& (0+255),b
  2896  001F5A  6B79               	clrf	(?_sprintf+7)& (0+255),b
  2897  001F5C  BF78               	btfsc	(?_sprintf+6)& (0+255),7,b
  2898  001F5E  0779               	decf	(?_sprintf+7)& (0+255),f,b
  2899  001F60  5187               	movf	(LCD_init@current+3)& (0+255),w,b
  2900  001F62  6F7A               	movwf	(?_sprintf+8)& (0+255),b
  2901  001F64  6B7B               	clrf	(?_sprintf+9)& (0+255),b
  2902  001F66  BF7A               	btfsc	(?_sprintf+8)& (0+255),7,b
  2903  001F68  077B               	decf	(?_sprintf+9)& (0+255),f,b
  2904  001F6A  ECF5  F012         	call	_sprintf	;wreg free
  2905  001F6E                     
  2906                           ;LCD.c: 100:     LCD_sendstring(buf);
  2907  001F6E  0E8F               	movlw	low LCD_init@buf
  2908  001F70  6E08               	movwf	LCD_sendstring@string^0,c
  2909  001F72  0E00               	movlw	high LCD_init@buf
  2910  001F74  6E09               	movwf	(LCD_sendstring@string+1)^0,c
  2911  001F76  EC2B  F014         	call	_LCD_sendstring	;wreg free
  2912  001F7A  0012               	return		;funcret
  2913  001F7C                     __end_of_LCD_init:
  2914                           	callstack 0
  2915                           
  2916 ;; *************** function _sprintf *****************
  2917 ;; Defined at:
  2918 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;  s               2   18[BANK0 ] PTR unsigned char 
  2921 ;;		 -> time_incre@buf2(40), time_incre@buf1(40), LCD_init@buf(40), 
  2922 ;;  fmt             2   20[BANK0 ] PTR const unsigned char 
  2923 ;;		 -> STR_3(15), STR_2(15), STR_1(15), 
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;  f               6   30[BANK0 ] struct _IO_FILE
  2926 ;;  ap              2   28[BANK0 ] PTR void [1]
  2927 ;;		 -> ?_sprintf(2), 
  2928 ;;  ret             2    0        int 
  2929 ;; Return value:  Size  Location     Type
  2930 ;;                  2   18[BANK0 ] int 
  2931 ;; Registers used:
  2932 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2933 ;; Tracked objects:
  2934 ;;		On entry : 0/0
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2938 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2939 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2941 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2942 ;;Total ram usage:       18 bytes
  2943 ;; Hardware stack levels used: 1
  2944 ;; Hardware stack levels required when called: 9
  2945 ;; This function calls:
  2946 ;;		_vfprintf
  2947 ;; This function is called by:
  2948 ;;		_LCD_init
  2949 ;;		_time_incre
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           	psect	text16
  2954  0025EA                     __ptext16:
  2955                           	callstack 0
  2956  0025EA                     _sprintf:
  2957                           	callstack 20
  2958  0025EA  0E76               	movlw	low (?_sprintf+4)
  2959  0025EC  0100               	movlb	0	; () banked
  2960  0025EE  6F7C               	movwf	sprintf@ap& (0+255),b
  2961  0025F0  0E00               	movlw	high (?_sprintf+4)
  2962  0025F2  6F7D               	movwf	(sprintf@ap+1)& (0+255),b
  2963  0025F4  C072  F07E         	movff	sprintf@s,sprintf@f
  2964  0025F8  C073  F07F         	movff	sprintf@s+1,sprintf@f+1
  2965  0025FC                     
  2966                           ; BSR set to: 0
  2967  0025FC  0E00               	movlw	0
  2968  0025FE  6F81               	movwf	(sprintf@f+3)& (0+255),b
  2969  002600  0E00               	movlw	0
  2970  002602  6F80               	movwf	(sprintf@f+2)& (0+255),b
  2971  002604                     
  2972                           ; BSR set to: 0
  2973  002604  0E00               	movlw	0
  2974  002606  6F83               	movwf	(sprintf@f+5)& (0+255),b
  2975  002608  0E00               	movlw	0
  2976  00260A  6F82               	movwf	(sprintf@f+4)& (0+255),b
  2977  00260C                     
  2978                           ; BSR set to: 0
  2979  00260C  0E7E               	movlw	low sprintf@f
  2980  00260E  6F6C               	movwf	vfprintf@fp& (0+255),b
  2981  002610  0E00               	movlw	high sprintf@f
  2982  002612  6F6D               	movwf	(vfprintf@fp+1)& (0+255),b
  2983  002614  C074  F06E         	movff	sprintf@fmt,vfprintf@fmt
  2984  002618  C075  F06F         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2985  00261C  0E7C               	movlw	low sprintf@ap
  2986  00261E  6F70               	movwf	vfprintf@ap& (0+255),b
  2987  002620  0E00               	movlw	high sprintf@ap
  2988  002622  6F71               	movwf	(vfprintf@ap+1)& (0+255),b
  2989  002624  EC98  F012         	call	_vfprintf	;wreg free
  2990  002628  0100               	movlb	0	; () banked
  2991  00262A  5180               	movf	(sprintf@f+2)& (0+255),w,b
  2992  00262C  2572               	addwf	sprintf@s& (0+255),w,b
  2993  00262E  6ED9               	movwf	fsr2l,c
  2994  002630  5181               	movf	(sprintf@f+3)& (0+255),w,b
  2995  002632  2173               	addwfc	(sprintf@s+1)& (0+255),w,b
  2996  002634  6EDA               	movwf	fsr2h,c
  2997  002636  0E00               	movlw	0
  2998  002638  6EDF               	movwf	indf2,c
  2999  00263A                     
  3000                           ; BSR set to: 0
  3001  00263A  0012               	return		;funcret
  3002  00263C                     __end_of_sprintf:
  3003                           	callstack 0
  3004                           
  3005 ;; *************** function _vfprintf *****************
  3006 ;; Defined at:
  3007 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3008 ;; Parameters:    Size  Location     Type
  3009 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
  3010 ;;		 -> sprintf@f(6), 
  3011 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  3012 ;;		 -> STR_3(15), STR_2(15), STR_1(15), 
  3013 ;;  ap              2   16[BANK0 ] PTR PTR void 
  3014 ;;		 -> sprintf@ap(2), 
  3015 ;; Auto vars:     Size  Location     Type
  3016 ;;  cfmt            2   77[COMRAM] PTR unsigned char 
  3017 ;;		 -> STR_3(15), STR_2(15), STR_1(15), 
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  2   12[BANK0 ] int 
  3020 ;; Registers used:
  3021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3027 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3028 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3030 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3031 ;;Total ram usage:        8 bytes
  3032 ;; Hardware stack levels used: 1
  3033 ;; Hardware stack levels required when called: 8
  3034 ;; This function calls:
  3035 ;;		_vfpfcnvrt
  3036 ;; This function is called by:
  3037 ;;		_sprintf
  3038 ;; This function uses a non-reentrant model
  3039 ;;
  3040                           
  3041                           	psect	text17
  3042  002530                     __ptext17:
  3043                           	callstack 0
  3044  002530                     _vfprintf:
  3045                           	callstack 20
  3046  002530                     
  3047                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3048  002530  C06E  F04E         	movff	vfprintf@fmt,vfprintf@cfmt
  3049  002534  C06F  F04F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3050  002538                     
  3051                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3052  002538  0E00               	movlw	0
  3053  00253A  0100               	movlb	0	; () banked
  3054  00253C  6FEB               	movwf	(_nout+1)& (0+255),b
  3055  00253E  0E00               	movlw	0
  3056  002540  6FEA               	movwf	_nout& (0+255),b
  3057                           
  3058                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3059  002542  EFB6  F012         	goto	l3301
  3060  002546                     l3299:
  3061                           
  3062                           ; BSR set to: 0
  3063                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3064  002546  C06C  F044         	movff	vfprintf@fp,vfpfcnvrt@fp
  3065  00254A  C06D  F045         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3066  00254E  0E4E               	movlw	low vfprintf@cfmt
  3067  002550  6E46               	movwf	vfpfcnvrt@fmt^0,c
  3068  002552  0E00               	movlw	high vfprintf@cfmt
  3069  002554  6E47               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3070  002556  C070  F048         	movff	vfprintf@ap,vfpfcnvrt@ap
  3071  00255A  C071  F049         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3072  00255E  EC10  F007         	call	_vfpfcnvrt	;wreg free
  3073  002562  5044               	movf	?_vfpfcnvrt^0,w,c
  3074  002564  0100               	movlb	0	; () banked
  3075  002566  27EA               	addwf	_nout& (0+255),f,b
  3076  002568  5045               	movf	(?_vfpfcnvrt+1)^0,w,c
  3077  00256A  23EB               	addwfc	(_nout+1)& (0+255),f,b
  3078  00256C                     l3301:
  3079                           
  3080                           ; BSR set to: 0
  3081                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3082  00256C  C04E  FFF6         	movff	vfprintf@cfmt,tblptrl
  3083  002570  C04F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3084  002574                     	if	0	;tblptru may be non-zero
  3085  002574                     	endif
  3086  002574                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3087  002574  0E00               	movlw	low (__mediumconst shr (0+16))
  3088  002576  6EF8               	movwf	tblptru,c
  3089  002578                     	endif
  3090  002578  0008               	tblrd		*
  3091  00257A  50F5               	movf	tablat,w,c
  3092  00257C  0900               	iorlw	0
  3093  00257E  A4D8               	btfss	status,2,c
  3094  002580  EFC4  F012         	goto	u3941
  3095  002584  EFC6  F012         	goto	u3940
  3096  002588                     u3941:
  3097  002588  EFA3  F012         	goto	l3299
  3098  00258C                     u3940:
  3099  00258C                     
  3100                           ; BSR set to: 0
  3101                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3102  00258C  C0EA  F06C         	movff	_nout,?_vfprintf
  3103  002590  C0EB  F06D         	movff	_nout+1,?_vfprintf+1
  3104  002594                     
  3105                           ; BSR set to: 0
  3106  002594  0012               	return		;funcret
  3107  002596                     __end_of_vfprintf:
  3108                           	callstack 0
  3109                           
  3110 ;; *************** function _vfpfcnvrt *****************
  3111 ;; Defined at:
  3112 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;  fp              2   67[COMRAM] PTR struct _IO_FILE
  3115 ;;		 -> sprintf@f(6), 
  3116 ;;  fmt             2   69[COMRAM] PTR PTR unsigned char 
  3117 ;;		 -> vfprintf@cfmt(2), 
  3118 ;;  ap              2   71[COMRAM] PTR PTR void 
  3119 ;;		 -> sprintf@ap(2), 
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;  ll              8    0[BANK0 ] long long 
  3122 ;;  llu             8    0        unsigned long long 
  3123 ;;  f               4    0        unsigned long long 
  3124 ;;  vp              3    0        PTR void 
  3125 ;;  ct              3    0        unsigned char [3]
  3126 ;;  cp              3    0        PTR unsigned char 
  3127 ;;  done            2    8[BANK0 ] int 
  3128 ;;  i               2    0        int 
  3129 ;;  c               1    0        unsigned char 
  3130 ;; Return value:  Size  Location     Type
  3131 ;;                  2   67[COMRAM] int 
  3132 ;; Registers used:
  3133 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3134 ;; Tracked objects:
  3135 ;;		On entry : 0/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3139 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3140 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3141 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3142 ;;      Totals:        10      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3143 ;;Total ram usage:       22 bytes
  3144 ;; Hardware stack levels used: 1
  3145 ;; Hardware stack levels required when called: 7
  3146 ;; This function calls:
  3147 ;;		_atoi
  3148 ;;		_dtoa
  3149 ;;		_fputc
  3150 ;;		_isdigit
  3151 ;; This function is called by:
  3152 ;;		_vfprintf
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155                           
  3156                           	psect	text18
  3157  000E20                     __ptext18:
  3158                           	callstack 0
  3159  000E20                     _vfpfcnvrt:
  3160                           	callstack 20
  3161  000E20                     
  3162                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3163  000E20  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3164  000E24  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3165  000E28  CFDE FFF6          	movff	postinc2,tblptrl
  3166  000E2C  CFDD FFF7          	movff	postdec2,tblptrh
  3167  000E30                     	if	0	;tblptru may be non-zero
  3168  000E30                     	endif
  3169  000E30                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3170  000E30  0E00               	movlw	low (__mediumconst shr (0+16))
  3171  000E32  6EF8               	movwf	tblptru,c
  3172  000E34                     	endif
  3173  000E34  0008               	tblrd		*
  3174  000E36  50F5               	movf	tablat,w,c
  3175  000E38  0A25               	xorlw	37
  3176  000E3A  A4D8               	btfss	status,2,c
  3177  000E3C  EF22  F007         	goto	u3831
  3178  000E40  EF24  F007         	goto	u3830
  3179  000E44                     u3831:
  3180  000E44  EFB8  F008         	goto	l3277
  3181  000E48                     u3830:
  3182  000E48                     
  3183                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3184  000E48  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3185  000E4C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3186  000E50  2ADE               	incf	postinc2,f,c
  3187  000E52  0E00               	movlw	0
  3188  000E54  22DD               	addwfc	postdec2,f,c
  3189  000E56                     
  3190                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3191  000E56  0E00               	movlw	0
  3192  000E58  0100               	movlb	0	; () banked
  3193  000E5A  6FED               	movwf	(_width+1)& (0+255),b
  3194  000E5C  0E00               	movlw	0
  3195  000E5E  6FEC               	movwf	_width& (0+255),b
  3196  000E60  C0EC  F052         	movff	_width,_flags
  3197  000E64  C0ED  F053         	movff	_width+1,_flags+1
  3198  000E68                     
  3199                           ; BSR set to: 0
  3200                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3201  000E68  69EE               	setf	_prec& (0+255),b
  3202  000E6A  69EF               	setf	(_prec+1)& (0+255),b
  3203  000E6C                     
  3204                           ; BSR set to: 0
  3205                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  3206  000E6C  0E00               	movlw	0
  3207  000E6E  6F69               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3208  000E70  0E00               	movlw	0
  3209  000E72  6F68               	movwf	vfpfcnvrt@done& (0+255),b
  3210                           
  3211                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  3212  000E74  EF84  F007         	goto	l3229
  3213  000E78                     l3203:
  3214                           
  3215                           ; BSR set to: 0
  3216                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  3217  000E78  8052               	bsf	_flags^0,0,c
  3218  000E7A                     l3205:
  3219                           
  3220                           ; BSR set to: 0
  3221                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  3222  000E7A  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3223  000E7E  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3224  000E82  2ADE               	incf	postinc2,f,c
  3225  000E84  0E00               	movlw	0
  3226  000E86  22DD               	addwfc	postdec2,f,c
  3227                           
  3228                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  3229  000E88  EF84  F007         	goto	l3229
  3230  000E8C                     l3207:
  3231                           
  3232                           ; BSR set to: 0
  3233                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  3234  000E8C  8252               	bsf	_flags^0,1,c
  3235  000E8E  EF3D  F007         	goto	l3205
  3236  000E92                     l3211:
  3237                           
  3238                           ; BSR set to: 0
  3239                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  3240  000E92  8452               	bsf	_flags^0,2,c
  3241  000E94  EF3D  F007         	goto	l3205
  3242  000E98                     l3215:
  3243                           
  3244                           ; BSR set to: 0
  3245                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  3246  000E98  8652               	bsf	_flags^0,3,c
  3247  000E9A  EF3D  F007         	goto	l3205
  3248  000E9E                     l3219:
  3249                           
  3250                           ; BSR set to: 0
  3251                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  3252  000E9E  8852               	bsf	_flags^0,4,c
  3253  000EA0  EF3D  F007         	goto	l3205
  3254  000EA4                     l3223:
  3255                           
  3256                           ; BSR set to: 0
  3257                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  3258  000EA4  0E00               	movlw	0
  3259  000EA6  6F69               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3260  000EA8  0E01               	movlw	1
  3261  000EAA  6F68               	movwf	vfpfcnvrt@done& (0+255),b
  3262                           
  3263                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  3264  000EAC  EF84  F007         	goto	l3229
  3265  000EB0                     l3227:
  3266                           
  3267                           ; BSR set to: 0
  3268  000EB0  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3269  000EB4  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3270  000EB8  CFDE FFF6          	movff	postinc2,tblptrl
  3271  000EBC  CFDD FFF7          	movff	postdec2,tblptrh
  3272  000EC0                     	if	0	;tblptru may be non-zero
  3273  000EC0                     	endif
  3274  000EC0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3275  000EC0  0E00               	movlw	low (__mediumconst shr (0+16))
  3276  000EC2  6EF8               	movwf	tblptru,c
  3277  000EC4                     	endif
  3278  000EC4  0008               	tblrd		*
  3279  000EC6  50F5               	movf	tablat,w,c
  3280  000EC8  6E4A               	movwf	??_vfpfcnvrt^0,c
  3281  000ECA  6A4B               	clrf	(??_vfpfcnvrt+1)^0,c
  3282                           
  3283                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3284                           ; Switch size 1, requested type "simple"
  3285                           ; Number of cases is 1, Range of values is 0 to 0
  3286                           ; switch strategies available:
  3287                           ; Name         Instructions Cycles
  3288                           ; simple_byte            4     3 (average)
  3289                           ;	Chosen strategy is simple_byte
  3290  000ECC  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
  3291  000ECE  0A00               	xorlw	0	; case 0
  3292  000ED0  B4D8               	btfsc	status,2,c
  3293  000ED2  EF6D  F007         	goto	l3495
  3294  000ED6  EF52  F007         	goto	l3223
  3295  000EDA                     l3495:
  3296                           
  3297                           ; BSR set to: 0
  3298                           ; Switch size 1, requested type "simple"
  3299                           ; Number of cases is 5, Range of values is 32 to 48
  3300                           ; switch strategies available:
  3301                           ; Name         Instructions Cycles
  3302                           ; simple_byte           16     9 (average)
  3303                           ;	Chosen strategy is simple_byte
  3304  000EDA  504A               	movf	??_vfpfcnvrt^0,w,c
  3305  000EDC  0A20               	xorlw	32	; case 32
  3306  000EDE  B4D8               	btfsc	status,2,c
  3307  000EE0  EF4C  F007         	goto	l3215
  3308  000EE4  0A03               	xorlw	3	; case 35
  3309  000EE6  B4D8               	btfsc	status,2,c
  3310  000EE8  EF4F  F007         	goto	l3219
  3311  000EEC  0A08               	xorlw	8	; case 43
  3312  000EEE  B4D8               	btfsc	status,2,c
  3313  000EF0  EF49  F007         	goto	l3211
  3314  000EF4  0A06               	xorlw	6	; case 45
  3315  000EF6  B4D8               	btfsc	status,2,c
  3316  000EF8  EF3C  F007         	goto	l3203
  3317  000EFC  0A1D               	xorlw	29	; case 48
  3318  000EFE  B4D8               	btfsc	status,2,c
  3319  000F00  EF46  F007         	goto	l3207
  3320  000F04  EF52  F007         	goto	l3223
  3321  000F08                     l3229:
  3322                           
  3323                           ; BSR set to: 0
  3324                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  3325  000F08  5168               	movf	vfpfcnvrt@done& (0+255),w,b
  3326  000F0A  1169               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  3327  000F0C  B4D8               	btfsc	status,2,c
  3328  000F0E  EF8B  F007         	goto	u3841
  3329  000F12  EF8D  F007         	goto	u3840
  3330  000F16                     u3841:
  3331  000F16  EF58  F007         	goto	l3227
  3332  000F1A                     u3840:
  3333  000F1A                     
  3334                           ; BSR set to: 0
  3335                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  3336  000F1A  A052               	btfss	_flags^0,0,c
  3337  000F1C  EF92  F007         	goto	u3851
  3338  000F20  EF94  F007         	goto	u3850
  3339  000F24                     u3851:
  3340  000F24  EF95  F007         	goto	l3233
  3341  000F28                     u3850:
  3342  000F28                     
  3343                           ; BSR set to: 0
  3344                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  3345  000F28  9252               	bcf	_flags^0,1,c
  3346  000F2A                     l3233:
  3347                           
  3348                           ; BSR set to: 0
  3349                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  3350  000F2A  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3351  000F2E  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3352  000F32  CFDE FFF6          	movff	postinc2,tblptrl
  3353  000F36  CFDD FFF7          	movff	postdec2,tblptrh
  3354  000F3A                     	if	0	;tblptru may be non-zero
  3355  000F3A                     	endif
  3356  000F3A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3357  000F3A  0E00               	movlw	low (__mediumconst shr (0+16))
  3358  000F3C  6EF8               	movwf	tblptru,c
  3359  000F3E                     	endif
  3360  000F3E  0008               	tblrd		*
  3361  000F40  50F5               	movf	tablat,w,c
  3362  000F42  0A2A               	xorlw	42
  3363  000F44  A4D8               	btfss	status,2,c
  3364  000F46  EFA7  F007         	goto	u3861
  3365  000F4A  EFA9  F007         	goto	u3860
  3366  000F4E                     u3861:
  3367  000F4E  EFD2  F007         	goto	l3241
  3368  000F52                     u3860:
  3369  000F52                     
  3370                           ; BSR set to: 0
  3371                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  3372  000F52  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3373  000F56  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3374  000F5A  2ADE               	incf	postinc2,f,c
  3375  000F5C  0E00               	movlw	0
  3376  000F5E  22DD               	addwfc	postdec2,f,c
  3377                           
  3378                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3379  000F60  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3380  000F64  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3381  000F68  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  3382  000F6C  0E02               	movlw	2
  3383  000F6E  26DE               	addwf	postinc2,f,c
  3384  000F70  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  3385  000F74  0E00               	movlw	0
  3386  000F76  22DD               	addwfc	postdec2,f,c
  3387  000F78  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3388  000F7C  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3389  000F80  CFDE F0EC          	movff	postinc2,_width
  3390  000F84  CFDD F0ED          	movff	postdec2,_width+1
  3391  000F88                     
  3392                           ; BSR set to: 0
  3393                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  3394  000F88  BFED               	btfsc	(_width+1)& (0+255),7,b
  3395  000F8A  EFCB  F007         	goto	u3870
  3396  000F8E  EFC9  F007         	goto	u3871
  3397  000F92                     u3871:
  3398  000F92  EF18  F008         	goto	l3251
  3399  000F96                     u3870:
  3400  000F96                     
  3401                           ; BSR set to: 0
  3402                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  3403  000F96  8052               	bsf	_flags^0,0,c
  3404                           
  3405                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  3406  000F98  6DEC               	negf	_width& (0+255),b
  3407  000F9A  1FED               	comf	(_width+1)& (0+255),f,b
  3408  000F9C  B0D8               	btfsc	status,0,c
  3409  000F9E  2BED               	incf	(_width+1)& (0+255),f,b
  3410  000FA0  EF18  F008         	goto	l3251
  3411  000FA4                     l3241:
  3412                           
  3413                           ; BSR set to: 0
  3414                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  3415  000FA4  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3416  000FA8  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3417  000FAC  CFDE F00C          	movff	postinc2,atoi@s
  3418  000FB0  CFDD F00D          	movff	postdec2,atoi@s+1
  3419  000FB4  EC20  F00B         	call	_atoi	;wreg free
  3420  000FB8  C00C  F0EC         	movff	?_atoi,_width
  3421  000FBC  C00D  F0ED         	movff	?_atoi+1,_width+1
  3422                           
  3423                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3424  000FC0  EFE9  F007         	goto	l3245
  3425  000FC4                     l3243:
  3426                           
  3427                           ; BSR set to: 0
  3428                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  3429  000FC4  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3430  000FC8  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3431  000FCC  2ADE               	incf	postinc2,f,c
  3432  000FCE  0E00               	movlw	0
  3433  000FD0  22DD               	addwfc	postdec2,f,c
  3434  000FD2                     l3245:
  3435  000FD2  0ED0               	movlw	208
  3436  000FD4  6E4A               	movwf	??_vfpfcnvrt^0,c
  3437  000FD6  0EFF               	movlw	255
  3438  000FD8  6E4B               	movwf	(??_vfpfcnvrt+1)^0,c
  3439  000FDA  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3440  000FDE  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3441  000FE2  CFDE FFF6          	movff	postinc2,tblptrl
  3442  000FE6  CFDD FFF7          	movff	postdec2,tblptrh
  3443  000FEA                     	if	0	;tblptru may be non-zero
  3444  000FEA                     	endif
  3445  000FEA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3446  000FEA  0E00               	movlw	low (__mediumconst shr (0+16))
  3447  000FEC  6EF8               	movwf	tblptru,c
  3448  000FEE                     	endif
  3449  000FEE  0008               	tblrd		*
  3450  000FF0  50F5               	movf	tablat,w,c
  3451  000FF2  6E4C               	movwf	(??_vfpfcnvrt+2)^0,c
  3452  000FF4  6A4D               	clrf	(??_vfpfcnvrt+3)^0,c
  3453  000FF6  504A               	movf	??_vfpfcnvrt^0,w,c
  3454  000FF8  264C               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3455  000FFA  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
  3456  000FFC  224D               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3457  000FFE  504D               	movf	(??_vfpfcnvrt+3)^0,w,c
  3458  001000  E10A               	bnz	u3880
  3459  001002  0E0A               	movlw	10
  3460  001004  5C4C               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3461  001006  A0D8               	btfss	status,0,c
  3462  001008  EF08  F008         	goto	u3881
  3463  00100C  EF0B  F008         	goto	u3880
  3464  001010                     u3881:
  3465  001010  0E01               	movlw	1
  3466  001012  EF0C  F008         	goto	u3890
  3467  001016                     u3880:
  3468  001016  0E00               	movlw	0
  3469  001018                     u3890:
  3470  001018  0100               	movlb	0	; () banked
  3471  00101A  6F6A               	movwf	_vfpfcnvrt$2223& (0+255),b
  3472  00101C  6B6B               	clrf	(_vfpfcnvrt$2223+1)& (0+255),b
  3473  00101E                     
  3474                           ; BSR set to: 0
  3475  00101E  516A               	movf	_vfpfcnvrt$2223& (0+255),w,b
  3476  001020  116B               	iorwf	(_vfpfcnvrt$2223+1)& (0+255),w,b
  3477  001022  A4D8               	btfss	status,2,c
  3478  001024  EF16  F008         	goto	u3901
  3479  001028  EF18  F008         	goto	u3900
  3480  00102C                     u3901:
  3481  00102C  EFE2  F007         	goto	l3243
  3482  001030                     u3900:
  3483  001030                     l3251:
  3484                           
  3485                           ; BSR set to: 0
  3486                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3487  001030  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3488  001034  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3489  001038  CFDE FFF6          	movff	postinc2,tblptrl
  3490  00103C  CFDD FFF7          	movff	postdec2,tblptrh
  3491  001040                     	if	0	;tblptru may be non-zero
  3492  001040                     	endif
  3493  001040                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3494  001040  0E00               	movlw	low (__mediumconst shr (0+16))
  3495  001042  6EF8               	movwf	tblptru,c
  3496  001044                     	endif
  3497  001044  0008               	tblrd		*
  3498  001046  50F5               	movf	tablat,w,c
  3499  001048  0A64               	xorlw	100
  3500  00104A  B4D8               	btfsc	status,2,c
  3501  00104C  EF2A  F008         	goto	u3911
  3502  001050  EF2C  F008         	goto	u3910
  3503  001054                     u3911:
  3504  001054  EF40  F008         	goto	l3255
  3505  001058                     u3910:
  3506  001058                     
  3507                           ; BSR set to: 0
  3508  001058  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3509  00105C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3510  001060  CFDE FFF6          	movff	postinc2,tblptrl
  3511  001064  CFDD FFF7          	movff	postdec2,tblptrh
  3512  001068                     	if	0	;tblptru may be non-zero
  3513  001068                     	endif
  3514  001068                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3515  001068  0E00               	movlw	low (__mediumconst shr (0+16))
  3516  00106A  6EF8               	movwf	tblptru,c
  3517  00106C                     	endif
  3518  00106C  0008               	tblrd		*
  3519  00106E  50F5               	movf	tablat,w,c
  3520  001070  0A69               	xorlw	105
  3521  001072  A4D8               	btfss	status,2,c
  3522  001074  EF3E  F008         	goto	u3921
  3523  001078  EF40  F008         	goto	u3920
  3524  00107C                     u3921:
  3525  00107C  EF80  F008         	goto	l3261
  3526  001080                     u3920:
  3527  001080                     l3255:
  3528                           
  3529                           ; BSR set to: 0
  3530                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3531  001080  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3532  001084  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3533  001088  2ADE               	incf	postinc2,f,c
  3534  00108A  0E00               	movlw	0
  3535  00108C  22DD               	addwfc	postdec2,f,c
  3536                           
  3537                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3538  00108E  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3539  001092  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3540  001096  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  3541  00109A  0E02               	movlw	2
  3542  00109C  26DE               	addwf	postinc2,f,c
  3543  00109E  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  3544  0010A2  0E00               	movlw	0
  3545  0010A4  22DD               	addwfc	postdec2,f,c
  3546  0010A6  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3547  0010AA  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3548  0010AE  CFDE F060          	movff	postinc2,vfpfcnvrt@ll
  3549  0010B2  CFDD F061          	movff	postdec2,vfpfcnvrt@ll+1
  3550  0010B6  0E00               	movlw	0
  3551  0010B8  BF61               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3552  0010BA  0EFF               	movlw	-1
  3553  0010BC  6F62               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3554  0010BE  6F63               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3555  0010C0  6F64               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3556  0010C2  6F65               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3557  0010C4  6F66               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3558  0010C6  6F67               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3559  0010C8                     
  3560                           ; BSR set to: 0
  3561                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3562  0010C8  C044  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  3563  0010CC  C045  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3564  0010D0  C060  F022         	movff	vfpfcnvrt@ll,dtoa@d
  3565  0010D4  C061  F023         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3566  0010D8  C062  F024         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3567  0010DC  C063  F025         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3568  0010E0  C064  F026         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3569  0010E4  C065  F027         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3570  0010E8  C066  F028         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3571  0010EC  C067  F029         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3572  0010F0  ECD6  F008         	call	_dtoa	;wreg free
  3573  0010F4  C020  F044         	movff	?_dtoa,?_vfpfcnvrt
  3574  0010F8  C021  F045         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3575  0010FC  EFD5  F008         	goto	l1087
  3576  001100                     l3261:
  3577                           
  3578                           ; BSR set to: 0
  3579                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3580  001100  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3581  001104  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3582  001108  CFDE FFF6          	movff	postinc2,tblptrl
  3583  00110C  CFDD FFF7          	movff	postdec2,tblptrh
  3584  001110                     	if	0	;tblptru may be non-zero
  3585  001110                     	endif
  3586  001110                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3587  001110  0E00               	movlw	low (__mediumconst shr (0+16))
  3588  001112  6EF8               	movwf	tblptru,c
  3589  001114                     	endif
  3590  001114  0008               	tblrd		*
  3591  001116  50F5               	movf	tablat,w,c
  3592  001118  0A25               	xorlw	37
  3593  00111A  A4D8               	btfss	status,2,c
  3594  00111C  EF92  F008         	goto	u3931
  3595  001120  EF94  F008         	goto	u3930
  3596  001124                     u3931:
  3597  001124  EFAB  F008         	goto	l3271
  3598  001128                     u3930:
  3599  001128                     
  3600                           ; BSR set to: 0
  3601                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3602  001128  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3603  00112C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3604  001130  2ADE               	incf	postinc2,f,c
  3605  001132  0E00               	movlw	0
  3606  001134  22DD               	addwfc	postdec2,f,c
  3607  001136                     
  3608                           ; BSR set to: 0
  3609                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3610  001136  0E00               	movlw	0
  3611  001138  6E06               	movwf	(fputc@c+1)^0,c
  3612  00113A  0E25               	movlw	37
  3613  00113C  6E05               	movwf	fputc@c^0,c
  3614  00113E  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  3615  001142  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3616  001146  EC96  F010         	call	_fputc	;wreg free
  3617  00114A                     l3267:
  3618                           
  3619                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3620  00114A  0E00               	movlw	0
  3621  00114C  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  3622  00114E  0E01               	movlw	1
  3623  001150  6E44               	movwf	?_vfpfcnvrt^0,c
  3624  001152  EFD5  F008         	goto	l1087
  3625  001156                     l3271:
  3626                           
  3627                           ; BSR set to: 0
  3628                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3629  001156  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3630  00115A  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3631  00115E  2ADE               	incf	postinc2,f,c
  3632  001160  0E00               	movlw	0
  3633  001162  22DD               	addwfc	postdec2,f,c
  3634  001164                     
  3635                           ; BSR set to: 0
  3636                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3637  001164  0E00               	movlw	0
  3638  001166  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  3639  001168  0E00               	movlw	0
  3640  00116A  6E44               	movwf	?_vfpfcnvrt^0,c
  3641  00116C  EFD5  F008         	goto	l1087
  3642  001170                     l3277:
  3643                           
  3644                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3645  001170  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3646  001174  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3647  001178  CFDE FFF6          	movff	postinc2,tblptrl
  3648  00117C  CFDD FFF7          	movff	postdec2,tblptrh
  3649  001180                     	if	0	;tblptru may be non-zero
  3650  001180                     	endif
  3651  001180                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3652  001180  0E00               	movlw	low (__mediumconst shr (0+16))
  3653  001182  6EF8               	movwf	tblptru,c
  3654  001184                     	endif
  3655  001184  0008               	tblrd		*
  3656  001186  50F5               	movf	tablat,w,c
  3657  001188  6E05               	movwf	fputc@c^0,c
  3658  00118A  6A06               	clrf	(fputc@c+1)^0,c
  3659  00118C  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  3660  001190  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3661  001194  EC96  F010         	call	_fputc	;wreg free
  3662  001198                     
  3663                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3664  001198  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3665  00119C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3666  0011A0  2ADE               	incf	postinc2,f,c
  3667  0011A2  0E00               	movlw	0
  3668  0011A4  22DD               	addwfc	postdec2,f,c
  3669  0011A6  EFA5  F008         	goto	l3267
  3670  0011AA                     l1087:
  3671  0011AA  0012               	return		;funcret
  3672  0011AC                     __end_of_vfpfcnvrt:
  3673                           	callstack 0
  3674                           
  3675 ;; *************** function _dtoa *****************
  3676 ;; Defined at:
  3677 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3678 ;; Parameters:    Size  Location     Type
  3679 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  3680 ;;		 -> sprintf@f(6), 
  3681 ;;  d               8   33[COMRAM] long long 
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;  n               8   57[COMRAM] long long 
  3684 ;;  i               2   65[COMRAM] int 
  3685 ;;  s               2   55[COMRAM] int 
  3686 ;;  w               2   53[COMRAM] int 
  3687 ;;  p               2   51[COMRAM] int 
  3688 ;; Return value:  Size  Location     Type
  3689 ;;                  2   31[COMRAM] int 
  3690 ;; Registers used:
  3691 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3692 ;; Tracked objects:
  3693 ;;		On entry : 0/0
  3694 ;;		On exit  : 0/0
  3695 ;;		Unchanged: 0/0
  3696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3697 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3698 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3699 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3700 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3701 ;;Total ram usage:       36 bytes
  3702 ;; Hardware stack levels used: 1
  3703 ;; Hardware stack levels required when called: 6
  3704 ;; This function calls:
  3705 ;;		___aodiv
  3706 ;;		___aomod
  3707 ;;		_abs
  3708 ;;		_pad
  3709 ;; This function is called by:
  3710 ;;		_vfpfcnvrt
  3711 ;; This function uses a non-reentrant model
  3712 ;;
  3713                           
  3714                           	psect	text19
  3715  0011AC                     __ptext19:
  3716                           	callstack 0
  3717  0011AC                     _dtoa:
  3718                           	callstack 20
  3719  0011AC                     
  3720                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  3721  0011AC  C022  F03A         	movff	dtoa@d,dtoa@n
  3722  0011B0  C023  F03B         	movff	dtoa@d+1,dtoa@n+1
  3723  0011B4  C024  F03C         	movff	dtoa@d+2,dtoa@n+2
  3724  0011B8  C025  F03D         	movff	dtoa@d+3,dtoa@n+3
  3725  0011BC  C026  F03E         	movff	dtoa@d+4,dtoa@n+4
  3726  0011C0  C027  F03F         	movff	dtoa@d+5,dtoa@n+5
  3727  0011C4  C028  F040         	movff	dtoa@d+6,dtoa@n+6
  3728  0011C8  C029  F041         	movff	dtoa@d+7,dtoa@n+7
  3729  0011CC                     
  3730                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  3731  0011CC  BE41               	btfsc	(dtoa@n+7)^0,7,c
  3732  0011CE  EFEB  F008         	goto	u3611
  3733  0011D2  EFEE  F008         	goto	u3610
  3734  0011D6                     u3611:
  3735  0011D6  0E01               	movlw	1
  3736  0011D8  EFEF  F008         	goto	u3620
  3737  0011DC                     u3610:
  3738  0011DC  0E00               	movlw	0
  3739  0011DE                     u3620:
  3740  0011DE  6E38               	movwf	dtoa@s^0,c
  3741  0011E0  6A39               	clrf	(dtoa@s+1)^0,c
  3742                           
  3743                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  3744  0011E2  5038               	movf	dtoa@s^0,w,c
  3745  0011E4  1039               	iorwf	(dtoa@s+1)^0,w,c
  3746  0011E6  B4D8               	btfsc	status,2,c
  3747  0011E8  EFF8  F008         	goto	u3631
  3748  0011EC  EFFA  F008         	goto	u3630
  3749  0011F0                     u3631:
  3750  0011F0  EF0A  F009         	goto	l3095
  3751  0011F4                     u3630:
  3752  0011F4                     
  3753                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  3754  0011F4  1E41               	comf	(dtoa@n+7)^0,f,c
  3755  0011F6  1E40               	comf	(dtoa@n+6)^0,f,c
  3756  0011F8  1E3F               	comf	(dtoa@n+5)^0,f,c
  3757  0011FA  1E3E               	comf	(dtoa@n+4)^0,f,c
  3758  0011FC  1E3D               	comf	(dtoa@n+3)^0,f,c
  3759  0011FE  1E3C               	comf	(dtoa@n+2)^0,f,c
  3760  001200  1E3B               	comf	(dtoa@n+1)^0,f,c
  3761  001202  6C3A               	negf	dtoa@n^0,c
  3762  001204  0E00               	movlw	0
  3763  001206  223B               	addwfc	(dtoa@n+1)^0,f,c
  3764  001208  223C               	addwfc	(dtoa@n+2)^0,f,c
  3765  00120A  223D               	addwfc	(dtoa@n+3)^0,f,c
  3766  00120C  223E               	addwfc	(dtoa@n+4)^0,f,c
  3767  00120E  223F               	addwfc	(dtoa@n+5)^0,f,c
  3768  001210  2240               	addwfc	(dtoa@n+6)^0,f,c
  3769  001212  2241               	addwfc	(dtoa@n+7)^0,f,c
  3770  001214                     l3095:
  3771                           
  3772                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  3773  001214  0100               	movlb	0	; () banked
  3774  001216  BFEF               	btfsc	(_prec+1)& (0+255),7,b
  3775  001218  EF10  F009         	goto	u3641
  3776  00121C  EF12  F009         	goto	u3640
  3777  001220                     u3641:
  3778  001220  EF13  F009         	goto	l3099
  3779  001224                     u3640:
  3780  001224                     
  3781                           ; BSR set to: 0
  3782                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  3783  001224  9252               	bcf	_flags^0,1,c
  3784  001226                     l3099:
  3785                           
  3786                           ; BSR set to: 0
  3787                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  3788  001226  BFEF               	btfsc	(_prec+1)& (0+255),7,b
  3789  001228  EF20  F009         	goto	u3650
  3790  00122C  51EF               	movf	(_prec+1)& (0+255),w,b
  3791  00122E  E106               	bnz	u3651
  3792  001230  05EE               	decf	_prec& (0+255),w,b
  3793  001232  B0D8               	btfsc	status,0,c
  3794  001234  EF1E  F009         	goto	u3651
  3795  001238  EF20  F009         	goto	u3650
  3796  00123C                     u3651:
  3797  00123C  EF26  F009         	goto	l1038
  3798  001240                     u3650:
  3799  001240                     
  3800                           ; BSR set to: 0
  3801  001240  0E00               	movlw	0
  3802  001242  6E35               	movwf	(dtoa@p+1)^0,c
  3803  001244  0E01               	movlw	1
  3804  001246  6E34               	movwf	dtoa@p^0,c
  3805  001248  EF2A  F009         	goto	l1040
  3806  00124C                     l1038:
  3807                           
  3808                           ; BSR set to: 0
  3809  00124C  C0EE  F034         	movff	_prec,dtoa@p
  3810  001250  C0EF  F035         	movff	_prec+1,dtoa@p+1
  3811  001254                     l1040:
  3812                           
  3813                           ; BSR set to: 0
  3814                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  3815  001254  C0EC  F036         	movff	_width,dtoa@w
  3816  001258  C0ED  F037         	movff	_width+1,dtoa@w+1
  3817  00125C                     
  3818                           ; BSR set to: 0
  3819                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  3820  00125C  5038               	movf	dtoa@s^0,w,c
  3821  00125E  1039               	iorwf	(dtoa@s+1)^0,w,c
  3822  001260  A4D8               	btfss	status,2,c
  3823  001262  EF35  F009         	goto	u3661
  3824  001266  EF37  F009         	goto	u3660
  3825  00126A                     u3661:
  3826  00126A  EF3E  F009         	goto	l3107
  3827  00126E                     u3660:
  3828  00126E                     
  3829                           ; BSR set to: 0
  3830  00126E  A452               	btfss	_flags^0,2,c
  3831  001270  EF3C  F009         	goto	u3671
  3832  001274  EF3E  F009         	goto	u3670
  3833  001278                     u3671:
  3834  001278  EF41  F009         	goto	l3109
  3835  00127C                     u3670:
  3836  00127C                     l3107:
  3837                           
  3838                           ; BSR set to: 0
  3839                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  3840  00127C  0636               	decf	dtoa@w^0,f,c
  3841  00127E  A0D8               	btfss	status,0,c
  3842  001280  0637               	decf	(dtoa@w+1)^0,f,c
  3843  001282                     l3109:
  3844                           
  3845                           ; BSR set to: 0
  3846                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  3847  001282  0E00               	movlw	0
  3848  001284  6E43               	movwf	(dtoa@i+1)^0,c
  3849  001286  0E1F               	movlw	31
  3850  001288  6E42               	movwf	dtoa@i^0,c
  3851  00128A                     
  3852                           ; BSR set to: 0
  3853                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  3854  00128A  0E00               	movlw	0
  3855  00128C  0101               	movlb	1	; () banked
  3856  00128E  6F1F               	movwf	(_dbuf+31)& (0+255),b
  3857                           
  3858                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3859  001290  EFC6  F009         	goto	l3123
  3860  001294                     l3113:
  3861                           
  3862                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  3863  001294  0642               	decf	dtoa@i^0,f,c
  3864  001296  A0D8               	btfss	status,0,c
  3865  001298  0643               	decf	(dtoa@i+1)^0,f,c
  3866  00129A                     
  3867                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3868  00129A  0E00               	movlw	low _dbuf
  3869  00129C  2442               	addwf	dtoa@i^0,w,c
  3870  00129E  6ED9               	movwf	fsr2l,c
  3871  0012A0  0E01               	movlw	high _dbuf
  3872  0012A2  2043               	addwfc	(dtoa@i+1)^0,w,c
  3873  0012A4  6EDA               	movwf	fsr2h,c
  3874  0012A6  C03A  F005         	movff	dtoa@n,___aomod@dividend
  3875  0012AA  C03B  F006         	movff	dtoa@n+1,___aomod@dividend+1
  3876  0012AE  C03C  F007         	movff	dtoa@n+2,___aomod@dividend+2
  3877  0012B2  C03D  F008         	movff	dtoa@n+3,___aomod@dividend+3
  3878  0012B6  C03E  F009         	movff	dtoa@n+4,___aomod@dividend+4
  3879  0012BA  C03F  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  3880  0012BE  C040  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  3881  0012C2  C041  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  3882  0012C6  0E0A               	movlw	10
  3883  0012C8  6E0D               	movwf	___aomod@divisor^0,c
  3884  0012CA  0E00               	movlw	0
  3885  0012CC  6E0E               	movwf	(___aomod@divisor+1)^0,c
  3886  0012CE  0E00               	movlw	0
  3887  0012D0  6E0F               	movwf	(___aomod@divisor+2)^0,c
  3888  0012D2  0E00               	movlw	0
  3889  0012D4  6E10               	movwf	(___aomod@divisor+3)^0,c
  3890  0012D6  0E00               	movlw	0
  3891  0012D8  6E11               	movwf	(___aomod@divisor+4)^0,c
  3892  0012DA  0E00               	movlw	0
  3893  0012DC  6E12               	movwf	(___aomod@divisor+5)^0,c
  3894  0012DE  0E00               	movlw	0
  3895  0012E0  6E13               	movwf	(___aomod@divisor+6)^0,c
  3896  0012E2  0E00               	movlw	0
  3897  0012E4  6E14               	movwf	(___aomod@divisor+7)^0,c
  3898  0012E6  EC84  F00D         	call	___aomod	;wreg free
  3899  0012EA  C005  F02A         	movff	?___aomod,??_dtoa
  3900  0012EE  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  3901  0012F2  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  3902  0012F6  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  3903  0012FA  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  3904  0012FE  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  3905  001302  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  3906  001306  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  3907  00130A  C02A  F017         	movff	??_dtoa,abs@a
  3908  00130E  C02C  F018         	movff	??_dtoa+2,abs@a+1
  3909  001312  ECD4  F013         	call	_abs	;wreg free
  3910  001316  5017               	movf	?_abs^0,w,c
  3911  001318  0F30               	addlw	48
  3912  00131A  6EDF               	movwf	indf2,c
  3913  00131C                     
  3914                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  3915  00131C  0634               	decf	dtoa@p^0,f,c
  3916  00131E  A0D8               	btfss	status,0,c
  3917  001320  0635               	decf	(dtoa@p+1)^0,f,c
  3918  001322                     
  3919                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  3920  001322  0636               	decf	dtoa@w^0,f,c
  3921  001324  A0D8               	btfss	status,0,c
  3922  001326  0637               	decf	(dtoa@w+1)^0,f,c
  3923  001328                     
  3924                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  3925  001328  C03A  F005         	movff	dtoa@n,___aodiv@dividend
  3926  00132C  C03B  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  3927  001330  C03C  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  3928  001334  C03D  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  3929  001338  C03E  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  3930  00133C  C03F  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  3931  001340  C040  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  3932  001344  C041  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  3933  001348  0E0A               	movlw	10
  3934  00134A  6E0D               	movwf	___aodiv@divisor^0,c
  3935  00134C  0E00               	movlw	0
  3936  00134E  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  3937  001350  0E00               	movlw	0
  3938  001352  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  3939  001354  0E00               	movlw	0
  3940  001356  6E10               	movwf	(___aodiv@divisor+3)^0,c
  3941  001358  0E00               	movlw	0
  3942  00135A  6E11               	movwf	(___aodiv@divisor+4)^0,c
  3943  00135C  0E00               	movlw	0
  3944  00135E  6E12               	movwf	(___aodiv@divisor+5)^0,c
  3945  001360  0E00               	movlw	0
  3946  001362  6E13               	movwf	(___aodiv@divisor+6)^0,c
  3947  001364  0E00               	movlw	0
  3948  001366  6E14               	movwf	(___aodiv@divisor+7)^0,c
  3949  001368  ECC0  F00C         	call	___aodiv	;wreg free
  3950  00136C  C005  F03A         	movff	?___aodiv,dtoa@n
  3951  001370  C006  F03B         	movff	?___aodiv+1,dtoa@n+1
  3952  001374  C007  F03C         	movff	?___aodiv+2,dtoa@n+2
  3953  001378  C008  F03D         	movff	?___aodiv+3,dtoa@n+3
  3954  00137C  C009  F03E         	movff	?___aodiv+4,dtoa@n+4
  3955  001380  C00A  F03F         	movff	?___aodiv+5,dtoa@n+5
  3956  001384  C00B  F040         	movff	?___aodiv+6,dtoa@n+6
  3957  001388  C00C  F041         	movff	?___aodiv+7,dtoa@n+7
  3958  00138C                     l3123:
  3959                           
  3960                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3961  00138C  BE43               	btfsc	(dtoa@i+1)^0,7,c
  3962  00138E  EFD1  F009         	goto	u3681
  3963  001392  5043               	movf	(dtoa@i+1)^0,w,c
  3964  001394  E108               	bnz	u3680
  3965  001396  0442               	decf	dtoa@i^0,w,c
  3966  001398  A0D8               	btfss	status,0,c
  3967  00139A  EFD1  F009         	goto	u3681
  3968  00139E  EFD3  F009         	goto	u3680
  3969  0013A2                     u3681:
  3970  0013A2  EF03  F00A         	goto	l3133
  3971  0013A6                     u3680:
  3972  0013A6  503A               	movf	dtoa@n^0,w,c
  3973  0013A8  103B               	iorwf	(dtoa@n+1)^0,w,c
  3974  0013AA  103C               	iorwf	(dtoa@n+2)^0,w,c
  3975  0013AC  103D               	iorwf	(dtoa@n+3)^0,w,c
  3976  0013AE  103E               	iorwf	(dtoa@n+4)^0,w,c
  3977  0013B0  103F               	iorwf	(dtoa@n+5)^0,w,c
  3978  0013B2  1040               	iorwf	(dtoa@n+6)^0,w,c
  3979  0013B4  1041               	iorwf	(dtoa@n+7)^0,w,c
  3980  0013B6  A4D8               	btfss	status,2,c
  3981  0013B8  EFE0  F009         	goto	u3691
  3982  0013BC  EFE2  F009         	goto	u3690
  3983  0013C0                     u3691:
  3984  0013C0  EF4A  F009         	goto	l3113
  3985  0013C4                     u3690:
  3986  0013C4  BE35               	btfsc	(dtoa@p+1)^0,7,c
  3987  0013C6  EFEF  F009         	goto	u3700
  3988  0013CA  5035               	movf	(dtoa@p+1)^0,w,c
  3989  0013CC  E106               	bnz	u3701
  3990  0013CE  0434               	decf	dtoa@p^0,w,c
  3991  0013D0  B0D8               	btfsc	status,0,c
  3992  0013D2  EFED  F009         	goto	u3701
  3993  0013D6  EFEF  F009         	goto	u3700
  3994  0013DA                     u3701:
  3995  0013DA  EF4A  F009         	goto	l3113
  3996  0013DE                     u3700:
  3997  0013DE  BE37               	btfsc	(dtoa@w+1)^0,7,c
  3998  0013E0  EFFA  F009         	goto	u3711
  3999  0013E4  5037               	movf	(dtoa@w+1)^0,w,c
  4000  0013E6  E108               	bnz	u3710
  4001  0013E8  0436               	decf	dtoa@w^0,w,c
  4002  0013EA  A0D8               	btfss	status,0,c
  4003  0013EC  EFFA  F009         	goto	u3711
  4004  0013F0  EFFC  F009         	goto	u3710
  4005  0013F4                     u3711:
  4006  0013F4  EF03  F00A         	goto	l3133
  4007  0013F8                     u3710:
  4008  0013F8  B252               	btfsc	_flags^0,1,c
  4009  0013FA  EF01  F00A         	goto	u3721
  4010  0013FE  EF03  F00A         	goto	u3720
  4011  001402                     u3721:
  4012  001402  EF4A  F009         	goto	l3113
  4013  001406                     u3720:
  4014  001406                     l3133:
  4015                           
  4016                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  4017  001406  5038               	movf	dtoa@s^0,w,c
  4018  001408  1039               	iorwf	(dtoa@s+1)^0,w,c
  4019  00140A  A4D8               	btfss	status,2,c
  4020  00140C  EF0A  F00A         	goto	u3731
  4021  001410  EF0C  F00A         	goto	u3730
  4022  001414                     u3731:
  4023  001414  EF13  F00A         	goto	l3137
  4024  001418                     u3730:
  4025  001418  A452               	btfss	_flags^0,2,c
  4026  00141A  EF11  F00A         	goto	u3741
  4027  00141E  EF13  F00A         	goto	u3740
  4028  001422                     u3741:
  4029  001422  EF31  F00A         	goto	l3147
  4030  001426                     u3740:
  4031  001426                     l3137:
  4032                           
  4033                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  4034  001426  0642               	decf	dtoa@i^0,f,c
  4035  001428  A0D8               	btfss	status,0,c
  4036  00142A  0643               	decf	(dtoa@i+1)^0,f,c
  4037  00142C                     
  4038                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  4039  00142C  5038               	movf	dtoa@s^0,w,c
  4040  00142E  1039               	iorwf	(dtoa@s+1)^0,w,c
  4041  001430  A4D8               	btfss	status,2,c
  4042  001432  EF1D  F00A         	goto	u3751
  4043  001436  EF1F  F00A         	goto	u3750
  4044  00143A                     u3751:
  4045  00143A  EF25  F00A         	goto	l3143
  4046  00143E                     u3750:
  4047  00143E  0E00               	movlw	0
  4048  001440  6E33               	movwf	(_dtoa$2208+1)^0,c
  4049  001442  0E2B               	movlw	43
  4050  001444  6E32               	movwf	_dtoa$2208^0,c
  4051  001446  EF29  F00A         	goto	l3145
  4052  00144A                     l3143:
  4053  00144A  0E00               	movlw	0
  4054  00144C  6E33               	movwf	(_dtoa$2208+1)^0,c
  4055  00144E  0E2D               	movlw	45
  4056  001450  6E32               	movwf	_dtoa$2208^0,c
  4057  001452                     l3145:
  4058  001452  0E00               	movlw	low _dbuf
  4059  001454  2442               	addwf	dtoa@i^0,w,c
  4060  001456  6ED9               	movwf	fsr2l,c
  4061  001458  0E01               	movlw	high _dbuf
  4062  00145A  2043               	addwfc	(dtoa@i+1)^0,w,c
  4063  00145C  6EDA               	movwf	fsr2h,c
  4064  00145E  C032  FFDF         	movff	_dtoa$2208,indf2
  4065  001462                     l3147:
  4066                           
  4067                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  4068  001462  C020  F015         	movff	dtoa@fp,pad@fp
  4069  001466  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  4070  00146A  0E00               	movlw	low _dbuf
  4071  00146C  2442               	addwf	dtoa@i^0,w,c
  4072  00146E  6E17               	movwf	pad@buf^0,c
  4073  001470  0E01               	movlw	high _dbuf
  4074  001472  2043               	addwfc	(dtoa@i+1)^0,w,c
  4075  001474  6E18               	movwf	(pad@buf+1)^0,c
  4076  001476  C036  F019         	movff	dtoa@w,pad@p
  4077  00147A  C037  F01A         	movff	dtoa@w+1,pad@p+1
  4078  00147E  ECBF  F011         	call	_pad	;wreg free
  4079  001482  C015  F020         	movff	?_pad,?_dtoa
  4080  001486  C016  F021         	movff	?_pad+1,?_dtoa+1
  4081  00148A  0012               	return		;funcret
  4082  00148C                     __end_of_dtoa:
  4083                           	callstack 0
  4084                           
  4085 ;; *************** function _pad *****************
  4086 ;; Defined at:
  4087 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4088 ;; Parameters:    Size  Location     Type
  4089 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  4090 ;;		 -> sprintf@f(6), 
  4091 ;;  buf             2   22[COMRAM] PTR unsigned char 
  4092 ;;		 -> dbuf(32), 
  4093 ;;  p               2   24[COMRAM] int 
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;  w               2   29[COMRAM] int 
  4096 ;;  i               2   27[COMRAM] int 
  4097 ;; Return value:  Size  Location     Type
  4098 ;;                  2   20[COMRAM] int 
  4099 ;; Registers used:
  4100 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4101 ;; Tracked objects:
  4102 ;;		On entry : 0/0
  4103 ;;		On exit  : 0/0
  4104 ;;		Unchanged: 0/0
  4105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4106 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4107 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4108 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4109 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4110 ;;Total ram usage:       11 bytes
  4111 ;; Hardware stack levels used: 1
  4112 ;; Hardware stack levels required when called: 5
  4113 ;; This function calls:
  4114 ;;		_fputc
  4115 ;;		_fputs
  4116 ;;		_strlen
  4117 ;; This function is called by:
  4118 ;;		_dtoa
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121                           
  4122                           	psect	text20
  4123  00237E                     __ptext20:
  4124                           	callstack 0
  4125  00237E                     _pad:
  4126                           	callstack 20
  4127  00237E                     
  4128                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4129  00237E  A052               	btfss	_flags^0,0,c
  4130  002380  EFC4  F011         	goto	u3521
  4131  002384  EFC6  F011         	goto	u3520
  4132  002388                     u3521:
  4133  002388  EFD0  F011         	goto	l3051
  4134  00238C                     u3520:
  4135  00238C                     
  4136                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4137  00238C  C017  F00E         	movff	pad@buf,fputs@s
  4138  002390  C018  F00F         	movff	pad@buf+1,fputs@s+1
  4139  002394  C015  F010         	movff	pad@fp,fputs@fp
  4140  002398  C016  F011         	movff	pad@fp+1,fputs@fp+1
  4141  00239C  EC91  F013         	call	_fputs	;wreg free
  4142  0023A0                     l3051:
  4143                           
  4144                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4145  0023A0  BE1A               	btfsc	(pad@p+1)^0,7,c
  4146  0023A2  EFD5  F011         	goto	u3531
  4147  0023A6  EFD7  F011         	goto	u3530
  4148  0023AA                     u3531:
  4149  0023AA  EFDD  F011         	goto	l3055
  4150  0023AE                     u3530:
  4151  0023AE  C019  F01E         	movff	pad@p,pad@w
  4152  0023B2  C01A  F01F         	movff	pad@p+1,pad@w+1
  4153  0023B6  EFE1  F011         	goto	l1027
  4154  0023BA                     l3055:
  4155  0023BA  0E00               	movlw	0
  4156  0023BC  6E1F               	movwf	(pad@w+1)^0,c
  4157  0023BE  0E00               	movlw	0
  4158  0023C0  6E1E               	movwf	pad@w^0,c
  4159  0023C2                     l1027:
  4160                           
  4161                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4162  0023C2  0E00               	movlw	0
  4163  0023C4  6E1D               	movwf	(pad@i+1)^0,c
  4164  0023C6  0E00               	movlw	0
  4165  0023C8  6E1C               	movwf	pad@i^0,c
  4166                           
  4167                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4168  0023CA  EFF3  F011         	goto	l3061
  4169  0023CE                     l3057:
  4170                           
  4171                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4172  0023CE  0E00               	movlw	0
  4173  0023D0  6E06               	movwf	(fputc@c+1)^0,c
  4174  0023D2  0E20               	movlw	32
  4175  0023D4  6E05               	movwf	fputc@c^0,c
  4176  0023D6  C015  F007         	movff	pad@fp,fputc@fp
  4177  0023DA  C016  F008         	movff	pad@fp+1,fputc@fp+1
  4178  0023DE  EC96  F010         	call	_fputc	;wreg free
  4179  0023E2                     
  4180                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4181  0023E2  4A1C               	infsnz	pad@i^0,f,c
  4182  0023E4  2A1D               	incf	(pad@i+1)^0,f,c
  4183  0023E6                     l3061:
  4184                           
  4185                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4186  0023E6  501E               	movf	pad@w^0,w,c
  4187  0023E8  5C1C               	subwf	pad@i^0,w,c
  4188  0023EA  501D               	movf	(pad@i+1)^0,w,c
  4189  0023EC  0A80               	xorlw	128
  4190  0023EE  6E1B               	movwf	??_pad^0,c
  4191  0023F0  501F               	movf	(pad@w+1)^0,w,c
  4192  0023F2  0A80               	xorlw	128
  4193  0023F4  581B               	subwfb	??_pad^0,w,c
  4194  0023F6  A0D8               	btfss	status,0,c
  4195  0023F8  EF00  F012         	goto	u3541
  4196  0023FC  EF02  F012         	goto	u3540
  4197  002400                     u3541:
  4198  002400  EFE7  F011         	goto	l3057
  4199  002404                     u3540:
  4200  002404                     
  4201                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4202  002404  B052               	btfsc	_flags^0,0,c
  4203  002406  EF07  F012         	goto	u3551
  4204  00240A  EF09  F012         	goto	u3550
  4205  00240E                     u3551:
  4206  00240E  EF13  F012         	goto	l3065
  4207  002412                     u3550:
  4208  002412                     
  4209                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4210  002412  C017  F00E         	movff	pad@buf,fputs@s
  4211  002416  C018  F00F         	movff	pad@buf+1,fputs@s+1
  4212  00241A  C015  F010         	movff	pad@fp,fputs@fp
  4213  00241E  C016  F011         	movff	pad@fp+1,fputs@fp+1
  4214  002422  EC91  F013         	call	_fputs	;wreg free
  4215  002426                     l3065:
  4216                           
  4217                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4218  002426  C017  F005         	movff	pad@buf,strlen@s
  4219  00242A  C018  F006         	movff	pad@buf+1,strlen@s+1
  4220  00242E  EC10  F014         	call	_strlen	;wreg free
  4221  002432  501E               	movf	pad@w^0,w,c
  4222  002434  2405               	addwf	?_strlen^0,w,c
  4223  002436  6E15               	movwf	?_pad^0,c
  4224  002438  501F               	movf	(pad@w+1)^0,w,c
  4225  00243A  2006               	addwfc	(?_strlen+1)^0,w,c
  4226  00243C  6E16               	movwf	(?_pad+1)^0,c
  4227  00243E  0012               	return		;funcret
  4228  002440                     __end_of_pad:
  4229                           	callstack 0
  4230                           
  4231 ;; *************** function _strlen *****************
  4232 ;; Defined at:
  4233 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  4234 ;; Parameters:    Size  Location     Type
  4235 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4236 ;;		 -> dbuf(32), 
  4237 ;; Auto vars:     Size  Location     Type
  4238 ;;  a               2    6[COMRAM] PTR const unsigned char 
  4239 ;;		 -> dbuf(32), 
  4240 ;; Return value:  Size  Location     Type
  4241 ;;                  2    4[COMRAM] unsigned int 
  4242 ;; Registers used:
  4243 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4244 ;; Tracked objects:
  4245 ;;		On entry : 0/0
  4246 ;;		On exit  : 0/0
  4247 ;;		Unchanged: 0/0
  4248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4249 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4250 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4252 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4253 ;;Total ram usage:        4 bytes
  4254 ;; Hardware stack levels used: 1
  4255 ;; Hardware stack levels required when called: 2
  4256 ;; This function calls:
  4257 ;;		Nothing
  4258 ;; This function is called by:
  4259 ;;		_pad
  4260 ;; This function uses a non-reentrant model
  4261 ;;
  4262                           
  4263                           	psect	text21
  4264  002820                     __ptext21:
  4265                           	callstack 0
  4266  002820                     _strlen:
  4267                           	callstack 22
  4268  002820  C005  F007         	movff	strlen@s,strlen@a
  4269  002824  C006  F008         	movff	strlen@s+1,strlen@a+1
  4270  002828  EF18  F014         	goto	l2955
  4271  00282C                     l2953:
  4272  00282C  4A05               	infsnz	strlen@s^0,f,c
  4273  00282E  2A06               	incf	(strlen@s+1)^0,f,c
  4274  002830                     l2955:
  4275  002830  C005  FFD9         	movff	strlen@s,fsr2l
  4276  002834  C006  FFDA         	movff	strlen@s+1,fsr2h
  4277  002838  50DF               	movf	indf2,w,c
  4278  00283A  A4D8               	btfss	status,2,c
  4279  00283C  EF22  F014         	goto	u3381
  4280  002840  EF24  F014         	goto	u3380
  4281  002844                     u3381:
  4282  002844  EF16  F014         	goto	l2953
  4283  002848                     u3380:
  4284  002848  5007               	movf	strlen@a^0,w,c
  4285  00284A  5C05               	subwf	strlen@s^0,w,c
  4286  00284C  6E05               	movwf	?_strlen^0,c
  4287  00284E  5008               	movf	(strlen@a+1)^0,w,c
  4288  002850  5806               	subwfb	(strlen@s+1)^0,w,c
  4289  002852  6E06               	movwf	(?_strlen+1)^0,c
  4290  002854  0012               	return		;funcret
  4291  002856                     __end_of_strlen:
  4292                           	callstack 0
  4293                           
  4294 ;; *************** function _fputs *****************
  4295 ;; Defined at:
  4296 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  4297 ;; Parameters:    Size  Location     Type
  4298 ;;  s               2   13[COMRAM] PTR const unsigned char 
  4299 ;;		 -> dbuf(32), 
  4300 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  4301 ;;		 -> sprintf@f(6), 
  4302 ;; Auto vars:     Size  Location     Type
  4303 ;;  i               2   18[COMRAM] int 
  4304 ;;  c               1   17[COMRAM] unsigned char 
  4305 ;; Return value:  Size  Location     Type
  4306 ;;                  2   13[COMRAM] int 
  4307 ;; Registers used:
  4308 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4309 ;; Tracked objects:
  4310 ;;		On entry : 0/0
  4311 ;;		On exit  : 0/0
  4312 ;;		Unchanged: 0/0
  4313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4314 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4315 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4317 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4318 ;;Total ram usage:        7 bytes
  4319 ;; Hardware stack levels used: 1
  4320 ;; Hardware stack levels required when called: 4
  4321 ;; This function calls:
  4322 ;;		_fputc
  4323 ;; This function is called by:
  4324 ;;		_pad
  4325 ;; This function uses a non-reentrant model
  4326 ;;
  4327                           
  4328                           	psect	text22
  4329  002722                     __ptext22:
  4330                           	callstack 0
  4331  002722                     _fputs:
  4332                           	callstack 20
  4333  002722  0E00               	movlw	0
  4334  002724  6E14               	movwf	(fputs@i+1)^0,c
  4335  002726  0E00               	movlw	0
  4336  002728  6E13               	movwf	fputs@i^0,c
  4337  00272A  EFA2  F013         	goto	l2949
  4338  00272E                     l2945:
  4339  00272E  C012  F005         	movff	fputs@c,fputc@c
  4340  002732  6A06               	clrf	(fputc@c+1)^0,c
  4341  002734  C010  F007         	movff	fputs@fp,fputc@fp
  4342  002738  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  4343  00273C  EC96  F010         	call	_fputc	;wreg free
  4344  002740  4A13               	infsnz	fputs@i^0,f,c
  4345  002742  2A14               	incf	(fputs@i+1)^0,f,c
  4346  002744                     l2949:
  4347  002744  5013               	movf	fputs@i^0,w,c
  4348  002746  240E               	addwf	fputs@s^0,w,c
  4349  002748  6ED9               	movwf	fsr2l,c
  4350  00274A  5014               	movf	(fputs@i+1)^0,w,c
  4351  00274C  200F               	addwfc	(fputs@s+1)^0,w,c
  4352  00274E  6EDA               	movwf	fsr2h,c
  4353  002750  50DF               	movf	indf2,w,c
  4354  002752  6E12               	movwf	fputs@c^0,c
  4355  002754  5012               	movf	fputs@c^0,w,c
  4356  002756  A4D8               	btfss	status,2,c
  4357  002758  EFB0  F013         	goto	u3371
  4358  00275C  EFB2  F013         	goto	u3370
  4359  002760                     u3371:
  4360  002760  EF97  F013         	goto	l2945
  4361  002764                     u3370:
  4362  002764  0012               	return		;funcret
  4363  002766                     __end_of_fputs:
  4364                           	callstack 0
  4365                           
  4366 ;; *************** function _fputc *****************
  4367 ;; Defined at:
  4368 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  4369 ;; Parameters:    Size  Location     Type
  4370 ;;  c               2    4[COMRAM] int 
  4371 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  4372 ;;		 -> sprintf@f(6), 
  4373 ;; Auto vars:     Size  Location     Type
  4374 ;;		None
  4375 ;; Return value:  Size  Location     Type
  4376 ;;                  2    4[COMRAM] int 
  4377 ;; Registers used:
  4378 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4379 ;; Tracked objects:
  4380 ;;		On entry : 0/0
  4381 ;;		On exit  : 0/0
  4382 ;;		Unchanged: 0/0
  4383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4384 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4386 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4387 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4388 ;;Total ram usage:        9 bytes
  4389 ;; Hardware stack levels used: 1
  4390 ;; Hardware stack levels required when called: 3
  4391 ;; This function calls:
  4392 ;;		_putch
  4393 ;; This function is called by:
  4394 ;;		_pad
  4395 ;;		_vfpfcnvrt
  4396 ;;		_fputs
  4397 ;; This function uses a non-reentrant model
  4398 ;;
  4399                           
  4400                           	psect	text23
  4401  00212C                     __ptext23:
  4402                           	callstack 0
  4403  00212C                     _fputc:
  4404                           	callstack 23
  4405  00212C  5007               	movf	fputc@fp^0,w,c
  4406  00212E  1008               	iorwf	(fputc@fp+1)^0,w,c
  4407  002130  B4D8               	btfsc	status,2,c
  4408  002132  EF9D  F010         	goto	u3331
  4409  002136  EF9F  F010         	goto	u3330
  4410  00213A                     u3331:
  4411  00213A  EFA8  F010         	goto	l2933
  4412  00213E                     u3330:
  4413  00213E  5007               	movf	fputc@fp^0,w,c
  4414  002140  1008               	iorwf	(fputc@fp+1)^0,w,c
  4415  002142  A4D8               	btfss	status,2,c
  4416  002144  EFA6  F010         	goto	u3341
  4417  002148  EFA8  F010         	goto	u3340
  4418  00214C                     u3341:
  4419  00214C  EFAD  F010         	goto	l2935
  4420  002150                     u3340:
  4421  002150                     l2933:
  4422  002150  5005               	movf	fputc@c^0,w,c
  4423  002152  ECF8  F014         	call	_putch
  4424  002156  EFFA  F010         	goto	l1158
  4425  00215A                     l2935:
  4426  00215A  EE20 F004          	lfsr	2,4
  4427  00215E  5007               	movf	fputc@fp^0,w,c
  4428  002160  26D9               	addwf	fsr2l,f,c
  4429  002162  5008               	movf	(fputc@fp+1)^0,w,c
  4430  002164  22DA               	addwfc	fsr2h,f,c
  4431  002166  50DE               	movf	postinc2,w,c
  4432  002168  10DE               	iorwf	postinc2,w,c
  4433  00216A  B4D8               	btfsc	status,2,c
  4434  00216C  EFBA  F010         	goto	u3351
  4435  002170  EFBC  F010         	goto	u3350
  4436  002174                     u3351:
  4437  002174  EFD7  F010         	goto	l2939
  4438  002178                     u3350:
  4439  002178  EE20 F004          	lfsr	2,4
  4440  00217C  5007               	movf	fputc@fp^0,w,c
  4441  00217E  26D9               	addwf	fsr2l,f,c
  4442  002180  5008               	movf	(fputc@fp+1)^0,w,c
  4443  002182  22DA               	addwfc	fsr2h,f,c
  4444  002184  EE10 F002          	lfsr	1,2
  4445  002188  5007               	movf	fputc@fp^0,w,c
  4446  00218A  26E1               	addwf	fsr1l,f,c
  4447  00218C  5008               	movf	(fputc@fp+1)^0,w,c
  4448  00218E  22E2               	addwfc	fsr1h,f,c
  4449  002190  50DE               	movf	postinc2,w,c
  4450  002192  5CE6               	subwf	postinc1,w,c
  4451  002194  50E6               	movf	postinc1,w,c
  4452  002196  0A80               	xorlw	128
  4453  002198  6E0D               	movwf	(??_fputc+4)^0,c
  4454  00219A  50DE               	movf	postinc2,w,c
  4455  00219C  0A80               	xorlw	128
  4456  00219E  580D               	subwfb	(??_fputc+4)^0,w,c
  4457  0021A0  B0D8               	btfsc	status,0,c
  4458  0021A2  EFD5  F010         	goto	u3361
  4459  0021A6  EFD7  F010         	goto	u3360
  4460  0021AA                     u3361:
  4461  0021AA  EFFA  F010         	goto	l1158
  4462  0021AE                     u3360:
  4463  0021AE                     l2939:
  4464  0021AE  EE20 F002          	lfsr	2,2
  4465  0021B2  5007               	movf	fputc@fp^0,w,c
  4466  0021B4  26D9               	addwf	fsr2l,f,c
  4467  0021B6  5008               	movf	(fputc@fp+1)^0,w,c
  4468  0021B8  22DA               	addwfc	fsr2h,f,c
  4469  0021BA  CFDE F009          	movff	postinc2,??_fputc
  4470  0021BE  CFDD F00A          	movff	postdec2,??_fputc+1
  4471  0021C2  C007  FFD9         	movff	fputc@fp,fsr2l
  4472  0021C6  C008  FFDA         	movff	fputc@fp+1,fsr2h
  4473  0021CA  CFDE F00B          	movff	postinc2,??_fputc+2
  4474  0021CE  CFDD F00C          	movff	postdec2,??_fputc+3
  4475  0021D2  5009               	movf	??_fputc^0,w,c
  4476  0021D4  240B               	addwf	(??_fputc+2)^0,w,c
  4477  0021D6  6ED9               	movwf	fsr2l,c
  4478  0021D8  500A               	movf	(??_fputc+1)^0,w,c
  4479  0021DA  200C               	addwfc	(??_fputc+3)^0,w,c
  4480  0021DC  6EDA               	movwf	fsr2h,c
  4481  0021DE  C005  FFDF         	movff	fputc@c,indf2
  4482  0021E2  EE20 F002          	lfsr	2,2
  4483  0021E6  5007               	movf	fputc@fp^0,w,c
  4484  0021E8  26D9               	addwf	fsr2l,f,c
  4485  0021EA  5008               	movf	(fputc@fp+1)^0,w,c
  4486  0021EC  22DA               	addwfc	fsr2h,f,c
  4487  0021EE  2ADE               	incf	postinc2,f,c
  4488  0021F0  0E00               	movlw	0
  4489  0021F2  22DD               	addwfc	postdec2,f,c
  4490  0021F4                     l1158:
  4491  0021F4  0012               	return		;funcret
  4492  0021F6                     __end_of_fputc:
  4493                           	callstack 0
  4494                           
  4495 ;; *************** function _putch *****************
  4496 ;; Defined at:
  4497 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  4498 ;; Parameters:    Size  Location     Type
  4499 ;;  c               1    wreg     unsigned char 
  4500 ;; Auto vars:     Size  Location     Type
  4501 ;;  c               1    0[COMRAM] unsigned char 
  4502 ;; Return value:  Size  Location     Type
  4503 ;;                  1    wreg      void 
  4504 ;; Registers used:
  4505 ;;		wreg
  4506 ;; Tracked objects:
  4507 ;;		On entry : 0/0
  4508 ;;		On exit  : 0/0
  4509 ;;		Unchanged: 0/0
  4510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4515 ;;Total ram usage:        0 bytes
  4516 ;; Hardware stack levels used: 1
  4517 ;; Hardware stack levels required when called: 2
  4518 ;; This function calls:
  4519 ;;		Nothing
  4520 ;; This function is called by:
  4521 ;;		_fputc
  4522 ;; This function uses a non-reentrant model
  4523 ;;
  4524                           
  4525                           	psect	text24
  4526  0029F0                     __ptext24:
  4527                           	callstack 0
  4528  0029F0                     _putch:
  4529                           	callstack 23
  4530  0029F0  0012               	return		;funcret
  4531  0029F2                     __end_of_putch:
  4532                           	callstack 0
  4533                           
  4534 ;; *************** function _abs *****************
  4535 ;; Defined at:
  4536 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  4537 ;; Parameters:    Size  Location     Type
  4538 ;;  a               2   22[COMRAM] int 
  4539 ;; Auto vars:     Size  Location     Type
  4540 ;;		None
  4541 ;; Return value:  Size  Location     Type
  4542 ;;                  2   22[COMRAM] int 
  4543 ;; Registers used:
  4544 ;;		wreg, status,2, status,0
  4545 ;; Tracked objects:
  4546 ;;		On entry : 0/0
  4547 ;;		On exit  : 0/0
  4548 ;;		Unchanged: 0/0
  4549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4550 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4552 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4553 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4554 ;;Total ram usage:        4 bytes
  4555 ;; Hardware stack levels used: 1
  4556 ;; Hardware stack levels required when called: 2
  4557 ;; This function calls:
  4558 ;;		Nothing
  4559 ;; This function is called by:
  4560 ;;		_dtoa
  4561 ;; This function uses a non-reentrant model
  4562 ;;
  4563                           
  4564                           	psect	text25
  4565  0027A8                     __ptext25:
  4566                           	callstack 0
  4567  0027A8                     _abs:
  4568                           	callstack 23
  4569  0027A8  BE18               	btfsc	(abs@a+1)^0,7,c
  4570  0027AA  EFE1  F013         	goto	u3560
  4571  0027AE  5018               	movf	(abs@a+1)^0,w,c
  4572  0027B0  E106               	bnz	u3561
  4573  0027B2  0417               	decf	abs@a^0,w,c
  4574  0027B4  B0D8               	btfsc	status,0,c
  4575  0027B6  EFDF  F013         	goto	u3561
  4576  0027BA  EFE1  F013         	goto	u3560
  4577  0027BE                     u3561:
  4578  0027BE  EFEF  F013         	goto	l1098
  4579  0027C2                     u3560:
  4580  0027C2  C017  F019         	movff	abs@a,??_abs
  4581  0027C6  C018  F01A         	movff	abs@a+1,??_abs+1
  4582  0027CA  1E19               	comf	??_abs^0,f,c
  4583  0027CC  1E1A               	comf	(??_abs+1)^0,f,c
  4584  0027CE  4A19               	infsnz	??_abs^0,f,c
  4585  0027D0  2A1A               	incf	(??_abs+1)^0,f,c
  4586  0027D2  C019  F017         	movff	??_abs,?_abs
  4587  0027D6  C01A  F018         	movff	??_abs+1,?_abs+1
  4588  0027DA  EFF3  F013         	goto	l1101
  4589  0027DE                     l1098:
  4590  0027DE  C017  F017         	movff	abs@a,?_abs
  4591  0027E2  C018  F018         	movff	abs@a+1,?_abs+1
  4592  0027E6                     l1101:
  4593  0027E6  0012               	return		;funcret
  4594  0027E8                     __end_of_abs:
  4595                           	callstack 0
  4596                           
  4597 ;; *************** function ___aomod *****************
  4598 ;; Defined at:
  4599 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  4600 ;; Parameters:    Size  Location     Type
  4601 ;;  dividend        8    4[COMRAM] long long 
  4602 ;;  divisor         8   12[COMRAM] long long 
  4603 ;; Auto vars:     Size  Location     Type
  4604 ;;  sign            1   21[COMRAM] unsigned char 
  4605 ;;  counter         1   20[COMRAM] unsigned char 
  4606 ;; Return value:  Size  Location     Type
  4607 ;;                  8    4[COMRAM] long long 
  4608 ;; Registers used:
  4609 ;;		wreg, status,2, status,0
  4610 ;; Tracked objects:
  4611 ;;		On entry : 0/0
  4612 ;;		On exit  : 0/0
  4613 ;;		Unchanged: 0/0
  4614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4615 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4616 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4618 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4619 ;;Total ram usage:       18 bytes
  4620 ;; Hardware stack levels used: 1
  4621 ;; Hardware stack levels required when called: 2
  4622 ;; This function calls:
  4623 ;;		Nothing
  4624 ;; This function is called by:
  4625 ;;		_dtoa
  4626 ;; This function uses a non-reentrant model
  4627 ;;
  4628                           
  4629                           	psect	text26
  4630  001B08                     __ptext26:
  4631                           	callstack 0
  4632  001B08                     ___aomod:
  4633                           	callstack 23
  4634  001B08  0E00               	movlw	0
  4635  001B0A  6E16               	movwf	___aomod@sign^0,c
  4636  001B0C  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  4637  001B0E  EF8D  F00D         	goto	u3460
  4638  001B12  EF8B  F00D         	goto	u3461
  4639  001B16                     u3461:
  4640  001B16  EF9F  F00D         	goto	l3019
  4641  001B1A                     u3460:
  4642  001B1A  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  4643  001B1C  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  4644  001B1E  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  4645  001B20  1E09               	comf	(___aomod@dividend+4)^0,f,c
  4646  001B22  1E08               	comf	(___aomod@dividend+3)^0,f,c
  4647  001B24  1E07               	comf	(___aomod@dividend+2)^0,f,c
  4648  001B26  1E06               	comf	(___aomod@dividend+1)^0,f,c
  4649  001B28  6C05               	negf	___aomod@dividend^0,c
  4650  001B2A  0E00               	movlw	0
  4651  001B2C  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  4652  001B2E  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  4653  001B30  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  4654  001B32  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  4655  001B34  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  4656  001B36  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  4657  001B38  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  4658  001B3A  0E01               	movlw	1
  4659  001B3C  6E16               	movwf	___aomod@sign^0,c
  4660  001B3E                     l3019:
  4661  001B3E  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  4662  001B40  EFA6  F00D         	goto	u3470
  4663  001B44  EFA4  F00D         	goto	u3471
  4664  001B48                     u3471:
  4665  001B48  EFB6  F00D         	goto	l3023
  4666  001B4C                     u3470:
  4667  001B4C  1E14               	comf	(___aomod@divisor+7)^0,f,c
  4668  001B4E  1E13               	comf	(___aomod@divisor+6)^0,f,c
  4669  001B50  1E12               	comf	(___aomod@divisor+5)^0,f,c
  4670  001B52  1E11               	comf	(___aomod@divisor+4)^0,f,c
  4671  001B54  1E10               	comf	(___aomod@divisor+3)^0,f,c
  4672  001B56  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  4673  001B58  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  4674  001B5A  6C0D               	negf	___aomod@divisor^0,c
  4675  001B5C  0E00               	movlw	0
  4676  001B5E  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  4677  001B60  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  4678  001B62  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  4679  001B64  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  4680  001B66  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  4681  001B68  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  4682  001B6A  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  4683  001B6C                     l3023:
  4684  001B6C  500D               	movf	___aomod@divisor^0,w,c
  4685  001B6E  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  4686  001B70  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  4687  001B72  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  4688  001B74  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  4689  001B76  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  4690  001B78  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  4691  001B7A  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  4692  001B7C  B4D8               	btfsc	status,2,c
  4693  001B7E  EFC3  F00D         	goto	u3481
  4694  001B82  EFC5  F00D         	goto	u3480
  4695  001B86                     u3481:
  4696  001B86  EF0D  F00E         	goto	l3039
  4697  001B8A                     u3480:
  4698  001B8A  0E01               	movlw	1
  4699  001B8C  6E15               	movwf	___aomod@counter^0,c
  4700  001B8E  EFD3  F00D         	goto	l3029
  4701  001B92                     l3027:
  4702  001B92  90D8               	bcf	status,0,c
  4703  001B94  360D               	rlcf	___aomod@divisor^0,f,c
  4704  001B96  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  4705  001B98  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  4706  001B9A  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  4707  001B9C  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  4708  001B9E  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  4709  001BA0  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  4710  001BA2  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  4711  001BA4  2A15               	incf	___aomod@counter^0,f,c
  4712  001BA6                     l3029:
  4713  001BA6  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  4714  001BA8  EFD8  F00D         	goto	u3491
  4715  001BAC  EFDA  F00D         	goto	u3490
  4716  001BB0                     u3491:
  4717  001BB0  EFC9  F00D         	goto	l3027
  4718  001BB4                     u3490:
  4719  001BB4                     l3031:
  4720  001BB4  500D               	movf	___aomod@divisor^0,w,c
  4721  001BB6  5C05               	subwf	___aomod@dividend^0,w,c
  4722  001BB8  500E               	movf	(___aomod@divisor+1)^0,w,c
  4723  001BBA  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  4724  001BBC  500F               	movf	(___aomod@divisor+2)^0,w,c
  4725  001BBE  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  4726  001BC0  5010               	movf	(___aomod@divisor+3)^0,w,c
  4727  001BC2  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  4728  001BC4  5011               	movf	(___aomod@divisor+4)^0,w,c
  4729  001BC6  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  4730  001BC8  5012               	movf	(___aomod@divisor+5)^0,w,c
  4731  001BCA  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  4732  001BCC  5013               	movf	(___aomod@divisor+6)^0,w,c
  4733  001BCE  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  4734  001BD0  5014               	movf	(___aomod@divisor+7)^0,w,c
  4735  001BD2  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  4736  001BD4  A0D8               	btfss	status,0,c
  4737  001BD6  EFEF  F00D         	goto	u3501
  4738  001BDA  EFF1  F00D         	goto	u3500
  4739  001BDE                     u3501:
  4740  001BDE  EF01  F00E         	goto	l3035
  4741  001BE2                     u3500:
  4742  001BE2  500D               	movf	___aomod@divisor^0,w,c
  4743  001BE4  5E05               	subwf	___aomod@dividend^0,f,c
  4744  001BE6  500E               	movf	(___aomod@divisor+1)^0,w,c
  4745  001BE8  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  4746  001BEA  500F               	movf	(___aomod@divisor+2)^0,w,c
  4747  001BEC  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  4748  001BEE  5010               	movf	(___aomod@divisor+3)^0,w,c
  4749  001BF0  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  4750  001BF2  5011               	movf	(___aomod@divisor+4)^0,w,c
  4751  001BF4  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  4752  001BF6  5012               	movf	(___aomod@divisor+5)^0,w,c
  4753  001BF8  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  4754  001BFA  5013               	movf	(___aomod@divisor+6)^0,w,c
  4755  001BFC  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  4756  001BFE  5014               	movf	(___aomod@divisor+7)^0,w,c
  4757  001C00  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  4758  001C02                     l3035:
  4759  001C02  90D8               	bcf	status,0,c
  4760  001C04  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  4761  001C06  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  4762  001C08  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  4763  001C0A  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  4764  001C0C  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  4765  001C0E  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  4766  001C10  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  4767  001C12  320D               	rrcf	___aomod@divisor^0,f,c
  4768  001C14  2E15               	decfsz	___aomod@counter^0,f,c
  4769  001C16  EFDA  F00D         	goto	l3031
  4770  001C1A                     l3039:
  4771  001C1A  5016               	movf	___aomod@sign^0,w,c
  4772  001C1C  B4D8               	btfsc	status,2,c
  4773  001C1E  EF13  F00E         	goto	u3511
  4774  001C22  EF15  F00E         	goto	u3510
  4775  001C26                     u3511:
  4776  001C26  EF25  F00E         	goto	l3043
  4777  001C2A                     u3510:
  4778  001C2A  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  4779  001C2C  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  4780  001C2E  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  4781  001C30  1E09               	comf	(___aomod@dividend+4)^0,f,c
  4782  001C32  1E08               	comf	(___aomod@dividend+3)^0,f,c
  4783  001C34  1E07               	comf	(___aomod@dividend+2)^0,f,c
  4784  001C36  1E06               	comf	(___aomod@dividend+1)^0,f,c
  4785  001C38  6C05               	negf	___aomod@dividend^0,c
  4786  001C3A  0E00               	movlw	0
  4787  001C3C  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  4788  001C3E  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  4789  001C40  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  4790  001C42  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  4791  001C44  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  4792  001C46  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  4793  001C48  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  4794  001C4A                     l3043:
  4795  001C4A  C005  F005         	movff	___aomod@dividend,?___aomod
  4796  001C4E  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  4797  001C52  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  4798  001C56  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  4799  001C5A  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  4800  001C5E  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  4801  001C62  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  4802  001C66  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  4803  001C6A  0012               	return		;funcret
  4804  001C6C                     __end_of___aomod:
  4805                           	callstack 0
  4806                           
  4807 ;; *************** function ___aodiv *****************
  4808 ;; Defined at:
  4809 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  4810 ;; Parameters:    Size  Location     Type
  4811 ;;  dividend        8    4[COMRAM] long long 
  4812 ;;  divisor         8   12[COMRAM] long long 
  4813 ;; Auto vars:     Size  Location     Type
  4814 ;;  quotient        8   22[COMRAM] long long 
  4815 ;;  sign            1   21[COMRAM] unsigned char 
  4816 ;;  counter         1   20[COMRAM] unsigned char 
  4817 ;; Return value:  Size  Location     Type
  4818 ;;                  8    4[COMRAM] long long 
  4819 ;; Registers used:
  4820 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4821 ;; Tracked objects:
  4822 ;;		On entry : 0/0
  4823 ;;		On exit  : 0/0
  4824 ;;		Unchanged: 0/0
  4825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4826 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4827 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4829 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4830 ;;Total ram usage:       26 bytes
  4831 ;; Hardware stack levels used: 1
  4832 ;; Hardware stack levels required when called: 2
  4833 ;; This function calls:
  4834 ;;		Nothing
  4835 ;; This function is called by:
  4836 ;;		_dtoa
  4837 ;; This function uses a non-reentrant model
  4838 ;;
  4839                           
  4840                           	psect	text27
  4841  001980                     __ptext27:
  4842                           	callstack 0
  4843  001980                     ___aodiv:
  4844                           	callstack 23
  4845  001980  0E00               	movlw	0
  4846  001982  6E16               	movwf	___aodiv@sign^0,c
  4847  001984  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  4848  001986  EFC9  F00C         	goto	u3390
  4849  00198A  EFC7  F00C         	goto	u3391
  4850  00198E                     u3391:
  4851  00198E  EFDB  F00C         	goto	l2975
  4852  001992                     u3390:
  4853  001992  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  4854  001994  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  4855  001996  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  4856  001998  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  4857  00199A  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  4858  00199C  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  4859  00199E  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  4860  0019A0  6C0D               	negf	___aodiv@divisor^0,c
  4861  0019A2  0E00               	movlw	0
  4862  0019A4  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  4863  0019A6  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  4864  0019A8  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  4865  0019AA  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  4866  0019AC  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  4867  0019AE  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  4868  0019B0  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  4869  0019B2  0E01               	movlw	1
  4870  0019B4  6E16               	movwf	___aodiv@sign^0,c
  4871  0019B6                     l2975:
  4872  0019B6  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  4873  0019B8  EFE2  F00C         	goto	u3400
  4874  0019BC  EFE0  F00C         	goto	u3401
  4875  0019C0                     u3401:
  4876  0019C0  EFF4  F00C         	goto	l2981
  4877  0019C4                     u3400:
  4878  0019C4  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  4879  0019C6  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  4880  0019C8  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  4881  0019CA  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  4882  0019CC  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  4883  0019CE  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  4884  0019D0  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  4885  0019D2  6C05               	negf	___aodiv@dividend^0,c
  4886  0019D4  0E00               	movlw	0
  4887  0019D6  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  4888  0019D8  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  4889  0019DA  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  4890  0019DC  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  4891  0019DE  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  4892  0019E0  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  4893  0019E2  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  4894  0019E4  0E01               	movlw	1
  4895  0019E6  1A16               	xorwf	___aodiv@sign^0,f,c
  4896  0019E8                     l2981:
  4897  0019E8  EE20  F017         	lfsr	2,___aodiv@quotient
  4898  0019EC  0E07               	movlw	7
  4899  0019EE                     u3411:
  4900  0019EE  6ADE               	clrf	postinc2,c
  4901  0019F0  06E8               	decf	wreg,f,c
  4902  0019F2  E2FD               	bc	u3411
  4903  0019F4  500D               	movf	___aodiv@divisor^0,w,c
  4904  0019F6  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  4905  0019F8  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  4906  0019FA  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  4907  0019FC  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  4908  0019FE  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  4909  001A00  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  4910  001A02  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  4911  001A04  B4D8               	btfsc	status,2,c
  4912  001A06  EF07  F00D         	goto	u3421
  4913  001A0A  EF09  F00D         	goto	u3420
  4914  001A0E                     u3421:
  4915  001A0E  EF5B  F00D         	goto	l3003
  4916  001A12                     u3420:
  4917  001A12  0E01               	movlw	1
  4918  001A14  6E15               	movwf	___aodiv@counter^0,c
  4919  001A16  EF17  F00D         	goto	l2989
  4920  001A1A                     l2987:
  4921  001A1A  90D8               	bcf	status,0,c
  4922  001A1C  360D               	rlcf	___aodiv@divisor^0,f,c
  4923  001A1E  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  4924  001A20  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  4925  001A22  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  4926  001A24  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  4927  001A26  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  4928  001A28  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  4929  001A2A  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  4930  001A2C  2A15               	incf	___aodiv@counter^0,f,c
  4931  001A2E                     l2989:
  4932  001A2E  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  4933  001A30  EF1C  F00D         	goto	u3431
  4934  001A34  EF1E  F00D         	goto	u3430
  4935  001A38                     u3431:
  4936  001A38  EF0D  F00D         	goto	l2987
  4937  001A3C                     u3430:
  4938  001A3C                     l2991:
  4939  001A3C  90D8               	bcf	status,0,c
  4940  001A3E  3617               	rlcf	___aodiv@quotient^0,f,c
  4941  001A40  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  4942  001A42  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  4943  001A44  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  4944  001A46  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  4945  001A48  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  4946  001A4A  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  4947  001A4C  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  4948  001A4E  500D               	movf	___aodiv@divisor^0,w,c
  4949  001A50  5C05               	subwf	___aodiv@dividend^0,w,c
  4950  001A52  500E               	movf	(___aodiv@divisor+1)^0,w,c
  4951  001A54  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  4952  001A56  500F               	movf	(___aodiv@divisor+2)^0,w,c
  4953  001A58  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  4954  001A5A  5010               	movf	(___aodiv@divisor+3)^0,w,c
  4955  001A5C  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  4956  001A5E  5011               	movf	(___aodiv@divisor+4)^0,w,c
  4957  001A60  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  4958  001A62  5012               	movf	(___aodiv@divisor+5)^0,w,c
  4959  001A64  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  4960  001A66  5013               	movf	(___aodiv@divisor+6)^0,w,c
  4961  001A68  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  4962  001A6A  5014               	movf	(___aodiv@divisor+7)^0,w,c
  4963  001A6C  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  4964  001A6E  A0D8               	btfss	status,0,c
  4965  001A70  EF3C  F00D         	goto	u3441
  4966  001A74  EF3E  F00D         	goto	u3440
  4967  001A78                     u3441:
  4968  001A78  EF4F  F00D         	goto	l2999
  4969  001A7C                     u3440:
  4970  001A7C  500D               	movf	___aodiv@divisor^0,w,c
  4971  001A7E  5E05               	subwf	___aodiv@dividend^0,f,c
  4972  001A80  500E               	movf	(___aodiv@divisor+1)^0,w,c
  4973  001A82  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  4974  001A84  500F               	movf	(___aodiv@divisor+2)^0,w,c
  4975  001A86  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  4976  001A88  5010               	movf	(___aodiv@divisor+3)^0,w,c
  4977  001A8A  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  4978  001A8C  5011               	movf	(___aodiv@divisor+4)^0,w,c
  4979  001A8E  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  4980  001A90  5012               	movf	(___aodiv@divisor+5)^0,w,c
  4981  001A92  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  4982  001A94  5013               	movf	(___aodiv@divisor+6)^0,w,c
  4983  001A96  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  4984  001A98  5014               	movf	(___aodiv@divisor+7)^0,w,c
  4985  001A9A  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  4986  001A9C  8017               	bsf	___aodiv@quotient^0,0,c
  4987  001A9E                     l2999:
  4988  001A9E  90D8               	bcf	status,0,c
  4989  001AA0  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  4990  001AA2  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  4991  001AA4  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  4992  001AA6  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  4993  001AA8  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  4994  001AAA  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  4995  001AAC  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  4996  001AAE  320D               	rrcf	___aodiv@divisor^0,f,c
  4997  001AB0  2E15               	decfsz	___aodiv@counter^0,f,c
  4998  001AB2  EF1E  F00D         	goto	l2991
  4999  001AB6                     l3003:
  5000  001AB6  5016               	movf	___aodiv@sign^0,w,c
  5001  001AB8  B4D8               	btfsc	status,2,c
  5002  001ABA  EF61  F00D         	goto	u3451
  5003  001ABE  EF63  F00D         	goto	u3450
  5004  001AC2                     u3451:
  5005  001AC2  EF73  F00D         	goto	l3007
  5006  001AC6                     u3450:
  5007  001AC6  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  5008  001AC8  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  5009  001ACA  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  5010  001ACC  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  5011  001ACE  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  5012  001AD0  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  5013  001AD2  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  5014  001AD4  6C17               	negf	___aodiv@quotient^0,c
  5015  001AD6  0E00               	movlw	0
  5016  001AD8  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  5017  001ADA  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  5018  001ADC  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  5019  001ADE  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  5020  001AE0  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  5021  001AE2  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  5022  001AE4  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  5023  001AE6                     l3007:
  5024  001AE6  C017  F005         	movff	___aodiv@quotient,?___aodiv
  5025  001AEA  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  5026  001AEE  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  5027  001AF2  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  5028  001AF6  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  5029  001AFA  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  5030  001AFE  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  5031  001B02  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  5032  001B06  0012               	return		;funcret
  5033  001B08                     __end_of___aodiv:
  5034                           	callstack 0
  5035                           
  5036 ;; *************** function _atoi *****************
  5037 ;; Defined at:
  5038 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;  s               2   11[COMRAM] PTR const unsigned char 
  5041 ;;		 -> STR_3(15), STR_2(15), STR_1(15), 
  5042 ;; Auto vars:     Size  Location     Type
  5043 ;;  n               2   24[COMRAM] int 
  5044 ;;  neg             2   17[COMRAM] int 
  5045 ;; Return value:  Size  Location     Type
  5046 ;;                  2   11[COMRAM] int 
  5047 ;; Registers used:
  5048 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5049 ;; Tracked objects:
  5050 ;;		On entry : 0/0
  5051 ;;		On exit  : 0/0
  5052 ;;		Unchanged: 0/0
  5053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5054 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5055 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5056 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5057 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5058 ;;Total ram usage:       15 bytes
  5059 ;; Hardware stack levels used: 1
  5060 ;; Hardware stack levels required when called: 3
  5061 ;; This function calls:
  5062 ;;		___wmul
  5063 ;;		_isdigit
  5064 ;;		_isspace
  5065 ;; This function is called by:
  5066 ;;		_vfpfcnvrt
  5067 ;; This function uses a non-reentrant model
  5068 ;;
  5069                           
  5070                           	psect	text28
  5071  001640                     __ptext28:
  5072                           	callstack 0
  5073  001640                     _atoi:
  5074                           	callstack 23
  5075  001640  0E00               	movlw	0
  5076  001642  6E1A               	movwf	(atoi@n+1)^0,c
  5077  001644  0E00               	movlw	0
  5078  001646  6E19               	movwf	atoi@n^0,c
  5079  001648  0E00               	movlw	0
  5080  00164A  6E13               	movwf	(atoi@neg+1)^0,c
  5081  00164C  0E00               	movlw	0
  5082  00164E  6E12               	movwf	atoi@neg^0,c
  5083  001650  EF2C  F00B         	goto	l3155
  5084  001654                     l3153:
  5085  001654  4A0C               	infsnz	atoi@s^0,f,c
  5086  001656  2A0D               	incf	(atoi@s+1)^0,f,c
  5087  001658                     l3155:
  5088  001658  0E01               	movlw	1
  5089  00165A  6E18               	movwf	_atoi$2244^0,c
  5090  00165C  C00C  FFF6         	movff	atoi@s,tblptrl
  5091  001660  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5092  001664                     	if	0	;tblptru may be non-zero
  5093  001664                     	endif
  5094  001664                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5095  001664  0E00               	movlw	low (__mediumconst shr (0+16))
  5096  001666  6EF8               	movwf	tblptru,c
  5097  001668                     	endif
  5098  001668  0008               	tblrd		*
  5099  00166A  50F5               	movf	tablat,w,c
  5100  00166C  0A20               	xorlw	32
  5101  00166E  B4D8               	btfsc	status,2,c
  5102  001670  EF3C  F00B         	goto	u3761
  5103  001674  EF3E  F00B         	goto	u3760
  5104  001678                     u3761:
  5105  001678  EF5D  F00B         	goto	l3163
  5106  00167C                     u3760:
  5107  00167C  0EF7               	movlw	247
  5108  00167E  6E0E               	movwf	??_atoi^0,c
  5109  001680  0EFF               	movlw	255
  5110  001682  6E0F               	movwf	(??_atoi+1)^0,c
  5111  001684  C00C  FFF6         	movff	atoi@s,tblptrl
  5112  001688  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5113  00168C                     	if	0	;tblptru may be non-zero
  5114  00168C                     	endif
  5115  00168C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5116  00168C  0E00               	movlw	low (__mediumconst shr (0+16))
  5117  00168E  6EF8               	movwf	tblptru,c
  5118  001690                     	endif
  5119  001690  0008               	tblrd		*
  5120  001692  50F5               	movf	tablat,w,c
  5121  001694  6E10               	movwf	(??_atoi+2)^0,c
  5122  001696  6A11               	clrf	(??_atoi+3)^0,c
  5123  001698  500E               	movf	??_atoi^0,w,c
  5124  00169A  2610               	addwf	(??_atoi+2)^0,f,c
  5125  00169C  500F               	movf	(??_atoi+1)^0,w,c
  5126  00169E  2211               	addwfc	(??_atoi+3)^0,f,c
  5127  0016A0  5011               	movf	(??_atoi+3)^0,w,c
  5128  0016A2  E109               	bnz	u3770
  5129  0016A4  0E05               	movlw	5
  5130  0016A6  5C10               	subwf	(??_atoi+2)^0,w,c
  5131  0016A8  A0D8               	btfss	status,0,c
  5132  0016AA  EF59  F00B         	goto	u3771
  5133  0016AE  EF5B  F00B         	goto	u3770
  5134  0016B2                     u3771:
  5135  0016B2  EF5D  F00B         	goto	l3163
  5136  0016B6                     u3770:
  5137  0016B6  0E00               	movlw	0
  5138  0016B8  6E18               	movwf	_atoi$2244^0,c
  5139  0016BA                     l3163:
  5140  0016BA  C018  F014         	movff	_atoi$2244,_atoi$2243
  5141  0016BE  6A15               	clrf	(_atoi$2243+1)^0,c
  5142  0016C0  5014               	movf	_atoi$2243^0,w,c
  5143  0016C2  1015               	iorwf	(_atoi$2243+1)^0,w,c
  5144  0016C4  A4D8               	btfss	status,2,c
  5145  0016C6  EF67  F00B         	goto	u3781
  5146  0016CA  EF69  F00B         	goto	u3780
  5147  0016CE                     u3781:
  5148  0016CE  EF2A  F00B         	goto	l3153
  5149  0016D2                     u3780:
  5150  0016D2  EF73  F00B         	goto	l3173
  5151  0016D6                     l3169:
  5152  0016D6  0E00               	movlw	0
  5153  0016D8  6E13               	movwf	(atoi@neg+1)^0,c
  5154  0016DA  0E01               	movlw	1
  5155  0016DC  6E12               	movwf	atoi@neg^0,c
  5156  0016DE                     l3171:
  5157  0016DE  4A0C               	infsnz	atoi@s^0,f,c
  5158  0016E0  2A0D               	incf	(atoi@s+1)^0,f,c
  5159  0016E2  EFAC  F00B         	goto	l3179
  5160  0016E6                     l3173:
  5161  0016E6  C00C  FFF6         	movff	atoi@s,tblptrl
  5162  0016EA  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5163  0016EE                     	if	0	;tblptru may be non-zero
  5164  0016EE                     	endif
  5165  0016EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5166  0016EE  0E00               	movlw	low (__mediumconst shr (0+16))
  5167  0016F0  6EF8               	movwf	tblptru,c
  5168  0016F2                     	endif
  5169  0016F2  0008               	tblrd		*
  5170  0016F4  50F5               	movf	tablat,w,c
  5171  0016F6  6E0E               	movwf	??_atoi^0,c
  5172  0016F8  6A0F               	clrf	(??_atoi+1)^0,c
  5173                           
  5174                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5175                           ; Switch size 1, requested type "simple"
  5176                           ; Number of cases is 1, Range of values is 0 to 0
  5177                           ; switch strategies available:
  5178                           ; Name         Instructions Cycles
  5179                           ; simple_byte            4     3 (average)
  5180                           ;	Chosen strategy is simple_byte
  5181  0016FA  500F               	movf	(??_atoi+1)^0,w,c
  5182  0016FC  0A00               	xorlw	0	; case 0
  5183  0016FE  B4D8               	btfsc	status,2,c
  5184  001700  EF84  F00B         	goto	l3497
  5185  001704  EFAC  F00B         	goto	l3179
  5186  001708                     l3497:
  5187                           
  5188                           ; Switch size 1, requested type "simple"
  5189                           ; Number of cases is 2, Range of values is 43 to 45
  5190                           ; switch strategies available:
  5191                           ; Name         Instructions Cycles
  5192                           ; simple_byte            7     4 (average)
  5193                           ;	Chosen strategy is simple_byte
  5194  001708  500E               	movf	??_atoi^0,w,c
  5195  00170A  0A2B               	xorlw	43	; case 43
  5196  00170C  B4D8               	btfsc	status,2,c
  5197  00170E  EF6F  F00B         	goto	l3171
  5198  001712  0A06               	xorlw	6	; case 45
  5199  001714  B4D8               	btfsc	status,2,c
  5200  001716  EF6B  F00B         	goto	l3169
  5201  00171A  EFAC  F00B         	goto	l3179
  5202  00171E                     l3175:
  5203  00171E  C019  F005         	movff	atoi@n,___wmul@multiplier
  5204  001722  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  5205  001726  0E00               	movlw	0
  5206  001728  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  5207  00172A  0E0A               	movlw	10
  5208  00172C  6E07               	movwf	___wmul@multiplicand^0,c
  5209  00172E  EC87  F014         	call	___wmul	;wreg free
  5210  001732  C00C  FFF6         	movff	atoi@s,tblptrl
  5211  001736  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5212  00173A                     	if	0	;tblptru may be non-zero
  5213  00173A                     	endif
  5214  00173A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5215  00173A  0E00               	movlw	low (__mediumconst shr (0+16))
  5216  00173C  6EF8               	movwf	tblptru,c
  5217  00173E                     	endif
  5218  00173E  0008               	tblrd		*
  5219  001740  50F5               	movf	tablat,w,c
  5220  001742  5E05               	subwf	?___wmul^0,f,c
  5221  001744  0E00               	movlw	0
  5222  001746  5A06               	subwfb	(?___wmul+1)^0,f,c
  5223  001748  0E30               	movlw	48
  5224  00174A  2405               	addwf	?___wmul^0,w,c
  5225  00174C  6E19               	movwf	atoi@n^0,c
  5226  00174E  0E00               	movlw	0
  5227  001750  2006               	addwfc	(?___wmul+1)^0,w,c
  5228  001752  6E1A               	movwf	(atoi@n+1)^0,c
  5229  001754  EF6F  F00B         	goto	l3171
  5230  001758                     l3179:
  5231  001758  0ED0               	movlw	208
  5232  00175A  6E0E               	movwf	??_atoi^0,c
  5233  00175C  0EFF               	movlw	255
  5234  00175E  6E0F               	movwf	(??_atoi+1)^0,c
  5235  001760  C00C  FFF6         	movff	atoi@s,tblptrl
  5236  001764  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5237  001768                     	if	0	;tblptru may be non-zero
  5238  001768                     	endif
  5239  001768                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5240  001768  0E00               	movlw	low (__mediumconst shr (0+16))
  5241  00176A  6EF8               	movwf	tblptru,c
  5242  00176C                     	endif
  5243  00176C  0008               	tblrd		*
  5244  00176E  50F5               	movf	tablat,w,c
  5245  001770  6E10               	movwf	(??_atoi+2)^0,c
  5246  001772  6A11               	clrf	(??_atoi+3)^0,c
  5247  001774  500E               	movf	??_atoi^0,w,c
  5248  001776  2610               	addwf	(??_atoi+2)^0,f,c
  5249  001778  500F               	movf	(??_atoi+1)^0,w,c
  5250  00177A  2211               	addwfc	(??_atoi+3)^0,f,c
  5251  00177C  5011               	movf	(??_atoi+3)^0,w,c
  5252  00177E  E10A               	bnz	u3790
  5253  001780  0E0A               	movlw	10
  5254  001782  5C10               	subwf	(??_atoi+2)^0,w,c
  5255  001784  A0D8               	btfss	status,0,c
  5256  001786  EFC7  F00B         	goto	u3791
  5257  00178A  EFCA  F00B         	goto	u3790
  5258  00178E                     u3791:
  5259  00178E  0E01               	movlw	1
  5260  001790  EFCB  F00B         	goto	u3800
  5261  001794                     u3790:
  5262  001794  0E00               	movlw	0
  5263  001796                     u3800:
  5264  001796  6E16               	movwf	_atoi$2245^0,c
  5265  001798  6A17               	clrf	(_atoi$2245+1)^0,c
  5266  00179A  5016               	movf	_atoi$2245^0,w,c
  5267  00179C  1017               	iorwf	(_atoi$2245+1)^0,w,c
  5268  00179E  A4D8               	btfss	status,2,c
  5269  0017A0  EFD4  F00B         	goto	u3811
  5270  0017A4  EFD6  F00B         	goto	u3810
  5271  0017A8                     u3811:
  5272  0017A8  EF8F  F00B         	goto	l3175
  5273  0017AC                     u3810:
  5274  0017AC  5012               	movf	atoi@neg^0,w,c
  5275  0017AE  1013               	iorwf	(atoi@neg+1)^0,w,c
  5276  0017B0  A4D8               	btfss	status,2,c
  5277  0017B2  EFDD  F00B         	goto	u3821
  5278  0017B6  EFDF  F00B         	goto	u3820
  5279  0017BA                     u3821:
  5280  0017BA  EFED  F00B         	goto	l1129
  5281  0017BE                     u3820:
  5282  0017BE  C019  F00E         	movff	atoi@n,??_atoi
  5283  0017C2  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  5284  0017C6  1E0E               	comf	??_atoi^0,f,c
  5285  0017C8  1E0F               	comf	(??_atoi+1)^0,f,c
  5286  0017CA  4A0E               	infsnz	??_atoi^0,f,c
  5287  0017CC  2A0F               	incf	(??_atoi+1)^0,f,c
  5288  0017CE  C00E  F00C         	movff	??_atoi,?_atoi
  5289  0017D2  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  5290  0017D6  EFF1  F00B         	goto	l1132
  5291  0017DA                     l1129:
  5292  0017DA  C019  F00C         	movff	atoi@n,?_atoi
  5293  0017DE  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  5294  0017E2                     l1132:
  5295  0017E2  0012               	return		;funcret
  5296  0017E4                     __end_of_atoi:
  5297                           	callstack 0
  5298                           
  5299 ;; *************** function _isspace *****************
  5300 ;; Defined at:
  5301 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  5302 ;; Parameters:    Size  Location     Type
  5303 ;;  c               2    4[COMRAM] int 
  5304 ;; Auto vars:     Size  Location     Type
  5305 ;;		None
  5306 ;; Return value:  Size  Location     Type
  5307 ;;                  2    4[COMRAM] int 
  5308 ;; Registers used:
  5309 ;;		wreg, status,2, status,0
  5310 ;; Tracked objects:
  5311 ;;		On entry : 0/0
  5312 ;;		On exit  : 0/0
  5313 ;;		Unchanged: 0/0
  5314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5315 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5316 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5317 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5318 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5319 ;;Total ram usage:        7 bytes
  5320 ;; Hardware stack levels used: 1
  5321 ;; Hardware stack levels required when called: 2
  5322 ;; This function calls:
  5323 ;;		Nothing
  5324 ;; This function is called by:
  5325 ;;		_atoi
  5326 ;; This function uses a non-reentrant model
  5327 ;;
  5328                           
  5329                           	psect	text29
  5330  00263C                     __ptext29:
  5331                           	callstack 0
  5332  00263C                     _isspace:
  5333                           	callstack 23
  5334  00263C  0E01               	movlw	1
  5335  00263E  6E0B               	movwf	_isspace$2261^0,c
  5336  002640  0E20               	movlw	32
  5337  002642  1805               	xorwf	isspace@c^0,w,c
  5338  002644  1006               	iorwf	(isspace@c+1)^0,w,c
  5339  002646  B4D8               	btfsc	status,2,c
  5340  002648  EF28  F013         	goto	u3591
  5341  00264C  EF2A  F013         	goto	u3590
  5342  002650                     u3591:
  5343  002650  EF43  F013         	goto	l3085
  5344  002654                     u3590:
  5345  002654  0EF7               	movlw	247
  5346  002656  6E07               	movwf	??_isspace^0,c
  5347  002658  0EFF               	movlw	255
  5348  00265A  6E08               	movwf	(??_isspace+1)^0,c
  5349  00265C  C005  F009         	movff	isspace@c,??_isspace+2
  5350  002660  C006  F00A         	movff	isspace@c+1,??_isspace+3
  5351  002664  5007               	movf	??_isspace^0,w,c
  5352  002666  2609               	addwf	(??_isspace+2)^0,f,c
  5353  002668  5008               	movf	(??_isspace+1)^0,w,c
  5354  00266A  220A               	addwfc	(??_isspace+3)^0,f,c
  5355  00266C  500A               	movf	(??_isspace+3)^0,w,c
  5356  00266E  E109               	bnz	u3600
  5357  002670  0E05               	movlw	5
  5358  002672  5C09               	subwf	(??_isspace+2)^0,w,c
  5359  002674  A0D8               	btfss	status,0,c
  5360  002676  EF3F  F013         	goto	u3601
  5361  00267A  EF41  F013         	goto	u3600
  5362  00267E                     u3601:
  5363  00267E  EF43  F013         	goto	l3085
  5364  002682                     u3600:
  5365  002682  0E00               	movlw	0
  5366  002684  6E0B               	movwf	_isspace$2261^0,c
  5367  002686                     l3085:
  5368  002686  C00B  F005         	movff	_isspace$2261,?_isspace
  5369  00268A  6A06               	clrf	(?_isspace+1)^0,c
  5370  00268C  0012               	return		;funcret
  5371  00268E                     __end_of_isspace:
  5372                           	callstack 0
  5373                           
  5374 ;; *************** function _isdigit *****************
  5375 ;; Defined at:
  5376 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  5377 ;; Parameters:    Size  Location     Type
  5378 ;;  c               2    4[COMRAM] int 
  5379 ;; Auto vars:     Size  Location     Type
  5380 ;;		None
  5381 ;; Return value:  Size  Location     Type
  5382 ;;                  2    4[COMRAM] int 
  5383 ;; Registers used:
  5384 ;;		wreg, status,2, status,0
  5385 ;; Tracked objects:
  5386 ;;		On entry : 0/0
  5387 ;;		On exit  : 0/0
  5388 ;;		Unchanged: 0/0
  5389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5390 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5392 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5393 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5394 ;;Total ram usage:        6 bytes
  5395 ;; Hardware stack levels used: 1
  5396 ;; Hardware stack levels required when called: 2
  5397 ;; This function calls:
  5398 ;;		Nothing
  5399 ;; This function is called by:
  5400 ;;		_vfpfcnvrt
  5401 ;;		_atoi
  5402 ;; This function uses a non-reentrant model
  5403 ;;
  5404                           
  5405                           	psect	text30
  5406  0027E8                     __ptext30:
  5407                           	callstack 0
  5408  0027E8                     _isdigit:
  5409                           	callstack 24
  5410  0027E8  0ED0               	movlw	208
  5411  0027EA  6E07               	movwf	??_isdigit^0,c
  5412  0027EC  0EFF               	movlw	255
  5413  0027EE  6E08               	movwf	(??_isdigit+1)^0,c
  5414  0027F0  C005  F009         	movff	isdigit@c,??_isdigit+2
  5415  0027F4  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  5416  0027F8  5007               	movf	??_isdigit^0,w,c
  5417  0027FA  2609               	addwf	(??_isdigit+2)^0,f,c
  5418  0027FC  5008               	movf	(??_isdigit+1)^0,w,c
  5419  0027FE  220A               	addwfc	(??_isdigit+3)^0,f,c
  5420  002800  500A               	movf	(??_isdigit+3)^0,w,c
  5421  002802  E10A               	bnz	u3570
  5422  002804  0E0A               	movlw	10
  5423  002806  5C09               	subwf	(??_isdigit+2)^0,w,c
  5424  002808  A0D8               	btfss	status,0,c
  5425  00280A  EF09  F014         	goto	u3571
  5426  00280E  EF0C  F014         	goto	u3570
  5427  002812                     u3571:
  5428  002812  0E01               	movlw	1
  5429  002814  EF0D  F014         	goto	u3580
  5430  002818                     u3570:
  5431  002818  0E00               	movlw	0
  5432  00281A                     u3580:
  5433  00281A  6E05               	movwf	?_isdigit^0,c
  5434  00281C  6A06               	clrf	(?_isdigit+1)^0,c
  5435  00281E  0012               	return		;funcret
  5436  002820                     __end_of_isdigit:
  5437                           	callstack 0
  5438                           
  5439 ;; *************** function ___wmul *****************
  5440 ;; Defined at:
  5441 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  5442 ;; Parameters:    Size  Location     Type
  5443 ;;  multiplier      2    4[COMRAM] unsigned int 
  5444 ;;  multiplicand    2    6[COMRAM] unsigned int 
  5445 ;; Auto vars:     Size  Location     Type
  5446 ;;  product         2    8[COMRAM] unsigned int 
  5447 ;; Return value:  Size  Location     Type
  5448 ;;                  2    4[COMRAM] unsigned int 
  5449 ;; Registers used:
  5450 ;;		wreg, status,2, status,0, prodl, prodh
  5451 ;; Tracked objects:
  5452 ;;		On entry : 0/0
  5453 ;;		On exit  : 0/0
  5454 ;;		Unchanged: 0/0
  5455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5456 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5457 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5459 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5460 ;;Total ram usage:        6 bytes
  5461 ;; Hardware stack levels used: 1
  5462 ;; Hardware stack levels required when called: 2
  5463 ;; This function calls:
  5464 ;;		Nothing
  5465 ;; This function is called by:
  5466 ;;		_atoi
  5467 ;; This function uses a non-reentrant model
  5468 ;;
  5469                           
  5470                           	psect	text31
  5471  00290E                     __ptext31:
  5472                           	callstack 0
  5473  00290E                     ___wmul:
  5474                           	callstack 23
  5475  00290E  5005               	movf	___wmul@multiplier^0,w,c
  5476  002910  0207               	mulwf	___wmul@multiplicand^0,c
  5477  002912  CFF3 F009          	movff	prodl,___wmul@product
  5478  002916  CFF4 F00A          	movff	prodh,___wmul@product+1
  5479  00291A  5005               	movf	___wmul@multiplier^0,w,c
  5480  00291C  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  5481  00291E  50F3               	movf	243,w,c
  5482  002920  260A               	addwf	(___wmul@product+1)^0,f,c
  5483  002922  5006               	movf	(___wmul@multiplier+1)^0,w,c
  5484  002924  0207               	mulwf	___wmul@multiplicand^0,c
  5485  002926  50F3               	movf	243,w,c
  5486  002928  260A               	addwf	(___wmul@product+1)^0,f,c
  5487  00292A  C009  F005         	movff	___wmul@product,?___wmul
  5488  00292E  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  5489  002932  0012               	return		;funcret
  5490  002934                     __end_of___wmul:
  5491                           	callstack 0
  5492                           
  5493 ;; *************** function _LCD_setline *****************
  5494 ;; Defined at:
  5495 ;;		line 109 in file "LCD.c"
  5496 ;; Parameters:    Size  Location     Type
  5497 ;;  line            1    wreg     unsigned char 
  5498 ;; Auto vars:     Size  Location     Type
  5499 ;;  line            1    7[COMRAM] unsigned char 
  5500 ;; Return value:  Size  Location     Type
  5501 ;;                  1    wreg      void 
  5502 ;; Registers used:
  5503 ;;		wreg, status,2, status,0, cstack
  5504 ;; Tracked objects:
  5505 ;;		On entry : 0/0
  5506 ;;		On exit  : 0/0
  5507 ;;		Unchanged: 0/0
  5508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5510 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5512 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5513 ;;Total ram usage:        1 bytes
  5514 ;; Hardware stack levels used: 1
  5515 ;; Hardware stack levels required when called: 5
  5516 ;; This function calls:
  5517 ;;		_LCD_sendbyte
  5518 ;; This function is called by:
  5519 ;;		_LCD_init
  5520 ;;		_time_incre
  5521 ;; This function uses a non-reentrant model
  5522 ;;
  5523                           
  5524                           	psect	text32
  5525  0026D8                     __ptext32:
  5526                           	callstack 0
  5527  0026D8                     _LCD_setline:
  5528                           	callstack 24
  5529                           
  5530                           ;incstack = 0
  5531                           ;LCD_setline@line stored from wreg
  5532  0026D8  6E08               	movwf	LCD_setline@line^0,c
  5533  0026DA                     
  5534                           ;LCD.c: 109: void LCD_setline (char line);LCD.c: 110: {;LCD.c: 112:     if (line==1) {LC
      +                          D_sendbyte(0x80,0);}
  5535  0026DA  0408               	decf	LCD_setline@line^0,w,c
  5536  0026DC  A4D8               	btfss	status,2,c
  5537  0026DE  EF73  F013         	goto	u2431
  5538  0026E2  EF75  F013         	goto	u2430
  5539  0026E6                     u2431:
  5540  0026E6  EF7A  F013         	goto	l2521
  5541  0026EA                     u2430:
  5542  0026EA  0E00               	movlw	0
  5543  0026EC  6E06               	movwf	LCD_sendbyte@type^0,c
  5544  0026EE  0E80               	movlw	128
  5545  0026F0  EC45  F014         	call	_LCD_sendbyte
  5546  0026F4                     l2521:
  5547                           
  5548                           ;LCD.c: 113:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  5549  0026F4  0EA0               	movlw	160
  5550  0026F6                     u4247:
  5551  0026F6  D000               	nop2	
  5552  0026F8  2EE8               	decfsz	wreg,f,c
  5553  0026FA  D7FD               	bra	u4247
  5554  0026FC                     
  5555                           ;LCD.c: 116:     if (line==2) {LCD_sendbyte(0xC0,0);}
  5556  0026FC  0E02               	movlw	2
  5557  0026FE  1808               	xorwf	LCD_setline@line^0,w,c
  5558  002700  A4D8               	btfss	status,2,c
  5559  002702  EF85  F013         	goto	u2441
  5560  002706  EF87  F013         	goto	u2440
  5561  00270A                     u2441:
  5562  00270A  EF8C  F013         	goto	l2527
  5563  00270E                     u2440:
  5564  00270E  0E00               	movlw	0
  5565  002710  6E06               	movwf	LCD_sendbyte@type^0,c
  5566  002712  0EC0               	movlw	192
  5567  002714  EC45  F014         	call	_LCD_sendbyte
  5568  002718                     l2527:
  5569                           
  5570                           ;LCD.c: 117:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  5571  002718  0EA0               	movlw	160
  5572  00271A                     u4257:
  5573  00271A  D000               	nop2	
  5574  00271C  2EE8               	decfsz	wreg,f,c
  5575  00271E  D7FD               	bra	u4257
  5576  002720  0012               	return		;funcret
  5577  002722                     __end_of_LCD_setline:
  5578                           	callstack 0
  5579                           
  5580 ;; *************** function _LCD_sendstring *****************
  5581 ;; Defined at:
  5582 ;;		line 123 in file "LCD.c"
  5583 ;; Parameters:    Size  Location     Type
  5584 ;;  string          2    7[COMRAM] PTR unsigned char 
  5585 ;;		 -> time_incre@buf2(40), time_incre@buf1(40), LCD_init@buf(40), 
  5586 ;; Auto vars:     Size  Location     Type
  5587 ;;		None
  5588 ;; Return value:  Size  Location     Type
  5589 ;;                  1    wreg      void 
  5590 ;; Registers used:
  5591 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5592 ;; Tracked objects:
  5593 ;;		On entry : 0/0
  5594 ;;		On exit  : 0/0
  5595 ;;		Unchanged: 0/0
  5596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5597 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5600 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5601 ;;Total ram usage:        2 bytes
  5602 ;; Hardware stack levels used: 1
  5603 ;; Hardware stack levels required when called: 5
  5604 ;; This function calls:
  5605 ;;		_LCD_sendbyte
  5606 ;; This function is called by:
  5607 ;;		_LCD_init
  5608 ;;		_time_incre
  5609 ;; This function uses a non-reentrant model
  5610 ;;
  5611                           
  5612                           	psect	text33
  5613  002856                     __ptext33:
  5614                           	callstack 0
  5615  002856                     _LCD_sendstring:
  5616                           	callstack 24
  5617  002856                     
  5618                           ;LCD.c: 123: void LCD_sendstring(char *string);LCD.c: 124: {;LCD.c: 126:     while (*str
      +                          ing != 0) {
  5619  002856  EF38  F014         	goto	l2547
  5620  00285A                     l2543:
  5621                           
  5622                           ;LCD.c: 127:         LCD_sendbyte(*string++,1);
  5623  00285A  0E01               	movlw	1
  5624  00285C  6E06               	movwf	LCD_sendbyte@type^0,c
  5625  00285E  C008  FFD9         	movff	LCD_sendstring@string,fsr2l
  5626  002862  C009  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  5627  002866  50DF               	movf	indf2,w,c
  5628  002868  EC45  F014         	call	_LCD_sendbyte
  5629  00286C  4A08               	infsnz	LCD_sendstring@string^0,f,c
  5630  00286E  2A09               	incf	(LCD_sendstring@string+1)^0,f,c
  5631  002870                     l2547:
  5632                           
  5633                           ;LCD.c: 126:     while (*string != 0) {
  5634  002870  C008  FFD9         	movff	LCD_sendstring@string,fsr2l
  5635  002874  C009  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  5636  002878  50DF               	movf	indf2,w,c
  5637  00287A  A4D8               	btfss	status,2,c
  5638  00287C  EF42  F014         	goto	u2451
  5639  002880  EF44  F014         	goto	u2450
  5640  002884                     u2451:
  5641  002884  EF2D  F014         	goto	l2543
  5642  002888                     u2450:
  5643  002888  0012               	return		;funcret
  5644  00288A                     __end_of_LCD_sendstring:
  5645                           	callstack 0
  5646                           
  5647 ;; *************** function _LCD_sendbyte *****************
  5648 ;; Defined at:
  5649 ;;		line 36 in file "LCD.c"
  5650 ;; Parameters:    Size  Location     Type
  5651 ;;  Byte            1    wreg     unsigned char 
  5652 ;;  type            1    5[COMRAM] unsigned char 
  5653 ;; Auto vars:     Size  Location     Type
  5654 ;;  Byte            1    6[COMRAM] unsigned char 
  5655 ;; Return value:  Size  Location     Type
  5656 ;;                  1    wreg      void 
  5657 ;; Registers used:
  5658 ;;		wreg, status,2, status,0, cstack
  5659 ;; Tracked objects:
  5660 ;;		On entry : 0/0
  5661 ;;		On exit  : 0/0
  5662 ;;		Unchanged: 0/0
  5663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5664 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5665 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5667 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5668 ;;Total ram usage:        2 bytes
  5669 ;; Hardware stack levels used: 1
  5670 ;; Hardware stack levels required when called: 4
  5671 ;; This function calls:
  5672 ;;		_LCD_sendnibble
  5673 ;; This function is called by:
  5674 ;;		_LCD_init
  5675 ;;		_LCD_setline
  5676 ;;		_LCD_sendstring
  5677 ;; This function uses a non-reentrant model
  5678 ;;
  5679                           
  5680                           	psect	text34
  5681  00288A                     __ptext34:
  5682                           	callstack 0
  5683  00288A                     _LCD_sendbyte:
  5684                           	callstack 24
  5685                           
  5686                           ;incstack = 0
  5687                           ;LCD_sendbyte@Byte stored from wreg
  5688  00288A  6E07               	movwf	LCD_sendbyte@Byte^0,c
  5689  00288C                     
  5690                           ;LCD.c: 36: void LCD_sendbyte(unsigned char Byte, char type);LCD.c: 37: {;LCD.c: 39:    
      +                           if (type) {LATCbits.LATC6 = 1;} else {LATCbits.LATC6 = 0;}
  5691  00288C  5006               	movf	LCD_sendbyte@type^0,w,c
  5692  00288E  B4D8               	btfsc	status,2,c
  5693  002890  EF4C  F014         	goto	u2341
  5694  002894  EF4E  F014         	goto	u2340
  5695  002898                     u2341:
  5696  002898  EF51  F014         	goto	l208
  5697  00289C                     u2340:
  5698  00289C  8C7B               	bsf	123,6,c	;volatile
  5699  00289E  EF52  F014         	goto	l2449
  5700  0028A2                     l208:
  5701  0028A2  9C7B               	bcf	123,6,c	;volatile
  5702  0028A4                     l2449:
  5703                           
  5704                           ;LCD.c: 42:     LCD_sendnibble(Byte>>4);
  5705  0028A4  3807               	swapf	LCD_sendbyte@Byte^0,w,c
  5706  0028A6  0B0F               	andlw	15
  5707  0028A8  EC64  F012         	call	_LCD_sendnibble
  5708                           
  5709                           ;LCD.c: 45:     LCD_sendnibble(Byte&0b00001111);
  5710  0028AC  5007               	movf	LCD_sendbyte@Byte^0,w,c
  5711  0028AE  0B0F               	andlw	15
  5712  0028B0  EC64  F012         	call	_LCD_sendnibble
  5713  0028B4                     
  5714                           ;LCD.c: 48:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  5715  0028B4  0EA0               	movlw	160
  5716  0028B6                     u4267:
  5717  0028B6  D000               	nop2	
  5718  0028B8  2EE8               	decfsz	wreg,f,c
  5719  0028BA  D7FD               	bra	u4267
  5720  0028BC  0012               	return		;funcret
  5721  0028BE                     __end_of_LCD_sendbyte:
  5722                           	callstack 0
  5723                           
  5724 ;; *************** function _LCD_sendnibble *****************
  5725 ;; Defined at:
  5726 ;;		line 20 in file "LCD.c"
  5727 ;; Parameters:    Size  Location     Type
  5728 ;;  number          1    wreg     unsigned char 
  5729 ;; Auto vars:     Size  Location     Type
  5730 ;;  number          1    4[COMRAM] unsigned char 
  5731 ;; Return value:  Size  Location     Type
  5732 ;;                  1    wreg      void 
  5733 ;; Registers used:
  5734 ;;		wreg, cstack
  5735 ;; Tracked objects:
  5736 ;;		On entry : 0/0
  5737 ;;		On exit  : 0/0
  5738 ;;		Unchanged: 0/0
  5739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5741 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5743 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5744 ;;Total ram usage:        1 bytes
  5745 ;; Hardware stack levels used: 1
  5746 ;; Hardware stack levels required when called: 3
  5747 ;; This function calls:
  5748 ;;		_LCD_E_TOG
  5749 ;; This function is called by:
  5750 ;;		_LCD_sendbyte
  5751 ;;		_LCD_init
  5752 ;; This function uses a non-reentrant model
  5753 ;;
  5754                           
  5755                           	psect	text35
  5756  0024C8                     __ptext35:
  5757                           	callstack 0
  5758  0024C8                     _LCD_sendnibble:
  5759                           	callstack 24
  5760                           
  5761                           ;incstack = 0
  5762                           ;LCD_sendnibble@number stored from wreg
  5763  0024C8  6E05               	movwf	LCD_sendnibble@number^0,c
  5764  0024CA                     
  5765                           ;LCD.c: 20: void LCD_sendnibble(unsigned char number);LCD.c: 21: {;LCD.c: 23:     if (nu
      +                          mber & 0b0001) {LATBbits.LATB3 = 1;} else {LATBbits.LATB3 = 0;}
  5766  0024CA  A005               	btfss	LCD_sendnibble@number^0,0,c
  5767  0024CC  EF6A  F012         	goto	u2191
  5768  0024D0  EF6C  F012         	goto	u2190
  5769  0024D4                     u2191:
  5770  0024D4  EF6F  F012         	goto	l197
  5771  0024D8                     u2190:
  5772  0024D8  867A               	bsf	122,3,c	;volatile
  5773  0024DA  EF70  F012         	goto	l2333
  5774  0024DE                     l197:
  5775  0024DE  967A               	bcf	122,3,c	;volatile
  5776  0024E0                     l2333:
  5777                           
  5778                           ;LCD.c: 24:     if (number & 0b0010) {LATBbits.LATB2 = 1;} else {LATBbits.LATB2 = 0;}
  5779  0024E0  A205               	btfss	LCD_sendnibble@number^0,1,c
  5780  0024E2  EF75  F012         	goto	u2201
  5781  0024E6  EF77  F012         	goto	u2200
  5782  0024EA                     u2201:
  5783  0024EA  EF7A  F012         	goto	l199
  5784  0024EE                     u2200:
  5785  0024EE  847A               	bsf	122,2,c	;volatile
  5786  0024F0  EF7B  F012         	goto	l2337
  5787  0024F4                     l199:
  5788  0024F4  947A               	bcf	122,2,c	;volatile
  5789  0024F6                     l2337:
  5790                           
  5791                           ;LCD.c: 25:     if (number & 0b0100) {LATEbits.LATE3 = 1;} else {LATEbits.LATE3 = 0;}
  5792  0024F6  A405               	btfss	LCD_sendnibble@number^0,2,c
  5793  0024F8  EF80  F012         	goto	u2211
  5794  0024FC  EF82  F012         	goto	u2210
  5795  002500                     u2211:
  5796  002500  EF85  F012         	goto	l201
  5797  002504                     u2210:
  5798  002504  867D               	bsf	125,3,c	;volatile
  5799  002506  EF86  F012         	goto	l2341
  5800  00250A                     l201:
  5801  00250A  967D               	bcf	125,3,c	;volatile
  5802  00250C                     l2341:
  5803                           
  5804                           ;LCD.c: 26:     if (number & 0b1000) {LATEbits.LATE1 = 1;} else {LATEbits.LATE1 = 0;}
  5805  00250C  A605               	btfss	LCD_sendnibble@number^0,3,c
  5806  00250E  EF8B  F012         	goto	u2221
  5807  002512  EF8D  F012         	goto	u2220
  5808  002516                     u2221:
  5809  002516  EF90  F012         	goto	l203
  5810  00251A                     u2220:
  5811  00251A  827D               	bsf	125,1,c	;volatile
  5812  00251C  EF91  F012         	goto	l2345
  5813  002520                     l203:
  5814  002520  927D               	bcf	125,1,c	;volatile
  5815  002522                     l2345:
  5816                           
  5817                           ;LCD.c: 28:     LCD_E_TOG();
  5818  002522  ECEE  F014         	call	_LCD_E_TOG	;wreg free
  5819  002526                     
  5820                           ;LCD.c: 29:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  5821  002526  0E1A               	movlw	26
  5822  002528                     u4277:
  5823  002528  2EE8               	decfsz	wreg,f,c
  5824  00252A  D7FE               	bra	u4277
  5825  00252C  D000               	nop2	
  5826  00252E  0012               	return		;funcret
  5827  002530                     __end_of_LCD_sendnibble:
  5828                           	callstack 0
  5829                           
  5830 ;; *************** function _LCD_E_TOG *****************
  5831 ;; Defined at:
  5832 ;;		line 10 in file "LCD.c"
  5833 ;; Parameters:    Size  Location     Type
  5834 ;;		None
  5835 ;; Auto vars:     Size  Location     Type
  5836 ;;		None
  5837 ;; Return value:  Size  Location     Type
  5838 ;;                  1    wreg      void 
  5839 ;; Registers used:
  5840 ;;		wreg
  5841 ;; Tracked objects:
  5842 ;;		On entry : 0/0
  5843 ;;		On exit  : 0/0
  5844 ;;		Unchanged: 0/0
  5845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5850 ;;Total ram usage:        0 bytes
  5851 ;; Hardware stack levels used: 1
  5852 ;; Hardware stack levels required when called: 2
  5853 ;; This function calls:
  5854 ;;		Nothing
  5855 ;; This function is called by:
  5856 ;;		_LCD_sendnibble
  5857 ;; This function uses a non-reentrant model
  5858 ;;
  5859                           
  5860                           	psect	text36
  5861  0029DC                     __ptext36:
  5862                           	callstack 0
  5863  0029DC                     _LCD_E_TOG:
  5864                           	callstack 24
  5865  0029DC                     
  5866                           ;LCD.c: 12:  LATCbits.LATC2 = 1;
  5867  0029DC  847B               	bsf	123,2,c	;volatile
  5868  0029DE                     
  5869                           ;LCD.c: 13:  _delay((unsigned long)((2)*(64000000/4000000.0)));
  5870  0029DE  0E0A               	movlw	10
  5871  0029E0                     u4287:
  5872  0029E0  2EE8               	decfsz	wreg,f,c
  5873  0029E2  D7FE               	bra	u4287
  5874  0029E4  D000               	nop2	
  5875  0029E6                     
  5876                           ;LCD.c: 14:  LATCbits.LATC2 = 0;
  5877  0029E6  947B               	bcf	123,2,c	;volatile
  5878  0029E8  0012               	return		;funcret
  5879  0029EA                     __end_of_LCD_E_TOG:
  5880                           	callstack 0
  5881                           
  5882 ;; *************** function _Interrupts_init *****************
  5883 ;; Defined at:
  5884 ;;		line 12 in file "interrupts.c"
  5885 ;; Parameters:    Size  Location     Type
  5886 ;;  current        11    4[COMRAM] struct .
  5887 ;; Auto vars:     Size  Location     Type
  5888 ;;		None
  5889 ;; Return value:  Size  Location     Type
  5890 ;;                  1    wreg      void 
  5891 ;; Registers used:
  5892 ;;		wreg, status,2, status,0
  5893 ;; Tracked objects:
  5894 ;;		On entry : 0/0
  5895 ;;		On exit  : 0/0
  5896 ;;		Unchanged: 0/0
  5897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5898 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5901 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5902 ;;Total ram usage:       11 bytes
  5903 ;; Hardware stack levels used: 1
  5904 ;; Hardware stack levels required when called: 2
  5905 ;; This function calls:
  5906 ;;		Nothing
  5907 ;; This function is called by:
  5908 ;;		_main
  5909 ;; This function uses a non-reentrant model
  5910 ;;
  5911                           
  5912                           	psect	text37
  5913  002766                     __ptext37:
  5914                           	callstack 0
  5915  002766                     _Interrupts_init:
  5916                           	callstack 28
  5917  002766                     
  5918                           ;interrupts.c: 13:     if (current.hour<1 || current.hour>=5) {
  5919  002766  500A               	movf	(Interrupts_init@current+5)^0,w,c
  5920  002768  0A80               	xorlw	128
  5921  00276A  0F7F               	addlw	-129
  5922  00276C  A0D8               	btfss	status,0,c
  5923  00276E  EFBB  F013         	goto	u2801
  5924  002772  EFBD  F013         	goto	u2800
  5925  002776                     u2801:
  5926  002776  EFC7  F013         	goto	l138
  5927  00277A                     u2800:
  5928  00277A  500A               	movf	(Interrupts_init@current+5)^0,w,c
  5929  00277C  0A80               	xorlw	128
  5930  00277E  0F7B               	addlw	-133
  5931  002780  A0D8               	btfss	status,0,c
  5932  002782  EFC5  F013         	goto	u2811
  5933  002786  EFC7  F013         	goto	u2810
  5934  00278A                     u2811:
  5935  00278A  EFCB  F013         	goto	l136
  5936  00278E                     u2810:
  5937  00278E                     l138:
  5938                           
  5939                           ;interrupts.c: 14:         PIE2bits.C1IE = 1;
  5940  00278E  010E               	movlb	14	; () banked
  5941  002790  812B               	bsf	43,0,b	;volatile
  5942                           
  5943                           ;interrupts.c: 15:     } else {PIE2bits.C1IE = 0;}
  5944  002792  EFCD  F013         	goto	l139
  5945  002796                     l136:
  5946  002796  010E               	movlb	14	; () banked
  5947  002798  912B               	bcf	43,0,b	;volatile
  5948  00279A                     l139:
  5949                           
  5950                           ; BSR set to: 14
  5951                           ;interrupts.c: 16:     PIE0bits.TMR0IE = 1;
  5952  00279A  8B29               	bsf	41,5,b	;volatile
  5953                           
  5954                           ;interrupts.c: 18:     IPR2bits.C1IP = 1;
  5955  00279C  8121               	bsf	33,0,b	;volatile
  5956                           
  5957                           ;interrupts.c: 19:     IPR0bits.TMR0IP = 0;
  5958  00279E  9B1F               	bcf	31,5,b	;volatile
  5959                           
  5960                           ;interrupts.c: 21:     INTCONbits.IPEN = 1;
  5961  0027A0  8AF2               	bsf	242,5,c	;volatile
  5962                           
  5963                           ;interrupts.c: 22:     INTCONbits.PEIE = 1;
  5964  0027A2  8CF2               	bsf	242,6,c	;volatile
  5965                           
  5966                           ;interrupts.c: 23:     INTCONbits.GIE = 1;
  5967  0027A4  8EF2               	bsf	242,7,c	;volatile
  5968  0027A6                     
  5969                           ; BSR set to: 14
  5970  0027A6  0012               	return		;funcret
  5971  0027A8                     __end_of_Interrupts_init:
  5972                           	callstack 0
  5973                           
  5974 ;; *************** function _Comp1_init *****************
  5975 ;; Defined at:
  5976 ;;		line 24 in file "comparator.c"
  5977 ;; Parameters:    Size  Location     Type
  5978 ;;		None
  5979 ;; Auto vars:     Size  Location     Type
  5980 ;;		None
  5981 ;; Return value:  Size  Location     Type
  5982 ;;                  1    wreg      void 
  5983 ;; Registers used:
  5984 ;;		wreg, status,2, cstack
  5985 ;; Tracked objects:
  5986 ;;		On entry : 0/0
  5987 ;;		On exit  : 0/0
  5988 ;;		Unchanged: 0/0
  5989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5994 ;;Total ram usage:        0 bytes
  5995 ;; Hardware stack levels used: 1
  5996 ;; Hardware stack levels required when called: 3
  5997 ;; This function calls:
  5998 ;;		_DAC_init
  5999 ;; This function is called by:
  6000 ;;		_main
  6001 ;; This function uses a non-reentrant model
  6002 ;;
  6003                           
  6004                           	psect	text38
  6005  002934                     __ptext38:
  6006                           	callstack 0
  6007  002934                     _Comp1_init:
  6008                           	callstack 27
  6009  002934                     
  6010                           ;comparator.c: 25:     TRISFbits.TRISF7=1;
  6011  002934  8E86               	bsf	134,7,c	;volatile
  6012  002936                     
  6013                           ;comparator.c: 26:     CM1NCHbits.NCH=0b011;
  6014  002936  010E               	movlb	14	; () banked
  6015  002938  51D2               	movf	210,w,b	;volatile
  6016  00293A  0BF8               	andlw	-8
  6017  00293C  0903               	iorlw	3
  6018  00293E  6FD2               	movwf	210,b	;volatile
  6019                           
  6020                           ;comparator.c: 27:     CM1PCHbits.PCH=0b101;
  6021  002940  51D3               	movf	211,w,b	;volatile
  6022  002942  0BF8               	andlw	-8
  6023  002944  0905               	iorlw	5
  6024  002946  6FD3               	movwf	211,b	;volatile
  6025  002948                     
  6026                           ; BSR set to: 14
  6027                           ;comparator.c: 28:     CM1CON0bits.HYS=1;
  6028  002948  83D0               	bsf	208,1,b	;volatile
  6029  00294A                     
  6030                           ; BSR set to: 14
  6031                           ;comparator.c: 29:     CM1CON0bits.POL=1;
  6032  00294A  89D0               	bsf	208,4,b	;volatile
  6033  00294C                     
  6034                           ; BSR set to: 14
  6035                           ;comparator.c: 30:     CM1CON1bits.INTP=1;
  6036  00294C  83D1               	bsf	209,1,b	;volatile
  6037  00294E                     
  6038                           ; BSR set to: 14
  6039                           ;comparator.c: 31:     CM1CON1bits.INTN=1;
  6040  00294E  81D1               	bsf	209,0,b	;volatile
  6041  002950                     
  6042                           ; BSR set to: 14
  6043                           ;comparator.c: 32:     DAC_init();
  6044  002950  ECE4  F014         	call	_DAC_init	;wreg free
  6045  002954                     
  6046                           ;comparator.c: 33:     CM1CON0bits.EN=1;
  6047  002954  010E               	movlb	14	; () banked
  6048  002956  8FD0               	bsf	208,7,b	;volatile
  6049  002958                     
  6050                           ; BSR set to: 14
  6051  002958  0012               	return		;funcret
  6052  00295A                     __end_of_Comp1_init:
  6053                           	callstack 0
  6054                           
  6055 ;; *************** function _DAC_init *****************
  6056 ;; Defined at:
  6057 ;;		line 8 in file "comparator.c"
  6058 ;; Parameters:    Size  Location     Type
  6059 ;;		None
  6060 ;; Auto vars:     Size  Location     Type
  6061 ;;		None
  6062 ;; Return value:  Size  Location     Type
  6063 ;;                  1    wreg      void 
  6064 ;; Registers used:
  6065 ;;		wreg, status,2
  6066 ;; Tracked objects:
  6067 ;;		On entry : 0/0
  6068 ;;		On exit  : 0/0
  6069 ;;		Unchanged: 0/0
  6070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6075 ;;Total ram usage:        0 bytes
  6076 ;; Hardware stack levels used: 1
  6077 ;; Hardware stack levels required when called: 2
  6078 ;; This function calls:
  6079 ;;		Nothing
  6080 ;; This function is called by:
  6081 ;;		_Comp1_init
  6082 ;; This function uses a non-reentrant model
  6083 ;;
  6084                           
  6085                           	psect	text39
  6086  0029C8                     __ptext39:
  6087                           	callstack 0
  6088  0029C8                     _DAC_init:
  6089                           	callstack 27
  6090  0029C8                     
  6091                           ;comparator.c: 9:     DAC1CON0bits.PSS=0b00;
  6092  0029C8  0EF3               	movlw	-13
  6093  0029CA  010E               	movlb	14	; () banked
  6094  0029CC  17C6               	andwf	198,f,b	;volatile
  6095  0029CE                     
  6096                           ; BSR set to: 14
  6097                           ;comparator.c: 10:     DAC1CON0bits.NSS=0b0;
  6098  0029CE  91C6               	bcf	198,0,b	;volatile
  6099                           
  6100                           ;comparator.c: 15:     DAC1CON1bits.DAC1R=0b11011;
  6101  0029D0  51C7               	movf	199,w,b	;volatile
  6102  0029D2  0BE0               	andlw	-32
  6103  0029D4  091B               	iorlw	27
  6104  0029D6  6FC7               	movwf	199,b	;volatile
  6105  0029D8                     
  6106                           ; BSR set to: 14
  6107                           ;comparator.c: 16:     DAC1CON0bits.DAC1EN=1;
  6108  0029D8  8FC6               	bsf	198,7,b	;volatile
  6109  0029DA                     
  6110                           ; BSR set to: 14
  6111  0029DA  0012               	return		;funcret
  6112  0029DC                     __end_of_DAC_init:
  6113                           	callstack 0
  6114                           
  6115 ;; *************** function _ADC_init *****************
  6116 ;; Defined at:
  6117 ;;		line 8 in file "ADC.c"
  6118 ;; Parameters:    Size  Location     Type
  6119 ;;		None
  6120 ;; Auto vars:     Size  Location     Type
  6121 ;;		None
  6122 ;; Return value:  Size  Location     Type
  6123 ;;                  1    wreg      void 
  6124 ;; Registers used:
  6125 ;;		wreg, status,2
  6126 ;; Tracked objects:
  6127 ;;		On entry : 0/0
  6128 ;;		On exit  : 0/0
  6129 ;;		Unchanged: 0/0
  6130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6135 ;;Total ram usage:        0 bytes
  6136 ;; Hardware stack levels used: 1
  6137 ;; Hardware stack levels required when called: 2
  6138 ;; This function calls:
  6139 ;;		Nothing
  6140 ;; This function is called by:
  6141 ;;		_main
  6142 ;; This function uses a non-reentrant model
  6143 ;;
  6144                           
  6145                           	psect	text40
  6146  002996                     __ptext40:
  6147                           	callstack 0
  6148  002996                     _ADC_init:
  6149                           	callstack 28
  6150  002996                     
  6151                           ;ADC.c: 10:     TRISFbits.TRISF7=1;
  6152  002996  8E86               	bsf	134,7,c	;volatile
  6153                           
  6154                           ;ADC.c: 11:     ANSELFbits.ANSELF7=1;
  6155  002998  010E               	movlb	14	; () banked
  6156  00299A  8FB4               	bsf	180,7,b	;volatile
  6157                           
  6158                           ;ADC.c: 14:     ADREFbits.ADNREF = 0;
  6159  00299C  010F               	movlb	15	; () banked
  6160  00299E  9958               	bcf	88,4,b	;volatile
  6161  0029A0                     
  6162                           ; BSR set to: 15
  6163                           ;ADC.c: 15:     ADREFbits.ADPREF = 0b00;
  6164  0029A0  0EFC               	movlw	-4
  6165  0029A2  1758               	andwf	88,f,b	;volatile
  6166                           
  6167                           ;ADC.c: 16:     ADPCH=0b101111;
  6168  0029A4  0E2F               	movlw	47
  6169  0029A6  6F5F               	movwf	95,b	;volatile
  6170  0029A8                     
  6171                           ; BSR set to: 15
  6172                           ;ADC.c: 17:     ADCON0bits.ADFM = 0;
  6173  0029A8  9460               	bcf	96,2,c	;volatile
  6174  0029AA                     
  6175                           ; BSR set to: 15
  6176                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
  6177  0029AA  8860               	bsf	96,4,c	;volatile
  6178  0029AC                     
  6179                           ; BSR set to: 15
  6180                           ;ADC.c: 19:     ADCON0bits.ADON = 1;
  6181  0029AC  8E60               	bsf	96,7,c	;volatile
  6182  0029AE                     
  6183                           ; BSR set to: 15
  6184  0029AE  0012               	return		;funcret
  6185  0029B0                     __end_of_ADC_init:
  6186                           	callstack 0
  6187                           
  6188 ;; *************** function _LowISR *****************
  6189 ;; Defined at:
  6190 ;;		line 50 in file "interrupts.c"
  6191 ;; Parameters:    Size  Location     Type
  6192 ;;		None
  6193 ;; Auto vars:     Size  Location     Type
  6194 ;;		None
  6195 ;; Return value:  Size  Location     Type
  6196 ;;                  1    wreg      void 
  6197 ;; Registers used:
  6198 ;;		wreg, status,2
  6199 ;; Tracked objects:
  6200 ;;		On entry : 0/0
  6201 ;;		On exit  : 0/0
  6202 ;;		Unchanged: 0/0
  6203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6206 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6207 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6208 ;;Total ram usage:        3 bytes
  6209 ;; Hardware stack levels used: 1
  6210 ;; Hardware stack levels required when called: 1
  6211 ;; This function calls:
  6212 ;;		Nothing
  6213 ;; This function is called by:
  6214 ;;		Interrupt level 1
  6215 ;; This function uses a non-reentrant model
  6216 ;;
  6217                           
  6218                           	psect	intcodelo
  6219  000018                     __pintcodelo:
  6220                           	callstack 0
  6221  000018                     _LowISR:
  6222                           	callstack 20
  6223                           
  6224                           ; BSR set to: 15
  6225                           ;incstack = 0
  6226  000018  8056               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  6227  00001A  CFD8 F002          	movff	status,??_LowISR
  6228  00001E  CFE8 F003          	movff	wreg,??_LowISR+1
  6229  000022  CFE0 F004          	movff	bsr,??_LowISR+2
  6230  000026                     
  6231                           ;interrupts.c: 51:     if (PIR0bits.TMR0IF) {
  6232  000026  010E               	movlb	14	; () banked
  6233  000028  AB33               	btfss	51,5,b	;volatile
  6234  00002A  EF19  F000         	goto	i1u332_21
  6235  00002E  EF1B  F000         	goto	i1u332_20
  6236  000032                     i1u332_21:
  6237  000032  EF24  F000         	goto	i1l160
  6238  000036                     i1u332_20:
  6239  000036                     
  6240                           ; BSR set to: 14
  6241                           ;interrupts.c: 52:         TMR0H = 0b11101110;
  6242  000036  0EEE               	movlw	238
  6243  000038  6ED4               	movwf	212,c	;volatile
  6244                           
  6245                           ;interrupts.c: 53:         TMR0L = 0b10100011;
  6246  00003A  0EA3               	movlw	163
  6247  00003C  6ED3               	movwf	211,c	;volatile
  6248                           
  6249                           ;interrupts.c: 54:         time_flag = 1;
  6250  00003E  0E01               	movlw	1
  6251  000040  0100               	movlb	0	; () banked
  6252  000042  6FF0               	movwf	_time_flag& (0+255),b	;volatile
  6253  000044                     
  6254                           ; BSR set to: 0
  6255                           ;interrupts.c: 55:         PIR0bits.TMR0IF = 0;
  6256  000044  010E               	movlb	14	; () banked
  6257  000046  9B33               	bcf	51,5,b	;volatile
  6258  000048                     i1l160:
  6259                           
  6260                           ; BSR set to: 14
  6261  000048  C004  FFE0         	movff	??_LowISR+2,bsr
  6262  00004C  C003  FFE8         	movff	??_LowISR+1,wreg
  6263  000050  C002  FFD8         	movff	??_LowISR,status
  6264  000054  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  6265  000056  0010               	retfie	
  6266  000058                     __end_of_LowISR:
  6267                           	callstack 0
  6268                           
  6269 ;; *************** function _HighISR *****************
  6270 ;; Defined at:
  6271 ;;		line 34 in file "interrupts.c"
  6272 ;; Parameters:    Size  Location     Type
  6273 ;;		None
  6274 ;; Auto vars:     Size  Location     Type
  6275 ;;		None
  6276 ;; Return value:  Size  Location     Type
  6277 ;;                  1    wreg      void 
  6278 ;; Registers used:
  6279 ;;		wreg, status,2, status,0
  6280 ;; Tracked objects:
  6281 ;;		On entry : 0/0
  6282 ;;		On exit  : 0/0
  6283 ;;		Unchanged: 0/0
  6284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6287 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6288 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6289 ;;Total ram usage:        1 bytes
  6290 ;; Hardware stack levels used: 1
  6291 ;; This function calls:
  6292 ;;		Nothing
  6293 ;; This function is called by:
  6294 ;;		Interrupt level 2
  6295 ;; This function uses a non-reentrant model
  6296 ;;
  6297                           
  6298                           	psect	intcode
  6299  000008                     __pintcode:
  6300                           	callstack 0
  6301  000008                     _HighISR:
  6302                           	callstack 20
  6303                           
  6304                           ; BSR set to: 14
  6305                           ;incstack = 0
  6306  000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6307  00000A  EFCB  F012         	goto	int_func
  6308                           
  6309                           	psect	intcode_body
  6310  002596                     __pintcode_body:
  6311                           	callstack 20
  6312  002596                     int_func:
  6313                           	callstack 20
  6314  002596                     
  6315                           ;interrupts.c: 35:     if (PIR2bits.C1IF) {
  6316  002596  010E               	movlb	14	; () banked
  6317  002598  A135               	btfss	53,0,b	;volatile
  6318  00259A  EFD1  F012         	goto	i2u164_41
  6319  00259E  EFD3  F012         	goto	i2u164_40
  6320  0025A2                     i2u164_41:
  6321  0025A2  EFF3  F012         	goto	i2l152
  6322  0025A6                     i2u164_40:
  6323  0025A6                     
  6324                           ; BSR set to: 14
  6325                           ;interrupts.c: 36:         LATDbits.LATD7 = !LATDbits.LATD7;
  6326  0025A6  AE7C               	btfss	124,7,c	;volatile
  6327  0025A8  EFD8  F012         	goto	i2u165_41
  6328  0025AC  EFDC  F012         	goto	i2u165_40
  6329  0025B0                     i2u165_41:
  6330  0025B0  6A01               	clrf	??_HighISR^0,c
  6331  0025B2  2A01               	incf	??_HighISR^0,f,c
  6332  0025B4  EFDD  F012         	goto	i2u166_48
  6333  0025B8                     i2u165_40:
  6334  0025B8  6A01               	clrf	??_HighISR^0,c
  6335  0025BA                     i2u166_48:
  6336  0025BA  3201               	rrcf	??_HighISR^0,f,c
  6337  0025BC  3201               	rrcf	??_HighISR^0,f,c
  6338  0025BE  507C               	movf	124,w,c	;volatile
  6339  0025C0  1801               	xorwf	??_HighISR^0,w,c
  6340  0025C2  0B7F               	andlw	-129
  6341  0025C4  1801               	xorwf	??_HighISR^0,w,c
  6342  0025C6  6E7C               	movwf	124,c	;volatile
  6343  0025C8                     
  6344                           ;interrupts.c: 37:         if (LATDbits.LATD7==0) {sunrise_flag=1;}
  6345  0025C8  BE7C               	btfsc	124,7,c	;volatile
  6346  0025CA  EFE9  F012         	goto	i2u167_41
  6347  0025CE  EFEB  F012         	goto	i2u167_40
  6348  0025D2                     i2u167_41:
  6349  0025D2  EFEF  F012         	goto	i2l2009
  6350  0025D6                     i2u167_40:
  6351  0025D6  0E01               	movlw	1
  6352  0025D8  6E55               	movwf	_sunrise_flag^0,c	;volatile
  6353  0025DA  EFF1  F012         	goto	i2l2011
  6354  0025DE                     i2l2009:
  6355  0025DE  0E01               	movlw	1
  6356  0025E0  6E54               	movwf	_sunset_flag^0,c	;volatile
  6357  0025E2                     i2l2011:
  6358                           
  6359                           ;interrupts.c: 39:         PIR2bits.C1IF = 0;
  6360  0025E2  010E               	movlb	14	; () banked
  6361  0025E4  9135               	bcf	53,0,b	;volatile
  6362  0025E6                     i2l152:
  6363                           
  6364                           ; BSR set to: 14
  6365  0025E6  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6366  0025E8  0011               	retfie		f
  6367  0025EA                     __end_of_HighISR:
  6368                           	callstack 0
  6369                           
  6370                           	psect	rparam
  6371  0000                     
  6372                           	psect	temp
  6373  000056                     btemp:
  6374                           	callstack 0
  6375  000056                     	ds	1
  6376  0000                     int$flags	set	btemp
  6377  0000                     wtemp8	set	btemp+1
  6378  0000                     ttemp5	set	btemp+1
  6379  0000                     ttemp6	set	btemp+4
  6380  0000                     ttemp7	set	btemp+8
  6381                           
  6382                           	psect	idloc
  6383                           
  6384                           ;Config register IDLOC0 @ 0x200000
  6385                           ;	unspecified, using default values
  6386  200000                     	org	2097152
  6387  200000  0FFF               	dw	4095
  6388                           
  6389                           ;Config register IDLOC1 @ 0x200002
  6390                           ;	unspecified, using default values
  6391  200002                     	org	2097154
  6392  200002  0FFF               	dw	4095
  6393                           
  6394                           ;Config register IDLOC2 @ 0x200004
  6395                           ;	unspecified, using default values
  6396  200004                     	org	2097156
  6397  200004  0FFF               	dw	4095
  6398                           
  6399                           ;Config register IDLOC3 @ 0x200006
  6400                           ;	unspecified, using default values
  6401  200006                     	org	2097158
  6402  200006  0FFF               	dw	4095
  6403                           
  6404                           ;Config register IDLOC4 @ 0x200008
  6405                           ;	unspecified, using default values
  6406  200008                     	org	2097160
  6407  200008  0FFF               	dw	4095
  6408                           
  6409                           ;Config register IDLOC5 @ 0x20000A
  6410                           ;	unspecified, using default values
  6411  20000A                     	org	2097162
  6412  20000A  0FFF               	dw	4095
  6413                           
  6414                           ;Config register IDLOC6 @ 0x20000C
  6415                           ;	unspecified, using default values
  6416  20000C                     	org	2097164
  6417  20000C  0FFF               	dw	4095
  6418                           
  6419                           ;Config register IDLOC7 @ 0x20000E
  6420                           ;	unspecified, using default values
  6421  20000E                     	org	2097166
  6422  20000E  0FFF               	dw	4095
  6423                           
  6424                           	psect	config
  6425                           
  6426                           ;Config register CONFIG1L @ 0x300000
  6427                           ;	External Oscillator mode Selection bits
  6428                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  6429                           ;	Power-up default value for COSC bits
  6430                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  6431  300000                     	org	3145728
  6432  300000  AA                 	db	170
  6433                           
  6434                           ;Config register CONFIG1H @ 0x300001
  6435                           ;	unspecified, using default values
  6436                           ;	Clock Out Enable bit
  6437                           ;	CLKOUTEN = 0x1, unprogrammed default
  6438                           ;	Clock Switch Enable bit
  6439                           ;	CSWEN = 0x1, unprogrammed default
  6440                           ;	Fail-Safe Clock Monitor Enable bit
  6441                           ;	FCMEN = 0x1, unprogrammed default
  6442  300001                     	org	3145729
  6443  300001  FF                 	db	255
  6444                           
  6445                           ;Config register CONFIG2L @ 0x300002
  6446                           ;	unspecified, using default values
  6447                           ;	Master Clear Enable bit
  6448                           ;	MCLRE = 0x1, unprogrammed default
  6449                           ;	Power-up Timer Enable bit
  6450                           ;	PWRTE = 0x1, unprogrammed default
  6451                           ;	Low-power BOR enable bit
  6452                           ;	LPBOREN = 0x1, unprogrammed default
  6453                           ;	Brown-out Reset Enable bits
  6454                           ;	BOREN = 0x3, unprogrammed default
  6455  300002                     	org	3145730
  6456  300002  FF                 	db	255
  6457                           
  6458                           ;Config register CONFIG2H @ 0x300003
  6459                           ;	unspecified, using default values
  6460                           ;	Brown Out Reset Voltage selection bits
  6461                           ;	BORV = 0x3, unprogrammed default
  6462                           ;	ZCD Disable bit
  6463                           ;	ZCD = 0x1, unprogrammed default
  6464                           ;	PPSLOCK bit One-Way Set Enable bit
  6465                           ;	PPS1WAY = 0x1, unprogrammed default
  6466                           ;	Stack Full/Underflow Reset Enable bit
  6467                           ;	STVREN = 0x1, unprogrammed default
  6468                           ;	Debugger Enable bit
  6469                           ;	DEBUG = 0x1, unprogrammed default
  6470                           ;	Extended Instruction Set Enable bit
  6471                           ;	XINST = 0x1, unprogrammed default
  6472  300003                     	org	3145731
  6473  300003  FF                 	db	255
  6474                           
  6475                           ;Config register CONFIG3L @ 0x300004
  6476                           ;	WDT Period Select bits
  6477                           ;	WDTCPS = 0x1F, unprogrammed default
  6478                           ;	WDT operating mode
  6479                           ;	WDTE = OFF, WDT Disabled
  6480  300004                     	org	3145732
  6481  300004  9F                 	db	159
  6482                           
  6483                           ;Config register CONFIG3H @ 0x300005
  6484                           ;	unspecified, using default values
  6485                           ;	WDT Window Select bits
  6486                           ;	WDTCWS = 0x7, unprogrammed default
  6487                           ;	WDT input clock selector
  6488                           ;	WDTCCS = 0x7, unprogrammed default
  6489  300005                     	org	3145733
  6490  300005  FF                 	db	255
  6491                           
  6492                           ;Config register CONFIG4L @ 0x300006
  6493                           ;	unspecified, using default values
  6494                           ;	Write Protection Block 0
  6495                           ;	WRT0 = 0x1, unprogrammed default
  6496                           ;	Write Protection Block 1
  6497                           ;	WRT1 = 0x1, unprogrammed default
  6498                           ;	Write Protection Block 2
  6499                           ;	WRT2 = 0x1, unprogrammed default
  6500                           ;	Write Protection Block 3
  6501                           ;	WRT3 = 0x1, unprogrammed default
  6502                           ;	Write Protection Block 3
  6503                           ;	WRT4 = 0x1, unprogrammed default
  6504                           ;	Write Protection Block 3
  6505                           ;	WRT5 = 0x1, unprogrammed default
  6506                           ;	Write Protection Block 3
  6507                           ;	WRT6 = 0x1, unprogrammed default
  6508                           ;	Write Protection Block 3
  6509                           ;	WRT7 = 0x1, unprogrammed default
  6510  300006                     	org	3145734
  6511  300006  FF                 	db	255
  6512                           
  6513                           ;Config register CONFIG4H @ 0x300007
  6514                           ;	unspecified, using default values
  6515                           ;	Configuration Register Write Protection bit
  6516                           ;	WRTC = 0x1, unprogrammed default
  6517                           ;	Boot Block Write Protection bit
  6518                           ;	WRTB = 0x1, unprogrammed default
  6519                           ;	Data EEPROM Write Protection bit
  6520                           ;	WRTD = 0x1, unprogrammed default
  6521                           ;	Scanner Enable bit
  6522                           ;	SCANE = 0x1, unprogrammed default
  6523                           ;	Low Voltage Programming Enable bit
  6524                           ;	LVP = 0x1, unprogrammed default
  6525  300007                     	org	3145735
  6526  300007  FF                 	db	255
  6527                           
  6528                           ;Config register CONFIG5L @ 0x300008
  6529                           ;	unspecified, using default values
  6530                           ;	UserNVM Program Memory Code Protection bit
  6531                           ;	CP = 0x1, unprogrammed default
  6532                           ;	DataNVM Memory Code Protection bit
  6533                           ;	CPD = 0x1, unprogrammed default
  6534  300008                     	org	3145736
  6535  300008  FF                 	db	255
  6536                           
  6537                           ;Config register CONFIG5H @ 0x300009
  6538                           ;	unspecified, using default values
  6539  300009                     	org	3145737
  6540  300009  FF                 	db	255
  6541                           
  6542                           ;Config register CONFIG6L @ 0x30000A
  6543                           ;	unspecified, using default values
  6544                           ;	Table Read Protection Block 0
  6545                           ;	EBTR0 = 0x1, unprogrammed default
  6546                           ;	Table Read Protection Block 1
  6547                           ;	EBTR1 = 0x1, unprogrammed default
  6548                           ;	Table Read Protection Block 2
  6549                           ;	EBTR2 = 0x1, unprogrammed default
  6550                           ;	Table Read Protection Block 3
  6551                           ;	EBTR3 = 0x1, unprogrammed default
  6552                           ;	Table Read Protection Block 4
  6553                           ;	EBTR4 = 0x1, unprogrammed default
  6554                           ;	Table Read Protection Block 5
  6555                           ;	EBTR5 = 0x1, unprogrammed default
  6556                           ;	Table Read Protection Block 6
  6557                           ;	EBTR6 = 0x1, unprogrammed default
  6558                           ;	Table Read Protection Block 7
  6559                           ;	EBTR7 = 0x1, unprogrammed default
  6560  30000A                     	org	3145738
  6561  30000A  FF                 	db	255
  6562                           
  6563                           ;Config register CONFIG6H @ 0x30000B
  6564                           ;	unspecified, using default values
  6565                           ;	Boot Block Table Read Protection bit
  6566                           ;	EBTRB = 0x1, unprogrammed default
  6567  30000B                     	org	3145739
  6568  30000B  FF                 	db	255
  6569                           tosu	equ	0xFFF
  6570                           tosh	equ	0xFFE
  6571                           tosl	equ	0xFFD
  6572                           stkptr	equ	0xFFC
  6573                           pclatu	equ	0xFFB
  6574                           pclath	equ	0xFFA
  6575                           pcl	equ	0xFF9
  6576                           tblptru	equ	0xFF8
  6577                           tblptrh	equ	0xFF7
  6578                           tblptrl	equ	0xFF6
  6579                           tablat	equ	0xFF5
  6580                           prodh	equ	0xFF4
  6581                           prodl	equ	0xFF3
  6582                           indf0	equ	0xFEF
  6583                           postinc0	equ	0xFEE
  6584                           postdec0	equ	0xFED
  6585                           preinc0	equ	0xFEC
  6586                           plusw0	equ	0xFEB
  6587                           fsr0h	equ	0xFEA
  6588                           fsr0l	equ	0xFE9
  6589                           wreg	equ	0xFE8
  6590                           indf1	equ	0xFE7
  6591                           postinc1	equ	0xFE6
  6592                           postdec1	equ	0xFE5
  6593                           preinc1	equ	0xFE4
  6594                           plusw1	equ	0xFE3
  6595                           fsr1h	equ	0xFE2
  6596                           fsr1l	equ	0xFE1
  6597                           bsr	equ	0xFE0
  6598                           indf2	equ	0xFDF
  6599                           postinc2	equ	0xFDE
  6600                           postdec2	equ	0xFDD
  6601                           preinc2	equ	0xFDC
  6602                           plusw2	equ	0xFDB
  6603                           fsr2h	equ	0xFDA
  6604                           fsr2l	equ	0xFD9
  6605                           status	equ	0xFD8

Data Sizes:
    Strings     30
    Constant    0
    Data        0
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     81      85
    BANK0           160    138     145
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> time_incre@buf2(BANK0[40]), time_incre@buf1(BANK0[40]), LCD_init@buf(BANK0[40]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 40
		 -> time_incre@buf2(BANK0[40]), time_incre@buf1(BANK0[40]), LCD_init@buf(BANK0[40]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2125_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 40
		 -> time_incre@buf2(BANK0[40]), time_incre@buf1(BANK0[40]), LCD_init@buf(BANK0[40]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> time_incre@buf2(BANK0[40]), time_incre@buf1(BANK0[40]), LCD_init@buf(BANK0[40]), 

    LCD_sendstring@string	PTR unsigned char  size(2) Largest target is 40
		 -> time_incre@buf2(BANK0[40]), time_incre@buf1(BANK0[40]), LCD_init@buf(BANK0[40]), 


Critical Paths under _main in COMRAM

    _main->_LCD_init
    _sunrise_sunset->_sun_sync
    _sun_sync->___awdiv
    _LED_toggle->_sunrise
    _LED1_init->_ADC_getval
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _LCD_setline->_LCD_sendbyte
    _LCD_sendstring->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_time_incre
    _time_incre->_sprintf
    _LCD_init->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   33368
                                            127 BANK0     11    11      0
                           _ADC_init
                         _Comp1_init
                    _Interrupts_init
                           _LCD_init
                          _LED1_init
                          _LED2_init
                         _LED_toggle
                  _LEDarray_disp_bin
                      _LEDarray_init
                        _Timer0_init
                     _sunrise_sunset
                         _time_incre
 ---------------------------------------------------------------------------------
 (1) _time_incre                                          92    81     11   15445
                                             79 COMRAM     1     1      0
                                             36 BANK0     91    80     11
                     _LCD_sendstring
                        _LCD_setline
                         _date_check
         _daylightsavingstime_toggle
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _daylightsavingstime_toggle                          13     2     11     376
                                              4 COMRAM    13     2     11
 ---------------------------------------------------------------------------------
 (2) _date_check                                          13     2     11     674
                                              4 COMRAM    13     2     11
 ---------------------------------------------------------------------------------
 (1) _sunrise_sunset                                      11     0     11    1895
                                             26 COMRAM    11     0     11
                           _sun_sync
                            _sunrise
 ---------------------------------------------------------------------------------
 (2) _sun_sync                                            14     3     11    1436
                                             12 COMRAM    14     3     11
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     756
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    3     3      0     198
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LED_toggle                                          12     1     11     597
                                             15 COMRAM    12     1     11
                         _ADC_getval
                            _sunrise
 ---------------------------------------------------------------------------------
 (2) _sunrise                                             11     0     11     315
                                              4 COMRAM    11     0     11
 ---------------------------------------------------------------------------------
 (1) _LED2_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED1_init                                           12     1     11     145
                                              5 COMRAM    12     1     11
                         _ADC_getval
 ---------------------------------------------------------------------------------
 (2) _ADC_getval                                           1     1      0      23
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                            53    42     11   14401
                                             79 COMRAM     2     2      0
                                             36 BANK0     51    40     11
                       _LCD_sendbyte
                     _LCD_sendnibble
                     _LCD_sendstring
                        _LCD_setline
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    10     10   11213
                                             18 BANK0     18     8     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   10361
                                             77 COMRAM     2     2      0
                                             12 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6    9831
                                             67 COMRAM    10     4      6
                                              0 BANK0     12    12      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5683
                                             31 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3417
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1615
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     512
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _LCD_setline                                          1     1      0     882
                                              7 COMRAM     1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (2) _LCD_sendstring                                       2     0      2    1111
                                              7 COMRAM     2     0      2
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (3) _LCD_sendbyte                                         2     1      1     838
                                              5 COMRAM     2     1      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (4) _LCD_sendnibble                                       1     1      0      88
                                              4 COMRAM     1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (5) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                     11     0     11     122
                                              4 COMRAM    11     0     11
 ---------------------------------------------------------------------------------
 (1) _Comp1_init                                           0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _LowISR                                              3     3      0       0
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _HighISR                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Comp1_init
     _DAC_init
   _Interrupts_init
   _LCD_init
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
     _LCD_sendnibble
     _LCD_sendstring
       _LCD_sendbyte
     _LCD_setline
       _LCD_sendbyte
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
           _isdigit
   _LED1_init
     _ADC_getval
   _LED2_init
   _LED_toggle
     _ADC_getval
     _sunrise
   _LEDarray_disp_bin
   _LEDarray_init
   _Timer0_init
   _sunrise_sunset
     _sun_sync
       ___awdiv
     _sunrise
   _time_incre
     _LCD_sendstring
     _LCD_setline
     _date_check
     _daylightsavingstime_toggle
     _sprintf

 _LowISR (ROOT)

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8A      91       5       90.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     51      55       1       90.4%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     106       8        0.0%
DATA                 0      0     106       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Nov 09 11:53:25 2021

                                 l50 29B2                                   l52 29C0  
                                 l53 29C6                                   l47 29AE  
                                 l72 290C                                   l81 1CEC  
                                 l91 1D8C                                   l83 1D0C  
                                 l75 1C8C                                   l93 1D8E  
                                 l85 1D2C                                   l77 1CAC  
                                 l87 1D4C                                   l79 1CCC  
                                 l89 1D6C                         ___awdiv@sign 000A  
                                 bsr 000FE0                  ___wmul@multiplicand 0007  
                  ??_Interrupts_init 0010                                  l110 29DA  
                                l113 2958                                  l201 250A  
                                l210 28BC                                  l203 2520  
                                l140 27A6                                  l205 252E  
                                l213 1F7A                                  l301 197E  
                                l136 2796                                  l208 28A2  
                                l224 2888                                  l304 2978  
                                l241 26D2                                  l138 278E  
                                l218 2720                                  l139 279A  
                                l171 2994                                  l307 20F2  
                                l315 24C6                                  l244 26D4  
                                l308 2110                                  l245 26D6  
                                l309 212A                                  l318 2932  
                                l432 1B06                                  l248 29EE  
                                l256 237C                                  l194 29E8  
                                l276 2060                                  l197 24DE  
                                l445 1C6A                                  l293 163E  
                                l199 24F4                                  l297 1968  
                                l549 22B8                                  l996 263A  
                                _abs 27A8                                  _pad 237E  
                                wreg 000FE8               Interrupts_init@current 0005  
                __size_of_ADC_getval 0018                          ?_LED_toggle 0010  
                 __size_of_LED1_init 004A                   __size_of_LED2_init 0006  
                               l1101 27E6                                 l1030 2404  
                               l1032 243E                                 l1040 1254  
                               l1027 23C2                                 ?_abs 0017  
                               l1132 17E2                                 l1038 124C  
                               l1135 281E                                 l1143 268C  
                               l1072 0F1A                                 l1129 17DA  
                               l3001 1AB0                                 l1058 148A  
                               l3003 1AB6                                 l3011 1B08  
                               l2221 29DE                                 l3005 1AC6  
                               l3021 1B4C                                 l3013 1B0C  
                               l3101 1240                                 l1093 258C  
                               l1158 21F4                                 l1166 2764  
                               l1094 2594                                 l2223 29E6  
                               l3007 1AE6                                 l3031 1BB4  
                               l3023 1B6C                                 l3015 1B1A  
                               l1175 2854                                 l3111 128A  
                               l3103 125C                                 l1087 11AA  
                               l3041 1C2A                                 l3033 1BE2  
                               l3025 1B8A                                 l3017 1B3A  
                               l1169 29F0                                 l3121 1328  
                               l3113 1294                                 l3105 126E  
                               l3201 0E6C                                 l1098 27DE  
                               l2219 29DC                                 l2331 24D8  
                               l3043 1C4A                                 l3035 1C02  
                               l3027 1B92                                 l3019 1B3E  
                               l3051 23A0                                 l3131 13F8  
                               l3115 129A                                 l3123 138C  
                               l3107 127C                                 l3211 0E92  
                               l3203 0E78                                 l2341 250C  
                               l2333 24E0                                 l3037 1C14  
                               l3029 1BA6                                 l3061 23E6  
                               l3053 23AE                                 l3141 143E  
                               l3125 13A6                                 l3133 1406  
                               l3117 131C                                 l3109 1282  
                               l3205 0E7A                                 l3301 256C  
                               l2511 29C8                                 l2343 251A  
                               l2335 24EE                                 l3151 1640  
                               l3039 1C1A                                 l3071 27C2  
                               l3063 2412                                 l3055 23BA  
                               l3047 237E                                 l3143 144A  
                               l3135 1418                                 l3127 13C4  
                               l3119 1322                                 l3231 0F28  
                               l3223 0EA4                                 l3215 0E98  
                               l3207 0E8C                                 l3311 2628  
                               l3303 25EA                                 l2513 29CE  
                               l2345 2522                                 l2337 24F6  
                               l2329 24CA                                 l2521 26F4  
                               l3073 27E8                                 l3081 2654  
                               l3161 16B6                                 l3153 1654  
                               l3065 2426                                 l3057 23CE  
                               l3049 238C                                 l3145 1452  
                               l3137 1426                                 l3129 13DE  
                               l3241 0FA4                                 l3233 0F2A  
                               l3305 25FC                                 l3321 1EC4  
                               l2505 29B0                                 l2601 156C  
                               l2515 29D8                                 l2347 2526  
                               l2339 2504                                 l2451 28B4  
                               l2523 26FC                                 l3083 2682  
                               l3171 16DE                                 l3163 16BA  
                               l3155 1658                                 l3059 23E2  
                               l3139 142C                                 l3147 1462  
                               l3091 11CC                                 l3243 0FC4  
                               l3251 1030                                 l3235 0F52  
                               l3227 0EB0                                 l3219 0E9E  
                               l3307 2604                                 l3331 1EEA  
                               l3323 1ECA                                 l3315 1E90  
                               l2507 29C4                                 l2611 15C8  
                               l2603 157E                                 l3411 1DCA  
                               l3403 1D90                                 l2445 288C  
                               l2541 2856                                 l2525 270E  
                               l2517 26DA                                 l3085 2686  
                               l3077 263C                                 l3173 16E6  
                               l3157 165C                                 l3069 27A8  
                               l3093 11F4                                 l3261 1100  
                               l3253 1058                                 l3245 0FD2  
                               l3237 0F88                                 l3229 0F08  
                               l3309 260C                                 l3341 1F1C  
                               l3333 1EF4                                 l3325 1ED4  
                               l3317 1EA8                                 l2461 2214  
                               l2453 21F6                                 l2621 1608  
                               l2613 15DA                                 l2605 1590  
                               l3421 1E5C                                 l3413 1DE0  
                               l3405 1DBE                                 l2447 289C  
                               l2543 285A                                 l2527 2718  
                               l2519 26EA                                 l3079 2640  
                               l3183 179A                                 l3175 171E  
                               l3167 16C0                                 l3159 167C  
                               l3095 1214                                 l3263 1128  
                               l3271 1156                                 l3255 1080  
                               l3239 0F96                                 l3351 1F6E  
                               l3343 1F24                                 l3335 1EFA  
                               l3327 1EDA                                 l3319 1EBE  
                               l2551 2966                                 l2471 2248  
                               l2463 2222                                 l2455 21FA  
                               l2631 2062                                 l2623 161C  
                               l2615 15EC                                 l2607 15A4  
                               l3423 1E80                                 l3415 1DFE  
                               l3407 1DC2                                 l2449 28A4  
                               l2545 286C                                 l3185 17AC  
                               l3169 16D6                                 l3097 1224  
                               l3089 11AC                                 l3273 1164  
                               l3265 1136                                 l3257 10C8  
                               l3249 101E                                 l3193 0E20  
                               l3345 1F2E                                 l3337 1F04  
                               l3329 1EE4                                 l2801 22CA  
                               l2481 2282                                 l2473 2250  
                               l2465 222A                                 l2457 2208  
                               l2641 2118                                 l2633 20D4  
                               l2625 1628                                 l2609 15B6  
                               l2617 1600                                 l2561 1FCE  
                               l3361 1834                                 l3353 17E4  
                               l3417 1E14                                 l3409 1DC6  
                               l2651 29AA                                 l2547 2870  
                               l3187 17BE                                 l3179 1758  
                               l3099 1226                                 l3267 114A  
                               l3195 0E48                                 l3347 1F36  
                               l3339 1F12                                 l2811 2316  
                               l2803 22DA                                 l2491 22A8  
                               l2483 228A                                 l2475 2258  
                               l2467 222E                                 l2459 2210  
                               l2635 20DA                                 l2619 1604  
                               l2627 162C                                 l2571 2038  
                               l2563 1FDE                                 l2555 1F7C  
                               l3371 1884                                 l3363 1840  
                               l3355 17F6                                 l3419 1E38  
                               l2653 29AC                                 l2645 2996  
                               l2661 294A                                 l3197 0E56  
                               l3277 1170                                 l3349 1F3C  
                               l2549 295A                                 l2813 2326  
                               l2821 236A                                 l2805 22EA  
                               l2493 22B0                                 l2485 228C  
                               l2477 2266                                 l2469 2236  
                               l2637 20E8                                 l2741 248C  
                               l2733 2440                                 l2581 14AA  
                               l2573 204A                                 l2557 1F8E  
                               l2565 1FE6                                 l3381 18DA  
                               l3373 1898                                 l3365 1856  
                               l3357 17FA                                 l2647 29A0  
                               l2663 294C                                 l2655 2934  
                               l3279 1198                                 l3199 0E68  
                               l3295 2530                                 l2815 232A  
                               l2807 22F4                                 l2831 1CA6  
                               l2671 297A                                 l2487 2292  
                               l2479 226C                                 l2639 2106  
                               l2743 24B0                                 l2735 2450  
                               l2591 1514                                 l2583 14BC  
                               l2567 1FF8                                 l2575 204E  
                               l2559 1FBC                                 l3391 193E  
                               l3383 18DE                                 l3375 189C  
                               l3367 187A                                 l3359 1800  
                               l2649 29A8                                 l2665 294E  
                               l2657 2936                                 l2681 277A  
                               l3297 2538                                 l2817 2340  
                               l2809 2306                                 l2841 1CEE  
                               l2833 1CAE                                 l2825 1C6E  
                               l2673 2982                                 l2489 2298  
                               l2745 24B4                                 l2737 2474  
                               l2593 1524                                 l2585 14D0  
                               l2569 2026                                 l3393 194A  
                               l3385 18E2                                 l3377 18A0  
                               l3369 1880                                 l2667 2950  
                               l2659 2948                                 l2931 213E  
                               l3299 2546                                 l2683 268E  
                               l2691 29EA                                 l2819 2346  
                               l2851 1D46                                 l2843 1D06  
                               l2835 1CC6                                 l2827 1C86  
                               l2675 2988                                 l2739 247C  
                               l2595 1536                                 l2587 14EE  
                               l2579 148C                                 l3395 1950  
                               l3387 1906                                 l3379 18C4  
                               l2669 2954                                 l2933 2150  
                               l2685 26A2                                 l2853 1D4E  
                               l2845 1D0E                                 l2837 1CCE  
                               l2829 1C8E                                 l2693 28E8  
                               l2677 2992                                 l2597 1548  
                               l2589 1500                                 l3397 1964  
                               l3389 190C                                 ?_pad 0015  
                               l2679 2766                                 l2935 215A  
                               l2943 2722                                 l2951 2820  
                               l3495 0EDA                                 l2687 26B6  
                               l2855 1D66                                 l2847 1D26  
                               l2839 1CE6                                 l2599 155A  
                               l3399 196C                                 l2961 290E  
                               l3497 1708                                 l2937 2178  
                               l2929 212C                                 l2945 272E  
                               l2953 282C                                 l2689 26CC  
                               l2857 1D6E                                 l2849 1D2E  
                               l2963 292A                                 l2971 1992  
                               l2939 21AE                                 l2947 2740  
                               l2955 2830                                 l2859 1D86  
                               l2981 19E8                                 l2973 19B2  
                               l2949 2744                                 l2957 2848  
                               l2991 1A3C                                 l2983 19F4  
                               l2975 19B6                                 l2967 1980  
                               l2799 22BA                                 l2993 1A4E  
                               l2985 1A12                                 l2977 19C4  
                               l2969 1984                                 l2995 1A7C  
                               l2987 1A1A                                 l2979 19E4  
                               l2997 1A9C                                 l2989 1A2E  
                               l2999 1A9E                                 STR_1 0E10  
                               STR_2 0E01                                 STR_3 0E10  
                               u2200 24EE                                 u2201 24EA  
                               u2210 2504                                 u2211 2500  
                               u2220 251A                                 u3100 2340  
                               u2221 2516                                 u3101 233C  
                               u3111 2350                                 u3040 22CA  
                               u3200 1D46                                 u2400 22A8  
                               u3121 2362                                 u3041 22C6  
                               u3201 1D42                                 u2401 22A4  
                               u4001 18AA                                 u3050 22DA  
                               u3210 1D66                                 u3131 2374  
                               u3051 22D6                                 u3211 1D62  
                               u4011 18BC                                 u2340 289C  
                               u2420 29C0                                 u3060 22EA  
                               u3220 1D86                                 u3140 1C86  
                               u2500 1FDE                                 u4020 18DA  
                               u2341 2898                                 u2421 29BC  
                               u3061 22E6                                 u3221 1D82  
                               u3141 1C82                                 u2501 1FDA  
                               u4021 18D6                                 u4101 1E1E  
                               u2190 24D8                                 u2430 26EA  
                               u3070 2306                                 u3150 1CA6  
                               u2350 2208                                 u2510 1FF8  
                               u2191 24D4                                 u2431 26E6  
                               u3071 2302                                 u3151 1CA2  
                               u2351 2204                                 u2511 1FF4  
                               u4031 18EC                                 u4111 1E30  
                               u2440 270E                                 u3400 19C4  
                               u3080 2316                                 u3160 1CC6  
                               u2360 2222                                 u2600 1500  
                               u2520 2026                                 u2441 270A  
                               u3401 19C0                                 u3081 2312  
                               u3161 1CC2                                 u2361 221E  
                               u2601 14FC                                 u2521 2022  
                               u4041 18FE                                 u4121 1E42  
                               u2450 2888                                 u3330 213E  
                               u3090 2326                                 u3170 1CE6  
                               u2370 2248                                 u2610 1514  
                               u2530 2038                                 u4050 1964  
                               u2451 2884                                 u3411 19EE  
                               u3331 213A                                 u3091 2322  
                               u3171 1CE2                                 u2371 2244  
                               u2611 1510                                 u2531 2034  
                               u4051 1960                                 u4131 1E54  
                               u3420 1A12                                 u3500 1BE2  
                               u3340 2150                                 u3180 1D06  
                               u2380 2266                                 u2700 15B6  
                               u2620 1524                                 u2540 204A  
                               u3421 1A0E                                 u3501 1BDE  
                               u3341 214C                                 u2461 2970  
                               u3181 1D02                                 u2381 2262  
                               u2701 15B2                                 u2621 1520  
                               u2541 2046                                 u4061 1976  
                               u4141 1E66                                 u3430 1A3C  
                               u3510 1C2A                                 u3350 2178  
                               u3190 1D26                                 u2390 2282  
                               u2710 15C8                                 u2630 1536  
                               u2470 1F8E                                 u3431 1A38  
                               u3511 1C26                                 u3351 2174  
                               u4207 1EF6                                 u3191 1D22  
                               u2391 227E                                 u2711 15C4  
                               u2631 1532                                 u2551 2058  
                               u2471 1F8A                                 u4151 1E78  
                               u4071 1DD4                                 u2800 277A  
                               u3600 2682                                 u3440 1A7C  
                               u3360 21AE                                 u3520 238C  
                               u2720 15DA                                 u2640 1548  
                               u2560 14AA                                 u2480 1FBC  
                               u2801 2776                                 u3601 267E  
                               u3441 1A78                                 u3361 21AA  
                               u3521 2388                                 u4217 1F0A  
                               u2721 15D6                                 u2641 1544  
                               u2561 14A6                                 u2481 1FB8  
                               u4081 1DEA                                 u2810 278E  
                               u3450 1AC6                                 u3370 2764  
                               u3530 23AE                                 u3610 11DC  
                               u2730 15EC                                 u2650 155A  
                               u2570 14BC                                 u2490 1FCE  
                               u2811 278A                                 u3451 1AC2  
                               u3371 2760                                 u3531 23AA  
                               u3611 11D6                                 u4227 1F1E  
                               u2731 15E8                                 u2651 1556  
                               u2571 14B8                                 u2491 1FCA  
                               u4091 1E08                                 u3460 1B1A  
                               u3380 2848                                 u3540 2404  
                               u3700 13DE                                 u3620 11DE  
                               u2820 26A2                                 u2740 1600  
                               u2660 156C                                 u2580 14D0  
                               u3461 1B16                                 u3381 2844  
                               u3541 2400                                 u3701 13DA  
                               u4237 1F30                                 u2821 269E  
                               u2901 24A8                                 u2741 15FC  
                               u2661 1568                                 u2581 14CC  
                               u3390 1992                                 u3470 1B4C  
                               u3550 2412                                 u3710 13F8  
                               u3630 11F4                                 u2830 26B6  
                               u2750 161C                                 u2670 157E  
                               u2590 14EE                                 u4247 26F6  
                               u3391 198E                                 u3471 1B48  
                               u3551 240E                                 u3711 13F4  
                               u3631 11F0                                 u4167 1EB2  
                               u2831 26B2                                 u2911 24BE  
                               u2751 1618                                 u2671 157A  
                               u2591 14EA                                 u3800 1796  
                               u3480 1B8A                                 u3560 27C2  
                               u3720 1406                                 u3640 1224  
                               u2840 26CC                                 u2680 1590  
                               u4257 271A                                 u3481 1B86  
                               u3561 27BE                                 u3721 1402  
                               u3641 1220                                 u4177 1EC6  
                               u2841 26C8                                 u2761 1636  
                               u2681 158C                                 u3570 2818  
                               u3810 17AC                                 u3490 1BB4  
                               u3730 1418                                 u3650 1240  
                               u2770 20E8                                 u2850 2450  
                               u2690 15A4                                 u4267 28B6  
                               u3571 2812                                 u3811 17A8  
                               u3491 1BB0                                 u3731 1414  
                               u3651 123C                                 u4187 1ED6  
                               u2771 20E4                                 u2851 244C  
                               u2691 15A0                                 u3580 281A  
                               u3820 17BE                                 u3740 1426  
                               u3660 126E                                 u3900 1030  
                               u2780 2106                                 u4277 2528  
                               u3821 17BA                                 u3741 1422  
                               u3661 126A                                 u3901 102C  
                               u4197 1EE6                                 u2781 2102  
                               u2861 245A                                 u3590 2654  
                               u3750 143E                                 u3670 127C  
                               u3910 1058                                 u3830 0E48  
                               u4287 29E0                                 u3591 2650  
                               u3751 143A                                 u3671 1278  
                               u3911 1054                                 u3831 0E44  
                               u2791 2122                                 u2871 246C  
                               u3760 167C                                 u3680 13A6  
                               u3920 1080                                 u3840 0F1A  
                               u2880 248C                                 u3761 1678  
                               u3681 13A2                                 u3921 107C  
                               u3841 0F16                                 u2881 2488  
                               u3770 16B6                                 u3690 13C4  
                               u3930 1128                                 u3850 0F28  
                               u3771 16B2                                 u3691 13C0  
                               u3931 1124                                 u3851 0F24  
                               u2891 2496                                 u3780 16D2  
                               u3860 0F52                                 u3940 258C  
                               u3781 16CE                                 u3861 0F4E  
                               u3941 2588                                 u3790 1794  
                               u3870 0F96                                 u3950 17F6  
                               u3791 178E                                 u3871 0F92  
                               u3951 17F2                                 u3880 1016  
                               u3960 1856                                 u3881 1010  
                               u3961 1852                                 u3890 1018  
                               u3970 1868                                 u3971 1860  
                               u3990 1898                                 u3991 1894  
                               u3988 186A                          main@current 00DF  
                 __size_of_LCD_E_TOG 000E                                 abs@a 0017  
                               _dbuf 0100                                 _atoi 1640  
                               _main 1D90                                 _dtoa 11AC  
                               _prec 00EE                                 _nout 00EA  
                               pad@i 001C                                 pad@p 0019  
                               fsr1h 000FE2                                 fsr2h 000FDA  
                               indf2 000FDF                                 fsr1l 000FE1  
                               pad@w 001E                                 fsr2l 000FD9  
                               btemp 0056                         ?_LCD_setline 0001  
                               prodh 000FF4                                 prodl 000FF3  
                               start 0058                     __end_of_ADC_init 29B0  
                   __end_of_DAC_init 29DC                      __end_of_HighISR 25EA  
                   ??_sunrise_sunset 0026                         ___param_bank 000000  
                         _Comp1_init 2934                                ??_abs 0019  
                              ??_pad 001B                          _sunset_flag 0054  
                   __end_of_LCD_init 1F7C                      __end_of___aodiv 1B08  
                              ?_atoi 000C                                ?_main 0001  
                              ?_dtoa 0020                      __end_of___aomod 1C6C  
                              _ADPCH 000F5F                      __end_of___awdiv 22BA  
                    ___awdiv@divisor 0007                                i1l160 0048  
                              i2l152 25E6                      ___awdiv@counter 0009  
                       vfpfcnvrt@fmt 0046                                _TMR0H 000FD4  
                              _TMR0L 000FD3                                _flags 0052  
                              _fputc 212C                                _fputs 2722  
                    __end_of_isdigit 2820                                atoi@n 0019  
                              pad@fp 0015                                atoi@s 000C  
                              _width 00EC                                _putch 29F0  
                              dtoa@d 0022                                dtoa@i 0042  
                              dtoa@n 003A                                dtoa@p 0034  
                              dtoa@s 0038                                dtoa@w 0036  
                    __end_of_isspace 268E                        ?_LCD_sendbyte 0006  
                    LCD_init@current 0084                                tablat 000FF5  
                              plusw0 000FEB                                plusw2 000FDB  
                              ttemp5 0057                                ttemp6 005A  
                              ttemp7 005E                                status 000FD8  
                              wtemp8 0057                      __end_of_sprintf 263C  
                    __end_of_sunrise 297A              __size_of_LCD_sendnibble 0068  
            __size_of_LCD_sendstring 0034                          LCD_init@buf 008F  
                    __initialization 28BE                         __end_of_atoi 17E4  
                       __end_of_main 1E90                         __end_of_dtoa 148C  
                  __end_of_LED1_init 26D8                  __size_of_LED_toggle 00C4  
                  __end_of_LED2_init 29F0                    LED_toggle@current 0010  
                  __end_of_LCD_E_TOG 29EA                               ??_atoi 000E  
                             ??_main 0052                               ??_dtoa 002A  
                      __activetblptr 000003               __size_of_LEDarray_init 0026  
                       _sunrise_flag 0055                               ?_fputc 0005  
                             ?_fputs 000E                               _ADRESH 000F64  
                     ??_LCD_sendbyte 0007                     ___awdiv@dividend 0005  
                             ?_putch 0001                               i2l2001 2596  
                             i2l2011 25E2                               i2l2003 25A6  
       ??_daylightsavingstime_toggle 0010                               i2l2005 25C8  
                             i2l2007 25D6                               i2l2009 25DE  
                             i1l2883 0026                               i1l2885 0036  
                             i1l2887 0044                        vfpfcnvrt@done 0068  
                          ??_HighISR 0001                    _LEDarray_disp_bin 1C6C  
                             _LowISR 0018                   ?_LEDarray_disp_bin 0001  
                       ??_ADC_getval 0005                        ??_Timer0_init 0005  
                       vfprintf@cfmt 004E                            ??___aodiv 0015  
                          ??___aomod 0015                               ___wmul 290E  
                        ?_Comp1_init 0001                            ??___awdiv 0009  
                ??_LEDarray_disp_bin 0005                               clear_0 28C4  
                             clear_1 28D0                     ___awdiv@quotient 000B  
                             isa$std 000001                               pad@buf 0017  
                             dtoa@fp 0020                               _strlen 2820  
                             fputc@c 0005                               fputs@c 0012  
                             fputs@i 0013                               fputs@s 000E  
                          ??_isdigit 0007                         __mediumconst 0000  
                          ??_isspace 0007                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
        ?_daylightsavingstime_toggle 0005                            ?_ADC_init 0001  
                             putch@c 0001                            ?_DAC_init 0001  
                   __end_of_vfprintf 2596                            ??_sprintf 0050  
                 __end_of_ADC_getval 29C8                            ??_sunrise 0010  
                   __end_of_sun_sync 212C            __end_of_LEDarray_disp_bin 1D90  
                         __accesstop 0060              __end_of__initialization 28DE  
                          ?_LCD_init 0084                        ___rparam_used 000001  
                      _LEDarray_init 28E8                      _Interrupts_init 2766  
               __size_of_LCD_setline 004A                       __pcstackCOMRAM 0001  
                      __end_of_fputc 21F6                        __end_of_fputs 2766  
                      __end_of_putch 29F2                  __end_of_Timer0_init 2996  
                         ??_ADC_init 0005                           ??_DAC_init 0005  
                       ??_LED_toggle 001B                              ??_fputc 0009  
                            ??_fputs 0012                              ??_putch 0005  
                __size_of_Comp1_init 0026                           __pbssBANK0 00EA  
                         __pbssBANK1 0100                       _LCD_sendnibble 24C8  
                         _date_check 148C                           ??_LCD_init 0050  
                     ?_LEDarray_init 0001                       _LCD_sendstring 2856  
                            ?_LowISR 0001                              ?___wmul 0005  
               __end_of_LCD_sendbyte 28BE                   __end_of_LED_toggle 237E  
                            ?_strlen 0005                     LED1_init@current 0006  
                 __size_of_vfpfcnvrt 038C               __end_of_LCD_sendnibble 2530  
         __size_of_LEDarray_disp_bin 0124              __end_of_Interrupts_init 27A8  
                            _HighISR 0008               __end_of_LCD_sendstring 288A  
                          _ADREFbits 000F58                              __Hparam 0000  
                            __Lparam 0000                      __size_of_LowISR 0040  
                  date_check@current 0005                          _Timer0_init 297A  
                            ___aodiv 1980                              ___aomod 1B08  
                            ___awdiv 21F6                      __size_of___wmul 0026  
                          ?_vfprintf 006C                         __psmallconst 0E00  
                            __pcinit 28BE                            ?_sun_sync 000D  
                            __ramtop 0E00                              __ptext0 1D90  
                            __ptext1 17E4                              __ptext2 1F7C  
                            __ptext3 148C                              __ptext4 2440  
                            __ptext5 2062                              __ptext6 21F6  
                            __ptext7 297A                              __ptext8 28E8  
                            __ptext9 1C6C                            _LED1_init 268E  
                    __size_of_strlen 0036                            _LED2_init 29EA  
                       __size_of_abs 0040                         __size_of_pad 00C2  
                            _isdigit 27E8                              _isspace 263C  
                          _LCD_E_TOG 29DC                      LCD_setline@line 0008  
                            atoi@neg 0012                              _sprintf 25EA  
                     __pintcode_body 2596                              _sunrise 295A  
               end_of_initialization 28DE                      ?_LCD_sendnibble 0001  
                   ADC_getval@tmpval 0005                              fputc@fp 0007  
                    ??_LEDarray_init 0005                              int_func 2596  
                            fputs@fp 0010                          ?_date_check 0005  
                    ?_LCD_sendstring 0008                    __end_of_vfpfcnvrt 11AC  
                            postdec2 000FDD                         ??_Comp1_init 0005  
                            postinc0 000FEE                              postinc1 000FE6  
                            postinc2 000FDE                           ??_vfprintf 004E  
                         _time_incre 17E4                              strlen@a 0007  
                            strlen@s 0005                           ??_sun_sync 0018  
                         ?_LED1_init 0006                           ?_LED2_init 0001  
            __size_of_sunrise_sunset 0088                           ?_LCD_E_TOG 0001  
                          _TRISAbits 000F81                            _TRISBbits 000F82  
                          _TRISCbits 000F83                            _TRISDbits 000F84  
                          _TRISEbits 000F85                            _TRISFbits 000F86  
                          _TRISGbits 000F87                            _TRISHbits 000F88  
                  __size_of_ADC_init 001A                    __size_of_DAC_init 0014  
                 __end_of_Comp1_init 295A                          _CM1CON0bits 000ED0  
                        _CM1CON1bits 000ED1                     ?_Interrupts_init 0005  
              __size_of_LCD_sendbyte 0034                    __size_of_LCD_init 00EC  
                     __end_of_LowISR 0058                          vfpfcnvrt@ap 0048  
                        vfpfcnvrt@fp 0044                          vfpfcnvrt@ll 0060  
                     __end_of___wmul 2934                 LCD_sendnibble@number 0005  
                __size_of_date_check 01B4                       __end_of_strlen 2856  
                start_initialization 28BE                          __end_of_abs 27E8  
                        __end_of_pad 2440                         _LCD_sendbyte 288A  
                      ??_LCD_setline 0008                             ??_LowISR 0002  
                        vfprintf@fmt 006E                 LCD_sendstring@string 0008  
                           ??___wmul 0009                          ?_time_incre 0084  
                  time_incre@current 0084                             ??_strlen 0007  
                        ??_LED1_init 0011                          ??_LED2_init 0005  
              sunrise_sunset@current 001B                          __pbssCOMRAM 0052  
                        ??_LCD_E_TOG 0005                        __pcstackBANK0 0060  
                   ___aodiv@dividend 0005                             ?_HighISR 0001  
                          _atoi$2243 0014                            _atoi$2244 0018  
                          _atoi$2245 0016                            _dtoa$2208 0032  
                       ?_Timer0_init 0001                            __pintcode 0008  
                           ?___aodiv 0005                             ?___aomod 0005  
                           ?___awdiv 0005                     ___aodiv@quotient 0017  
                __end_of_LCD_setline 2722                          __pintcodelo 0018  
                  __size_of_vfprintf 0066                       _sunrise_sunset 2440  
                        __smallconst 0E00                    __size_of_sun_sync 00CA  
                           ?_isdigit 0005                             ?_isspace 0005  
                   ??_LCD_sendnibble 0005               sun_sync@solarnoon_hour 0018  
                           _ADC_init 2996                             _DAC_init 29C8  
                   ??_LCD_sendstring 000A                             ?_sprintf 0072  
                     __size_of_fputc 00CA                       __size_of_fputs 0044  
                           ?_sunrise 0005                       __size_of_putch 0002  
                   LCD_sendbyte@Byte 0007                  __size_of_time_incre 019C  
                   LCD_sendbyte@type 0006                         ??_date_check 0010  
                     ___wmul@product 0009                             _LATAbits 000F79  
                           _LATBbits 000F7A                             _LATCbits 000F7B  
                           _LATDbits 000F7C                             _LATEbits 000F7D  
                           _LATFbits 000F7E                             _LATGbits 000F7F  
                           _LATHbits 000F80                             _LCD_init 1E90  
                           _IPR0bits 000E1F                             _PIE0bits 000E29  
                           _IPR2bits 000E21                             _PIE2bits 000E2B  
                           i1u332_20 0036                             i1u332_21 0032  
                           i2u164_40 25A6                             i2u164_41 25A2  
                           i2u165_40 25B8                             i2u165_41 25B0  
                           i2u167_40 25D6                             i2u166_48 25BA  
                           i2u167_41 25D2                             _PIR0bits 000E33  
                           _PIR2bits 000E35                            _time_flag 00F0  
                          _vfpfcnvrt 0E20               __end_of_sunrise_sunset 24C8  
                         _ADCON0bits 000F60                    ___wmul@multiplier 0005  
                 __end_of_date_check 1640                         _isspace$2261 000B  
                         _CM1NCHbits 000ED2                           _CM1PCHbits 000ED3  
                   __size_of_HighISR 25E2                __end_of_LEDarray_init 290E  
                        _LCD_setline 26D8                             __Hrparam 0000  
                         _ADC_getval 29B0             sun_sync@solarnoon_minute 0019  
           sun_sync@solarnoon_second 001A                           vfprintf@ap 0070  
                           __Lrparam 0000                           vfprintf@fp 006C  
                   __size_of___aodiv 0188                     __size_of___aomod 0164  
                   __size_of___awdiv 00C4                           ?_vfpfcnvrt 0044  
                    ?_sunrise_sunset 001B  __size_of_daylightsavingstime_toggle 00E6  
                    ___aodiv@divisor 000D                      ___aodiv@counter 0015  
                         _ANSELFbits 000EB4                       time_incre@buf1 008F  
                     time_incre@buf2 00B7                           sprintf@fmt 0074  
                         _T0CON0bits 000FD5                           _T0CON1bits 000FD6  
                   __size_of_isdigit 0038                     __size_of_isspace 0052  
                           __ptext10 22BA                             __ptext11 295A  
                           __ptext20 237E                             __ptext12 29EA  
                           __ptext21 2820                             __ptext13 268E  
                           __ptext30 27E8                             __ptext22 2722  
                           __ptext14 29B0                             __ptext31 290E  
                           __ptext23 212C                             __ptext15 1E90  
                           __ptext40 2996                             __ptext32 26D8  
                           __ptext24 29F0                             __ptext16 25EA  
                           __ptext33 2856                             __ptext25 27A8  
                           __ptext17 2530                             __ptext34 288A  
                           __ptext26 1B08                             __ptext18 0E20  
                           __ptext35 24C8                             __ptext27 1980  
                           __ptext19 11AC                             __ptext36 29DC  
                           __ptext28 1640                             __ptext37 2766  
                           __ptext29 263C                             __ptext38 2934  
                           __ptext39 29C8                       sunrise@current 0005  
            LEDarray_disp_bin@number 0007                     __size_of_sprintf 0052  
                   __size_of_sunrise 0020                        __size_of_atoi 01A4  
                      __size_of_main 0100                        __size_of_dtoa 02E0  
                           isa$xinst 000000             __size_of_Interrupts_init 0042  
                           int$flags 0056                 __size_of_Timer0_init 001C  
                       ??_time_incre 0050                             _vfprintf 2530  
                           _sun_sync 2062                     ___aomod@dividend 0005  
                     _vfpfcnvrt$2223 006A                           _INTCONbits 000FF2  
                           isdigit@c 0005                           _LED_toggle 22BA  
                           intlevel1 0000                             intlevel2 0000  
                          sprintf@ap 007C                         _DAC1CON0bits 000EC6  
                       _DAC1CON1bits 000EC7                   __end_of_time_incre 1980  
                           isspace@c 0005    daylightsavingstime_toggle@current 0005  
                        ?_ADC_getval 0001                      ___aomod@divisor 000D  
                        ??_vfpfcnvrt 004A                      ___aomod@counter 0015  
                           sprintf@f 007E                             sprintf@s 0072  
                    sun_sync@current 000D   __end_of_daylightsavingstime_toggle 2062  
         _daylightsavingstime_toggle 1F7C                         ___aodiv@sign 0016  
                       ___aomod@sign 0016  
