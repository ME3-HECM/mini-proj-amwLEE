

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Nov 09 01:37:56 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	text19,global,reloc=2,class=CODE,delta=1
    28                           	psect	text20,global,reloc=2,class=CODE,delta=1
    29                           	psect	text21,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    36                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 05/05/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F67K40 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     _PIR0bits	set	3635
    74  0000                     _PIR2bits	set	3637
    75  0000                     _IPR0bits	set	3615
    76  0000                     _IPR2bits	set	3617
    77  0000                     _PIE0bits	set	3625
    78  0000                     _PIE2bits	set	3627
    79  0000                     _CM1CON1bits	set	3793
    80  0000                     _CM1CON0bits	set	3792
    81  0000                     _CM1PCHbits	set	3795
    82  0000                     _CM1NCHbits	set	3794
    83  0000                     _DAC1CON1bits	set	3783
    84  0000                     _DAC1CON0bits	set	3782
    85  0000                     _ANSELFbits	set	3764
    86  0000                     _ADPCH	set	3935
    87  0000                     _ADREFbits	set	3928
    88  0000                     _TRISHbits	set	3976
    89  0000                     _LATHbits	set	3968
    90  0000                     _TRISDbits	set	3972
    91  0000                     _TRISEbits	set	3973
    92  0000                     _TRISCbits	set	3971
    93  0000                     _LATEbits	set	3965
    94  0000                     _LATCbits	set	3963
    95  0000                     _T0CON0bits	set	4053
    96  0000                     _T0CON1bits	set	4054
    97  0000                     _TMR0L	set	4051
    98  0000                     _TMR0H	set	4052
    99  0000                     _LATDbits	set	3964
   100  0000                     _INTCONbits	set	4082
   101  0000                     _TRISBbits	set	3970
   102  0000                     _TRISAbits	set	3969
   103  0000                     _TRISGbits	set	3975
   104  0000                     _LATBbits	set	3962
   105  0000                     _LATFbits	set	3966
   106  0000                     _LATAbits	set	3961
   107  0000                     _LATGbits	set	3967
   108  0000                     _ADRESH	set	3940
   109  0000                     _ADCON0bits	set	3936
   110  0000                     _TRISFbits	set	3974
   111                           
   112                           ; #config settings
   113                           
   114                           	psect	cinit
   115  000BA0                     __pcinit:
   116                           	callstack 0
   117  000BA0                     start_initialization:
   118                           	callstack 0
   119  000BA0                     __initialization:
   120                           	callstack 0
   121                           
   122                           ; Clear objects allocated to COMRAM (3 bytes)
   123  000BA0  6A2B               	clrf	(__pbssCOMRAM+2)& (0+255),c
   124  000BA2  6A2A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   125  000BA4  6A29               	clrf	__pbssCOMRAM& (0+255),c
   126  000BA6                     end_of_initialization:
   127                           	callstack 0
   128  000BA6                     __end_of__initialization:
   129                           	callstack 0
   130  000BA6  902C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   131  000BA8  922C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   132  000BAA  0100               	movlb	0
   133  000BAC  EF06  F001         	goto	_main	;jump to C main() function
   134                           
   135                           	psect	bssCOMRAM
   136  000029                     __pbssCOMRAM:
   137                           	callstack 0
   138  000029                     _time_flag:
   139                           	callstack 0
   140  000029                     	ds	1
   141  00002A                     _sunset_flag:
   142                           	callstack 0
   143  00002A                     	ds	1
   144  00002B                     _sunrise_flag:
   145                           	callstack 0
   146  00002B                     	ds	1
   147                           
   148                           	psect	cstackCOMRAM
   149  000001                     __pcstackCOMRAM:
   150                           	callstack 0
   151  000001                     ??_HighISR:
   152  000001                     
   153                           ; 1 bytes @ 0x0
   154  000001                     	ds	1
   155  000002                     ??_LowISR:
   156                           
   157                           ; 1 bytes @ 0x1
   158  000002                     	ds	3
   159  000005                     ??_LEDarray_disp_bin:
   160  000005                     ?___awdiv:
   161                           	callstack 0
   162  000005                     ?_sunrise:
   163                           	callstack 0
   164  000005                     ?_daylightsavingstime_toggle:
   165                           	callstack 0
   166  000005                     ?_date_check:
   167                           	callstack 0
   168  000005                     ADC_getval@tmpval:
   169                           	callstack 0
   170  000005                     LCD_sendnibble@number:
   171                           	callstack 0
   172  000005                     ___awdiv@dividend:
   173                           	callstack 0
   174  000005                     Interrupts_init@current:
   175                           	callstack 0
   176  000005                     daylightsavingstime_toggle@current:
   177                           	callstack 0
   178  000005                     date_check@current:
   179                           	callstack 0
   180  000005                     sunrise@current:
   181                           	callstack 0
   182                           
   183                           ; 11 bytes @ 0x4
   184  000005                     	ds	1
   185  000006                     LCD_sendbyte@type:
   186                           	callstack 0
   187  000006                     LED1_init@current:
   188                           	callstack 0
   189                           
   190                           ; 11 bytes @ 0x5
   191  000006                     	ds	1
   192  000007                     LEDarray_disp_bin@number:
   193                           	callstack 0
   194  000007                     LCD_sendbyte@Byte:
   195                           	callstack 0
   196  000007                     ___awdiv@divisor:
   197                           	callstack 0
   198                           
   199                           ; 2 bytes @ 0x6
   200  000007                     	ds	1
   201  000008                     ??_LCD_init:
   202                           
   203                           ; 1 bytes @ 0x7
   204  000008                     	ds	1
   205  000009                     ___awdiv@counter:
   206                           	callstack 0
   207                           
   208                           ; 1 bytes @ 0x8
   209  000009                     	ds	1
   210  00000A                     ___awdiv@sign:
   211                           	callstack 0
   212                           
   213                           ; 1 bytes @ 0x9
   214  00000A                     	ds	1
   215  00000B                     ___awdiv@quotient:
   216                           	callstack 0
   217                           
   218                           ; 2 bytes @ 0xA
   219  00000B                     	ds	2
   220  00000D                     ?_sun_sync:
   221                           	callstack 0
   222  00000D                     sun_sync@current:
   223                           	callstack 0
   224                           
   225                           ; 11 bytes @ 0xC
   226  00000D                     	ds	3
   227  000010                     ??_daylightsavingstime_toggle:
   228  000010                     ??_date_check:
   229  000010                     ?_LED_toggle:
   230                           	callstack 0
   231  000010                     LED_toggle@current:
   232                           	callstack 0
   233                           
   234                           ; 11 bytes @ 0xF
   235  000010                     	ds	1
   236  000011                     ??_LED1_init:
   237                           
   238                           ; 1 bytes @ 0x10
   239  000011                     	ds	1
   240  000012                     ?_time_incre:
   241                           	callstack 0
   242  000012                     time_incre@current:
   243                           	callstack 0
   244                           
   245                           ; 11 bytes @ 0x11
   246  000012                     	ds	6
   247  000018                     sun_sync@solarnoon_hour:
   248                           	callstack 0
   249                           
   250                           ; 1 bytes @ 0x17
   251  000018                     	ds	1
   252  000019                     sun_sync@solarnoon_minute:
   253                           	callstack 0
   254                           
   255                           ; 1 bytes @ 0x18
   256  000019                     	ds	1
   257  00001A                     sun_sync@solarnoon_second:
   258                           	callstack 0
   259                           
   260                           ; 1 bytes @ 0x19
   261  00001A                     	ds	1
   262  00001B                     ??_LED_toggle:
   263                           
   264                           ; 1 bytes @ 0x1A
   265  00001B                     	ds	2
   266  00001D                     ??_time_incre:
   267                           
   268                           ; 1 bytes @ 0x1C
   269  00001D                     	ds	1
   270  00001E                     main@current:
   271                           	callstack 0
   272                           
   273                           ; 11 bytes @ 0x1D
   274  00001E                     	ds	11
   275                           
   276 ;;
   277 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   278 ;;
   279 ;; *************** function _main *****************
   280 ;; Defined at:
   281 ;;		line 7 in file "main.c"
   282 ;; Parameters:    Size  Location     Type
   283 ;;		None
   284 ;; Auto vars:     Size  Location     Type
   285 ;;  current        11   29[COMRAM] struct .
   286 ;; Return value:  Size  Location     Type
   287 ;;                  1    wreg      void 
   288 ;; Registers used:
   289 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
   290 ;; Tracked objects:
   291 ;;		On entry : 0/0
   292 ;;		On exit  : 0/0
   293 ;;		Unchanged: 0/0
   294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   296 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   298 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   299 ;;Total ram usage:       11 bytes
   300 ;; Hardware stack levels required when called: 6
   301 ;; This function calls:
   302 ;;		_ADC_init
   303 ;;		_Comp1_init
   304 ;;		_Interrupts_init
   305 ;;		_LCD_init
   306 ;;		_LED1_init
   307 ;;		_LED2_init
   308 ;;		_LED_toggle
   309 ;;		_LEDarray_disp_bin
   310 ;;		_LEDarray_init
   311 ;;		_Timer0_init
   312 ;;		_sun_sync
   313 ;;		_sunrise
   314 ;;		_time_incre
   315 ;; This function is called by:
   316 ;;		Startup code after reset
   317 ;; This function uses a non-reentrant model
   318 ;;
   319                           
   320                           	psect	text0
   321  00020C                     __ptext0:
   322                           	callstack 0
   323  00020C                     _main:
   324                           	callstack 25
   325  00020C                     
   326                           ;main.c: 12:     dateandtime current;;main.c: 13:     current.year = 2021;
   327  00020C  0E07               	movlw	7
   328  00020E  6E1F               	movwf	(main@current+1)^0,c
   329  000210  0EE5               	movlw	229
   330  000212  6E1E               	movwf	main@current^0,c
   331                           
   332                           ;main.c: 14:     current.month = 11;
   333  000214  0E0B               	movlw	11
   334  000216  6E20               	movwf	(main@current+2)^0,c
   335                           
   336                           ;main.c: 15:     current.date = 9;
   337  000218  0E09               	movlw	9
   338  00021A  6E21               	movwf	(main@current+3)^0,c
   339                           
   340                           ;main.c: 16:     current.day = 2;
   341  00021C  0E02               	movlw	2
   342  00021E  6E22               	movwf	(main@current+4)^0,c
   343                           
   344                           ;main.c: 17:     current.hour = 7;
   345  000220  0E07               	movlw	7
   346  000222  6E23               	movwf	(main@current+5)^0,c
   347                           
   348                           ;main.c: 18:     current.minute = 30;
   349  000224  0E1E               	movlw	30
   350  000226  6E24               	movwf	(main@current+6)^0,c
   351                           
   352                           ;main.c: 19:     current.second = 0;
   353  000228  0E00               	movlw	0
   354  00022A  6E25               	movwf	(main@current+7)^0,c
   355                           
   356                           ;main.c: 20:     current.sunrise_hour = 7;
   357  00022C  0E07               	movlw	7
   358  00022E  6E26               	movwf	(main@current+8)^0,c
   359                           
   360                           ;main.c: 21:     current.sunrise_minute = 0;
   361  000230  0E00               	movlw	0
   362  000232  6E27               	movwf	(main@current+9)^0,c
   363                           
   364                           ;main.c: 22:     current.sunrise_second = 0;
   365  000234  0E00               	movlw	0
   366  000236  6E28               	movwf	(main@current+10)^0,c
   367  000238                     
   368                           ;main.c: 25:     ADC_init();
   369  000238  ECAD  F005         	call	_ADC_init	;wreg free
   370  00023C                     
   371                           ;main.c: 26:     Comp1_init();
   372  00023C  EC7C  F005         	call	_Comp1_init	;wreg free
   373  000240                     
   374                           ;main.c: 27:     Timer0_init();
   375  000240  EC9F  F005         	call	_Timer0_init	;wreg free
   376  000244                     
   377                           ;main.c: 28:     Interrupts_init(current);
   378  000244  EE20  F01E         	lfsr	2,main@current
   379  000248  EE00  F005         	lfsr	0,Interrupts_init@current
   380  00024C  0E0A               	movlw	10
   381  00024E                     u1831:
   382  00024E  CFDB FFEB          	movff	plusw2,plusw0
   383  000252  06E8               	decf	wreg,f,c
   384  000254  E2FC               	bc	u1831
   385  000256  EC2E  F005         	call	_Interrupts_init	;wreg free
   386  00025A                     
   387                           ;main.c: 29:     LED1_init(current);
   388  00025A  EE20  F01E         	lfsr	2,main@current
   389  00025E  EE00  F006         	lfsr	0,LED1_init@current
   390  000262  0E0A               	movlw	10
   391  000264                     u1841:
   392  000264  CFDB FFEB          	movff	plusw2,plusw0
   393  000268  06E8               	decf	wreg,f,c
   394  00026A  E2FC               	bc	u1841
   395  00026C  EC09  F005         	call	_LED1_init	;wreg free
   396                           
   397                           ;main.c: 30:     LED2_init();
   398  000270  ECDF  F005         	call	_LED2_init	;wreg free
   399                           
   400                           ;main.c: 31:     LEDarray_init();
   401  000274  EC69  F005         	call	_LEDarray_init	;wreg free
   402  000278                     
   403                           ;main.c: 32:     LCD_init();
   404  000278  EC57  F004         	call	_LCD_init	;wreg free
   405  00027C                     l37:
   406                           
   407                           ;main.c: 41:         if (sunrise_flag==1) {
   408  00027C  042B               	decf	_sunrise_flag^0,w,c	;volatile
   409  00027E  A4D8               	btfss	status,2,c
   410  000280  EF44  F001         	goto	u1851
   411  000284  EF46  F001         	goto	u1850
   412  000288                     u1851:
   413  000288  EF5C  F001         	goto	l1776
   414  00028C                     u1850:
   415  00028C                     
   416                           ;main.c: 42:             current=sunrise(current);
   417  00028C  EE20  F01E         	lfsr	2,main@current
   418  000290  EE00  F005         	lfsr	0,sunrise@current
   419  000294  0E0A               	movlw	10
   420  000296                     u1861:
   421  000296  CFDB FFEB          	movff	plusw2,plusw0
   422  00029A  06E8               	decf	wreg,f,c
   423  00029C  E2FC               	bc	u1861
   424  00029E  EC8F  F005         	call	_sunrise	;wreg free
   425  0002A2  EE20  F01E         	lfsr	2,main@current
   426  0002A6  0E0A               	movlw	10
   427  0002A8                     u1871:
   428  0002A8  CFEB FFDB          	movff	plusw0,plusw2
   429  0002AC  06E8               	decf	wreg,f,c
   430  0002AE  E2FC               	bc	u1871
   431  0002B0                     
   432                           ;main.c: 43:             sunrise_flag=0;
   433  0002B0  0E00               	movlw	0
   434  0002B2  6E2B               	movwf	_sunrise_flag^0,c	;volatile
   435                           
   436                           ;main.c: 44:         } else if (sunset_flag==1) {
   437  0002B4  EF78  F001         	goto	l1782
   438  0002B8                     l1776:
   439  0002B8  042A               	decf	_sunset_flag^0,w,c	;volatile
   440  0002BA  A4D8               	btfss	status,2,c
   441  0002BC  EF62  F001         	goto	u1881
   442  0002C0  EF64  F001         	goto	u1880
   443  0002C4                     u1881:
   444  0002C4  EF78  F001         	goto	l1782
   445  0002C8                     u1880:
   446  0002C8                     
   447                           ;main.c: 45:             current=sun_sync(current);
   448  0002C8  EE20  F01E         	lfsr	2,main@current
   449  0002CC  EE00  F00D         	lfsr	0,sun_sync@current
   450  0002D0  0E0A               	movlw	10
   451  0002D2                     u1891:
   452  0002D2  CFDB FFEB          	movff	plusw2,plusw0
   453  0002D6  06E8               	decf	wreg,f,c
   454  0002D8  E2FC               	bc	u1891
   455  0002DA  EC2E  F003         	call	_sun_sync	;wreg free
   456  0002DE  EE20  F01E         	lfsr	2,main@current
   457  0002E2  0E0A               	movlw	10
   458  0002E4                     u1901:
   459  0002E4  CFEB FFDB          	movff	plusw0,plusw2
   460  0002E8  06E8               	decf	wreg,f,c
   461  0002EA  E2FC               	bc	u1901
   462  0002EC                     
   463                           ;main.c: 46:             sunset_flag=0;
   464  0002EC  0E00               	movlw	0
   465  0002EE  6E2A               	movwf	_sunset_flag^0,c	;volatile
   466  0002F0                     l1782:
   467                           
   468                           ;main.c: 49:         if (time_flag==1) {
   469  0002F0  0429               	decf	_time_flag^0,w,c	;volatile
   470  0002F2  A4D8               	btfss	status,2,c
   471  0002F4  EF7E  F001         	goto	u1911
   472  0002F8  EF80  F001         	goto	u1910
   473  0002FC                     u1911:
   474  0002FC  EF94  F001         	goto	l1788
   475  000300                     u1910:
   476  000300                     
   477                           ;main.c: 50:             current=time_incre(current);
   478  000300  EE20  F01E         	lfsr	2,main@current
   479  000304  EE00  F012         	lfsr	0,time_incre@current
   480  000308  0E0A               	movlw	10
   481  00030A                     u1921:
   482  00030A  CFDB FFEB          	movff	plusw2,plusw0
   483  00030E  06E8               	decf	wreg,f,c
   484  000310  E2FC               	bc	u1921
   485  000312  EC3F  F002         	call	_time_incre	;wreg free
   486  000316  EE20  F01E         	lfsr	2,main@current
   487  00031A  0E0A               	movlw	10
   488  00031C                     u1931:
   489  00031C  CFEB FFDB          	movff	plusw0,plusw2
   490  000320  06E8               	decf	wreg,f,c
   491  000322  E2FC               	bc	u1931
   492  000324                     
   493                           ;main.c: 51:             time_flag=0;
   494  000324  0E00               	movlw	0
   495  000326  6E29               	movwf	_time_flag^0,c	;volatile
   496  000328                     l1788:
   497                           
   498                           ;main.c: 54:         current = LED_toggle(current);
   499  000328  EE20  F01E         	lfsr	2,main@current
   500  00032C  EE00  F010         	lfsr	0,LED_toggle@current
   501  000330  0E0A               	movlw	10
   502  000332                     u1941:
   503  000332  CFDB FFEB          	movff	plusw2,plusw0
   504  000336  06E8               	decf	wreg,f,c
   505  000338  E2FC               	bc	u1941
   506  00033A  ECF5  F003         	call	_LED_toggle	;wreg free
   507  00033E  EE20  F01E         	lfsr	2,main@current
   508  000342  0E0A               	movlw	10
   509  000344                     u1951:
   510  000344  CFEB FFDB          	movff	plusw0,plusw2
   511  000348  06E8               	decf	wreg,f,c
   512  00034A  E2FC               	bc	u1951
   513  00034C                     
   514                           ;main.c: 58:         LEDarray_disp_bin(current.hour);
   515  00034C  5023               	movf	(main@current+5)^0,w,c
   516  00034E  ECAD  F001         	call	_LEDarray_disp_bin
   517  000352  EF3E  F001         	goto	l37
   518  000356  EF2A  F000         	goto	start
   519  00035A                     __end_of_main:
   520                           	callstack 0
   521                           
   522 ;; *************** function _time_incre *****************
   523 ;; Defined at:
   524 ;;		line 44 in file "dateandtime.c"
   525 ;; Parameters:    Size  Location     Type
   526 ;;  current        11   17[COMRAM] struct .
   527 ;; Auto vars:     Size  Location     Type
   528 ;;		None
   529 ;; Return value:  Size  Location     Type
   530 ;;                  11   17[COMRAM] struct .
   531 ;; Registers used:
   532 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
   533 ;; Tracked objects:
   534 ;;		On entry : 0/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   538 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   540 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   541 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   542 ;;Total ram usage:       12 bytes
   543 ;; Hardware stack levels used: 1
   544 ;; Hardware stack levels required when called: 3
   545 ;; This function calls:
   546 ;;		_date_check
   547 ;;		_daylightsavingstime_toggle
   548 ;; This function is called by:
   549 ;;		_main
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553                           	psect	text1
   554  00047E                     __ptext1:
   555                           	callstack 0
   556  00047E                     _time_incre:
   557                           	callstack 27
   558  00047E                     
   559                           ;dateandtime.c: 46:     current.second = current.second+1;
   560  00047E  2819               	incf	(time_incre@current+7)^0,w,c
   561  000480  6E19               	movwf	(time_incre@current+7)^0,c
   562                           
   563                           ;dateandtime.c: 47:     if (current.second>59) {
   564  000482  5019               	movf	(time_incre@current+7)^0,w,c
   565  000484  0A80               	xorlw	128
   566  000486  0F44               	addlw	-188
   567  000488  A0D8               	btfss	status,0,c
   568  00048A  EF49  F002         	goto	u1531
   569  00048E  EF4B  F002         	goto	u1530
   570  000492                     u1531:
   571  000492  EFB1  F002         	goto	l1692
   572  000496                     u1530:
   573  000496                     
   574                           ;dateandtime.c: 48:         LATHbits.LATH3 = !LATHbits.LATH3;
   575  000496  A680               	btfss	128,3,c	;volatile
   576  000498  EF50  F002         	goto	u1541
   577  00049C  EF54  F002         	goto	u1540
   578  0004A0                     u1541:
   579  0004A0  6A1D               	clrf	??_time_incre^0,c
   580  0004A2  2A1D               	incf	??_time_incre^0,f,c
   581  0004A4  EF55  F002         	goto	u1558
   582  0004A8                     u1540:
   583  0004A8  6A1D               	clrf	??_time_incre^0,c
   584  0004AA                     u1558:
   585  0004AA  461D               	rlncf	??_time_incre^0,f,c
   586  0004AC  461D               	rlncf	??_time_incre^0,f,c
   587  0004AE  461D               	rlncf	??_time_incre^0,f,c
   588  0004B0  5080               	movf	128,w,c	;volatile
   589  0004B2  181D               	xorwf	??_time_incre^0,w,c
   590  0004B4  0BF7               	andlw	-9
   591  0004B6  181D               	xorwf	??_time_incre^0,w,c
   592  0004B8  6E80               	movwf	128,c	;volatile
   593  0004BA                     
   594                           ;dateandtime.c: 49:         current.second = 0;
   595  0004BA  0E00               	movlw	0
   596  0004BC  6E19               	movwf	(time_incre@current+7)^0,c
   597  0004BE                     
   598                           ;dateandtime.c: 50:         current.minute = current.minute+1;
   599  0004BE  2818               	incf	(time_incre@current+6)^0,w,c
   600  0004C0  6E18               	movwf	(time_incre@current+6)^0,c
   601  0004C2                     
   602                           ;dateandtime.c: 51:         if (current.minute>59) {
   603  0004C2  5018               	movf	(time_incre@current+6)^0,w,c
   604  0004C4  0A80               	xorlw	128
   605  0004C6  0F44               	addlw	-188
   606  0004C8  A0D8               	btfss	status,0,c
   607  0004CA  EF69  F002         	goto	u1561
   608  0004CE  EF6B  F002         	goto	u1560
   609  0004D2                     u1561:
   610  0004D2  EFB1  F002         	goto	l1692
   611  0004D6                     u1560:
   612  0004D6                     
   613                           ;dateandtime.c: 52:             current.minute = 0;
   614  0004D6  0E00               	movlw	0
   615  0004D8  6E18               	movwf	(time_incre@current+6)^0,c
   616  0004DA                     
   617                           ;dateandtime.c: 53:             current.hour = current.hour+1;
   618  0004DA  2817               	incf	(time_incre@current+5)^0,w,c
   619  0004DC  6E17               	movwf	(time_incre@current+5)^0,c
   620  0004DE                     
   621                           ;dateandtime.c: 54:             current = daylightsavingstime_toggle(current);
   622  0004DE  EE20  F012         	lfsr	2,time_incre@current
   623  0004E2  EE00  F005         	lfsr	0,daylightsavingstime_toggle@current
   624  0004E6  0E0A               	movlw	10
   625  0004E8                     u1571:
   626  0004E8  CFDB FFEB          	movff	plusw2,plusw0
   627  0004EC  06E8               	decf	wreg,f,c
   628  0004EE  E2FC               	bc	u1571
   629  0004F0  ECBB  F002         	call	_daylightsavingstime_toggle	;wreg free
   630  0004F4  EE20  F012         	lfsr	2,time_incre@current
   631  0004F8  0E0A               	movlw	10
   632  0004FA                     u1581:
   633  0004FA  CFEB FFDB          	movff	plusw0,plusw2
   634  0004FE  06E8               	decf	wreg,f,c
   635  000500  E2FC               	bc	u1581
   636  000502                     
   637                           ;dateandtime.c: 55:             if (current.hour>23) {
   638  000502  5017               	movf	(time_incre@current+5)^0,w,c
   639  000504  0A80               	xorlw	128
   640  000506  0F68               	addlw	-152
   641  000508  A0D8               	btfss	status,0,c
   642  00050A  EF89  F002         	goto	u1591
   643  00050E  EF8B  F002         	goto	u1590
   644  000512                     u1591:
   645  000512  EFB1  F002         	goto	l1692
   646  000516                     u1590:
   647  000516                     
   648                           ;dateandtime.c: 56:                 current.hour = 0;
   649  000516  0E00               	movlw	0
   650  000518  6E17               	movwf	(time_incre@current+5)^0,c
   651  00051A                     
   652                           ;dateandtime.c: 57:                 current.date = current.date+1;
   653  00051A  2815               	incf	(time_incre@current+3)^0,w,c
   654  00051C  6E15               	movwf	(time_incre@current+3)^0,c
   655  00051E                     
   656                           ;dateandtime.c: 58:                 current = date_check(current);
   657  00051E  EE20  F012         	lfsr	2,time_incre@current
   658  000522  EE00  F005         	lfsr	0,date_check@current
   659  000526  0E0A               	movlw	10
   660  000528                     u1601:
   661  000528  CFDB FFEB          	movff	plusw2,plusw0
   662  00052C  06E8               	decf	wreg,f,c
   663  00052E  E2FC               	bc	u1601
   664  000530  EC2C  F000         	call	_date_check	;wreg free
   665  000534  EE20  F012         	lfsr	2,time_incre@current
   666  000538  0E0A               	movlw	10
   667  00053A                     u1611:
   668  00053A  CFEB FFDB          	movff	plusw0,plusw2
   669  00053E  06E8               	decf	wreg,f,c
   670  000540  E2FC               	bc	u1611
   671  000542                     
   672                           ;dateandtime.c: 59:                 current.day = current.day+1;
   673  000542  2816               	incf	(time_incre@current+4)^0,w,c
   674  000544  6E16               	movwf	(time_incre@current+4)^0,c
   675  000546                     
   676                           ;dateandtime.c: 60:                 if (current.day>7) {
   677  000546  5016               	movf	(time_incre@current+4)^0,w,c
   678  000548  0A80               	xorlw	128
   679  00054A  0F78               	addlw	-136
   680  00054C  A0D8               	btfss	status,0,c
   681  00054E  EFAB  F002         	goto	u1621
   682  000552  EFAD  F002         	goto	u1620
   683  000556                     u1621:
   684  000556  EFB1  F002         	goto	l285
   685  00055A                     u1620:
   686  00055A                     
   687                           ;dateandtime.c: 61:                     current.day = 1;
   688  00055A  0E01               	movlw	1
   689  00055C  6E16               	movwf	(time_incre@current+4)^0,c
   690  00055E  EFB1  F002         	goto	l1692
   691  000562                     l285:
   692  000562                     l1692:
   693                           
   694                           ;dateandtime.c: 67:     return current;
   695  000562  EE20  F012         	lfsr	2,time_incre@current
   696  000566  EE00  F012         	lfsr	0,?_time_incre
   697  00056A  0E0A               	movlw	10
   698  00056C                     u1631:
   699  00056C  CFDB FFEB          	movff	plusw2,plusw0
   700  000570  06E8               	decf	wreg,f,c
   701  000572  E2FC               	bc	u1631
   702  000574  0012               	return		;funcret
   703  000576                     __end_of_time_incre:
   704                           	callstack 0
   705                           
   706 ;; *************** function _daylightsavingstime_toggle *****************
   707 ;; Defined at:
   708 ;;		line 7 in file "dateandtime.c"
   709 ;; Parameters:    Size  Location     Type
   710 ;;  current        11    4[COMRAM] struct .
   711 ;; Auto vars:     Size  Location     Type
   712 ;;		None
   713 ;; Return value:  Size  Location     Type
   714 ;;                  11    4[COMRAM] struct .
   715 ;; Registers used:
   716 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
   717 ;; Tracked objects:
   718 ;;		On entry : 0/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: 0/0
   721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   722 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   724 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   725 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   726 ;;Total ram usage:       13 bytes
   727 ;; Hardware stack levels used: 1
   728 ;; Hardware stack levels required when called: 2
   729 ;; This function calls:
   730 ;;		Nothing
   731 ;; This function is called by:
   732 ;;		_time_incre
   733 ;; This function uses a non-reentrant model
   734 ;;
   735                           
   736                           	psect	text2
   737  000576                     __ptext2:
   738                           	callstack 0
   739  000576                     _daylightsavingstime_toggle:
   740                           	callstack 27
   741  000576                     
   742                           ;dateandtime.c: 9:     if (current.month==3 && (current.date+7)>31 && current.day==7 && 
      +                          current.hour==1) {
   743  000576  0E03               	movlw	3
   744  000578  1807               	xorwf	(daylightsavingstime_toggle@current+2)^0,w,c
   745  00057A  A4D8               	btfss	status,2,c
   746  00057C  EFC2  F002         	goto	u1091
   747  000580  EFC4  F002         	goto	u1090
   748  000584                     u1091:
   749  000584  EFF0  F002         	goto	l1458
   750  000588                     u1090:
   751  000588  C008  F010         	movff	daylightsavingstime_toggle@current+3,??_daylightsavingstime_toggle
   752  00058C  6A11               	clrf	(??_daylightsavingstime_toggle+1)^0,c
   753  00058E  BE10               	btfsc	??_daylightsavingstime_toggle^0,7,c
   754  000590  0611               	decf	(??_daylightsavingstime_toggle+1)^0,f,c
   755  000592  0E07               	movlw	7
   756  000594  2610               	addwf	??_daylightsavingstime_toggle^0,f,c
   757  000596  0E00               	movlw	0
   758  000598  2211               	addwfc	(??_daylightsavingstime_toggle+1)^0,f,c
   759  00059A  BE11               	btfsc	(??_daylightsavingstime_toggle+1)^0,7,c
   760  00059C  EFD9  F002         	goto	u1101
   761  0005A0  5011               	movf	(??_daylightsavingstime_toggle+1)^0,w,c
   762  0005A2  E109               	bnz	u1100
   763  0005A4  0E20               	movlw	32
   764  0005A6  5C10               	subwf	??_daylightsavingstime_toggle^0,w,c
   765  0005A8  A0D8               	btfss	status,0,c
   766  0005AA  EFD9  F002         	goto	u1101
   767  0005AE  EFDB  F002         	goto	u1100
   768  0005B2                     u1101:
   769  0005B2  EFF0  F002         	goto	l1458
   770  0005B6                     u1100:
   771  0005B6  0E07               	movlw	7
   772  0005B8  1809               	xorwf	(daylightsavingstime_toggle@current+4)^0,w,c
   773  0005BA  A4D8               	btfss	status,2,c
   774  0005BC  EFE2  F002         	goto	u1111
   775  0005C0  EFE4  F002         	goto	u1110
   776  0005C4                     u1111:
   777  0005C4  EFF0  F002         	goto	l1458
   778  0005C8                     u1110:
   779  0005C8  040A               	decf	(daylightsavingstime_toggle@current+5)^0,w,c
   780  0005CA  A4D8               	btfss	status,2,c
   781  0005CC  EFEA  F002         	goto	u1121
   782  0005D0  EFEC  F002         	goto	u1120
   783  0005D4                     u1121:
   784  0005D4  EFF0  F002         	goto	l1458
   785  0005D8                     u1120:
   786  0005D8                     
   787                           ;dateandtime.c: 10:         current.hour = current.hour+1;
   788  0005D8  280A               	incf	(daylightsavingstime_toggle@current+5)^0,w,c
   789  0005DA  6E0A               	movwf	(daylightsavingstime_toggle@current+5)^0,c
   790                           
   791                           ;dateandtime.c: 11:     } else if (current.month==10 && (current.date+7)>31 && current.d
      +                          ay==7 && current.hour==2) {
   792  0005DC  EF24  F003         	goto	l1468
   793  0005E0                     l1458:
   794  0005E0  0E0A               	movlw	10
   795  0005E2  1807               	xorwf	(daylightsavingstime_toggle@current+2)^0,w,c
   796  0005E4  A4D8               	btfss	status,2,c
   797  0005E6  EFF7  F002         	goto	u1131
   798  0005EA  EFF9  F002         	goto	u1130
   799  0005EE                     u1131:
   800  0005EE  EF24  F003         	goto	l1468
   801  0005F2                     u1130:
   802  0005F2  C008  F010         	movff	daylightsavingstime_toggle@current+3,??_daylightsavingstime_toggle
   803  0005F6  6A11               	clrf	(??_daylightsavingstime_toggle+1)^0,c
   804  0005F8  BE10               	btfsc	??_daylightsavingstime_toggle^0,7,c
   805  0005FA  0611               	decf	(??_daylightsavingstime_toggle+1)^0,f,c
   806  0005FC  0E07               	movlw	7
   807  0005FE  2610               	addwf	??_daylightsavingstime_toggle^0,f,c
   808  000600  0E00               	movlw	0
   809  000602  2211               	addwfc	(??_daylightsavingstime_toggle+1)^0,f,c
   810  000604  BE11               	btfsc	(??_daylightsavingstime_toggle+1)^0,7,c
   811  000606  EF0E  F003         	goto	u1141
   812  00060A  5011               	movf	(??_daylightsavingstime_toggle+1)^0,w,c
   813  00060C  E109               	bnz	u1140
   814  00060E  0E20               	movlw	32
   815  000610  5C10               	subwf	??_daylightsavingstime_toggle^0,w,c
   816  000612  A0D8               	btfss	status,0,c
   817  000614  EF0E  F003         	goto	u1141
   818  000618  EF10  F003         	goto	u1140
   819  00061C                     u1141:
   820  00061C  EF24  F003         	goto	l1468
   821  000620                     u1140:
   822  000620  0E07               	movlw	7
   823  000622  1809               	xorwf	(daylightsavingstime_toggle@current+4)^0,w,c
   824  000624  A4D8               	btfss	status,2,c
   825  000626  EF17  F003         	goto	u1151
   826  00062A  EF19  F003         	goto	u1150
   827  00062E                     u1151:
   828  00062E  EF24  F003         	goto	l1468
   829  000632                     u1150:
   830  000632  0E02               	movlw	2
   831  000634  180A               	xorwf	(daylightsavingstime_toggle@current+5)^0,w,c
   832  000636  A4D8               	btfss	status,2,c
   833  000638  EF20  F003         	goto	u1161
   834  00063C  EF22  F003         	goto	u1160
   835  000640                     u1161:
   836  000640  EF24  F003         	goto	l1468
   837  000644                     u1160:
   838  000644                     
   839                           ;dateandtime.c: 12:         current.hour = current.hour-1;
   840  000644  040A               	decf	(daylightsavingstime_toggle@current+5)^0,w,c
   841  000646  6E0A               	movwf	(daylightsavingstime_toggle@current+5)^0,c
   842  000648                     l1468:
   843                           
   844                           ;dateandtime.c: 15:     return current;
   845  000648  EE20  F005         	lfsr	2,daylightsavingstime_toggle@current
   846  00064C  EE00  F005         	lfsr	0,?_daylightsavingstime_toggle
   847  000650  0E0A               	movlw	10
   848  000652                     u1171:
   849  000652  CFDB FFEB          	movff	plusw2,plusw0
   850  000656  06E8               	decf	wreg,f,c
   851  000658  E2FC               	bc	u1171
   852  00065A  0012               	return		;funcret
   853  00065C                     __end_of_daylightsavingstime_toggle:
   854                           	callstack 0
   855                           
   856 ;; *************** function _date_check *****************
   857 ;; Defined at:
   858 ;;		line 22 in file "dateandtime.c"
   859 ;; Parameters:    Size  Location     Type
   860 ;;  current        11    4[COMRAM] struct .
   861 ;; Auto vars:     Size  Location     Type
   862 ;;		None
   863 ;; Return value:  Size  Location     Type
   864 ;;                  11    4[COMRAM] struct .
   865 ;; Registers used:
   866 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
   867 ;; Tracked objects:
   868 ;;		On entry : 0/0
   869 ;;		On exit  : 0/0
   870 ;;		Unchanged: 0/0
   871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   872 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   874 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   875 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   876 ;;Total ram usage:       13 bytes
   877 ;; Hardware stack levels used: 1
   878 ;; Hardware stack levels required when called: 2
   879 ;; This function calls:
   880 ;;		Nothing
   881 ;; This function is called by:
   882 ;;		_time_incre
   883 ;; This function uses a non-reentrant model
   884 ;;
   885                           
   886                           	psect	text3
   887  000058                     __ptext3:
   888                           	callstack 0
   889  000058                     _date_check:
   890                           	callstack 27
   891  000058                     
   892                           ;dateandtime.c: 24:     if ((current.year%4==0 && current.month==2 && current.date>29) |
      +                          | (current.year%4!=0 && current.month==2 && current.date>28) || ((current.month==1 || cu
      +                          rrent.month==3 || current.month==5 || current.month==7 || current.month==8 || current.mo
      +                          nth==10 || current.month==12) && current.date>31) || ((current.month==4 || current.month
      +                          ==6 || current.month==9 || current.month==11) && current.date>30)) {
   893  000058  0E03               	movlw	3
   894  00005A  1405               	andwf	date_check@current^0,w,c
   895  00005C  6E10               	movwf	??_date_check^0,c
   896  00005E  0E00               	movlw	0
   897  000060  1406               	andwf	(date_check@current+1)^0,w,c
   898  000062  6E11               	movwf	(??_date_check+1)^0,c
   899  000064  5010               	movf	??_date_check^0,w,c
   900  000066  1011               	iorwf	(??_date_check+1)^0,w,c
   901  000068  A4D8               	btfss	status,2,c
   902  00006A  EF39  F000         	goto	u1181
   903  00006E  EF3B  F000         	goto	u1180
   904  000072                     u1181:
   905  000072  EF4E  F000         	goto	l1478
   906  000076                     u1180:
   907  000076  0E02               	movlw	2
   908  000078  1807               	xorwf	(date_check@current+2)^0,w,c
   909  00007A  A4D8               	btfss	status,2,c
   910  00007C  EF42  F000         	goto	u1191
   911  000080  EF44  F000         	goto	u1190
   912  000084                     u1191:
   913  000084  EF4E  F000         	goto	l1478
   914  000088                     u1190:
   915  000088  5008               	movf	(date_check@current+3)^0,w,c
   916  00008A  0A80               	xorlw	128
   917  00008C  0F62               	addlw	-158
   918  00008E  B0D8               	btfsc	status,0,c
   919  000090  EF4C  F000         	goto	u1201
   920  000094  EF4E  F000         	goto	u1200
   921  000098                     u1201:
   922  000098  EFE6  F000         	goto	l1510
   923  00009C                     u1200:
   924  00009C                     l1478:
   925  00009C  0E03               	movlw	3
   926  00009E  1405               	andwf	date_check@current^0,w,c
   927  0000A0  6E10               	movwf	??_date_check^0,c
   928  0000A2  0E00               	movlw	0
   929  0000A4  1406               	andwf	(date_check@current+1)^0,w,c
   930  0000A6  6E11               	movwf	(??_date_check+1)^0,c
   931  0000A8  5010               	movf	??_date_check^0,w,c
   932  0000AA  1011               	iorwf	(??_date_check+1)^0,w,c
   933  0000AC  B4D8               	btfsc	status,2,c
   934  0000AE  EF5B  F000         	goto	u1211
   935  0000B2  EF5D  F000         	goto	u1210
   936  0000B6                     u1211:
   937  0000B6  EF70  F000         	goto	l1484
   938  0000BA                     u1210:
   939  0000BA  0E02               	movlw	2
   940  0000BC  1807               	xorwf	(date_check@current+2)^0,w,c
   941  0000BE  A4D8               	btfss	status,2,c
   942  0000C0  EF64  F000         	goto	u1221
   943  0000C4  EF66  F000         	goto	u1220
   944  0000C8                     u1221:
   945  0000C8  EF70  F000         	goto	l1484
   946  0000CC                     u1220:
   947  0000CC  5008               	movf	(date_check@current+3)^0,w,c
   948  0000CE  0A80               	xorlw	128
   949  0000D0  0F63               	addlw	-157
   950  0000D2  B0D8               	btfsc	status,0,c
   951  0000D4  EF6E  F000         	goto	u1231
   952  0000D8  EF70  F000         	goto	u1230
   953  0000DC                     u1231:
   954  0000DC  EFE6  F000         	goto	l1510
   955  0000E0                     u1230:
   956  0000E0                     l1484:
   957  0000E0  0407               	decf	(date_check@current+2)^0,w,c
   958  0000E2  B4D8               	btfsc	status,2,c
   959  0000E4  EF76  F000         	goto	u1241
   960  0000E8  EF78  F000         	goto	u1240
   961  0000EC                     u1241:
   962  0000EC  EFAE  F000         	goto	l1498
   963  0000F0                     u1240:
   964  0000F0  0E03               	movlw	3
   965  0000F2  1807               	xorwf	(date_check@current+2)^0,w,c
   966  0000F4  B4D8               	btfsc	status,2,c
   967  0000F6  EF7F  F000         	goto	u1251
   968  0000FA  EF81  F000         	goto	u1250
   969  0000FE                     u1251:
   970  0000FE  EFAE  F000         	goto	l1498
   971  000102                     u1250:
   972  000102  0E05               	movlw	5
   973  000104  1807               	xorwf	(date_check@current+2)^0,w,c
   974  000106  B4D8               	btfsc	status,2,c
   975  000108  EF88  F000         	goto	u1261
   976  00010C  EF8A  F000         	goto	u1260
   977  000110                     u1261:
   978  000110  EFAE  F000         	goto	l1498
   979  000114                     u1260:
   980  000114  0E07               	movlw	7
   981  000116  1807               	xorwf	(date_check@current+2)^0,w,c
   982  000118  B4D8               	btfsc	status,2,c
   983  00011A  EF91  F000         	goto	u1271
   984  00011E  EF93  F000         	goto	u1270
   985  000122                     u1271:
   986  000122  EFAE  F000         	goto	l1498
   987  000126                     u1270:
   988  000126  0E08               	movlw	8
   989  000128  1807               	xorwf	(date_check@current+2)^0,w,c
   990  00012A  B4D8               	btfsc	status,2,c
   991  00012C  EF9A  F000         	goto	u1281
   992  000130  EF9C  F000         	goto	u1280
   993  000134                     u1281:
   994  000134  EFAE  F000         	goto	l1498
   995  000138                     u1280:
   996  000138  0E0A               	movlw	10
   997  00013A  1807               	xorwf	(date_check@current+2)^0,w,c
   998  00013C  B4D8               	btfsc	status,2,c
   999  00013E  EFA3  F000         	goto	u1291
  1000  000142  EFA5  F000         	goto	u1290
  1001  000146                     u1291:
  1002  000146  EFAE  F000         	goto	l1498
  1003  00014A                     u1290:
  1004  00014A  0E0C               	movlw	12
  1005  00014C  1807               	xorwf	(date_check@current+2)^0,w,c
  1006  00014E  A4D8               	btfss	status,2,c
  1007  000150  EFAC  F000         	goto	u1301
  1008  000154  EFAE  F000         	goto	u1300
  1009  000158                     u1301:
  1010  000158  EFB8  F000         	goto	l1500
  1011  00015C                     u1300:
  1012  00015C                     l1498:
  1013  00015C  5008               	movf	(date_check@current+3)^0,w,c
  1014  00015E  0A80               	xorlw	128
  1015  000160  0F60               	addlw	-160
  1016  000162  B0D8               	btfsc	status,0,c
  1017  000164  EFB6  F000         	goto	u1311
  1018  000168  EFB8  F000         	goto	u1310
  1019  00016C                     u1311:
  1020  00016C  EFE6  F000         	goto	l1510
  1021  000170                     u1310:
  1022  000170                     l1500:
  1023  000170  0E04               	movlw	4
  1024  000172  1807               	xorwf	(date_check@current+2)^0,w,c
  1025  000174  B4D8               	btfsc	status,2,c
  1026  000176  EFBF  F000         	goto	u1321
  1027  00017A  EFC1  F000         	goto	u1320
  1028  00017E                     u1321:
  1029  00017E  EFDC  F000         	goto	l1508
  1030  000182                     u1320:
  1031  000182  0E06               	movlw	6
  1032  000184  1807               	xorwf	(date_check@current+2)^0,w,c
  1033  000186  B4D8               	btfsc	status,2,c
  1034  000188  EFC8  F000         	goto	u1331
  1035  00018C  EFCA  F000         	goto	u1330
  1036  000190                     u1331:
  1037  000190  EFDC  F000         	goto	l1508
  1038  000194                     u1330:
  1039  000194  0E09               	movlw	9
  1040  000196  1807               	xorwf	(date_check@current+2)^0,w,c
  1041  000198  B4D8               	btfsc	status,2,c
  1042  00019A  EFD1  F000         	goto	u1341
  1043  00019E  EFD3  F000         	goto	u1340
  1044  0001A2                     u1341:
  1045  0001A2  EFDC  F000         	goto	l1508
  1046  0001A6                     u1340:
  1047  0001A6  0E0B               	movlw	11
  1048  0001A8  1807               	xorwf	(date_check@current+2)^0,w,c
  1049  0001AA  A4D8               	btfss	status,2,c
  1050  0001AC  EFDA  F000         	goto	u1351
  1051  0001B0  EFDC  F000         	goto	u1350
  1052  0001B4                     u1351:
  1053  0001B4  EFFC  F000         	goto	l1520
  1054  0001B8                     u1350:
  1055  0001B8                     l1508:
  1056  0001B8  5008               	movf	(date_check@current+3)^0,w,c
  1057  0001BA  0A80               	xorlw	128
  1058  0001BC  0F61               	addlw	-159
  1059  0001BE  A0D8               	btfss	status,0,c
  1060  0001C0  EFE4  F000         	goto	u1361
  1061  0001C4  EFE6  F000         	goto	u1360
  1062  0001C8                     u1361:
  1063  0001C8  EFFC  F000         	goto	l1520
  1064  0001CC                     u1360:
  1065  0001CC                     l1510:
  1066                           
  1067                           ;dateandtime.c: 27: ;dateandtime.c: 28:         current.month = current.month+1;
  1068  0001CC  2807               	incf	(date_check@current+2)^0,w,c
  1069  0001CE  6E07               	movwf	(date_check@current+2)^0,c
  1070  0001D0                     
  1071                           ;dateandtime.c: 29:         current.date = 1;
  1072  0001D0  0E01               	movlw	1
  1073  0001D2  6E08               	movwf	(date_check@current+3)^0,c
  1074  0001D4                     
  1075                           ;dateandtime.c: 31:         if (current.month>12) {
  1076  0001D4  5007               	movf	(date_check@current+2)^0,w,c
  1077  0001D6  0A80               	xorlw	128
  1078  0001D8  0F73               	addlw	-141
  1079  0001DA  A0D8               	btfss	status,0,c
  1080  0001DC  EFF2  F000         	goto	u1371
  1081  0001E0  EFF4  F000         	goto	u1370
  1082  0001E4                     u1371:
  1083  0001E4  EFFC  F000         	goto	l1520
  1084  0001E8                     u1370:
  1085  0001E8                     
  1086                           ;dateandtime.c: 32:             current.year = current.year+1;
  1087  0001E8  0E01               	movlw	1
  1088  0001EA  2405               	addwf	date_check@current^0,w,c
  1089  0001EC  6E05               	movwf	date_check@current^0,c
  1090  0001EE  0E00               	movlw	0
  1091  0001F0  2006               	addwfc	(date_check@current+1)^0,w,c
  1092  0001F2  6E06               	movwf	(date_check@current+1)^0,c
  1093  0001F4                     
  1094                           ;dateandtime.c: 33:             current.month = 1;
  1095  0001F4  0E01               	movlw	1
  1096  0001F6  6E07               	movwf	(date_check@current+2)^0,c
  1097  0001F8                     l1520:
  1098                           
  1099                           ;dateandtime.c: 37:     return current;
  1100  0001F8  EE20  F005         	lfsr	2,date_check@current
  1101  0001FC  EE00  F005         	lfsr	0,?_date_check
  1102  000200  0E0A               	movlw	10
  1103  000202                     u1381:
  1104  000202  CFDB FFEB          	movff	plusw2,plusw0
  1105  000206  06E8               	decf	wreg,f,c
  1106  000208  E2FC               	bc	u1381
  1107  00020A  0012               	return		;funcret
  1108  00020C                     __end_of_date_check:
  1109                           	callstack 0
  1110                           
  1111 ;; *************** function _sun_sync *****************
  1112 ;; Defined at:
  1113 ;;		line 86 in file "dateandtime.c"
  1114 ;; Parameters:    Size  Location     Type
  1115 ;;  current        11   12[COMRAM] struct .
  1116 ;; Auto vars:     Size  Location     Type
  1117 ;;  solarnoon_se    1   25[COMRAM] char 
  1118 ;;  solarnoon_mi    1   24[COMRAM] char 
  1119 ;;  solarnoon_ho    1   23[COMRAM] char 
  1120 ;; Return value:  Size  Location     Type
  1121 ;;                  11   12[COMRAM] struct .
  1122 ;; Registers used:
  1123 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  1124 ;; Tracked objects:
  1125 ;;		On entry : 0/0
  1126 ;;		On exit  : 0/0
  1127 ;;		Unchanged: 0/0
  1128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1129 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1130 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1132 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1133 ;;Total ram usage:       14 bytes
  1134 ;; Hardware stack levels used: 1
  1135 ;; Hardware stack levels required when called: 3
  1136 ;; This function calls:
  1137 ;;		___awdiv
  1138 ;; This function is called by:
  1139 ;;		_main
  1140 ;; This function uses a non-reentrant model
  1141 ;;
  1142                           
  1143                           	psect	text4
  1144  00065C                     __ptext4:
  1145                           	callstack 0
  1146  00065C                     _sun_sync:
  1147                           	callstack 27
  1148  00065C                     
  1149                           ;dateandtime.c: 88:     signed char solarnoon_hour = (current.sunrise_hour + current.hou
      +                          r)/2;
  1150  00065C  5015               	movf	(sun_sync@current+8)^0,w,c
  1151  00065E  2412               	addwf	(sun_sync@current+5)^0,w,c
  1152  000660  6E05               	movwf	___awdiv@dividend^0,c
  1153  000662  6AE8               	clrf	wreg,c
  1154  000664  B0D8               	btfsc	status,0,c
  1155  000666  2AE8               	incf	wreg,f,c
  1156  000668  BE15               	btfsc	(sun_sync@current+8)^0,7,c
  1157  00066A  06E8               	decf	wreg,f,c
  1158  00066C  BE12               	btfsc	(sun_sync@current+5)^0,7,c
  1159  00066E  06E8               	decf	wreg,f,c
  1160  000670  6E06               	movwf	(___awdiv@dividend+1)^0,c
  1161  000672  0E00               	movlw	0
  1162  000674  6E08               	movwf	(___awdiv@divisor+1)^0,c
  1163  000676  0E02               	movlw	2
  1164  000678  6E07               	movwf	___awdiv@divisor^0,c
  1165  00067A  EC93  F003         	call	___awdiv	;wreg free
  1166  00067E  5005               	movf	?___awdiv^0,w,c
  1167  000680  6E18               	movwf	sun_sync@solarnoon_hour^0,c
  1168                           
  1169                           ;dateandtime.c: 89:     signed char solarnoon_minute = (current.sunrise_minute + current
      +                          .minute)/2;
  1170  000682  5016               	movf	(sun_sync@current+9)^0,w,c
  1171  000684  2413               	addwf	(sun_sync@current+6)^0,w,c
  1172  000686  6E05               	movwf	___awdiv@dividend^0,c
  1173  000688  6AE8               	clrf	wreg,c
  1174  00068A  B0D8               	btfsc	status,0,c
  1175  00068C  2AE8               	incf	wreg,f,c
  1176  00068E  BE16               	btfsc	(sun_sync@current+9)^0,7,c
  1177  000690  06E8               	decf	wreg,f,c
  1178  000692  BE13               	btfsc	(sun_sync@current+6)^0,7,c
  1179  000694  06E8               	decf	wreg,f,c
  1180  000696  6E06               	movwf	(___awdiv@dividend+1)^0,c
  1181  000698  0E00               	movlw	0
  1182  00069A  6E08               	movwf	(___awdiv@divisor+1)^0,c
  1183  00069C  0E02               	movlw	2
  1184  00069E  6E07               	movwf	___awdiv@divisor^0,c
  1185  0006A0  EC93  F003         	call	___awdiv	;wreg free
  1186  0006A4  5005               	movf	?___awdiv^0,w,c
  1187  0006A6  6E19               	movwf	sun_sync@solarnoon_minute^0,c
  1188                           
  1189                           ;dateandtime.c: 90:     signed char solarnoon_second = (current.sunrise_second + current
      +                          .second)/2;
  1190  0006A8  5017               	movf	(sun_sync@current+10)^0,w,c
  1191  0006AA  2414               	addwf	(sun_sync@current+7)^0,w,c
  1192  0006AC  6E05               	movwf	___awdiv@dividend^0,c
  1193  0006AE  6AE8               	clrf	wreg,c
  1194  0006B0  B0D8               	btfsc	status,0,c
  1195  0006B2  2AE8               	incf	wreg,f,c
  1196  0006B4  BE17               	btfsc	(sun_sync@current+10)^0,7,c
  1197  0006B6  06E8               	decf	wreg,f,c
  1198  0006B8  BE14               	btfsc	(sun_sync@current+7)^0,7,c
  1199  0006BA  06E8               	decf	wreg,f,c
  1200  0006BC  6E06               	movwf	(___awdiv@dividend+1)^0,c
  1201  0006BE  0E00               	movlw	0
  1202  0006C0  6E08               	movwf	(___awdiv@divisor+1)^0,c
  1203  0006C2  0E02               	movlw	2
  1204  0006C4  6E07               	movwf	___awdiv@divisor^0,c
  1205  0006C6  EC93  F003         	call	___awdiv	;wreg free
  1206  0006CA  5005               	movf	?___awdiv^0,w,c
  1207  0006CC  6E1A               	movwf	sun_sync@solarnoon_second^0,c
  1208  0006CE                     
  1209                           ;dateandtime.c: 92:     current.second = current.second - (solarnoon_second-0);
  1210  0006CE  501A               	movf	sun_sync@solarnoon_second^0,w,c
  1211  0006D0  5C14               	subwf	(sun_sync@current+7)^0,w,c
  1212  0006D2  6E14               	movwf	(sun_sync@current+7)^0,c
  1213  0006D4                     
  1214                           ;dateandtime.c: 93:     if (current.second<0) {
  1215  0006D4  BE14               	btfsc	(sun_sync@current+7)^0,7,c
  1216  0006D6  EF71  F003         	goto	u1500
  1217  0006DA  EF6F  F003         	goto	u1501
  1218  0006DE                     u1501:
  1219  0006DE  EF76  F003         	goto	l294
  1220  0006E2                     u1500:
  1221  0006E2                     
  1222                           ;dateandtime.c: 94:         current.second = current.second+60;
  1223  0006E2  5014               	movf	(sun_sync@current+7)^0,w,c
  1224  0006E4  0F3C               	addlw	60
  1225  0006E6  6E14               	movwf	(sun_sync@current+7)^0,c
  1226                           
  1227                           ;dateandtime.c: 95:         current.minute = current.minute-1;
  1228  0006E8  0413               	decf	(sun_sync@current+6)^0,w,c
  1229  0006EA  6E13               	movwf	(sun_sync@current+6)^0,c
  1230  0006EC                     l294:
  1231                           
  1232                           ;dateandtime.c: 97:     current.minute = current.minute - (solarnoon_minute-0);
  1233  0006EC  5019               	movf	sun_sync@solarnoon_minute^0,w,c
  1234  0006EE  5C13               	subwf	(sun_sync@current+6)^0,w,c
  1235  0006F0  6E13               	movwf	(sun_sync@current+6)^0,c
  1236                           
  1237                           ;dateandtime.c: 98:     if (current.minute<0) {
  1238  0006F2  BE13               	btfsc	(sun_sync@current+6)^0,7,c
  1239  0006F4  EF80  F003         	goto	u1510
  1240  0006F8  EF7E  F003         	goto	u1511
  1241  0006FC                     u1511:
  1242  0006FC  EF85  F003         	goto	l295
  1243  000700                     u1510:
  1244  000700                     
  1245                           ;dateandtime.c: 99:         current.minute = current.minute+60;
  1246  000700  5013               	movf	(sun_sync@current+6)^0,w,c
  1247  000702  0F3C               	addlw	60
  1248  000704  6E13               	movwf	(sun_sync@current+6)^0,c
  1249                           
  1250                           ;dateandtime.c: 100:         current.hour = current.hour-1;
  1251  000706  0412               	decf	(sun_sync@current+5)^0,w,c
  1252  000708  6E12               	movwf	(sun_sync@current+5)^0,c
  1253  00070A                     l295:
  1254                           
  1255                           ;dateandtime.c: 102:     current.hour = current.hour - (solarnoon_hour-12);
  1256  00070A  5018               	movf	sun_sync@solarnoon_hour^0,w,c
  1257  00070C  5C12               	subwf	(sun_sync@current+5)^0,w,c
  1258  00070E  0F0C               	addlw	12
  1259  000710  6E12               	movwf	(sun_sync@current+5)^0,c
  1260  000712                     
  1261                           ;dateandtime.c: 104:     return current;
  1262  000712  EE20  F00D         	lfsr	2,sun_sync@current
  1263  000716  EE00  F00D         	lfsr	0,?_sun_sync
  1264  00071A  0E0A               	movlw	10
  1265  00071C                     u1521:
  1266  00071C  CFDB FFEB          	movff	plusw2,plusw0
  1267  000720  06E8               	decf	wreg,f,c
  1268  000722  E2FC               	bc	u1521
  1269  000724  0012               	return		;funcret
  1270  000726                     __end_of_sun_sync:
  1271                           	callstack 0
  1272                           
  1273 ;; *************** function ___awdiv *****************
  1274 ;; Defined at:
  1275 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;  dividend        2    4[COMRAM] int 
  1278 ;;  divisor         2    6[COMRAM] int 
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;  quotient        2   10[COMRAM] int 
  1281 ;;  sign            1    9[COMRAM] unsigned char 
  1282 ;;  counter         1    8[COMRAM] unsigned char 
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  2    4[COMRAM] int 
  1285 ;; Registers used:
  1286 ;;		wreg, status,2, status,0
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1292 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1293 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1295 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1296 ;;Total ram usage:        8 bytes
  1297 ;; Hardware stack levels used: 1
  1298 ;; Hardware stack levels required when called: 2
  1299 ;; This function calls:
  1300 ;;		Nothing
  1301 ;; This function is called by:
  1302 ;;		_sun_sync
  1303 ;; This function uses a non-reentrant model
  1304 ;;
  1305                           
  1306                           	psect	text5
  1307  000726                     __ptext5:
  1308                           	callstack 0
  1309  000726                     ___awdiv:
  1310                           	callstack 27
  1311  000726  0E00               	movlw	0
  1312  000728  6E0A               	movwf	___awdiv@sign^0,c
  1313  00072A  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  1314  00072C  EF9C  F003         	goto	u1390
  1315  000730  EF9A  F003         	goto	u1391
  1316  000734                     u1391:
  1317  000734  EFA2  F003         	goto	l1532
  1318  000738                     u1390:
  1319  000738  6C07               	negf	___awdiv@divisor^0,c
  1320  00073A  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  1321  00073C  B0D8               	btfsc	status,0,c
  1322  00073E  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  1323  000740  0E01               	movlw	1
  1324  000742  6E0A               	movwf	___awdiv@sign^0,c
  1325  000744                     l1532:
  1326  000744  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  1327  000746  EFA9  F003         	goto	u1400
  1328  00074A  EFA7  F003         	goto	u1401
  1329  00074E                     u1401:
  1330  00074E  EFAF  F003         	goto	l1538
  1331  000752                     u1400:
  1332  000752  6C05               	negf	___awdiv@dividend^0,c
  1333  000754  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  1334  000756  B0D8               	btfsc	status,0,c
  1335  000758  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  1336  00075A  0E01               	movlw	1
  1337  00075C  1A0A               	xorwf	___awdiv@sign^0,f,c
  1338  00075E                     l1538:
  1339  00075E  0E00               	movlw	0
  1340  000760  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  1341  000762  0E00               	movlw	0
  1342  000764  6E0B               	movwf	___awdiv@quotient^0,c
  1343  000766  5007               	movf	___awdiv@divisor^0,w,c
  1344  000768  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  1345  00076A  B4D8               	btfsc	status,2,c
  1346  00076C  EFBA  F003         	goto	u1411
  1347  000770  EFBC  F003         	goto	u1410
  1348  000774                     u1411:
  1349  000774  EFE4  F003         	goto	l1560
  1350  000778                     u1410:
  1351  000778  0E01               	movlw	1
  1352  00077A  6E09               	movwf	___awdiv@counter^0,c
  1353  00077C  EFC4  F003         	goto	l1546
  1354  000780                     l1544:
  1355  000780  90D8               	bcf	status,0,c
  1356  000782  3607               	rlcf	___awdiv@divisor^0,f,c
  1357  000784  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  1358  000786  2A09               	incf	___awdiv@counter^0,f,c
  1359  000788                     l1546:
  1360  000788  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  1361  00078A  EFC9  F003         	goto	u1421
  1362  00078E  EFCB  F003         	goto	u1420
  1363  000792                     u1421:
  1364  000792  EFC0  F003         	goto	l1544
  1365  000796                     u1420:
  1366  000796                     l1548:
  1367  000796  90D8               	bcf	status,0,c
  1368  000798  360B               	rlcf	___awdiv@quotient^0,f,c
  1369  00079A  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  1370  00079C  5007               	movf	___awdiv@divisor^0,w,c
  1371  00079E  5C05               	subwf	___awdiv@dividend^0,w,c
  1372  0007A0  5008               	movf	(___awdiv@divisor+1)^0,w,c
  1373  0007A2  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  1374  0007A4  A0D8               	btfss	status,0,c
  1375  0007A6  EFD7  F003         	goto	u1431
  1376  0007AA  EFD9  F003         	goto	u1430
  1377  0007AE                     u1431:
  1378  0007AE  EFDE  F003         	goto	l1556
  1379  0007B2                     u1430:
  1380  0007B2  5007               	movf	___awdiv@divisor^0,w,c
  1381  0007B4  5E05               	subwf	___awdiv@dividend^0,f,c
  1382  0007B6  5008               	movf	(___awdiv@divisor+1)^0,w,c
  1383  0007B8  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  1384  0007BA  800B               	bsf	___awdiv@quotient^0,0,c
  1385  0007BC                     l1556:
  1386  0007BC  90D8               	bcf	status,0,c
  1387  0007BE  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  1388  0007C0  3207               	rrcf	___awdiv@divisor^0,f,c
  1389  0007C2  2E09               	decfsz	___awdiv@counter^0,f,c
  1390  0007C4  EFCB  F003         	goto	l1548
  1391  0007C8                     l1560:
  1392  0007C8  500A               	movf	___awdiv@sign^0,w,c
  1393  0007CA  B4D8               	btfsc	status,2,c
  1394  0007CC  EFEA  F003         	goto	u1441
  1395  0007D0  EFEC  F003         	goto	u1440
  1396  0007D4                     u1441:
  1397  0007D4  EFF0  F003         	goto	l1564
  1398  0007D8                     u1440:
  1399  0007D8  6C0B               	negf	___awdiv@quotient^0,c
  1400  0007DA  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  1401  0007DC  B0D8               	btfsc	status,0,c
  1402  0007DE  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  1403  0007E0                     l1564:
  1404  0007E0  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  1405  0007E4  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  1406  0007E8  0012               	return		;funcret
  1407  0007EA                     __end_of___awdiv:
  1408                           	callstack 0
  1409                           
  1410 ;; *************** function _Timer0_init *****************
  1411 ;; Defined at:
  1412 ;;		line 30 in file "timers.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;		None
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;		None
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  1    wreg      void 
  1419 ;; Registers used:
  1420 ;;		wreg, status,2
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1430 ;;Total ram usage:        0 bytes
  1431 ;; Hardware stack levels used: 1
  1432 ;; Hardware stack levels required when called: 2
  1433 ;; This function calls:
  1434 ;;		Nothing
  1435 ;; This function is called by:
  1436 ;;		_main
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           	psect	text6
  1441  000B3E                     __ptext6:
  1442                           	callstack 0
  1443  000B3E                     _Timer0_init:
  1444                           	callstack 28
  1445  000B3E                     
  1446                           ;timers.c: 31:     T0CON1bits.T0CS=0b010;
  1447  000B3E  50D6               	movf	214,w,c	;volatile
  1448  000B40  0B1F               	andlw	-225
  1449  000B42  0940               	iorlw	64
  1450  000B44  6ED6               	movwf	214,c	;volatile
  1451  000B46                     
  1452                           ;timers.c: 32:     T0CON1bits.T0ASYNC=1;
  1453  000B46  88D6               	bsf	214,4,c	;volatile
  1454                           
  1455                           ;timers.c: 33:     T0CON1bits.T0CKPS=0b0000;
  1456  000B48  0EF0               	movlw	-16
  1457  000B4A  16D6               	andwf	214,f,c	;volatile
  1458  000B4C                     
  1459                           ;timers.c: 34:     T0CON0bits.T016BIT=1;
  1460  000B4C  88D5               	bsf	213,4,c	;volatile
  1461                           
  1462                           ;timers.c: 46:     TMR0H=0b11101110;
  1463  000B4E  0EEE               	movlw	238
  1464  000B50  6ED4               	movwf	212,c	;volatile
  1465                           
  1466                           ;timers.c: 47:     TMR0L=0b10100011;
  1467  000B52  0EA3               	movlw	163
  1468  000B54  6ED3               	movwf	211,c	;volatile
  1469  000B56                     
  1470                           ;timers.c: 48:     T0CON0bits.T0EN=1;
  1471  000B56  8ED5               	bsf	213,7,c	;volatile
  1472  000B58  0012               	return		;funcret
  1473  000B5A                     __end_of_Timer0_init:
  1474                           	callstack 0
  1475                           
  1476 ;; *************** function _LEDarray_init *****************
  1477 ;; Defined at:
  1478 ;;		line 8 in file "LEDarray.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;		None
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;		None
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  1    wreg      void 
  1485 ;; Registers used:
  1486 ;;		None
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1496 ;;Total ram usage:        0 bytes
  1497 ;; Hardware stack levels used: 1
  1498 ;; Hardware stack levels required when called: 2
  1499 ;; This function calls:
  1500 ;;		Nothing
  1501 ;; This function is called by:
  1502 ;;		_main
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           	psect	text7
  1507  000AD2                     __ptext7:
  1508                           	callstack 0
  1509  000AD2                     _LEDarray_init:
  1510                           	callstack 28
  1511  000AD2                     
  1512                           ;LEDarray.c: 11:     LATGbits.LATG0 = 0;
  1513  000AD2  907F               	bcf	127,0,c	;volatile
  1514                           
  1515                           ;LEDarray.c: 12:     LATGbits.LATG1 = 0;
  1516  000AD4  927F               	bcf	127,1,c	;volatile
  1517                           
  1518                           ;LEDarray.c: 13:     LATAbits.LATA2 = 0;
  1519  000AD6  9479               	bcf	121,2,c	;volatile
  1520                           
  1521                           ;LEDarray.c: 14:     LATFbits.LATF6 = 0;
  1522  000AD8  9C7E               	bcf	126,6,c	;volatile
  1523                           
  1524                           ;LEDarray.c: 15:     LATAbits.LATA4 = 0;
  1525  000ADA  9879               	bcf	121,4,c	;volatile
  1526                           
  1527                           ;LEDarray.c: 16:     LATAbits.LATA5 = 0;
  1528  000ADC  9A79               	bcf	121,5,c	;volatile
  1529                           
  1530                           ;LEDarray.c: 17:     LATFbits.LATF0 = 0;
  1531  000ADE  907E               	bcf	126,0,c	;volatile
  1532                           
  1533                           ;LEDarray.c: 18:     LATBbits.LATB0 = 0;
  1534  000AE0  907A               	bcf	122,0,c	;volatile
  1535                           
  1536                           ;LEDarray.c: 19:     LATBbits.LATB1 = 0;
  1537  000AE2  927A               	bcf	122,1,c	;volatile
  1538                           
  1539                           ;LEDarray.c: 22:     TRISGbits.TRISG0 = 0;
  1540  000AE4  9087               	bcf	135,0,c	;volatile
  1541                           
  1542                           ;LEDarray.c: 23:     TRISGbits.TRISG1 = 0;
  1543  000AE6  9287               	bcf	135,1,c	;volatile
  1544                           
  1545                           ;LEDarray.c: 24:     TRISAbits.TRISA2 = 0;
  1546  000AE8  9481               	bcf	129,2,c	;volatile
  1547                           
  1548                           ;LEDarray.c: 25:     TRISFbits.TRISF6 = 0;
  1549  000AEA  9C86               	bcf	134,6,c	;volatile
  1550                           
  1551                           ;LEDarray.c: 26:     TRISAbits.TRISA4 = 0;
  1552  000AEC  9881               	bcf	129,4,c	;volatile
  1553                           
  1554                           ;LEDarray.c: 27:     TRISAbits.TRISA5 = 0;
  1555  000AEE  9A81               	bcf	129,5,c	;volatile
  1556                           
  1557                           ;LEDarray.c: 28:     TRISFbits.TRISF0 = 0;
  1558  000AF0  9086               	bcf	134,0,c	;volatile
  1559                           
  1560                           ;LEDarray.c: 29:     TRISBbits.TRISB0 = 0;
  1561  000AF2  9082               	bcf	130,0,c	;volatile
  1562                           
  1563                           ;LEDarray.c: 30:     TRISBbits.TRISB1 = 0;
  1564  000AF4  9282               	bcf	130,1,c	;volatile
  1565  000AF6  0012               	return		;funcret
  1566  000AF8                     __end_of_LEDarray_init:
  1567                           	callstack 0
  1568                           
  1569 ;; *************** function _LEDarray_disp_bin *****************
  1570 ;; Defined at:
  1571 ;;		line 38 in file "LEDarray.c"
  1572 ;; Parameters:    Size  Location     Type
  1573 ;;  number          1    wreg     char 
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;  number          1    6[COMRAM] char 
  1576 ;; Return value:  Size  Location     Type
  1577 ;;                  1    wreg      void 
  1578 ;; Registers used:
  1579 ;;		wreg, status,2
  1580 ;; Tracked objects:
  1581 ;;		On entry : 0/0
  1582 ;;		On exit  : 0/0
  1583 ;;		Unchanged: 0/0
  1584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1586 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1587 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1588 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1589 ;;Total ram usage:        3 bytes
  1590 ;; Hardware stack levels used: 1
  1591 ;; Hardware stack levels required when called: 2
  1592 ;; This function calls:
  1593 ;;		Nothing
  1594 ;; This function is called by:
  1595 ;;		_main
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           	psect	text8
  1600  00035A                     __ptext8:
  1601                           	callstack 0
  1602  00035A                     _LEDarray_disp_bin:
  1603                           	callstack 28
  1604                           
  1605                           ;incstack = 0
  1606                           ;LEDarray_disp_bin@number stored from wreg
  1607  00035A  6E07               	movwf	LEDarray_disp_bin@number^0,c
  1608  00035C                     
  1609                           ;LEDarray.c: 38: void LEDarray_disp_bin(signed char number);LEDarray.c: 39: {;LEDarray.c
      +                          : 43:     if (number & 0b000000001) {LATGbits.LATG0 = 1;} else {LATGbits.LATG0 = 0;}
  1610  00035C  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  1611  000360  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  1612  000362  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  1613  000364  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  1614  000366  A005               	btfss	??_LEDarray_disp_bin^0,0,c
  1615  000368  EFB8  F001         	goto	u1741
  1616  00036C  EFBA  F001         	goto	u1740
  1617  000370                     u1741:
  1618  000370  EFBD  F001         	goto	l87
  1619  000374                     u1740:
  1620  000374  807F               	bsf	127,0,c	;volatile
  1621  000376  EFBE  F001         	goto	l1726
  1622  00037A                     l87:
  1623  00037A  907F               	bcf	127,0,c	;volatile
  1624  00037C                     l1726:
  1625                           
  1626                           ;LEDarray.c: 44:     if (number & 0b000000010) {LATGbits.LATG1 = 1;} else {LATGbits.LATG
      +                          1 = 0;}
  1627  00037C  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  1628  000380  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  1629  000382  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  1630  000384  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  1631  000386  A205               	btfss	??_LEDarray_disp_bin^0,1,c
  1632  000388  EFC8  F001         	goto	u1751
  1633  00038C  EFCA  F001         	goto	u1750
  1634  000390                     u1751:
  1635  000390  EFCD  F001         	goto	l89
  1636  000394                     u1750:
  1637  000394  827F               	bsf	127,1,c	;volatile
  1638  000396  EFCE  F001         	goto	l1730
  1639  00039A                     l89:
  1640  00039A  927F               	bcf	127,1,c	;volatile
  1641  00039C                     l1730:
  1642                           
  1643                           ;LEDarray.c: 45:     if (number & 0b000000100) {LATAbits.LATA2 = 1;} else {LATAbits.LATA
      +                          2 = 0;}
  1644  00039C  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  1645  0003A0  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  1646  0003A2  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  1647  0003A4  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  1648  0003A6  A405               	btfss	??_LEDarray_disp_bin^0,2,c
  1649  0003A8  EFD8  F001         	goto	u1761
  1650  0003AC  EFDA  F001         	goto	u1760
  1651  0003B0                     u1761:
  1652  0003B0  EFDD  F001         	goto	l91
  1653  0003B4                     u1760:
  1654  0003B4  8479               	bsf	121,2,c	;volatile
  1655  0003B6  EFDE  F001         	goto	l1734
  1656  0003BA                     l91:
  1657  0003BA  9479               	bcf	121,2,c	;volatile
  1658  0003BC                     l1734:
  1659                           
  1660                           ;LEDarray.c: 46:     if (number & 0b000001000) {LATFbits.LATF6 = 1;} else {LATFbits.LATF
      +                          6 = 0;}
  1661  0003BC  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  1662  0003C0  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  1663  0003C2  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  1664  0003C4  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  1665  0003C6  A605               	btfss	??_LEDarray_disp_bin^0,3,c
  1666  0003C8  EFE8  F001         	goto	u1771
  1667  0003CC  EFEA  F001         	goto	u1770
  1668  0003D0                     u1771:
  1669  0003D0  EFED  F001         	goto	l93
  1670  0003D4                     u1770:
  1671  0003D4  8C7E               	bsf	126,6,c	;volatile
  1672  0003D6  EFEE  F001         	goto	l1738
  1673  0003DA                     l93:
  1674  0003DA  9C7E               	bcf	126,6,c	;volatile
  1675  0003DC                     l1738:
  1676                           
  1677                           ;LEDarray.c: 47:     if (number & 0b000010000) {LATAbits.LATA4 = 1;} else {LATAbits.LATA
      +                          4 = 0;}
  1678  0003DC  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  1679  0003E0  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  1680  0003E2  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  1681  0003E4  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  1682  0003E6  A805               	btfss	??_LEDarray_disp_bin^0,4,c
  1683  0003E8  EFF8  F001         	goto	u1781
  1684  0003EC  EFFA  F001         	goto	u1780
  1685  0003F0                     u1781:
  1686  0003F0  EFFD  F001         	goto	l95
  1687  0003F4                     u1780:
  1688  0003F4  8879               	bsf	121,4,c	;volatile
  1689  0003F6  EFFE  F001         	goto	l1742
  1690  0003FA                     l95:
  1691  0003FA  9879               	bcf	121,4,c	;volatile
  1692  0003FC                     l1742:
  1693                           
  1694                           ;LEDarray.c: 48:     if (number & 0b000100000) {LATAbits.LATA5 = 1;} else {LATAbits.LATA
      +                          5 = 0;}
  1695  0003FC  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  1696  000400  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  1697  000402  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  1698  000404  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  1699  000406  AA05               	btfss	??_LEDarray_disp_bin^0,5,c
  1700  000408  EF08  F002         	goto	u1791
  1701  00040C  EF0A  F002         	goto	u1790
  1702  000410                     u1791:
  1703  000410  EF0D  F002         	goto	l97
  1704  000414                     u1790:
  1705  000414  8A79               	bsf	121,5,c	;volatile
  1706  000416  EF0E  F002         	goto	l1746
  1707  00041A                     l97:
  1708  00041A  9A79               	bcf	121,5,c	;volatile
  1709  00041C                     l1746:
  1710                           
  1711                           ;LEDarray.c: 49:     if (number & 0b001000000) {LATFbits.LATF0 = 1;} else {LATFbits.LATF
      +                          0 = 0;}
  1712  00041C  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  1713  000420  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  1714  000422  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  1715  000424  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  1716  000426  AC05               	btfss	??_LEDarray_disp_bin^0,6,c
  1717  000428  EF18  F002         	goto	u1801
  1718  00042C  EF1A  F002         	goto	u1800
  1719  000430                     u1801:
  1720  000430  EF1D  F002         	goto	l99
  1721  000434                     u1800:
  1722  000434  807E               	bsf	126,0,c	;volatile
  1723  000436  EF1E  F002         	goto	l1750
  1724  00043A                     l99:
  1725  00043A  907E               	bcf	126,0,c	;volatile
  1726  00043C                     l1750:
  1727                           
  1728                           ;LEDarray.c: 50:     if (number & 0b010000000) {LATBbits.LATB0 = 1;} else {LATBbits.LATB
      +                          0 = 0;}
  1729  00043C  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  1730  000440  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  1731  000442  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  1732  000444  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  1733  000446  AE05               	btfss	??_LEDarray_disp_bin^0,7,c
  1734  000448  EF28  F002         	goto	u1811
  1735  00044C  EF2A  F002         	goto	u1810
  1736  000450                     u1811:
  1737  000450  EF2D  F002         	goto	l101
  1738  000454                     u1810:
  1739  000454  807A               	bsf	122,0,c	;volatile
  1740  000456  EF2E  F002         	goto	l1754
  1741  00045A                     l101:
  1742  00045A  907A               	bcf	122,0,c	;volatile
  1743  00045C                     l1754:
  1744                           
  1745                           ;LEDarray.c: 51:     if (number & 0b100000000) {LATBbits.LATB1 = 1;} else {LATBbits.LATB
      +                          1 = 0;}
  1746  00045C  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  1747  000460  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  1748  000462  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  1749  000464  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  1750  000466  A006               	btfss	(??_LEDarray_disp_bin+1)^0,0,c
  1751  000468  EF38  F002         	goto	u1821
  1752  00046C  EF3A  F002         	goto	u1820
  1753  000470                     u1821:
  1754  000470  EF3D  F002         	goto	l103
  1755  000474                     u1820:
  1756  000474  827A               	bsf	122,1,c	;volatile
  1757  000476  EF3E  F002         	goto	l105
  1758  00047A                     l103:
  1759  00047A  927A               	bcf	122,1,c	;volatile
  1760  00047C                     l105:
  1761  00047C  0012               	return		;funcret
  1762  00047E                     __end_of_LEDarray_disp_bin:
  1763                           	callstack 0
  1764                           
  1765 ;; *************** function _LED_toggle *****************
  1766 ;; Defined at:
  1767 ;;		line 29 in file "LED.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;  current        11   15[COMRAM] struct .
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;		None
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  11   15[COMRAM] struct .
  1774 ;; Registers used:
  1775 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1781 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1783 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1784 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1785 ;;Total ram usage:       12 bytes
  1786 ;; Hardware stack levels used: 1
  1787 ;; Hardware stack levels required when called: 3
  1788 ;; This function calls:
  1789 ;;		_ADC_getval
  1790 ;;		_sunrise
  1791 ;; This function is called by:
  1792 ;;		_main
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           	psect	text9
  1797  0007EA                     __ptext9:
  1798                           	callstack 0
  1799  0007EA                     _LED_toggle:
  1800                           	callstack 27
  1801  0007EA                     
  1802                           ;LED.c: 30:     if (current.hour==1 && current.minute==0 && current.second==0) {
  1803  0007EA  0415               	decf	(LED_toggle@current+5)^0,w,c
  1804  0007EC  A4D8               	btfss	status,2,c
  1805  0007EE  EFFB  F003         	goto	u1641
  1806  0007F2  EFFD  F003         	goto	u1640
  1807  0007F6                     u1641:
  1808  0007F6  EF12  F004         	goto	l1704
  1809  0007FA                     u1640:
  1810  0007FA  5016               	movf	(LED_toggle@current+6)^0,w,c
  1811  0007FC  A4D8               	btfss	status,2,c
  1812  0007FE  EF03  F004         	goto	u1651
  1813  000802  EF05  F004         	goto	u1650
  1814  000806                     u1651:
  1815  000806  EF12  F004         	goto	l1704
  1816  00080A                     u1650:
  1817  00080A  5017               	movf	(LED_toggle@current+7)^0,w,c
  1818  00080C  A4D8               	btfss	status,2,c
  1819  00080E  EF0B  F004         	goto	u1661
  1820  000812  EF0D  F004         	goto	u1660
  1821  000816                     u1661:
  1822  000816  EF12  F004         	goto	l1704
  1823  00081A                     u1660:
  1824  00081A                     
  1825                           ;LED.c: 31:         PIE2bits.C1IE = 0;
  1826  00081A  010E               	movlb	14	; () banked
  1827  00081C  912B               	bcf	43,0,b	;volatile
  1828                           
  1829                           ;LED.c: 32:         LATDbits.LATD7 = 0;
  1830  00081E  9E7C               	bcf	124,7,c	;volatile
  1831                           
  1832                           ;LED.c: 33:     } else if (current.hour==5 && current.minute==0 && current.second==0) {
  1833  000820  EF4D  F004         	goto	l1718
  1834  000824                     l1704:
  1835  000824  0E05               	movlw	5
  1836  000826  1815               	xorwf	(LED_toggle@current+5)^0,w,c
  1837  000828  A4D8               	btfss	status,2,c
  1838  00082A  EF19  F004         	goto	u1671
  1839  00082E  EF1B  F004         	goto	u1670
  1840  000832                     u1671:
  1841  000832  EF4D  F004         	goto	l1718
  1842  000836                     u1670:
  1843  000836  5016               	movf	(LED_toggle@current+6)^0,w,c
  1844  000838  A4D8               	btfss	status,2,c
  1845  00083A  EF21  F004         	goto	u1681
  1846  00083E  EF23  F004         	goto	u1680
  1847  000842                     u1681:
  1848  000842  EF4D  F004         	goto	l1718
  1849  000846                     u1680:
  1850  000846  5017               	movf	(LED_toggle@current+7)^0,w,c
  1851  000848  A4D8               	btfss	status,2,c
  1852  00084A  EF29  F004         	goto	u1691
  1853  00084E  EF2B  F004         	goto	u1690
  1854  000852                     u1691:
  1855  000852  EF4D  F004         	goto	l1718
  1856  000856                     u1690:
  1857  000856                     
  1858                           ;LED.c: 34:         PIE2bits.C1IE = 1;
  1859  000856  010E               	movlb	14	; () banked
  1860  000858  812B               	bsf	43,0,b	;volatile
  1861  00085A                     
  1862                           ; BSR set to: 14
  1863                           ;LED.c: 35:         if (ADC_getval()>=222) {LATDbits.LATD7 = 1;}
  1864  00085A  ECBA  F005         	call	_ADC_getval	;wreg free
  1865  00085E  6E1B               	movwf	??_LED_toggle^0,c
  1866  000860  0EDD               	movlw	221
  1867  000862  641B               	cpfsgt	??_LED_toggle^0,c
  1868  000864  EF36  F004         	goto	u1701
  1869  000868  EF38  F004         	goto	u1700
  1870  00086C                     u1701:
  1871  00086C  EF3B  F004         	goto	l1716
  1872  000870                     u1700:
  1873  000870  8E7C               	bsf	124,7,c	;volatile
  1874  000872  EF4D  F004         	goto	l1718
  1875  000876                     l1716:
  1876  000876  EE20  F010         	lfsr	2,LED_toggle@current
  1877  00087A  EE00  F005         	lfsr	0,sunrise@current
  1878  00087E  0E0A               	movlw	10
  1879  000880                     u1711:
  1880  000880  CFDB FFEB          	movff	plusw2,plusw0
  1881  000884  06E8               	decf	wreg,f,c
  1882  000886  E2FC               	bc	u1711
  1883  000888  EC8F  F005         	call	_sunrise	;wreg free
  1884  00088C  EE20  F010         	lfsr	2,LED_toggle@current
  1885  000890  0E0A               	movlw	10
  1886  000892                     u1721:
  1887  000892  CFEB FFDB          	movff	plusw0,plusw2
  1888  000896  06E8               	decf	wreg,f,c
  1889  000898  E2FC               	bc	u1721
  1890  00089A                     l1718:
  1891                           
  1892                           ;LED.c: 39:     return current;
  1893  00089A  EE20  F010         	lfsr	2,LED_toggle@current
  1894  00089E  EE00  F010         	lfsr	0,?_LED_toggle
  1895  0008A2  0E0A               	movlw	10
  1896  0008A4                     u1731:
  1897  0008A4  CFDB FFEB          	movff	plusw2,plusw0
  1898  0008A8  06E8               	decf	wreg,f,c
  1899  0008AA  E2FC               	bc	u1731
  1900  0008AC  0012               	return		;funcret
  1901  0008AE                     __end_of_LED_toggle:
  1902                           	callstack 0
  1903                           
  1904 ;; *************** function _sunrise *****************
  1905 ;; Defined at:
  1906 ;;		line 74 in file "dateandtime.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;  current        11    4[COMRAM] struct .
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;		None
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  11    4[COMRAM] struct .
  1913 ;; Registers used:
  1914 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1920 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1923 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1924 ;;Total ram usage:       11 bytes
  1925 ;; Hardware stack levels used: 1
  1926 ;; Hardware stack levels required when called: 2
  1927 ;; This function calls:
  1928 ;;		Nothing
  1929 ;; This function is called by:
  1930 ;;		_main
  1931 ;;		_LED_toggle
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           	psect	text10
  1936  000B1E                     __ptext10:
  1937                           	callstack 0
  1938  000B1E                     _sunrise:
  1939                           	callstack 28
  1940  000B1E                     
  1941                           ;dateandtime.c: 75:     current.sunrise_hour = current.hour;
  1942  000B1E  C00A  F00D         	movff	sunrise@current+5,sunrise@current+8
  1943                           
  1944                           ;dateandtime.c: 76:     current.sunrise_minute = current.minute;
  1945  000B22  C00B  F00E         	movff	sunrise@current+6,sunrise@current+9
  1946                           
  1947                           ;dateandtime.c: 77:     current.sunrise_second = current.second;
  1948  000B26  C00C  F00F         	movff	sunrise@current+7,sunrise@current+10
  1949  000B2A                     
  1950                           ;dateandtime.c: 79:     return current;
  1951  000B2A  EE20  F005         	lfsr	2,sunrise@current
  1952  000B2E  EE00  F005         	lfsr	0,?_sunrise
  1953  000B32  0E0A               	movlw	10
  1954  000B34                     u1061:
  1955  000B34  CFDB FFEB          	movff	plusw2,plusw0
  1956  000B38  06E8               	decf	wreg,f,c
  1957  000B3A  E2FC               	bc	u1061
  1958  000B3C  0012               	return		;funcret
  1959  000B3E                     __end_of_sunrise:
  1960                           	callstack 0
  1961                           
  1962 ;; *************** function _LED2_init *****************
  1963 ;; Defined at:
  1964 ;;		line 23 in file "LED.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;		None
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;		None
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  1    wreg      void 
  1971 ;; Registers used:
  1972 ;;		None
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1982 ;;Total ram usage:        0 bytes
  1983 ;; Hardware stack levels used: 1
  1984 ;; Hardware stack levels required when called: 2
  1985 ;; This function calls:
  1986 ;;		Nothing
  1987 ;; This function is called by:
  1988 ;;		_main
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992                           	psect	text11
  1993  000BBE                     __ptext11:
  1994                           	callstack 0
  1995  000BBE                     _LED2_init:
  1996                           	callstack 28
  1997  000BBE                     
  1998                           ;LED.c: 25:     LATHbits.LATH3 = 1;
  1999  000BBE  8680               	bsf	128,3,c	;volatile
  2000                           
  2001                           ;LED.c: 26:     TRISHbits.TRISH3 = 0;
  2002  000BC0  9688               	bcf	136,3,c	;volatile
  2003  000BC2  0012               	return		;funcret
  2004  000BC4                     __end_of_LED2_init:
  2005                           	callstack 0
  2006                           
  2007 ;; *************** function _LED1_init *****************
  2008 ;; Defined at:
  2009 ;;		line 12 in file "LED.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;  current        11    5[COMRAM] struct .
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;		None
  2014 ;; Return value:  Size  Location     Type
  2015 ;;                  1    wreg      void 
  2016 ;; Registers used:
  2017 ;;		wreg, status,2, status,0, cstack
  2018 ;; Tracked objects:
  2019 ;;		On entry : 0/0
  2020 ;;		On exit  : 0/0
  2021 ;;		Unchanged: 0/0
  2022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2023 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2025 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2026 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2027 ;;Total ram usage:       12 bytes
  2028 ;; Hardware stack levels used: 1
  2029 ;; Hardware stack levels required when called: 3
  2030 ;; This function calls:
  2031 ;;		_ADC_getval
  2032 ;; This function is called by:
  2033 ;;		_main
  2034 ;; This function uses a non-reentrant model
  2035 ;;
  2036                           
  2037                           	psect	text12
  2038  000A12                     __ptext12:
  2039                           	callstack 0
  2040  000A12                     _LED1_init:
  2041                           	callstack 27
  2042  000A12                     
  2043                           ;LED.c: 14:     if ((ADC_getval()>=222) && (current.hour<1||current.hour>=5)) {
  2044  000A12  ECBA  F005         	call	_ADC_getval	;wreg free
  2045  000A16  6E11               	movwf	??_LED1_init^0,c
  2046  000A18  0EDD               	movlw	221
  2047  000A1A  6411               	cpfsgt	??_LED1_init^0,c
  2048  000A1C  EF12  F005         	goto	u1471
  2049  000A20  EF14  F005         	goto	u1470
  2050  000A24                     u1471:
  2051  000A24  EF2B  F005         	goto	l241
  2052  000A28                     u1470:
  2053  000A28  500B               	movf	(LED1_init@current+5)^0,w,c
  2054  000A2A  0A80               	xorlw	128
  2055  000A2C  0F7F               	addlw	-129
  2056  000A2E  A0D8               	btfss	status,0,c
  2057  000A30  EF1C  F005         	goto	u1481
  2058  000A34  EF1E  F005         	goto	u1480
  2059  000A38                     u1481:
  2060  000A38  EF28  F005         	goto	l243
  2061  000A3C                     u1480:
  2062  000A3C  500B               	movf	(LED1_init@current+5)^0,w,c
  2063  000A3E  0A80               	xorlw	128
  2064  000A40  0F7B               	addlw	-133
  2065  000A42  A0D8               	btfss	status,0,c
  2066  000A44  EF26  F005         	goto	u1491
  2067  000A48  EF28  F005         	goto	u1490
  2068  000A4C                     u1491:
  2069  000A4C  EF2B  F005         	goto	l241
  2070  000A50                     u1490:
  2071  000A50                     l243:
  2072                           
  2073                           ;LED.c: 15:         LATDbits.LATD7 = 1;
  2074  000A50  8E7C               	bsf	124,7,c	;volatile
  2075                           
  2076                           ;LED.c: 16:     } else {
  2077  000A52  EF2C  F005         	goto	l244
  2078  000A56                     l241:
  2079                           
  2080                           ;LED.c: 17:         LATDbits.LATD7 = 0;
  2081  000A56  9E7C               	bcf	124,7,c	;volatile
  2082  000A58                     l244:
  2083                           
  2084                           ;LED.c: 20:     TRISDbits.TRISD7 = 0;
  2085  000A58  9E84               	bcf	132,7,c	;volatile
  2086  000A5A  0012               	return		;funcret
  2087  000A5C                     __end_of_LED1_init:
  2088                           	callstack 0
  2089                           
  2090 ;; *************** function _ADC_getval *****************
  2091 ;; Defined at:
  2092 ;;		line 26 in file "ADC.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;		None
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;  tmpval          1    4[COMRAM] unsigned char 
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  1    wreg      unsigned char 
  2099 ;; Registers used:
  2100 ;;		wreg, status,2
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2107 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2109 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2110 ;;Total ram usage:        1 bytes
  2111 ;; Hardware stack levels used: 1
  2112 ;; Hardware stack levels required when called: 2
  2113 ;; This function calls:
  2114 ;;		Nothing
  2115 ;; This function is called by:
  2116 ;;		_LED1_init
  2117 ;;		_LED_toggle
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           
  2121                           	psect	text13
  2122  000B74                     __ptext13:
  2123                           	callstack 0
  2124  000B74                     _ADC_getval:
  2125                           	callstack 27
  2126  000B74                     
  2127                           ;ADC.c: 27:     unsigned char tmpval;;ADC.c: 29:     ADCON0bits.GO = 1;
  2128  000B74  8060               	bsf	96,0,c	;volatile
  2129  000B76                     l62:
  2130  000B76  B060               	btfsc	96,0,c	;volatile
  2131  000B78  EFC0  F005         	goto	u1071
  2132  000B7C  EFC2  F005         	goto	u1070
  2133  000B80                     u1071:
  2134  000B80  EFBB  F005         	goto	l62
  2135  000B84                     u1070:
  2136  000B84                     
  2137                           ;ADC.c: 31:     tmpval = ADRESH;
  2138  000B84  CF64 F005          	movff	3940,ADC_getval@tmpval	;volatile
  2139  000B88                     
  2140                           ;ADC.c: 34:     return tmpval;
  2141  000B88  5005               	movf	ADC_getval@tmpval^0,w,c
  2142  000B8A  0012               	return		;funcret
  2143  000B8C                     __end_of_ADC_getval:
  2144                           	callstack 0
  2145                           
  2146 ;; *************** function _LCD_init *****************
  2147 ;; Defined at:
  2148 ;;		line 52 in file "LCD.c"
  2149 ;; Parameters:    Size  Location     Type
  2150 ;;		None
  2151 ;; Auto vars:     Size  Location     Type
  2152 ;;		None
  2153 ;; Return value:  Size  Location     Type
  2154 ;;                  1    wreg      void 
  2155 ;; Registers used:
  2156 ;;		wreg, status,2, status,0, cstack
  2157 ;; Tracked objects:
  2158 ;;		On entry : 0/0
  2159 ;;		On exit  : 0/0
  2160 ;;		Unchanged: 0/0
  2161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2164 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2165 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2166 ;;Total ram usage:        2 bytes
  2167 ;; Hardware stack levels used: 1
  2168 ;; Hardware stack levels required when called: 5
  2169 ;; This function calls:
  2170 ;;		_LCD_sendbyte
  2171 ;;		_LCD_sendnibble
  2172 ;; This function is called by:
  2173 ;;		_main
  2174 ;; This function uses a non-reentrant model
  2175 ;;
  2176                           
  2177                           	psect	text14
  2178  0008AE                     __ptext14:
  2179                           	callstack 0
  2180  0008AE                     _LCD_init:
  2181                           	callstack 25
  2182  0008AE                     
  2183                           ;LCD.c: 55:     TRISCbits.TRISC6 =0;
  2184  0008AE  9C83               	bcf	131,6,c	;volatile
  2185                           
  2186                           ;LCD.c: 56:     TRISCbits.TRISC2=0;
  2187  0008B0  9483               	bcf	131,2,c	;volatile
  2188                           
  2189                           ;LCD.c: 57:     TRISBbits.TRISB3=0;
  2190  0008B2  9682               	bcf	130,3,c	;volatile
  2191                           
  2192                           ;LCD.c: 58:     TRISBbits.TRISB2=0;
  2193  0008B4  9482               	bcf	130,2,c	;volatile
  2194                           
  2195                           ;LCD.c: 59:     TRISEbits.TRISE3=0;
  2196  0008B6  9685               	bcf	133,3,c	;volatile
  2197                           
  2198                           ;LCD.c: 60:     TRISEbits.TRISE1=0;
  2199  0008B8  9285               	bcf	133,1,c	;volatile
  2200                           
  2201                           ;LCD.c: 63:     LATCbits.LATC6 = 0;
  2202  0008BA  9C7B               	bcf	123,6,c	;volatile
  2203                           
  2204                           ;LCD.c: 64:     LATCbits.LATC2 = 0;
  2205  0008BC  947B               	bcf	123,2,c	;volatile
  2206                           
  2207                           ;LCD.c: 65:     LATBbits.LATB3 = 0;
  2208  0008BE  967A               	bcf	122,3,c	;volatile
  2209                           
  2210                           ;LCD.c: 66:     LATBbits.LATB2 = 0;
  2211  0008C0  947A               	bcf	122,2,c	;volatile
  2212                           
  2213                           ;LCD.c: 67:     LATEbits.LATE3 = 0;
  2214  0008C2  967D               	bcf	125,3,c	;volatile
  2215                           
  2216                           ;LCD.c: 68:     LATEbits.LATE1 = 0;
  2217  0008C4  927D               	bcf	125,1,c	;volatile
  2218  0008C6                     
  2219                           ;LCD.c: 74:     _delay((unsigned long)((45)*(64000000/4000.0)));
  2220  0008C6  0E04               	movlw	4
  2221  0008C8  6E09               	movwf	(??_LCD_init+1)^0,c
  2222  0008CA  0EA8               	movlw	168
  2223  0008CC  6E08               	movwf	??_LCD_init^0,c
  2224  0008CE  0E0C               	movlw	12
  2225  0008D0                     u2037:
  2226  0008D0  2EE8               	decfsz	wreg,f,c
  2227  0008D2  D7FE               	bra	u2037
  2228  0008D4  2E08               	decfsz	??_LCD_init^0,f,c
  2229  0008D6  D7FC               	bra	u2037
  2230  0008D8  2E09               	decfsz	(??_LCD_init+1)^0,f,c
  2231  0008DA  D7FA               	bra	u2037
  2232  0008DC                     
  2233                           ;LCD.c: 75:     LCD_sendnibble(0b0010);
  2234  0008DC  0E02               	movlw	2
  2235  0008DE  ECAB  F004         	call	_LCD_sendnibble
  2236  0008E2                     
  2237                           ;LCD.c: 76:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  2238  0008E2  0EF0               	movlw	240
  2239  0008E4                     u2047:
  2240  0008E4  2EE8               	decfsz	wreg,f,c
  2241  0008E6  D7FE               	bra	u2047
  2242  0008E8                     
  2243                           ;LCD.c: 77:     LCD_sendbyte(0b00101000,0);
  2244  0008E8  0E00               	movlw	0
  2245  0008EA  6E06               	movwf	LCD_sendbyte@type^0,c
  2246  0008EC  0E28               	movlw	40
  2247  0008EE  EC4F  F005         	call	_LCD_sendbyte
  2248  0008F2                     
  2249                           ;LCD.c: 78:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  2250  0008F2  0EF0               	movlw	240
  2251  0008F4                     u2057:
  2252  0008F4  2EE8               	decfsz	wreg,f,c
  2253  0008F6  D7FE               	bra	u2057
  2254  0008F8                     
  2255                           ;LCD.c: 79:     LCD_sendbyte(0b00101000,0);
  2256  0008F8  0E00               	movlw	0
  2257  0008FA  6E06               	movwf	LCD_sendbyte@type^0,c
  2258  0008FC  0E28               	movlw	40
  2259  0008FE  EC4F  F005         	call	_LCD_sendbyte
  2260  000902                     
  2261                           ;LCD.c: 80:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  2262  000902  0EF0               	movlw	240
  2263  000904                     u2067:
  2264  000904  2EE8               	decfsz	wreg,f,c
  2265  000906  D7FE               	bra	u2067
  2266  000908                     
  2267                           ;LCD.c: 83:     LCD_sendbyte(0b00001000,0);
  2268  000908  0E00               	movlw	0
  2269  00090A  6E06               	movwf	LCD_sendbyte@type^0,c
  2270  00090C  0E08               	movlw	8
  2271  00090E  EC4F  F005         	call	_LCD_sendbyte
  2272  000912                     
  2273                           ;LCD.c: 84:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  2274  000912  0EF0               	movlw	240
  2275  000914                     u2077:
  2276  000914  2EE8               	decfsz	wreg,f,c
  2277  000916  D7FE               	bra	u2077
  2278  000918                     
  2279                           ;LCD.c: 85:     LCD_sendbyte(0b00000001,0);
  2280  000918  0E00               	movlw	0
  2281  00091A  6E06               	movwf	LCD_sendbyte@type^0,c
  2282  00091C  0E01               	movlw	1
  2283  00091E  EC4F  F005         	call	_LCD_sendbyte
  2284  000922                     
  2285                           ;LCD.c: 86:     _delay((unsigned long)((2)*(64000000/4000.0)));
  2286  000922  0E2A               	movlw	42
  2287  000924  6E08               	movwf	??_LCD_init^0,c
  2288  000926  0E8E               	movlw	142
  2289  000928                     u2087:
  2290  000928  2EE8               	decfsz	wreg,f,c
  2291  00092A  D7FE               	bra	u2087
  2292  00092C  2E08               	decfsz	??_LCD_init^0,f,c
  2293  00092E  D7FC               	bra	u2087
  2294  000930                     
  2295                           ;LCD.c: 87:     LCD_sendbyte(0b00000110,0);
  2296  000930  0E00               	movlw	0
  2297  000932  6E06               	movwf	LCD_sendbyte@type^0,c
  2298  000934  0E06               	movlw	6
  2299  000936  EC4F  F005         	call	_LCD_sendbyte
  2300  00093A                     
  2301                           ;LCD.c: 88:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  2302  00093A  0EA0               	movlw	160
  2303  00093C                     u2097:
  2304  00093C  D000               	nop2	
  2305  00093E  2EE8               	decfsz	wreg,f,c
  2306  000940  D7FD               	bra	u2097
  2307  000942                     
  2308                           ;LCD.c: 91:     LCD_sendbyte(0b00001100,0);
  2309  000942  0E00               	movlw	0
  2310  000944  6E06               	movwf	LCD_sendbyte@type^0,c
  2311  000946  0E0C               	movlw	12
  2312  000948  EC4F  F005         	call	_LCD_sendbyte
  2313  00094C                     
  2314                           ;LCD.c: 92:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  2315  00094C  0EA0               	movlw	160
  2316  00094E                     u2107:
  2317  00094E  D000               	nop2	
  2318  000950  2EE8               	decfsz	wreg,f,c
  2319  000952  D7FD               	bra	u2107
  2320  000954  0012               	return		;funcret
  2321  000956                     __end_of_LCD_init:
  2322                           	callstack 0
  2323                           
  2324 ;; *************** function _LCD_sendbyte *****************
  2325 ;; Defined at:
  2326 ;;		line 34 in file "LCD.c"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;  Byte            1    wreg     unsigned char 
  2329 ;;  type            1    5[COMRAM] unsigned char 
  2330 ;; Auto vars:     Size  Location     Type
  2331 ;;  Byte            1    6[COMRAM] unsigned char 
  2332 ;; Return value:  Size  Location     Type
  2333 ;;                  1    wreg      void 
  2334 ;; Registers used:
  2335 ;;		wreg, status,2, status,0, cstack
  2336 ;; Tracked objects:
  2337 ;;		On entry : 0/0
  2338 ;;		On exit  : 0/0
  2339 ;;		Unchanged: 0/0
  2340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2341 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2342 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2344 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2345 ;;Total ram usage:        2 bytes
  2346 ;; Hardware stack levels used: 1
  2347 ;; Hardware stack levels required when called: 4
  2348 ;; This function calls:
  2349 ;;		_LCD_sendnibble
  2350 ;; This function is called by:
  2351 ;;		_LCD_init
  2352 ;;		_LCD_setline
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356                           	psect	text15
  2357  000A9E                     __ptext15:
  2358                           	callstack 0
  2359  000A9E                     _LCD_sendbyte:
  2360                           	callstack 25
  2361                           
  2362                           ;incstack = 0
  2363                           ;LCD_sendbyte@Byte stored from wreg
  2364  000A9E  6E07               	movwf	LCD_sendbyte@Byte^0,c
  2365  000AA0                     
  2366                           ;LCD.c: 34: void LCD_sendbyte(unsigned char Byte, char type);LCD.c: 35: {;LCD.c: 37:    
      +                           if (type) {LATCbits.LATC6 = 1;} else {LATCbits.LATC6 = 0;}
  2367  000AA0  5006               	movf	LCD_sendbyte@type^0,w,c
  2368  000AA2  B4D8               	btfsc	status,2,c
  2369  000AA4  EF56  F005         	goto	u1081
  2370  000AA8  EF58  F005         	goto	u1080
  2371  000AAC                     u1081:
  2372  000AAC  EF5B  F005         	goto	l214
  2373  000AB0                     u1080:
  2374  000AB0  8C7B               	bsf	123,6,c	;volatile
  2375  000AB2  EF5C  F005         	goto	l1444
  2376  000AB6                     l214:
  2377  000AB6  9C7B               	bcf	123,6,c	;volatile
  2378  000AB8                     l1444:
  2379                           
  2380                           ;LCD.c: 40:     LCD_sendnibble(Byte>>4);
  2381  000AB8  3807               	swapf	LCD_sendbyte@Byte^0,w,c
  2382  000ABA  0B0F               	andlw	15
  2383  000ABC  ECAB  F004         	call	_LCD_sendnibble
  2384                           
  2385                           ;LCD.c: 43:     LCD_sendnibble(Byte&0b00001111);
  2386  000AC0  5007               	movf	LCD_sendbyte@Byte^0,w,c
  2387  000AC2  0B0F               	andlw	15
  2388  000AC4  ECAB  F004         	call	_LCD_sendnibble
  2389  000AC8                     
  2390                           ;LCD.c: 46:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  2391  000AC8  0EA0               	movlw	160
  2392  000ACA                     u2117:
  2393  000ACA  D000               	nop2	
  2394  000ACC  2EE8               	decfsz	wreg,f,c
  2395  000ACE  D7FD               	bra	u2117
  2396  000AD0  0012               	return		;funcret
  2397  000AD2                     __end_of_LCD_sendbyte:
  2398                           	callstack 0
  2399                           
  2400 ;; *************** function _LCD_sendnibble *****************
  2401 ;; Defined at:
  2402 ;;		line 18 in file "LCD.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;  number          1    wreg     unsigned char 
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;  number          1    4[COMRAM] unsigned char 
  2407 ;; Return value:  Size  Location     Type
  2408 ;;                  1    wreg      void 
  2409 ;; Registers used:
  2410 ;;		wreg, cstack
  2411 ;; Tracked objects:
  2412 ;;		On entry : 0/0
  2413 ;;		On exit  : 0/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2417 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2419 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2420 ;;Total ram usage:        1 bytes
  2421 ;; Hardware stack levels used: 1
  2422 ;; Hardware stack levels required when called: 3
  2423 ;; This function calls:
  2424 ;;		_LCD_E_TOG
  2425 ;; This function is called by:
  2426 ;;		_LCD_sendbyte
  2427 ;;		_LCD_init
  2428 ;; This function uses a non-reentrant model
  2429 ;;
  2430                           
  2431                           	psect	text16
  2432  000956                     __ptext16:
  2433                           	callstack 0
  2434  000956                     _LCD_sendnibble:
  2435                           	callstack 26
  2436                           
  2437                           ;incstack = 0
  2438                           ;LCD_sendnibble@number stored from wreg
  2439  000956  6E05               	movwf	LCD_sendnibble@number^0,c
  2440  000958                     
  2441                           ;LCD.c: 18: void LCD_sendnibble(unsigned char number);LCD.c: 19: {;LCD.c: 21:     if (nu
      +                          mber & 0b0001) {LATBbits.LATB3 = 1;} else {LATBbits.LATB3 = 0;}
  2442  000958  A005               	btfss	LCD_sendnibble@number^0,0,c
  2443  00095A  EFB1  F004         	goto	u1021
  2444  00095E  EFB3  F004         	goto	u1020
  2445  000962                     u1021:
  2446  000962  EFB6  F004         	goto	l203
  2447  000966                     u1020:
  2448  000966  867A               	bsf	122,3,c	;volatile
  2449  000968  EFB7  F004         	goto	l1406
  2450  00096C                     l203:
  2451  00096C  967A               	bcf	122,3,c	;volatile
  2452  00096E                     l1406:
  2453                           
  2454                           ;LCD.c: 22:     if (number & 0b0010) {LATBbits.LATB2 = 1;} else {LATBbits.LATB2 = 0;}
  2455  00096E  A205               	btfss	LCD_sendnibble@number^0,1,c
  2456  000970  EFBC  F004         	goto	u1031
  2457  000974  EFBE  F004         	goto	u1030
  2458  000978                     u1031:
  2459  000978  EFC1  F004         	goto	l205
  2460  00097C                     u1030:
  2461  00097C  847A               	bsf	122,2,c	;volatile
  2462  00097E  EFC2  F004         	goto	l1410
  2463  000982                     l205:
  2464  000982  947A               	bcf	122,2,c	;volatile
  2465  000984                     l1410:
  2466                           
  2467                           ;LCD.c: 23:     if (number & 0b0100) {LATEbits.LATE3 = 1;} else {LATEbits.LATE3 = 0;}
  2468  000984  A405               	btfss	LCD_sendnibble@number^0,2,c
  2469  000986  EFC7  F004         	goto	u1041
  2470  00098A  EFC9  F004         	goto	u1040
  2471  00098E                     u1041:
  2472  00098E  EFCC  F004         	goto	l207
  2473  000992                     u1040:
  2474  000992  867D               	bsf	125,3,c	;volatile
  2475  000994  EFCD  F004         	goto	l1414
  2476  000998                     l207:
  2477  000998  967D               	bcf	125,3,c	;volatile
  2478  00099A                     l1414:
  2479                           
  2480                           ;LCD.c: 24:     if (number & 0b1000) {LATEbits.LATE1 = 1;} else {LATEbits.LATE1 = 0;}
  2481  00099A  A605               	btfss	LCD_sendnibble@number^0,3,c
  2482  00099C  EFD2  F004         	goto	u1051
  2483  0009A0  EFD4  F004         	goto	u1050
  2484  0009A4                     u1051:
  2485  0009A4  EFD7  F004         	goto	l209
  2486  0009A8                     u1050:
  2487  0009A8  827D               	bsf	125,1,c	;volatile
  2488  0009AA  EFD8  F004         	goto	l1418
  2489  0009AE                     l209:
  2490  0009AE  927D               	bcf	125,1,c	;volatile
  2491  0009B0                     l1418:
  2492                           
  2493                           ;LCD.c: 26:     LCD_E_TOG();
  2494  0009B0  ECD8  F005         	call	_LCD_E_TOG	;wreg free
  2495  0009B4                     
  2496                           ;LCD.c: 27:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  2497  0009B4  0E1A               	movlw	26
  2498  0009B6                     u2127:
  2499  0009B6  2EE8               	decfsz	wreg,f,c
  2500  0009B8  D7FE               	bra	u2127
  2501  0009BA  D000               	nop2	
  2502  0009BC  0012               	return		;funcret
  2503  0009BE                     __end_of_LCD_sendnibble:
  2504                           	callstack 0
  2505                           
  2506 ;; *************** function _LCD_E_TOG *****************
  2507 ;; Defined at:
  2508 ;;		line 8 in file "LCD.c"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;		None
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;		None
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  1    wreg      void 
  2515 ;; Registers used:
  2516 ;;		wreg
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2526 ;;Total ram usage:        0 bytes
  2527 ;; Hardware stack levels used: 1
  2528 ;; Hardware stack levels required when called: 2
  2529 ;; This function calls:
  2530 ;;		Nothing
  2531 ;; This function is called by:
  2532 ;;		_LCD_sendnibble
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535                           
  2536                           	psect	text17
  2537  000BB0                     __ptext17:
  2538                           	callstack 0
  2539  000BB0                     _LCD_E_TOG:
  2540                           	callstack 26
  2541  000BB0                     
  2542                           ;LCD.c: 10:  LATCbits.LATC2 = 1;
  2543  000BB0  847B               	bsf	123,2,c	;volatile
  2544  000BB2                     
  2545                           ;LCD.c: 11:  _delay((unsigned long)((2)*(64000000/4000000.0)));
  2546  000BB2  0E0A               	movlw	10
  2547  000BB4                     u2137:
  2548  000BB4  2EE8               	decfsz	wreg,f,c
  2549  000BB6  D7FE               	bra	u2137
  2550  000BB8  D000               	nop2	
  2551  000BBA                     
  2552                           ;LCD.c: 12:  LATCbits.LATC2 = 0;
  2553  000BBA  947B               	bcf	123,2,c	;volatile
  2554  000BBC  0012               	return		;funcret
  2555  000BBE                     __end_of_LCD_E_TOG:
  2556                           	callstack 0
  2557                           
  2558 ;; *************** function _Interrupts_init *****************
  2559 ;; Defined at:
  2560 ;;		line 9 in file "interrupts.c"
  2561 ;; Parameters:    Size  Location     Type
  2562 ;;  current        11    4[COMRAM] struct .
  2563 ;; Auto vars:     Size  Location     Type
  2564 ;;		None
  2565 ;; Return value:  Size  Location     Type
  2566 ;;                  1    wreg      void 
  2567 ;; Registers used:
  2568 ;;		wreg, status,2, status,0
  2569 ;; Tracked objects:
  2570 ;;		On entry : 0/0
  2571 ;;		On exit  : 0/0
  2572 ;;		Unchanged: 0/0
  2573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2574 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2577 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2578 ;;Total ram usage:       11 bytes
  2579 ;; Hardware stack levels used: 1
  2580 ;; Hardware stack levels required when called: 2
  2581 ;; This function calls:
  2582 ;;		Nothing
  2583 ;; This function is called by:
  2584 ;;		_main
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587                           
  2588                           	psect	text18
  2589  000A5C                     __ptext18:
  2590                           	callstack 0
  2591  000A5C                     _Interrupts_init:
  2592                           	callstack 28
  2593  000A5C                     
  2594                           ;interrupts.c: 12:     if (current.hour<1 || current.hour>=5) {PIE2bits.C1IE = 1;}
  2595  000A5C  500A               	movf	(Interrupts_init@current+5)^0,w,c
  2596  000A5E  0A80               	xorlw	128
  2597  000A60  0F7F               	addlw	-129
  2598  000A62  A0D8               	btfss	status,0,c
  2599  000A64  EF36  F005         	goto	u1451
  2600  000A68  EF38  F005         	goto	u1450
  2601  000A6C                     u1451:
  2602  000A6C  EF42  F005         	goto	l150
  2603  000A70                     u1450:
  2604  000A70  500A               	movf	(Interrupts_init@current+5)^0,w,c
  2605  000A72  0A80               	xorlw	128
  2606  000A74  0F7B               	addlw	-133
  2607  000A76  A0D8               	btfss	status,0,c
  2608  000A78  EF40  F005         	goto	u1461
  2609  000A7C  EF42  F005         	goto	u1460
  2610  000A80                     u1461:
  2611  000A80  EF46  F005         	goto	l148
  2612  000A84                     u1460:
  2613  000A84                     l150:
  2614  000A84  010E               	movlb	14	; () banked
  2615  000A86  812B               	bsf	43,0,b	;volatile
  2616  000A88  EF48  F005         	goto	l151
  2617  000A8C                     l148:
  2618  000A8C  010E               	movlb	14	; () banked
  2619  000A8E  912B               	bcf	43,0,b	;volatile
  2620  000A90                     l151:
  2621                           
  2622                           ; BSR set to: 14
  2623                           ;interrupts.c: 14:     PIE0bits.TMR0IE = 1;
  2624  000A90  8B29               	bsf	41,5,b	;volatile
  2625                           
  2626                           ;interrupts.c: 15:     IPR2bits.C1IP = 1;
  2627  000A92  8121               	bsf	33,0,b	;volatile
  2628                           
  2629                           ;interrupts.c: 16:     IPR0bits.TMR0IP = 0;
  2630  000A94  9B1F               	bcf	31,5,b	;volatile
  2631                           
  2632                           ;interrupts.c: 17:     INTCONbits.IPEN = 1;
  2633  000A96  8AF2               	bsf	242,5,c	;volatile
  2634                           
  2635                           ;interrupts.c: 18:     INTCONbits.PEIE = 1;
  2636  000A98  8CF2               	bsf	242,6,c	;volatile
  2637                           
  2638                           ;interrupts.c: 19:     INTCONbits.GIE = 1;
  2639  000A9A  8EF2               	bsf	242,7,c	;volatile
  2640  000A9C                     
  2641                           ; BSR set to: 14
  2642  000A9C  0012               	return		;funcret
  2643  000A9E                     __end_of_Interrupts_init:
  2644                           	callstack 0
  2645                           
  2646 ;; *************** function _Comp1_init *****************
  2647 ;; Defined at:
  2648 ;;		line 23 in file "comparator.c"
  2649 ;; Parameters:    Size  Location     Type
  2650 ;;		None
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;		None
  2653 ;; Return value:  Size  Location     Type
  2654 ;;                  1    wreg      void 
  2655 ;; Registers used:
  2656 ;;		wreg, status,2, cstack
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2666 ;;Total ram usage:        0 bytes
  2667 ;; Hardware stack levels used: 1
  2668 ;; Hardware stack levels required when called: 3
  2669 ;; This function calls:
  2670 ;;		_DAC_init
  2671 ;; This function is called by:
  2672 ;;		_main
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           	psect	text19
  2677  000AF8                     __ptext19:
  2678                           	callstack 0
  2679  000AF8                     _Comp1_init:
  2680                           	callstack 27
  2681  000AF8                     
  2682                           ;comparator.c: 25:     TRISFbits.TRISF7=1;
  2683  000AF8  8E86               	bsf	134,7,c	;volatile
  2684  000AFA                     
  2685                           ;comparator.c: 26:     CM1NCHbits.NCH=0b011;
  2686  000AFA  010E               	movlb	14	; () banked
  2687  000AFC  51D2               	movf	210,w,b	;volatile
  2688  000AFE  0BF8               	andlw	-8
  2689  000B00  0903               	iorlw	3
  2690  000B02  6FD2               	movwf	210,b	;volatile
  2691                           
  2692                           ;comparator.c: 27:     CM1PCHbits.PCH=0b101;
  2693  000B04  51D3               	movf	211,w,b	;volatile
  2694  000B06  0BF8               	andlw	-8
  2695  000B08  0905               	iorlw	5
  2696  000B0A  6FD3               	movwf	211,b	;volatile
  2697  000B0C                     
  2698                           ; BSR set to: 14
  2699                           ;comparator.c: 28:     CM1CON0bits.HYS=1;
  2700  000B0C  83D0               	bsf	208,1,b	;volatile
  2701  000B0E                     
  2702                           ; BSR set to: 14
  2703                           ;comparator.c: 29:     CM1CON0bits.POL=1;
  2704  000B0E  89D0               	bsf	208,4,b	;volatile
  2705  000B10                     
  2706                           ; BSR set to: 14
  2707                           ;comparator.c: 30:     CM1CON1bits.INTP=1;
  2708  000B10  83D1               	bsf	209,1,b	;volatile
  2709  000B12                     
  2710                           ; BSR set to: 14
  2711                           ;comparator.c: 31:     CM1CON1bits.INTN=1;
  2712  000B12  81D1               	bsf	209,0,b	;volatile
  2713  000B14                     
  2714                           ; BSR set to: 14
  2715                           ;comparator.c: 32:     DAC_init();
  2716  000B14  ECC6  F005         	call	_DAC_init	;wreg free
  2717  000B18                     
  2718                           ;comparator.c: 33:     CM1CON0bits.EN=1;
  2719  000B18  010E               	movlb	14	; () banked
  2720  000B1A  8FD0               	bsf	208,7,b	;volatile
  2721  000B1C                     
  2722                           ; BSR set to: 14
  2723  000B1C  0012               	return		;funcret
  2724  000B1E                     __end_of_Comp1_init:
  2725                           	callstack 0
  2726                           
  2727 ;; *************** function _DAC_init *****************
  2728 ;; Defined at:
  2729 ;;		line 7 in file "comparator.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;		None
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;		None
  2734 ;; Return value:  Size  Location     Type
  2735 ;;                  1    wreg      void 
  2736 ;; Registers used:
  2737 ;;		wreg, status,2
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2747 ;;Total ram usage:        0 bytes
  2748 ;; Hardware stack levels used: 1
  2749 ;; Hardware stack levels required when called: 2
  2750 ;; This function calls:
  2751 ;;		Nothing
  2752 ;; This function is called by:
  2753 ;;		_Comp1_init
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756                           
  2757                           	psect	text20
  2758  000B8C                     __ptext20:
  2759                           	callstack 0
  2760  000B8C                     _DAC_init:
  2761                           	callstack 27
  2762  000B8C                     
  2763                           ;comparator.c: 9:     DAC1CON0bits.PSS=0b00;
  2764  000B8C  0EF3               	movlw	-13
  2765  000B8E  010E               	movlb	14	; () banked
  2766  000B90  17C6               	andwf	198,f,b	;volatile
  2767  000B92                     
  2768                           ; BSR set to: 14
  2769                           ;comparator.c: 10:     DAC1CON0bits.NSS=0b0;
  2770  000B92  91C6               	bcf	198,0,b	;volatile
  2771                           
  2772                           ;comparator.c: 15:     DAC1CON1bits.DAC1R=0b11011;
  2773  000B94  51C7               	movf	199,w,b	;volatile
  2774  000B96  0BE0               	andlw	-32
  2775  000B98  091B               	iorlw	27
  2776  000B9A  6FC7               	movwf	199,b	;volatile
  2777  000B9C                     
  2778                           ; BSR set to: 14
  2779                           ;comparator.c: 16:     DAC1CON0bits.DAC1EN=1;
  2780  000B9C  8FC6               	bsf	198,7,b	;volatile
  2781  000B9E                     
  2782                           ; BSR set to: 14
  2783  000B9E  0012               	return		;funcret
  2784  000BA0                     __end_of_DAC_init:
  2785                           	callstack 0
  2786                           
  2787 ;; *************** function _ADC_init *****************
  2788 ;; Defined at:
  2789 ;;		line 8 in file "ADC.c"
  2790 ;; Parameters:    Size  Location     Type
  2791 ;;		None
  2792 ;; Auto vars:     Size  Location     Type
  2793 ;;		None
  2794 ;; Return value:  Size  Location     Type
  2795 ;;                  1    wreg      void 
  2796 ;; Registers used:
  2797 ;;		wreg, status,2
  2798 ;; Tracked objects:
  2799 ;;		On entry : 0/0
  2800 ;;		On exit  : 0/0
  2801 ;;		Unchanged: 0/0
  2802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2807 ;;Total ram usage:        0 bytes
  2808 ;; Hardware stack levels used: 1
  2809 ;; Hardware stack levels required when called: 2
  2810 ;; This function calls:
  2811 ;;		Nothing
  2812 ;; This function is called by:
  2813 ;;		_main
  2814 ;; This function uses a non-reentrant model
  2815 ;;
  2816                           
  2817                           	psect	text21
  2818  000B5A                     __ptext21:
  2819                           	callstack 0
  2820  000B5A                     _ADC_init:
  2821                           	callstack 28
  2822  000B5A                     
  2823                           ;ADC.c: 10:     TRISFbits.TRISF7=1;
  2824  000B5A  8E86               	bsf	134,7,c	;volatile
  2825                           
  2826                           ;ADC.c: 11:     ANSELFbits.ANSELF7=1;
  2827  000B5C  010E               	movlb	14	; () banked
  2828  000B5E  8FB4               	bsf	180,7,b	;volatile
  2829                           
  2830                           ;ADC.c: 14:     ADREFbits.ADNREF = 0;
  2831  000B60  010F               	movlb	15	; () banked
  2832  000B62  9958               	bcf	88,4,b	;volatile
  2833  000B64                     
  2834                           ; BSR set to: 15
  2835                           ;ADC.c: 15:     ADREFbits.ADPREF = 0b00;
  2836  000B64  0EFC               	movlw	-4
  2837  000B66  1758               	andwf	88,f,b	;volatile
  2838                           
  2839                           ;ADC.c: 16:     ADPCH=0b101111;
  2840  000B68  0E2F               	movlw	47
  2841  000B6A  6F5F               	movwf	95,b	;volatile
  2842  000B6C                     
  2843                           ; BSR set to: 15
  2844                           ;ADC.c: 17:     ADCON0bits.ADFM = 0;
  2845  000B6C  9460               	bcf	96,2,c	;volatile
  2846  000B6E                     
  2847                           ; BSR set to: 15
  2848                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
  2849  000B6E  8860               	bsf	96,4,c	;volatile
  2850  000B70                     
  2851                           ; BSR set to: 15
  2852                           ;ADC.c: 19:     ADCON0bits.ADON = 1;
  2853  000B70  8E60               	bsf	96,7,c	;volatile
  2854  000B72                     
  2855                           ; BSR set to: 15
  2856  000B72  0012               	return		;funcret
  2857  000B74                     __end_of_ADC_init:
  2858                           	callstack 0
  2859                           
  2860 ;; *************** function _LowISR *****************
  2861 ;; Defined at:
  2862 ;;		line 47 in file "interrupts.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;		None
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;		None
  2867 ;; Return value:  Size  Location     Type
  2868 ;;                  1    wreg      void 
  2869 ;; Registers used:
  2870 ;;		wreg, status,2
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2878 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2879 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2880 ;;Total ram usage:        3 bytes
  2881 ;; Hardware stack levels used: 1
  2882 ;; Hardware stack levels required when called: 1
  2883 ;; This function calls:
  2884 ;;		Nothing
  2885 ;; This function is called by:
  2886 ;;		Interrupt level 1
  2887 ;; This function uses a non-reentrant model
  2888 ;;
  2889                           
  2890                           	psect	intcodelo
  2891  000018                     __pintcodelo:
  2892                           	callstack 0
  2893  000018                     _LowISR:
  2894                           	callstack 25
  2895                           
  2896                           ; BSR set to: 15
  2897                           ;incstack = 0
  2898  000018  802C               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  2899  00001A  CFD8 F002          	movff	status,??_LowISR
  2900  00001E  CFE8 F003          	movff	wreg,??_LowISR+1
  2901  000022  CFE0 F004          	movff	bsr,??_LowISR+2
  2902  000026                     
  2903                           ;interrupts.c: 49:     if (PIR0bits.TMR0IF) {
  2904  000026  010E               	movlb	14	; () banked
  2905  000028  AB33               	btfss	51,5,b	;volatile
  2906  00002A  EF19  F000         	goto	i1u200_21
  2907  00002E  EF1B  F000         	goto	i1u200_20
  2908  000032                     i1u200_21:
  2909  000032  EF22  F000         	goto	i1l172
  2910  000036                     i1u200_20:
  2911  000036                     
  2912                           ; BSR set to: 14
  2913                           ;interrupts.c: 50:         TMR0H = 0b11101110;
  2914  000036  0EEE               	movlw	238
  2915  000038  6ED4               	movwf	212,c	;volatile
  2916                           
  2917                           ;interrupts.c: 51:         TMR0L = 0b10100011;
  2918  00003A  0EA3               	movlw	163
  2919  00003C  6ED3               	movwf	211,c	;volatile
  2920                           
  2921                           ;interrupts.c: 53:         time_flag = 1;
  2922  00003E  0E01               	movlw	1
  2923  000040  6E29               	movwf	_time_flag^0,c	;volatile
  2924  000042                     
  2925                           ; BSR set to: 14
  2926                           ;interrupts.c: 54:         PIR0bits.TMR0IF = 0;
  2927  000042  9B33               	bcf	51,5,b	;volatile
  2928  000044                     i1l172:
  2929                           
  2930                           ; BSR set to: 14
  2931  000044  C004  FFE0         	movff	??_LowISR+2,bsr
  2932  000048  C003  FFE8         	movff	??_LowISR+1,wreg
  2933  00004C  C002  FFD8         	movff	??_LowISR,status
  2934  000050  902C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2935  000052  0010               	retfie	
  2936  000054                     __end_of_LowISR:
  2937                           	callstack 0
  2938                           
  2939 ;; *************** function _HighISR *****************
  2940 ;; Defined at:
  2941 ;;		line 30 in file "interrupts.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;		None
  2944 ;; Auto vars:     Size  Location     Type
  2945 ;;		None
  2946 ;; Return value:  Size  Location     Type
  2947 ;;                  1    wreg      void 
  2948 ;; Registers used:
  2949 ;;		wreg, status,2, status,0
  2950 ;; Tracked objects:
  2951 ;;		On entry : 0/0
  2952 ;;		On exit  : 0/0
  2953 ;;		Unchanged: 0/0
  2954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2957 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2958 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2959 ;;Total ram usage:        1 bytes
  2960 ;; Hardware stack levels used: 1
  2961 ;; This function calls:
  2962 ;;		Nothing
  2963 ;; This function is called by:
  2964 ;;		Interrupt level 2
  2965 ;; This function uses a non-reentrant model
  2966 ;;
  2967                           
  2968                           	psect	intcode
  2969  000008                     __pintcode:
  2970                           	callstack 0
  2971  000008                     _HighISR:
  2972                           	callstack 25
  2973                           
  2974                           ; BSR set to: 14
  2975                           ;incstack = 0
  2976  000008  822C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2977  00000A  EFDF  F004         	goto	int_func
  2978                           
  2979                           	psect	intcode_body
  2980  0009BE                     __pintcode_body:
  2981                           	callstack 25
  2982  0009BE                     int_func:
  2983                           	callstack 25
  2984  0009BE                     
  2985                           ;interrupts.c: 32:     if (PIR2bits.C1IF) {
  2986  0009BE  010E               	movlb	14	; () banked
  2987  0009C0  A135               	btfss	53,0,b	;volatile
  2988  0009C2  EFE5  F004         	goto	i2u196_41
  2989  0009C6  EFE7  F004         	goto	i2u196_40
  2990  0009CA                     i2u196_41:
  2991  0009CA  EF07  F005         	goto	i2l164
  2992  0009CE                     i2u196_40:
  2993  0009CE                     
  2994                           ; BSR set to: 14
  2995                           ;interrupts.c: 33:         LATDbits.LATD7 = !LATDbits.LATD7;
  2996  0009CE  AE7C               	btfss	124,7,c	;volatile
  2997  0009D0  EFEC  F004         	goto	i2u197_41
  2998  0009D4  EFF0  F004         	goto	i2u197_40
  2999  0009D8                     i2u197_41:
  3000  0009D8  6A01               	clrf	??_HighISR^0,c
  3001  0009DA  2A01               	incf	??_HighISR^0,f,c
  3002  0009DC  EFF1  F004         	goto	i2u198_48
  3003  0009E0                     i2u197_40:
  3004  0009E0  6A01               	clrf	??_HighISR^0,c
  3005  0009E2                     i2u198_48:
  3006  0009E2  3201               	rrcf	??_HighISR^0,f,c
  3007  0009E4  3201               	rrcf	??_HighISR^0,f,c
  3008  0009E6  507C               	movf	124,w,c	;volatile
  3009  0009E8  1801               	xorwf	??_HighISR^0,w,c
  3010  0009EA  0B7F               	andlw	-129
  3011  0009EC  1801               	xorwf	??_HighISR^0,w,c
  3012  0009EE  6E7C               	movwf	124,c	;volatile
  3013  0009F0                     
  3014                           ;interrupts.c: 34:         if (LATDbits.LATD7==0) {sunrise_flag=1;}
  3015  0009F0  BE7C               	btfsc	124,7,c	;volatile
  3016  0009F2  EFFD  F004         	goto	i2u199_41
  3017  0009F6  EFFF  F004         	goto	i2u199_40
  3018  0009FA                     i2u199_41:
  3019  0009FA  EF03  F005         	goto	i2l1800
  3020  0009FE                     i2u199_40:
  3021  0009FE  0E01               	movlw	1
  3022  000A00  6E2B               	movwf	_sunrise_flag^0,c	;volatile
  3023  000A02  EF05  F005         	goto	i2l1802
  3024  000A06                     i2l1800:
  3025  000A06  0E01               	movlw	1
  3026  000A08  6E2A               	movwf	_sunset_flag^0,c	;volatile
  3027  000A0A                     i2l1802:
  3028                           
  3029                           ;interrupts.c: 36:         PIR2bits.C1IF = 0;
  3030  000A0A  010E               	movlb	14	; () banked
  3031  000A0C  9135               	bcf	53,0,b	;volatile
  3032  000A0E                     i2l164:
  3033                           
  3034                           ; BSR set to: 14
  3035  000A0E  922C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3036  000A10  0011               	retfie		f
  3037  000A12                     __end_of_HighISR:
  3038                           	callstack 0
  3039  0000                     
  3040                           	psect	rparam
  3041  0000                     
  3042                           	psect	temp
  3043  00002C                     btemp:
  3044                           	callstack 0
  3045  00002C                     	ds	1
  3046  0000                     int$flags	set	btemp
  3047  0000                     wtemp8	set	btemp+1
  3048  0000                     ttemp5	set	btemp+1
  3049  0000                     ttemp6	set	btemp+4
  3050  0000                     ttemp7	set	btemp+8
  3051                           
  3052                           	psect	idloc
  3053                           
  3054                           ;Config register IDLOC0 @ 0x200000
  3055                           ;	unspecified, using default values
  3056  200000                     	org	2097152
  3057  200000  0FFF               	dw	4095
  3058                           
  3059                           ;Config register IDLOC1 @ 0x200002
  3060                           ;	unspecified, using default values
  3061  200002                     	org	2097154
  3062  200002  0FFF               	dw	4095
  3063                           
  3064                           ;Config register IDLOC2 @ 0x200004
  3065                           ;	unspecified, using default values
  3066  200004                     	org	2097156
  3067  200004  0FFF               	dw	4095
  3068                           
  3069                           ;Config register IDLOC3 @ 0x200006
  3070                           ;	unspecified, using default values
  3071  200006                     	org	2097158
  3072  200006  0FFF               	dw	4095
  3073                           
  3074                           ;Config register IDLOC4 @ 0x200008
  3075                           ;	unspecified, using default values
  3076  200008                     	org	2097160
  3077  200008  0FFF               	dw	4095
  3078                           
  3079                           ;Config register IDLOC5 @ 0x20000A
  3080                           ;	unspecified, using default values
  3081  20000A                     	org	2097162
  3082  20000A  0FFF               	dw	4095
  3083                           
  3084                           ;Config register IDLOC6 @ 0x20000C
  3085                           ;	unspecified, using default values
  3086  20000C                     	org	2097164
  3087  20000C  0FFF               	dw	4095
  3088                           
  3089                           ;Config register IDLOC7 @ 0x20000E
  3090                           ;	unspecified, using default values
  3091  20000E                     	org	2097166
  3092  20000E  0FFF               	dw	4095
  3093                           
  3094                           	psect	config
  3095                           
  3096                           ;Config register CONFIG1L @ 0x300000
  3097                           ;	External Oscillator mode Selection bits
  3098                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3099                           ;	Power-up default value for COSC bits
  3100                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3101  300000                     	org	3145728
  3102  300000  AA                 	db	170
  3103                           
  3104                           ;Config register CONFIG1H @ 0x300001
  3105                           ;	unspecified, using default values
  3106                           ;	Clock Out Enable bit
  3107                           ;	CLKOUTEN = 0x1, unprogrammed default
  3108                           ;	Clock Switch Enable bit
  3109                           ;	CSWEN = 0x1, unprogrammed default
  3110                           ;	Fail-Safe Clock Monitor Enable bit
  3111                           ;	FCMEN = 0x1, unprogrammed default
  3112  300001                     	org	3145729
  3113  300001  FF                 	db	255
  3114                           
  3115                           ;Config register CONFIG2L @ 0x300002
  3116                           ;	unspecified, using default values
  3117                           ;	Master Clear Enable bit
  3118                           ;	MCLRE = 0x1, unprogrammed default
  3119                           ;	Power-up Timer Enable bit
  3120                           ;	PWRTE = 0x1, unprogrammed default
  3121                           ;	Low-power BOR enable bit
  3122                           ;	LPBOREN = 0x1, unprogrammed default
  3123                           ;	Brown-out Reset Enable bits
  3124                           ;	BOREN = 0x3, unprogrammed default
  3125  300002                     	org	3145730
  3126  300002  FF                 	db	255
  3127                           
  3128                           ;Config register CONFIG2H @ 0x300003
  3129                           ;	unspecified, using default values
  3130                           ;	Brown Out Reset Voltage selection bits
  3131                           ;	BORV = 0x3, unprogrammed default
  3132                           ;	ZCD Disable bit
  3133                           ;	ZCD = 0x1, unprogrammed default
  3134                           ;	PPSLOCK bit One-Way Set Enable bit
  3135                           ;	PPS1WAY = 0x1, unprogrammed default
  3136                           ;	Stack Full/Underflow Reset Enable bit
  3137                           ;	STVREN = 0x1, unprogrammed default
  3138                           ;	Debugger Enable bit
  3139                           ;	DEBUG = 0x1, unprogrammed default
  3140                           ;	Extended Instruction Set Enable bit
  3141                           ;	XINST = 0x1, unprogrammed default
  3142  300003                     	org	3145731
  3143  300003  FF                 	db	255
  3144                           
  3145                           ;Config register CONFIG3L @ 0x300004
  3146                           ;	WDT Period Select bits
  3147                           ;	WDTCPS = 0x1F, unprogrammed default
  3148                           ;	WDT operating mode
  3149                           ;	WDTE = OFF, WDT Disabled
  3150  300004                     	org	3145732
  3151  300004  9F                 	db	159
  3152                           
  3153                           ;Config register CONFIG3H @ 0x300005
  3154                           ;	unspecified, using default values
  3155                           ;	WDT Window Select bits
  3156                           ;	WDTCWS = 0x7, unprogrammed default
  3157                           ;	WDT input clock selector
  3158                           ;	WDTCCS = 0x7, unprogrammed default
  3159  300005                     	org	3145733
  3160  300005  FF                 	db	255
  3161                           
  3162                           ;Config register CONFIG4L @ 0x300006
  3163                           ;	unspecified, using default values
  3164                           ;	Write Protection Block 0
  3165                           ;	WRT0 = 0x1, unprogrammed default
  3166                           ;	Write Protection Block 1
  3167                           ;	WRT1 = 0x1, unprogrammed default
  3168                           ;	Write Protection Block 2
  3169                           ;	WRT2 = 0x1, unprogrammed default
  3170                           ;	Write Protection Block 3
  3171                           ;	WRT3 = 0x1, unprogrammed default
  3172                           ;	Write Protection Block 3
  3173                           ;	WRT4 = 0x1, unprogrammed default
  3174                           ;	Write Protection Block 3
  3175                           ;	WRT5 = 0x1, unprogrammed default
  3176                           ;	Write Protection Block 3
  3177                           ;	WRT6 = 0x1, unprogrammed default
  3178                           ;	Write Protection Block 3
  3179                           ;	WRT7 = 0x1, unprogrammed default
  3180  300006                     	org	3145734
  3181  300006  FF                 	db	255
  3182                           
  3183                           ;Config register CONFIG4H @ 0x300007
  3184                           ;	unspecified, using default values
  3185                           ;	Configuration Register Write Protection bit
  3186                           ;	WRTC = 0x1, unprogrammed default
  3187                           ;	Boot Block Write Protection bit
  3188                           ;	WRTB = 0x1, unprogrammed default
  3189                           ;	Data EEPROM Write Protection bit
  3190                           ;	WRTD = 0x1, unprogrammed default
  3191                           ;	Scanner Enable bit
  3192                           ;	SCANE = 0x1, unprogrammed default
  3193                           ;	Low Voltage Programming Enable bit
  3194                           ;	LVP = 0x1, unprogrammed default
  3195  300007                     	org	3145735
  3196  300007  FF                 	db	255
  3197                           
  3198                           ;Config register CONFIG5L @ 0x300008
  3199                           ;	unspecified, using default values
  3200                           ;	UserNVM Program Memory Code Protection bit
  3201                           ;	CP = 0x1, unprogrammed default
  3202                           ;	DataNVM Memory Code Protection bit
  3203                           ;	CPD = 0x1, unprogrammed default
  3204  300008                     	org	3145736
  3205  300008  FF                 	db	255
  3206                           
  3207                           ;Config register CONFIG5H @ 0x300009
  3208                           ;	unspecified, using default values
  3209  300009                     	org	3145737
  3210  300009  FF                 	db	255
  3211                           
  3212                           ;Config register CONFIG6L @ 0x30000A
  3213                           ;	unspecified, using default values
  3214                           ;	Table Read Protection Block 0
  3215                           ;	EBTR0 = 0x1, unprogrammed default
  3216                           ;	Table Read Protection Block 1
  3217                           ;	EBTR1 = 0x1, unprogrammed default
  3218                           ;	Table Read Protection Block 2
  3219                           ;	EBTR2 = 0x1, unprogrammed default
  3220                           ;	Table Read Protection Block 3
  3221                           ;	EBTR3 = 0x1, unprogrammed default
  3222                           ;	Table Read Protection Block 4
  3223                           ;	EBTR4 = 0x1, unprogrammed default
  3224                           ;	Table Read Protection Block 5
  3225                           ;	EBTR5 = 0x1, unprogrammed default
  3226                           ;	Table Read Protection Block 6
  3227                           ;	EBTR6 = 0x1, unprogrammed default
  3228                           ;	Table Read Protection Block 7
  3229                           ;	EBTR7 = 0x1, unprogrammed default
  3230  30000A                     	org	3145738
  3231  30000A  FF                 	db	255
  3232                           
  3233                           ;Config register CONFIG6H @ 0x30000B
  3234                           ;	unspecified, using default values
  3235                           ;	Boot Block Table Read Protection bit
  3236                           ;	EBTRB = 0x1, unprogrammed default
  3237  30000B                     	org	3145739
  3238  30000B  FF                 	db	255
  3239                           tosu	equ	0xFFF
  3240                           tosh	equ	0xFFE
  3241                           tosl	equ	0xFFD
  3242                           stkptr	equ	0xFFC
  3243                           pclatu	equ	0xFFB
  3244                           pclath	equ	0xFFA
  3245                           pcl	equ	0xFF9
  3246                           tblptru	equ	0xFF8
  3247                           tblptrh	equ	0xFF7
  3248                           tblptrl	equ	0xFF6
  3249                           tablat	equ	0xFF5
  3250                           prodh	equ	0xFF4
  3251                           prodl	equ	0xFF3
  3252                           indf0	equ	0xFEF
  3253                           postinc0	equ	0xFEE
  3254                           postdec0	equ	0xFED
  3255                           preinc0	equ	0xFEC
  3256                           plusw0	equ	0xFEB
  3257                           fsr0h	equ	0xFEA
  3258                           fsr0l	equ	0xFE9
  3259                           wreg	equ	0xFE8
  3260                           indf1	equ	0xFE7
  3261                           postinc1	equ	0xFE6
  3262                           postdec1	equ	0xFE5
  3263                           preinc1	equ	0xFE4
  3264                           plusw1	equ	0xFE3
  3265                           fsr1h	equ	0xFE2
  3266                           fsr1l	equ	0xFE1
  3267                           bsr	equ	0xFE0
  3268                           indf2	equ	0xFDF
  3269                           postinc2	equ	0xFDE
  3270                           postdec2	equ	0xFDD
  3271                           preinc2	equ	0xFDC
  3272                           plusw2	equ	0xFDB
  3273                           fsr2h	equ	0xFDA
  3274                           fsr2l	equ	0xFD9
  3275                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     40      43
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_time_incre
    _time_incre->_date_check
    _time_incre->_daylightsavingstime_toggle
    _sun_sync->___awdiv
    _LED_toggle->_sunrise
    _LED1_init->_ADC_getval
    _LCD_init->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0    5656
                                             29 COMRAM    11    11      0
                           _ADC_init
                         _Comp1_init
                    _Interrupts_init
                           _LCD_init
                          _LED1_init
                          _LED2_init
                         _LED_toggle
                  _LEDarray_disp_bin
                      _LEDarray_init
                        _Timer0_init
                           _sun_sync
                            _sunrise
                         _time_incre
 ---------------------------------------------------------------------------------
 (1) _time_incre                                          12     1     11    1617
                                             17 COMRAM    12     1     11
                         _date_check
         _daylightsavingstime_toggle
 ---------------------------------------------------------------------------------
 (2) _daylightsavingstime_toggle                          13     2     11     376
                                              4 COMRAM    13     2     11
 ---------------------------------------------------------------------------------
 (2) _date_check                                          13     2     11     674
                                              4 COMRAM    13     2     11
 ---------------------------------------------------------------------------------
 (1) _sun_sync                                            14     3     11    1436
                                             12 COMRAM    14     3     11
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     756
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    3     3      0     198
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LED_toggle                                          12     1     11     597
                                             15 COMRAM    12     1     11
                         _ADC_getval
                            _sunrise
 ---------------------------------------------------------------------------------
 (1) _sunrise                                             11     0     11     315
                                              4 COMRAM    11     0     11
 ---------------------------------------------------------------------------------
 (1) _LED2_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED1_init                                           12     1     11     145
                                              5 COMRAM    12     1     11
                         _ADC_getval
 ---------------------------------------------------------------------------------
 (2) _ADC_getval                                           1     1      0      23
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0     850
                                              7 COMRAM     2     2      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (2) _LCD_sendbyte                                         2     1      1     762
                                              5 COMRAM     2     1      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (2) _LCD_sendnibble                                       1     1      0      88
                                              4 COMRAM     1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (3) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                     11     0     11     122
                                              4 COMRAM    11     0     11
 ---------------------------------------------------------------------------------
 (1) _Comp1_init                                           0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _LowISR                                               3     3      0       0
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Comp1_init
     _DAC_init
   _Interrupts_init
   _LCD_init
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
     _LCD_sendnibble
   _LED1_init
     _ADC_getval
   _LED2_init
   _LED_toggle
     _ADC_getval
     _sunrise
   _LEDarray_disp_bin
   _LEDarray_init
   _Timer0_init
   _sun_sync
     ___awdiv
   _sunrise
   _time_incre
     _date_check
     _daylightsavingstime_toggle

 _LowISR (ROOT)

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     28      2B       1       45.7%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2B       8        0.0%
DATA                 0      0      2B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Nov 09 01:37:56 2021

                                 l37 027C                                   l62 0B76  
                                 l64 0B84                                   l65 0B8A  
                                 l59 0B72                                   l91 03BA  
                                 l84 0AF6                                   l93 03DA  
                                 l95 03FA                                   l87 037A  
                                 l97 041A                                   l89 039A  
                                 l99 043A                         ___awdiv@sign 000A  
                                 bsr 000FE0                    ??_Interrupts_init 0010  
                                l101 045A                                  l103 047A  
                                l200 0BBC                                  l105 047C  
                                l122 0B9E                                  l211 09BC  
                                l203 096C                                  l125 0B1C  
                                l205 0982                                  l150 0A84  
                                l214 0AB6                                  l151 0A90  
                                l207 0998                                  l152 0A9C  
                                l216 0AD0                                  l209 09AE  
                                l241 0A56                                  l219 0954  
                                l243 0A50                                  l148 0A8C  
                                l244 0A58                                  l245 0A5A  
                                l183 0B58                                  l248 0BC2  
                                l256 08AC                                  l264 065A  
                                l281 020A                                  l530 07E8  
                                l291 0B3C                                  l285 0562  
                                l294 06EC                                  l295 070A  
                                l296 0724                                  l288 0574  
                                wreg 000FE8               Interrupts_init@current 0005  
                __size_of_ADC_getval 0018                          ?_LED_toggle 0010  
                 __size_of_LED1_init 004A                   __size_of_LED2_init 0006  
                               l1400 0BBA                                 l1410 0984  
                               l1402 0958                                 l1420 09B4  
                               l1412 0992                                 l1404 0966  
                               l1500 0170                                 l1414 099A  
                               l1406 096E                                 l1430 0B88  
                               l1422 0B1E                                 l1502 0182  
                               l1510 01CC                                 l1416 09A8  
                               l1408 097C                                 l1440 0AA0  
                               l1424 0B2A                                 l1600 0B56  
                               l1512 01D0                                 l1520 01F8  
                               l1504 0194                                 l1434 0B8C  
                               l1602 0A5C                                 l1418 09B0  
                               l1442 0AB0                                 l1610 0A3C  
                               l1530 0740                                 l1514 01D4  
                               l1506 01A6                                 l1450 0588  
                               l1436 0B92                                 l1604 0A70  
                               l1444 0AB8                                 l1620 08DC  
                               l1428 0B74                                 l1612 0BBE  
                               l1700 080A                                 l1540 0766  
                               l1532 0744                                 l1524 0726  
                               l1516 01E8                                 l1508 01B8  
                               l1460 05F2                                 l1452 05B6  
                               l1438 0B9C                                 l1446 0AC8  
                               l1630 0902                                 l1622 08E2  
                               l1606 0A12                                 l1710 0856  
                               l1702 081A                                 l1614 0AD2  
                               l1550 079C                                 l1542 0778  
                               l1534 0752                                 l1526 072A  
                               l1518 01F4                                 l1462 0620  
                               l1454 05C8                                 l1640 0930  
                               l1632 0908                                 l1624 08E8  
                               l1616 08AE                                 l1608 0A28  
                               l1712 085A                                 l1704 0824  
                               l1552 07B2                                 l1544 0780  
                               l1560 07C8                                 l1536 075A  
                               l1528 0738                                 l1480 00BA  
                               l1472 0058                                 l1464 0632  
                               l1456 05D8                                 l1448 0576  
                               l1570 0B64                                 l1642 093A  
                               l1634 0912                                 l1626 08F2  
                               l1618 08C6                                 l1714 0870  
                               l1706 0836                                 l1730 039C  
                               l1722 035C                                 l1562 07D8  
                               l1554 07BA                                 l1546 0788  
                               l1538 075E                                 l1650 06CE  
                               l1490 0114                                 l1482 00CC  
                               l1474 0076                                 l1466 0644  
                               l1458 05E0                                 l1572 0B6C  
                               l1580 0AFA                                 l1396 0BB0  
                               l1644 0942                                 l1636 0918  
                               l1628 08F8                                 l1716 0876  
                               l1708 0846                                 l1740 03F4  
                               l1732 03B4                                 l1724 0374  
                               l1564 07E0                                 l1556 07BC  
                               l1548 0796                                 l1652 06D4  
                               l1492 0126                                 l1484 00E0  
                               l1476 0088                                 l1468 0648  
                               l1574 0B6E                                 l1590 0B14  
                               l1582 0B0C                                 l1398 0BB2  
                               l1646 094C                                 l1638 0922  
                               l1718 089A                                 l1750 043C  
                               l1742 03FC                                 l1734 03BC  
                               l1726 037C                                 l1558 07C2  
                               l1654 06E2                                 l1494 0138  
                               l1486 00F0                                 l1478 009C  
                               l1670 04C2                                 l1662 047E  
                               l1576 0B70                                 l1568 0B5A  
                               l1592 0B18                                 l1584 0B0E  
                               l1752 0454                                 l1744 0414  
                               l1736 03D4                                 l1728 0394  
                               l1656 0700                                 l1648 065C  
                               l1496 014A                                 l1488 0102  
                               l1680 0516                                 l1672 04D6  
                               l1664 0496                                 l1760 0238  
                               l1586 0B10                                 l1578 0AF8  
                               l1754 045C                                 l1746 041C  
                               l1738 03DC                                 l1594 0B3E  
                               l1658 0712                                 l1498 015C  
                               l1690 055A                                 l1682 051A  
                               l1674 04DA                                 l1666 04BA  
                               l1770 0278                                 l1762 023C  
                               l1588 0B12                                 l1756 0474  
                               l1748 0434                                 l1596 0B46  
                               l1684 051E                                 l1676 04DE  
                               l1668 04BE                                 l1692 0562  
                               l1780 02EC                                 l1772 028C  
                               l1764 0240                                 l1598 0B4C  
                               l1686 0542                                 l1678 0502  
                               l1790 034C                                 l1782 02F0  
                               l1774 02B0                                 l1766 0244  
                               l1758 020C                                 l1696 07EA  
                               l1688 0546                                 l1784 0300  
                               l1776 02B8                                 l1768 025A  
                               l1698 07FA                                 l1786 0324  
                               l1778 02C8                                 l1788 0328  
                               u1020 0966                                 u1100 05B6  
                               u1021 0962                                 u1101 05B2  
                               u1030 097C                                 u1110 05C8  
                               u1031 0978                                 u1111 05C4  
                               u1040 0992                                 u1200 009C  
                               u1120 05D8                                 u1041 098E  
                               u1201 0098                                 u1121 05D4  
                               u1050 09A8                                 u1210 00BA  
                               u1130 05F2                                 u1051 09A4  
                               u1211 00B6                                 u1131 05EE  
                               u1300 015C                                 u1220 00CC  
                               u1140 0620                                 u1061 0B34  
                               u1301 0158                                 u1221 00C8  
                               u1141 061C                                 u1070 0B84  
                               u1310 0170                                 u1230 00E0  
                               u1150 0632                                 u1071 0B80  
                               u1311 016C                                 u1231 00DC  
                               u1151 062E                                 u1080 0AB0  
                               u1400 0752                                 u1320 0182  
                               u1240 00F0                                 u1160 0644  
                               u1081 0AAC                                 u1401 074E  
                               u1321 017E                                 u1241 00EC  
                               u1161 0640                                 u1410 0778  
                               u1330 0194                                 u1250 0102  
                               u1090 0588                                 u2107 094E  
                               u1411 0774                                 u1331 0190  
                               u1251 00FE                                 u1171 0652  
                               u1091 0584                                 u1420 0796  
                               u1500 06E2                                 u1340 01A6  
                               u1260 0114                                 u1180 0076  
                               u2117 0ACA                                 u2037 08D0  
                               u1421 0792                                 u1501 06DE  
                               u1341 01A2                                 u1261 0110  
                               u1181 0072                                 u1430 07B2  
                               u1510 0700                                 u1350 01B8  
                               u1270 0126                                 u1190 0088  
                               u2127 09B6                                 u2047 08E4  
                               u1431 07AE                                 u1511 06FC  
                               u1351 01B4                                 u1271 0122  
                               u1191 0084                                 u1440 07D8  
                               u1360 01CC                                 u1280 0138  
                               u2137 0BB4                                 u2057 08F4  
                               u1441 07D4                                 u1521 071C  
                               u1361 01C8                                 u1281 0134  
                               u1601 0528                                 u1450 0A70  
                               u1370 01E8                                 u1290 014A  
                               u1530 0496                                 u1451 0A6C  
                               u2067 0904                                 u1371 01E4  
                               u1291 0146                                 u1611 053A  
                               u1531 0492                                 u1460 0A84  
                               u1700 0870                                 u1620 055A  
                               u1540 04A8                                 u1461 0A80  
                               u2077 0914                                 u1701 086C  
                               u1381 0202                                 u1621 0556  
                               u1541 04A0                                 u1470 0A28  
                               u1390 0738                                 u2087 0928  
                               u1471 0A24                                 u1711 0880  
                               u1391 0734                                 u1631 056C  
                               u1480 0A3C                                 u1640 07FA  
                               u1800 0434                                 u1560 04D6  
                               u2097 093C                                 u1481 0A38  
                               u1721 0892                                 u1641 07F6  
                               u1801 0430                                 u1561 04D2  
                               u1490 0A50                                 u1650 080A  
                               u1810 0454                                 u1491 0A4C  
                               u1731 08A4                                 u1651 0806  
                               u1811 0450                                 u1571 04E8  
                               u1660 081A                                 u1820 0474  
                               u1740 0374                                 u1661 0816  
                               u1821 0470                                 u1741 0370  
                               u1581 04FA                                 u1901 02E4  
                               u1670 0836                                 u1750 0394  
                               u1590 0516                                 u1558 04AA  
                               u1910 0300                                 u1671 0832  
                               u1751 0390                                 u1591 0512  
                               u1911 02FC                                 u1831 024E  
                               u1680 0846                                 u1760 03B4  
                               u1681 0842                                 u1761 03B0  
                               u1921 030A                                 u1841 0264  
                               u1690 0856                                 u1770 03D4  
                               u1850 028C                                 u1691 0852  
                               u1771 03D0                                 u1931 031C  
                               u1851 0288                                 u1780 03F4  
                               u1781 03F0                                 u1941 0332  
                               u1861 0296                                 u1790 0414  
                               u1791 0410                                 u1951 0344  
                               u1871 02A8                                 u1880 02C8  
                               u1881 02C4                                 u1891 02D2  
                        main@current 001E                   __size_of_LCD_E_TOG 000E  
                               _main 020C                                 btemp 002C  
                               start 0054                     __end_of_ADC_init 0B74  
                   __end_of_DAC_init 0BA0                      __end_of_HighISR 0A12  
                       ___param_bank 000000                           _Comp1_init 0AF8  
                        _sunset_flag 002A                     __end_of_LCD_init 0956  
                              ?_main 0001                                _ADPCH 000F5F  
                    __end_of___awdiv 07EA                      ___awdiv@divisor 0007  
                              i1l172 0044                                i2l164 0A0E  
                    ___awdiv@counter 0009                                _TMR0H 000FD4  
                              _TMR0L 000FD3                        ?_LCD_sendbyte 0006  
                              plusw0 000FEB                                plusw2 000FDB  
                              ttemp5 002D                                ttemp6 0030  
                              ttemp7 0034                                status 000FD8  
                              wtemp8 002D                      __end_of_sunrise 0B3E  
            __size_of_LCD_sendnibble 0068                      __initialization 0BA0  
                       __end_of_main 035A                    __end_of_LED1_init 0A5C  
                __size_of_LED_toggle 00C4                    __end_of_LED2_init 0BC4  
                  LED_toggle@current 0010                    __end_of_LCD_E_TOG 0BBE  
                             ??_main 001E                        __activetblptr 000000  
             __size_of_LEDarray_init 0026                         _sunrise_flag 002B  
                             _ADRESH 000F64                       ??_LCD_sendbyte 0007  
                   ___awdiv@dividend 0005                               i1l1804 0026  
                             i1l1806 0036                               i1l1808 0042  
       ??_daylightsavingstime_toggle 0010                               i2l1800 0A06  
                             i2l1802 0A0A                               i2l1792 09BE  
                             i2l1794 09CE                               i2l1796 09F0  
                             i2l1798 09FE                            ??_HighISR 0001  
                  _LEDarray_disp_bin 035A                               _LowISR 0018  
                 ?_LEDarray_disp_bin 0001                         ??_ADC_getval 0005  
                      ??_Timer0_init 0005                          ?_Comp1_init 0001  
                          ??___awdiv 0009                  ??_LEDarray_disp_bin 0005  
                   ___awdiv@quotient 000B                               isa$std 000001  
        ?_daylightsavingstime_toggle 0005                            ?_ADC_init 0001  
                          ?_DAC_init 0001                   __end_of_ADC_getval 0B8C  
                          ??_sunrise 0010                     __end_of_sun_sync 0726  
          __end_of_LEDarray_disp_bin 047E                           __accesstop 0060  
            __end_of__initialization 0BA6                            ?_LCD_init 0001  
                      ___rparam_used 000001                        _LEDarray_init 0AD2  
                    _Interrupts_init 0A5C                       __pcstackCOMRAM 0001  
                __end_of_Timer0_init 0B5A                           ??_ADC_init 0005  
                         ??_DAC_init 0005                         ??_LED_toggle 001B  
                __size_of_Comp1_init 0026                       _LCD_sendnibble 0956  
                         _date_check 0058                           ??_LCD_init 0008  
                     ?_LEDarray_init 0001                              ?_LowISR 0001  
               __end_of_LCD_sendbyte 0AD2                   __end_of_LED_toggle 08AE  
                   LED1_init@current 0006               __end_of_LCD_sendnibble 09BE  
         __size_of_LEDarray_disp_bin 0124              __end_of_Interrupts_init 0A9E  
                            _HighISR 0008                            _ADREFbits 000F58  
                            __Hparam 0000                              __Lparam 0000  
                    __size_of_LowISR 003C                    date_check@current 0005  
                        _Timer0_init 0B3E                              ___awdiv 0726  
                            __pcinit 0BA0                            ?_sun_sync 000D  
                            __ramtop 0E00                              __ptext0 020C  
                            __ptext1 047E                              __ptext2 0576  
                            __ptext3 0058                              __ptext4 065C  
                            __ptext5 0726                              __ptext6 0B3E  
                            __ptext7 0AD2                              __ptext8 035A  
                            __ptext9 07EA                            _LED1_init 0A12  
                          _LED2_init 0BBE                            _LCD_E_TOG 0BB0  
                     __pintcode_body 09BE                              _sunrise 0B1E  
               end_of_initialization 0BA6                      ?_LCD_sendnibble 0001  
                   ADC_getval@tmpval 0005                      ??_LEDarray_init 0005  
                            int_func 09BE                          ?_date_check 0005  
                       ??_Comp1_init 0005                           _time_incre 047E  
                         ??_sun_sync 0018                           ?_LED1_init 0006  
                         ?_LED2_init 0001                           ?_LCD_E_TOG 0001  
                          _TRISAbits 000F81                            _TRISBbits 000F82  
                          _TRISCbits 000F83                            _TRISDbits 000F84  
                          _TRISEbits 000F85                            _TRISFbits 000F86  
                          _TRISGbits 000F87                            _TRISHbits 000F88  
                  __size_of_ADC_init 001A                    __size_of_DAC_init 0014  
                 __end_of_Comp1_init 0B1E                          _CM1CON0bits 000ED0  
                        _CM1CON1bits 000ED1                     ?_Interrupts_init 0005  
              __size_of_LCD_sendbyte 0034                    __size_of_LCD_init 00A8  
                     __end_of_LowISR 0054                 LCD_sendnibble@number 0005  
                __size_of_date_check 01B4                  start_initialization 0BA0  
                       _LCD_sendbyte 0A9E                             ??_LowISR 0002  
                        ?_time_incre 0012                    time_incre@current 0012  
                        ??_LED1_init 0011                          ??_LED2_init 0005  
                        __pbssCOMRAM 0029                          ??_LCD_E_TOG 0005  
                           ?_HighISR 0001                         ?_Timer0_init 0001  
                          __pintcode 0008                             ?___awdiv 0005  
                        __pintcodelo 0018                    __size_of_sun_sync 00CA  
                   ??_LCD_sendnibble 0005               sun_sync@solarnoon_hour 0018  
                           _ADC_init 0B5A                             _DAC_init 0B8C  
                           ?_sunrise 0005                     LCD_sendbyte@Byte 0007  
                __size_of_time_incre 00F8                     LCD_sendbyte@type 0006  
                       ??_date_check 0010                             _LATAbits 000F79  
                           _LATBbits 000F7A                             _LATCbits 000F7B  
                           _LATDbits 000F7C                             _LATEbits 000F7D  
                           _LATFbits 000F7E                             _LATGbits 000F7F  
                           _LATHbits 000F80                             _LCD_init 08AE  
                           _IPR0bits 000E1F                             _PIE0bits 000E29  
                           _IPR2bits 000E21                             _PIE2bits 000E2B  
                           i1u200_20 0036                             i1u200_21 0032  
                           _PIR0bits 000E33                             _PIR2bits 000E35  
                           i2u196_40 09CE                             i2u196_41 09CA  
                           i2u197_40 09E0                             i2u197_41 09D8  
                           i2u199_40 09FE                             i2u198_48 09E2  
                           i2u199_41 09FA                            _time_flag 0029  
                         _ADCON0bits 000F60                   __end_of_date_check 020C  
                         _CM1NCHbits 000ED2                           _CM1PCHbits 000ED3  
                   __size_of_HighISR 0A0A                __end_of_LEDarray_init 0AF8  
                           __Hrparam 0000                           _ADC_getval 0B74  
           sun_sync@solarnoon_minute 0019             sun_sync@solarnoon_second 001A  
                           __Lrparam 0000                     __size_of___awdiv 00C4  
__size_of_daylightsavingstime_toggle 00E6                           _ANSELFbits 000EB4  
                         _T0CON0bits 000FD5                           _T0CON1bits 000FD6  
                           __ptext10 0B1E                             __ptext11 0BBE  
                           __ptext20 0B8C                             __ptext12 0A12  
                           __ptext21 0B5A                             __ptext13 0B74  
                           __ptext14 08AE                             __ptext15 0A9E  
                           __ptext16 0956                             __ptext17 0BB0  
                           __ptext18 0A5C                             __ptext19 0AF8  
                     sunrise@current 0005              LEDarray_disp_bin@number 0007  
                   __size_of_sunrise 0020                        __size_of_main 014E  
                           isa$xinst 000000             __size_of_Interrupts_init 0042  
                           int$flags 002C                 __size_of_Timer0_init 001C  
                       ??_time_incre 001D                             _sun_sync 065C  
                         _INTCONbits 000FF2                           _LED_toggle 07EA  
                           intlevel1 0000                             intlevel2 0000  
                       _DAC1CON0bits 000EC6                         _DAC1CON1bits 000EC7  
                 __end_of_time_incre 0576    daylightsavingstime_toggle@current 0005  
                        ?_ADC_getval 0001                      sun_sync@current 000D  
 __end_of_daylightsavingstime_toggle 065C           _daylightsavingstime_toggle 0576  
