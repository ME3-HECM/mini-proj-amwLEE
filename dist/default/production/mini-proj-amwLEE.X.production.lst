

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Nov 09 07:51:03 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	text19,global,reloc=2,class=CODE,delta=1
    28                           	psect	text20,global,reloc=2,class=CODE,delta=1
    29                           	psect	text21,global,reloc=2,class=CODE,delta=1
    30                           	psect	text22,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    39  0000                     
    40                           ; Version 2.20
    41                           ; Generated 05/05/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F67K40 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     _PIR0bits	set	3635
    75  0000                     _PIR2bits	set	3637
    76  0000                     _IPR0bits	set	3615
    77  0000                     _IPR2bits	set	3617
    78  0000                     _PIE0bits	set	3625
    79  0000                     _PIE2bits	set	3627
    80  0000                     _CM1CON1bits	set	3793
    81  0000                     _CM1CON0bits	set	3792
    82  0000                     _CM1PCHbits	set	3795
    83  0000                     _CM1NCHbits	set	3794
    84  0000                     _DAC1CON1bits	set	3783
    85  0000                     _DAC1CON0bits	set	3782
    86  0000                     _ANSELFbits	set	3764
    87  0000                     _ADPCH	set	3935
    88  0000                     _ADREFbits	set	3928
    89  0000                     _TRISHbits	set	3976
    90  0000                     _LATHbits	set	3968
    91  0000                     _TRISDbits	set	3972
    92  0000                     _TRISEbits	set	3973
    93  0000                     _TRISCbits	set	3971
    94  0000                     _LATEbits	set	3965
    95  0000                     _LATCbits	set	3963
    96  0000                     _T0CON0bits	set	4053
    97  0000                     _T0CON1bits	set	4054
    98  0000                     _TMR0L	set	4051
    99  0000                     _TMR0H	set	4052
   100  0000                     _LATDbits	set	3964
   101  0000                     _INTCONbits	set	4082
   102  0000                     _TRISBbits	set	3970
   103  0000                     _TRISAbits	set	3969
   104  0000                     _TRISGbits	set	3975
   105  0000                     _LATBbits	set	3962
   106  0000                     _LATFbits	set	3966
   107  0000                     _LATAbits	set	3961
   108  0000                     _LATGbits	set	3967
   109  0000                     _ADRESH	set	3940
   110  0000                     _ADCON0bits	set	3936
   111  0000                     _TRISFbits	set	3974
   112                           
   113                           ; #config settings
   114                           
   115                           	psect	cinit
   116  000B66                     __pcinit:
   117                           	callstack 0
   118  000B66                     start_initialization:
   119                           	callstack 0
   120  000B66                     __initialization:
   121                           	callstack 0
   122                           
   123                           ; Clear objects allocated to COMRAM (3 bytes)
   124  000B66  6A33               	clrf	(__pbssCOMRAM+2)& (0+255),c
   125  000B68  6A32               	clrf	(__pbssCOMRAM+1)& (0+255),c
   126  000B6A  6A31               	clrf	__pbssCOMRAM& (0+255),c
   127  000B6C                     end_of_initialization:
   128                           	callstack 0
   129  000B6C                     __end_of__initialization:
   130                           	callstack 0
   131  000B6C  9034               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   132  000B6E  9234               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   133  000B70  0100               	movlb	0
   134  000B72  EF8A  F001         	goto	_main	;jump to C main() function
   135                           
   136                           	psect	bssCOMRAM
   137  000031                     __pbssCOMRAM:
   138                           	callstack 0
   139  000031                     _time_flag:
   140                           	callstack 0
   141  000031                     	ds	1
   142  000032                     _sunset_flag:
   143                           	callstack 0
   144  000032                     	ds	1
   145  000033                     _sunrise_flag:
   146                           	callstack 0
   147  000033                     	ds	1
   148                           
   149                           	psect	cstackCOMRAM
   150  000001                     __pcstackCOMRAM:
   151                           	callstack 0
   152  000001                     ??_HighISR:
   153  000001                     
   154                           ; 1 bytes @ 0x0
   155  000001                     	ds	1
   156  000002                     ??_LowISR:
   157                           
   158                           ; 1 bytes @ 0x1
   159  000002                     	ds	3
   160  000005                     ?___awdiv:
   161                           	callstack 0
   162  000005                     ?_sunrise:
   163                           	callstack 0
   164  000005                     ?_daylightsavingstime_toggle:
   165                           	callstack 0
   166  000005                     ?_date_check:
   167                           	callstack 0
   168  000005                     ADC_getval@tmpval:
   169                           	callstack 0
   170  000005                     LEDarray_disp_bin@number:
   171                           	callstack 0
   172  000005                     LCD_sendnibble@number:
   173                           	callstack 0
   174  000005                     ___awdiv@dividend:
   175                           	callstack 0
   176  000005                     Interrupts_init@current:
   177                           	callstack 0
   178  000005                     daylightsavingstime_toggle@current:
   179                           	callstack 0
   180  000005                     date_check@current:
   181                           	callstack 0
   182  000005                     sunrise@current:
   183                           	callstack 0
   184                           
   185                           ; 11 bytes @ 0x4
   186  000005                     	ds	1
   187  000006                     LCD_sendbyte@type:
   188                           	callstack 0
   189  000006                     LED1_init@current:
   190                           	callstack 0
   191                           
   192                           ; 11 bytes @ 0x5
   193  000006                     	ds	1
   194  000007                     LCD_sendbyte@Byte:
   195                           	callstack 0
   196  000007                     ___awdiv@divisor:
   197                           	callstack 0
   198                           
   199                           ; 2 bytes @ 0x6
   200  000007                     	ds	1
   201  000008                     ??_LCD_init:
   202                           
   203                           ; 1 bytes @ 0x7
   204  000008                     	ds	1
   205  000009                     ___awdiv@counter:
   206                           	callstack 0
   207                           
   208                           ; 1 bytes @ 0x8
   209  000009                     	ds	1
   210  00000A                     ___awdiv@sign:
   211                           	callstack 0
   212                           
   213                           ; 1 bytes @ 0x9
   214  00000A                     	ds	1
   215  00000B                     ___awdiv@quotient:
   216                           	callstack 0
   217                           
   218                           ; 2 bytes @ 0xA
   219  00000B                     	ds	2
   220  00000D                     ?_sun_sync:
   221                           	callstack 0
   222  00000D                     sun_sync@current:
   223                           	callstack 0
   224                           
   225                           ; 11 bytes @ 0xC
   226  00000D                     	ds	3
   227  000010                     ??_daylightsavingstime_toggle:
   228  000010                     ??_date_check:
   229  000010                     ?_LED_toggle:
   230                           	callstack 0
   231  000010                     LED_toggle@current:
   232                           	callstack 0
   233                           
   234                           ; 11 bytes @ 0xF
   235  000010                     	ds	1
   236  000011                     ??_LED1_init:
   237                           
   238                           ; 1 bytes @ 0x10
   239  000011                     	ds	1
   240  000012                     ?_time_incre:
   241                           	callstack 0
   242  000012                     time_incre@current:
   243                           	callstack 0
   244                           
   245                           ; 11 bytes @ 0x11
   246  000012                     	ds	6
   247  000018                     sun_sync@solarnoon_hour:
   248                           	callstack 0
   249                           
   250                           ; 1 bytes @ 0x17
   251  000018                     	ds	1
   252  000019                     sun_sync@solarnoon_minute:
   253                           	callstack 0
   254                           
   255                           ; 1 bytes @ 0x18
   256  000019                     	ds	1
   257  00001A                     sun_sync@solarnoon_second:
   258                           	callstack 0
   259                           
   260                           ; 1 bytes @ 0x19
   261  00001A                     	ds	1
   262  00001B                     ??_LED_toggle:
   263  00001B                     ?_sunrise_sunset:
   264                           	callstack 0
   265  00001B                     sunrise_sunset@current:
   266                           	callstack 0
   267                           
   268                           ; 11 bytes @ 0x1A
   269  00001B                     	ds	2
   270  00001D                     ??_time_incre:
   271                           
   272                           ; 1 bytes @ 0x1C
   273  00001D                     	ds	9
   274  000026                     main@current:
   275                           	callstack 0
   276                           
   277                           ; 11 bytes @ 0x25
   278  000026                     	ds	11
   279                           
   280 ;;
   281 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   282 ;;
   283 ;; *************** function _main *****************
   284 ;; Defined at:
   285 ;;		line 7 in file "main.c"
   286 ;; Parameters:    Size  Location     Type
   287 ;;		None
   288 ;; Auto vars:     Size  Location     Type
   289 ;;  current        11   37[COMRAM] struct .
   290 ;; Return value:  Size  Location     Type
   291 ;;                  1    wreg      void 
   292 ;; Registers used:
   293 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
   294 ;; Tracked objects:
   295 ;;		On entry : 0/0
   296 ;;		On exit  : 0/0
   297 ;;		Unchanged: 0/0
   298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   300 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   302 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   303 ;;Total ram usage:       11 bytes
   304 ;; Hardware stack levels required when called: 6
   305 ;; This function calls:
   306 ;;		_ADC_init
   307 ;;		_Comp1_init
   308 ;;		_Interrupts_init
   309 ;;		_LCD_init
   310 ;;		_LED1_init
   311 ;;		_LED2_init
   312 ;;		_LED_toggle
   313 ;;		_LEDarray_disp_bin
   314 ;;		_LEDarray_init
   315 ;;		_Timer0_init
   316 ;;		_sunrise_sunset
   317 ;;		_time_incre
   318 ;; This function is called by:
   319 ;;		Startup code after reset
   320 ;; This function uses a non-reentrant model
   321 ;;
   322                           
   323                           	psect	text0
   324  000314                     __ptext0:
   325                           	callstack 0
   326  000314                     _main:
   327                           	callstack 25
   328  000314                     
   329                           ;main.c: 12:     dateandtime current;;main.c: 13:     current.year = 2021;
   330  000314  0E07               	movlw	7
   331  000316  6E27               	movwf	(main@current+1)^0,c
   332  000318  0EE5               	movlw	229
   333  00031A  6E26               	movwf	main@current^0,c
   334                           
   335                           ;main.c: 14:     current.month = 11;
   336  00031C  0E0B               	movlw	11
   337  00031E  6E28               	movwf	(main@current+2)^0,c
   338                           
   339                           ;main.c: 15:     current.date = 9;
   340  000320  0E09               	movlw	9
   341  000322  6E29               	movwf	(main@current+3)^0,c
   342                           
   343                           ;main.c: 16:     current.day = 2;
   344  000324  0E02               	movlw	2
   345  000326  6E2A               	movwf	(main@current+4)^0,c
   346                           
   347                           ;main.c: 17:     current.hour = 7;
   348  000328  0E07               	movlw	7
   349  00032A  6E2B               	movwf	(main@current+5)^0,c
   350                           
   351                           ;main.c: 18:     current.minute = 30;
   352  00032C  0E1E               	movlw	30
   353  00032E  6E2C               	movwf	(main@current+6)^0,c
   354                           
   355                           ;main.c: 19:     current.second = 0;
   356  000330  0E00               	movlw	0
   357  000332  6E2D               	movwf	(main@current+7)^0,c
   358                           
   359                           ;main.c: 20:     current.sunrise_hour = 7;
   360  000334  0E07               	movlw	7
   361  000336  6E2E               	movwf	(main@current+8)^0,c
   362                           
   363                           ;main.c: 21:     current.sunrise_minute = 0;
   364  000338  0E00               	movlw	0
   365  00033A  6E2F               	movwf	(main@current+9)^0,c
   366                           
   367                           ;main.c: 22:     current.sunrise_second = 0;
   368  00033C  0E00               	movlw	0
   369  00033E  6E30               	movwf	(main@current+10)^0,c
   370  000340                     
   371                           ;main.c: 25:     ADC_init();
   372  000340  EC90  F005         	call	_ADC_init	;wreg free
   373  000344                     
   374                           ;main.c: 26:     Comp1_init();
   375  000344  EC5F  F005         	call	_Comp1_init	;wreg free
   376  000348                     
   377                           ;main.c: 27:     Timer0_init();
   378  000348  EC82  F005         	call	_Timer0_init	;wreg free
   379  00034C                     
   380                           ;main.c: 28:     Interrupts_init(current);
   381  00034C  EE20  F026         	lfsr	2,main@current
   382  000350  EE00  F005         	lfsr	0,Interrupts_init@current
   383  000354  0E0A               	movlw	10
   384  000356                     u1801:
   385  000356  CFDB FFEB          	movff	plusw2,plusw0
   386  00035A  06E8               	decf	wreg,f,c
   387  00035C  E2FC               	bc	u1801
   388  00035E  EC11  F005         	call	_Interrupts_init	;wreg free
   389  000362                     
   390                           ;main.c: 29:     LED1_init(current);
   391  000362  EE20  F026         	lfsr	2,main@current
   392  000366  EE00  F006         	lfsr	0,LED1_init@current
   393  00036A  0E0A               	movlw	10
   394  00036C                     u1811:
   395  00036C  CFDB FFEB          	movff	plusw2,plusw0
   396  000370  06E8               	decf	wreg,f,c
   397  000372  E2FC               	bc	u1811
   398  000374  ECEC  F004         	call	_LED1_init	;wreg free
   399                           
   400                           ;main.c: 30:     LED2_init();
   401  000378  ECC2  F005         	call	_LED2_init	;wreg free
   402                           
   403                           ;main.c: 31:     LEDarray_init();
   404  00037C  EC4C  F005         	call	_LEDarray_init	;wreg free
   405  000380                     
   406                           ;main.c: 32:     LCD_init();
   407  000380  ECF6  F003         	call	_LCD_init	;wreg free
   408  000384                     l1710:
   409                           
   410                           ;main.c: 36:         current = sunrise_sunset(current);
   411  000384  EE20  F026         	lfsr	2,main@current
   412  000388  EE00  F01B         	lfsr	0,sunrise_sunset@current
   413  00038C  0E0A               	movlw	10
   414  00038E                     u1821:
   415  00038E  CFDB FFEB          	movff	plusw2,plusw0
   416  000392  06E8               	decf	wreg,f,c
   417  000394  E2FC               	bc	u1821
   418  000396  EC4A  F004         	call	_sunrise_sunset	;wreg free
   419  00039A  EE20  F026         	lfsr	2,main@current
   420  00039E  0E0A               	movlw	10
   421  0003A0                     u1831:
   422  0003A0  CFEB FFDB          	movff	plusw0,plusw2
   423  0003A4  06E8               	decf	wreg,f,c
   424  0003A6  E2FC               	bc	u1831
   425  0003A8                     
   426                           ;main.c: 40:         current = time_incre(current);
   427  0003A8  EE20  F026         	lfsr	2,main@current
   428  0003AC  EE00  F012         	lfsr	0,time_incre@current
   429  0003B0  0E0A               	movlw	10
   430  0003B2                     u1841:
   431  0003B2  CFDB FFEB          	movff	plusw2,plusw0
   432  0003B6  06E8               	decf	wreg,f,c
   433  0003B8  E2FC               	bc	u1841
   434  0003BA  EC06  F001         	call	_time_incre	;wreg free
   435  0003BE  EE20  F026         	lfsr	2,main@current
   436  0003C2  0E0A               	movlw	10
   437  0003C4                     u1851:
   438  0003C4  CFEB FFDB          	movff	plusw0,plusw2
   439  0003C8  06E8               	decf	wreg,f,c
   440  0003CA  E2FC               	bc	u1851
   441  0003CC                     
   442                           ;main.c: 44:         current = LED_toggle(current);
   443  0003CC  EE20  F026         	lfsr	2,main@current
   444  0003D0  EE00  F010         	lfsr	0,LED_toggle@current
   445  0003D4  0E0A               	movlw	10
   446  0003D6                     u1861:
   447  0003D6  CFDB FFEB          	movff	plusw2,plusw0
   448  0003DA  06E8               	decf	wreg,f,c
   449  0003DC  E2FC               	bc	u1861
   450  0003DE  EC39  F003         	call	_LED_toggle	;wreg free
   451  0003E2  EE20  F026         	lfsr	2,main@current
   452  0003E6  0E0A               	movlw	10
   453  0003E8                     u1871:
   454  0003E8  CFEB FFDB          	movff	plusw0,plusw2
   455  0003EC  06E8               	decf	wreg,f,c
   456  0003EE  E2FC               	bc	u1871
   457  0003F0                     
   458                           ;main.c: 49:         LEDarray_disp_bin(current.hour);
   459  0003F0  502B               	movf	(main@current+5)^0,w,c
   460  0003F2  EC9B  F003         	call	_LEDarray_disp_bin
   461  0003F6  EFC2  F001         	goto	l1710
   462  0003FA  EF2A  F000         	goto	start
   463  0003FE                     __end_of_main:
   464                           	callstack 0
   465                           
   466 ;; *************** function _time_incre *****************
   467 ;; Defined at:
   468 ;;		line 45 in file "dateandtime.c"
   469 ;; Parameters:    Size  Location     Type
   470 ;;  current        11   17[COMRAM] struct .
   471 ;; Auto vars:     Size  Location     Type
   472 ;;		None
   473 ;; Return value:  Size  Location     Type
   474 ;;                  11   17[COMRAM] struct .
   475 ;; Registers used:
   476 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
   477 ;; Tracked objects:
   478 ;;		On entry : 0/0
   479 ;;		On exit  : 0/0
   480 ;;		Unchanged: 0/0
   481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   482 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   484 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   485 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   486 ;;Total ram usage:       12 bytes
   487 ;; Hardware stack levels used: 1
   488 ;; Hardware stack levels required when called: 3
   489 ;; This function calls:
   490 ;;		_date_check
   491 ;;		_daylightsavingstime_toggle
   492 ;; This function is called by:
   493 ;;		_main
   494 ;; This function uses a non-reentrant model
   495 ;;
   496                           
   497                           	psect	text1
   498  00020C                     __ptext1:
   499                           	callstack 0
   500  00020C                     _time_incre:
   501                           	callstack 27
   502  00020C                     
   503                           ;dateandtime.c: 46:     if (time_flag==1) {
   504  00020C  0431               	decf	_time_flag^0,w,c	;volatile
   505  00020E  A4D8               	btfss	status,2,c
   506  000210  EF0C  F001         	goto	u1581
   507  000214  EF0E  F001         	goto	u1580
   508  000218                     u1581:
   509  000218  EF80  F001         	goto	l1666
   510  00021C                     u1580:
   511  00021C                     
   512                           ;dateandtime.c: 47:         current.second = current.second+1;
   513  00021C  2819               	incf	(time_incre@current+7)^0,w,c
   514  00021E  6E19               	movwf	(time_incre@current+7)^0,c
   515                           
   516                           ;dateandtime.c: 48:         if (current.second>59) {
   517  000220  5019               	movf	(time_incre@current+7)^0,w,c
   518  000222  0A80               	xorlw	128
   519  000224  0F44               	addlw	-188
   520  000226  A0D8               	btfss	status,0,c
   521  000228  EF18  F001         	goto	u1591
   522  00022C  EF1A  F001         	goto	u1590
   523  000230                     u1591:
   524  000230  EF7E  F001         	goto	l288
   525  000234                     u1590:
   526  000234                     
   527                           ;dateandtime.c: 49:             LATHbits.LATH3 = !LATHbits.LATH3;
   528  000234  A680               	btfss	128,3,c	;volatile
   529  000236  EF1F  F001         	goto	u1601
   530  00023A  EF23  F001         	goto	u1600
   531  00023E                     u1601:
   532  00023E  6A1D               	clrf	??_time_incre^0,c
   533  000240  2A1D               	incf	??_time_incre^0,f,c
   534  000242  EF24  F001         	goto	u1618
   535  000246                     u1600:
   536  000246  6A1D               	clrf	??_time_incre^0,c
   537  000248                     u1618:
   538  000248  461D               	rlncf	??_time_incre^0,f,c
   539  00024A  461D               	rlncf	??_time_incre^0,f,c
   540  00024C  461D               	rlncf	??_time_incre^0,f,c
   541  00024E  5080               	movf	128,w,c	;volatile
   542  000250  181D               	xorwf	??_time_incre^0,w,c
   543  000252  0BF7               	andlw	-9
   544  000254  181D               	xorwf	??_time_incre^0,w,c
   545  000256  6E80               	movwf	128,c	;volatile
   546  000258                     
   547                           ;dateandtime.c: 50:             current.second = 0;
   548  000258  0E00               	movlw	0
   549  00025A  6E19               	movwf	(time_incre@current+7)^0,c
   550  00025C                     
   551                           ;dateandtime.c: 51:             current.minute = current.minute+1;
   552  00025C  2818               	incf	(time_incre@current+6)^0,w,c
   553  00025E  6E18               	movwf	(time_incre@current+6)^0,c
   554  000260                     
   555                           ;dateandtime.c: 52:             if (current.minute>59) {
   556  000260  5018               	movf	(time_incre@current+6)^0,w,c
   557  000262  0A80               	xorlw	128
   558  000264  0F44               	addlw	-188
   559  000266  A0D8               	btfss	status,0,c
   560  000268  EF38  F001         	goto	u1621
   561  00026C  EF3A  F001         	goto	u1620
   562  000270                     u1621:
   563  000270  EF7E  F001         	goto	l288
   564  000274                     u1620:
   565  000274                     
   566                           ;dateandtime.c: 53:                 current.minute = 0;
   567  000274  0E00               	movlw	0
   568  000276  6E18               	movwf	(time_incre@current+6)^0,c
   569  000278                     
   570                           ;dateandtime.c: 54:                 current.hour = current.hour+1;
   571  000278  2817               	incf	(time_incre@current+5)^0,w,c
   572  00027A  6E17               	movwf	(time_incre@current+5)^0,c
   573  00027C                     
   574                           ;dateandtime.c: 55:                 current = daylightsavingstime_toggle(current);
   575  00027C  EE20  F012         	lfsr	2,time_incre@current
   576  000280  EE00  F005         	lfsr	0,daylightsavingstime_toggle@current
   577  000284  0E0A               	movlw	10
   578  000286                     u1631:
   579  000286  CFDB FFEB          	movff	plusw2,plusw0
   580  00028A  06E8               	decf	wreg,f,c
   581  00028C  E2FC               	bc	u1631
   582  00028E  ECFF  F001         	call	_daylightsavingstime_toggle	;wreg free
   583  000292  EE20  F012         	lfsr	2,time_incre@current
   584  000296  0E0A               	movlw	10
   585  000298                     u1641:
   586  000298  CFEB FFDB          	movff	plusw0,plusw2
   587  00029C  06E8               	decf	wreg,f,c
   588  00029E  E2FC               	bc	u1641
   589  0002A0                     
   590                           ;dateandtime.c: 56:                 if (current.hour>23) {
   591  0002A0  5017               	movf	(time_incre@current+5)^0,w,c
   592  0002A2  0A80               	xorlw	128
   593  0002A4  0F68               	addlw	-152
   594  0002A6  A0D8               	btfss	status,0,c
   595  0002A8  EF58  F001         	goto	u1651
   596  0002AC  EF5A  F001         	goto	u1650
   597  0002B0                     u1651:
   598  0002B0  EF7E  F001         	goto	l288
   599  0002B4                     u1650:
   600  0002B4                     
   601                           ;dateandtime.c: 57:                     current.hour = 0;
   602  0002B4  0E00               	movlw	0
   603  0002B6  6E17               	movwf	(time_incre@current+5)^0,c
   604  0002B8                     
   605                           ;dateandtime.c: 58:                     current.date = current.date+1;
   606  0002B8  2815               	incf	(time_incre@current+3)^0,w,c
   607  0002BA  6E15               	movwf	(time_incre@current+3)^0,c
   608  0002BC                     
   609                           ;dateandtime.c: 59:                     current = date_check(current);
   610  0002BC  EE20  F012         	lfsr	2,time_incre@current
   611  0002C0  EE00  F005         	lfsr	0,date_check@current
   612  0002C4  0E0A               	movlw	10
   613  0002C6                     u1661:
   614  0002C6  CFDB FFEB          	movff	plusw2,plusw0
   615  0002CA  06E8               	decf	wreg,f,c
   616  0002CC  E2FC               	bc	u1661
   617  0002CE  EC2C  F000         	call	_date_check	;wreg free
   618  0002D2  EE20  F012         	lfsr	2,time_incre@current
   619  0002D6  0E0A               	movlw	10
   620  0002D8                     u1671:
   621  0002D8  CFEB FFDB          	movff	plusw0,plusw2
   622  0002DC  06E8               	decf	wreg,f,c
   623  0002DE  E2FC               	bc	u1671
   624  0002E0                     
   625                           ;dateandtime.c: 60:                     current.day = current.day+1;
   626  0002E0  2816               	incf	(time_incre@current+4)^0,w,c
   627  0002E2  6E16               	movwf	(time_incre@current+4)^0,c
   628  0002E4                     
   629                           ;dateandtime.c: 61:                     if (current.day>7) {
   630  0002E4  5016               	movf	(time_incre@current+4)^0,w,c
   631  0002E6  0A80               	xorlw	128
   632  0002E8  0F78               	addlw	-136
   633  0002EA  A0D8               	btfss	status,0,c
   634  0002EC  EF7A  F001         	goto	u1681
   635  0002F0  EF7C  F001         	goto	u1680
   636  0002F4                     u1681:
   637  0002F4  EF7E  F001         	goto	l288
   638  0002F8                     u1680:
   639  0002F8                     
   640                           ;dateandtime.c: 62:                         current.day = 1;
   641  0002F8  0E01               	movlw	1
   642  0002FA  6E16               	movwf	(time_incre@current+4)^0,c
   643  0002FC                     l288:
   644                           
   645                           ;dateandtime.c: 67:         time_flag=0;
   646  0002FC  0E00               	movlw	0
   647  0002FE  6E31               	movwf	_time_flag^0,c	;volatile
   648  000300                     l1666:
   649                           
   650                           ;dateandtime.c: 69:     return current;
   651  000300  EE20  F012         	lfsr	2,time_incre@current
   652  000304  EE00  F012         	lfsr	0,?_time_incre
   653  000308  0E0A               	movlw	10
   654  00030A                     u1691:
   655  00030A  CFDB FFEB          	movff	plusw2,plusw0
   656  00030E  06E8               	decf	wreg,f,c
   657  000310  E2FC               	bc	u1691
   658  000312  0012               	return		;funcret
   659  000314                     __end_of_time_incre:
   660                           	callstack 0
   661                           
   662 ;; *************** function _daylightsavingstime_toggle *****************
   663 ;; Defined at:
   664 ;;		line 8 in file "dateandtime.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;  current        11    4[COMRAM] struct .
   667 ;; Auto vars:     Size  Location     Type
   668 ;;		None
   669 ;; Return value:  Size  Location     Type
   670 ;;                  11    4[COMRAM] struct .
   671 ;; Registers used:
   672 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
   673 ;; Tracked objects:
   674 ;;		On entry : 0/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   678 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   680 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   681 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   682 ;;Total ram usage:       13 bytes
   683 ;; Hardware stack levels used: 1
   684 ;; Hardware stack levels required when called: 2
   685 ;; This function calls:
   686 ;;		Nothing
   687 ;; This function is called by:
   688 ;;		_time_incre
   689 ;; This function uses a non-reentrant model
   690 ;;
   691                           
   692                           	psect	text2
   693  0003FE                     __ptext2:
   694                           	callstack 0
   695  0003FE                     _daylightsavingstime_toggle:
   696                           	callstack 27
   697  0003FE                     
   698                           ;dateandtime.c: 10:     if (current.month==3 && (current.date+7)>31 && current.day==7 &&
      +                           current.hour==1) {
   699  0003FE  0E03               	movlw	3
   700  000400  1807               	xorwf	(daylightsavingstime_toggle@current+2)^0,w,c
   701  000402  A4D8               	btfss	status,2,c
   702  000404  EF06  F002         	goto	u1131
   703  000408  EF08  F002         	goto	u1130
   704  00040C                     u1131:
   705  00040C  EF34  F002         	goto	l1494
   706  000410                     u1130:
   707  000410  C008  F010         	movff	daylightsavingstime_toggle@current+3,??_daylightsavingstime_toggle
   708  000414  6A11               	clrf	(??_daylightsavingstime_toggle+1)^0,c
   709  000416  BE10               	btfsc	??_daylightsavingstime_toggle^0,7,c
   710  000418  0611               	decf	(??_daylightsavingstime_toggle+1)^0,f,c
   711  00041A  0E07               	movlw	7
   712  00041C  2610               	addwf	??_daylightsavingstime_toggle^0,f,c
   713  00041E  0E00               	movlw	0
   714  000420  2211               	addwfc	(??_daylightsavingstime_toggle+1)^0,f,c
   715  000422  BE11               	btfsc	(??_daylightsavingstime_toggle+1)^0,7,c
   716  000424  EF1D  F002         	goto	u1141
   717  000428  5011               	movf	(??_daylightsavingstime_toggle+1)^0,w,c
   718  00042A  E109               	bnz	u1140
   719  00042C  0E20               	movlw	32
   720  00042E  5C10               	subwf	??_daylightsavingstime_toggle^0,w,c
   721  000430  A0D8               	btfss	status,0,c
   722  000432  EF1D  F002         	goto	u1141
   723  000436  EF1F  F002         	goto	u1140
   724  00043A                     u1141:
   725  00043A  EF34  F002         	goto	l1494
   726  00043E                     u1140:
   727  00043E  0E07               	movlw	7
   728  000440  1809               	xorwf	(daylightsavingstime_toggle@current+4)^0,w,c
   729  000442  A4D8               	btfss	status,2,c
   730  000444  EF26  F002         	goto	u1151
   731  000448  EF28  F002         	goto	u1150
   732  00044C                     u1151:
   733  00044C  EF34  F002         	goto	l1494
   734  000450                     u1150:
   735  000450  040A               	decf	(daylightsavingstime_toggle@current+5)^0,w,c
   736  000452  A4D8               	btfss	status,2,c
   737  000454  EF2E  F002         	goto	u1161
   738  000458  EF30  F002         	goto	u1160
   739  00045C                     u1161:
   740  00045C  EF34  F002         	goto	l1494
   741  000460                     u1160:
   742  000460                     
   743                           ;dateandtime.c: 11:         current.hour = current.hour+1;
   744  000460  280A               	incf	(daylightsavingstime_toggle@current+5)^0,w,c
   745  000462  6E0A               	movwf	(daylightsavingstime_toggle@current+5)^0,c
   746                           
   747                           ;dateandtime.c: 12:     } else if (current.month==10 && (current.date+7)>31 && current.d
      +                          ay==7 && current.hour==2) {
   748  000464  EF68  F002         	goto	l1504
   749  000468                     l1494:
   750  000468  0E0A               	movlw	10
   751  00046A  1807               	xorwf	(daylightsavingstime_toggle@current+2)^0,w,c
   752  00046C  A4D8               	btfss	status,2,c
   753  00046E  EF3B  F002         	goto	u1171
   754  000472  EF3D  F002         	goto	u1170
   755  000476                     u1171:
   756  000476  EF68  F002         	goto	l1504
   757  00047A                     u1170:
   758  00047A  C008  F010         	movff	daylightsavingstime_toggle@current+3,??_daylightsavingstime_toggle
   759  00047E  6A11               	clrf	(??_daylightsavingstime_toggle+1)^0,c
   760  000480  BE10               	btfsc	??_daylightsavingstime_toggle^0,7,c
   761  000482  0611               	decf	(??_daylightsavingstime_toggle+1)^0,f,c
   762  000484  0E07               	movlw	7
   763  000486  2610               	addwf	??_daylightsavingstime_toggle^0,f,c
   764  000488  0E00               	movlw	0
   765  00048A  2211               	addwfc	(??_daylightsavingstime_toggle+1)^0,f,c
   766  00048C  BE11               	btfsc	(??_daylightsavingstime_toggle+1)^0,7,c
   767  00048E  EF52  F002         	goto	u1181
   768  000492  5011               	movf	(??_daylightsavingstime_toggle+1)^0,w,c
   769  000494  E109               	bnz	u1180
   770  000496  0E20               	movlw	32
   771  000498  5C10               	subwf	??_daylightsavingstime_toggle^0,w,c
   772  00049A  A0D8               	btfss	status,0,c
   773  00049C  EF52  F002         	goto	u1181
   774  0004A0  EF54  F002         	goto	u1180
   775  0004A4                     u1181:
   776  0004A4  EF68  F002         	goto	l1504
   777  0004A8                     u1180:
   778  0004A8  0E07               	movlw	7
   779  0004AA  1809               	xorwf	(daylightsavingstime_toggle@current+4)^0,w,c
   780  0004AC  A4D8               	btfss	status,2,c
   781  0004AE  EF5B  F002         	goto	u1191
   782  0004B2  EF5D  F002         	goto	u1190
   783  0004B6                     u1191:
   784  0004B6  EF68  F002         	goto	l1504
   785  0004BA                     u1190:
   786  0004BA  0E02               	movlw	2
   787  0004BC  180A               	xorwf	(daylightsavingstime_toggle@current+5)^0,w,c
   788  0004BE  A4D8               	btfss	status,2,c
   789  0004C0  EF64  F002         	goto	u1201
   790  0004C4  EF66  F002         	goto	u1200
   791  0004C8                     u1201:
   792  0004C8  EF68  F002         	goto	l1504
   793  0004CC                     u1200:
   794  0004CC                     
   795                           ;dateandtime.c: 13:         current.hour = current.hour-1;
   796  0004CC  040A               	decf	(daylightsavingstime_toggle@current+5)^0,w,c
   797  0004CE  6E0A               	movwf	(daylightsavingstime_toggle@current+5)^0,c
   798  0004D0                     l1504:
   799                           
   800                           ;dateandtime.c: 16:     return current;
   801  0004D0  EE20  F005         	lfsr	2,daylightsavingstime_toggle@current
   802  0004D4  EE00  F005         	lfsr	0,?_daylightsavingstime_toggle
   803  0004D8  0E0A               	movlw	10
   804  0004DA                     u1211:
   805  0004DA  CFDB FFEB          	movff	plusw2,plusw0
   806  0004DE  06E8               	decf	wreg,f,c
   807  0004E0  E2FC               	bc	u1211
   808  0004E2  0012               	return		;funcret
   809  0004E4                     __end_of_daylightsavingstime_toggle:
   810                           	callstack 0
   811                           
   812 ;; *************** function _date_check *****************
   813 ;; Defined at:
   814 ;;		line 23 in file "dateandtime.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;  current        11    4[COMRAM] struct .
   817 ;; Auto vars:     Size  Location     Type
   818 ;;		None
   819 ;; Return value:  Size  Location     Type
   820 ;;                  11    4[COMRAM] struct .
   821 ;; Registers used:
   822 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   828 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   830 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   831 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   832 ;;Total ram usage:       13 bytes
   833 ;; Hardware stack levels used: 1
   834 ;; Hardware stack levels required when called: 2
   835 ;; This function calls:
   836 ;;		Nothing
   837 ;; This function is called by:
   838 ;;		_time_incre
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842                           	psect	text3
   843  000058                     __ptext3:
   844                           	callstack 0
   845  000058                     _date_check:
   846                           	callstack 27
   847  000058                     
   848                           ;dateandtime.c: 25:     if ((current.year%4==0 && current.month==2 && current.date>29) |
      +                          | (current.year%4!=0 && current.month==2 && current.date>28) || ((current.month==1 || cu
      +                          rrent.month==3 || current.month==5 || current.month==7 || current.month==8 || current.mo
      +                          nth==10 || current.month==12) && current.date>31) || ((current.month==4 || current.month
      +                          ==6 || current.month==9 || current.month==11) && current.date>30)) {
   849  000058  0E03               	movlw	3
   850  00005A  1405               	andwf	date_check@current^0,w,c
   851  00005C  6E10               	movwf	??_date_check^0,c
   852  00005E  0E00               	movlw	0
   853  000060  1406               	andwf	(date_check@current+1)^0,w,c
   854  000062  6E11               	movwf	(??_date_check+1)^0,c
   855  000064  5010               	movf	??_date_check^0,w,c
   856  000066  1011               	iorwf	(??_date_check+1)^0,w,c
   857  000068  A4D8               	btfss	status,2,c
   858  00006A  EF39  F000         	goto	u1221
   859  00006E  EF3B  F000         	goto	u1220
   860  000072                     u1221:
   861  000072  EF4E  F000         	goto	l1514
   862  000076                     u1220:
   863  000076  0E02               	movlw	2
   864  000078  1807               	xorwf	(date_check@current+2)^0,w,c
   865  00007A  A4D8               	btfss	status,2,c
   866  00007C  EF42  F000         	goto	u1231
   867  000080  EF44  F000         	goto	u1230
   868  000084                     u1231:
   869  000084  EF4E  F000         	goto	l1514
   870  000088                     u1230:
   871  000088  5008               	movf	(date_check@current+3)^0,w,c
   872  00008A  0A80               	xorlw	128
   873  00008C  0F62               	addlw	-158
   874  00008E  B0D8               	btfsc	status,0,c
   875  000090  EF4C  F000         	goto	u1241
   876  000094  EF4E  F000         	goto	u1240
   877  000098                     u1241:
   878  000098  EFE6  F000         	goto	l1546
   879  00009C                     u1240:
   880  00009C                     l1514:
   881  00009C  0E03               	movlw	3
   882  00009E  1405               	andwf	date_check@current^0,w,c
   883  0000A0  6E10               	movwf	??_date_check^0,c
   884  0000A2  0E00               	movlw	0
   885  0000A4  1406               	andwf	(date_check@current+1)^0,w,c
   886  0000A6  6E11               	movwf	(??_date_check+1)^0,c
   887  0000A8  5010               	movf	??_date_check^0,w,c
   888  0000AA  1011               	iorwf	(??_date_check+1)^0,w,c
   889  0000AC  B4D8               	btfsc	status,2,c
   890  0000AE  EF5B  F000         	goto	u1251
   891  0000B2  EF5D  F000         	goto	u1250
   892  0000B6                     u1251:
   893  0000B6  EF70  F000         	goto	l1520
   894  0000BA                     u1250:
   895  0000BA  0E02               	movlw	2
   896  0000BC  1807               	xorwf	(date_check@current+2)^0,w,c
   897  0000BE  A4D8               	btfss	status,2,c
   898  0000C0  EF64  F000         	goto	u1261
   899  0000C4  EF66  F000         	goto	u1260
   900  0000C8                     u1261:
   901  0000C8  EF70  F000         	goto	l1520
   902  0000CC                     u1260:
   903  0000CC  5008               	movf	(date_check@current+3)^0,w,c
   904  0000CE  0A80               	xorlw	128
   905  0000D0  0F63               	addlw	-157
   906  0000D2  B0D8               	btfsc	status,0,c
   907  0000D4  EF6E  F000         	goto	u1271
   908  0000D8  EF70  F000         	goto	u1270
   909  0000DC                     u1271:
   910  0000DC  EFE6  F000         	goto	l1546
   911  0000E0                     u1270:
   912  0000E0                     l1520:
   913  0000E0  0407               	decf	(date_check@current+2)^0,w,c
   914  0000E2  B4D8               	btfsc	status,2,c
   915  0000E4  EF76  F000         	goto	u1281
   916  0000E8  EF78  F000         	goto	u1280
   917  0000EC                     u1281:
   918  0000EC  EFAE  F000         	goto	l1534
   919  0000F0                     u1280:
   920  0000F0  0E03               	movlw	3
   921  0000F2  1807               	xorwf	(date_check@current+2)^0,w,c
   922  0000F4  B4D8               	btfsc	status,2,c
   923  0000F6  EF7F  F000         	goto	u1291
   924  0000FA  EF81  F000         	goto	u1290
   925  0000FE                     u1291:
   926  0000FE  EFAE  F000         	goto	l1534
   927  000102                     u1290:
   928  000102  0E05               	movlw	5
   929  000104  1807               	xorwf	(date_check@current+2)^0,w,c
   930  000106  B4D8               	btfsc	status,2,c
   931  000108  EF88  F000         	goto	u1301
   932  00010C  EF8A  F000         	goto	u1300
   933  000110                     u1301:
   934  000110  EFAE  F000         	goto	l1534
   935  000114                     u1300:
   936  000114  0E07               	movlw	7
   937  000116  1807               	xorwf	(date_check@current+2)^0,w,c
   938  000118  B4D8               	btfsc	status,2,c
   939  00011A  EF91  F000         	goto	u1311
   940  00011E  EF93  F000         	goto	u1310
   941  000122                     u1311:
   942  000122  EFAE  F000         	goto	l1534
   943  000126                     u1310:
   944  000126  0E08               	movlw	8
   945  000128  1807               	xorwf	(date_check@current+2)^0,w,c
   946  00012A  B4D8               	btfsc	status,2,c
   947  00012C  EF9A  F000         	goto	u1321
   948  000130  EF9C  F000         	goto	u1320
   949  000134                     u1321:
   950  000134  EFAE  F000         	goto	l1534
   951  000138                     u1320:
   952  000138  0E0A               	movlw	10
   953  00013A  1807               	xorwf	(date_check@current+2)^0,w,c
   954  00013C  B4D8               	btfsc	status,2,c
   955  00013E  EFA3  F000         	goto	u1331
   956  000142  EFA5  F000         	goto	u1330
   957  000146                     u1331:
   958  000146  EFAE  F000         	goto	l1534
   959  00014A                     u1330:
   960  00014A  0E0C               	movlw	12
   961  00014C  1807               	xorwf	(date_check@current+2)^0,w,c
   962  00014E  A4D8               	btfss	status,2,c
   963  000150  EFAC  F000         	goto	u1341
   964  000154  EFAE  F000         	goto	u1340
   965  000158                     u1341:
   966  000158  EFB8  F000         	goto	l1536
   967  00015C                     u1340:
   968  00015C                     l1534:
   969  00015C  5008               	movf	(date_check@current+3)^0,w,c
   970  00015E  0A80               	xorlw	128
   971  000160  0F60               	addlw	-160
   972  000162  B0D8               	btfsc	status,0,c
   973  000164  EFB6  F000         	goto	u1351
   974  000168  EFB8  F000         	goto	u1350
   975  00016C                     u1351:
   976  00016C  EFE6  F000         	goto	l1546
   977  000170                     u1350:
   978  000170                     l1536:
   979  000170  0E04               	movlw	4
   980  000172  1807               	xorwf	(date_check@current+2)^0,w,c
   981  000174  B4D8               	btfsc	status,2,c
   982  000176  EFBF  F000         	goto	u1361
   983  00017A  EFC1  F000         	goto	u1360
   984  00017E                     u1361:
   985  00017E  EFDC  F000         	goto	l1544
   986  000182                     u1360:
   987  000182  0E06               	movlw	6
   988  000184  1807               	xorwf	(date_check@current+2)^0,w,c
   989  000186  B4D8               	btfsc	status,2,c
   990  000188  EFC8  F000         	goto	u1371
   991  00018C  EFCA  F000         	goto	u1370
   992  000190                     u1371:
   993  000190  EFDC  F000         	goto	l1544
   994  000194                     u1370:
   995  000194  0E09               	movlw	9
   996  000196  1807               	xorwf	(date_check@current+2)^0,w,c
   997  000198  B4D8               	btfsc	status,2,c
   998  00019A  EFD1  F000         	goto	u1381
   999  00019E  EFD3  F000         	goto	u1380
  1000  0001A2                     u1381:
  1001  0001A2  EFDC  F000         	goto	l1544
  1002  0001A6                     u1380:
  1003  0001A6  0E0B               	movlw	11
  1004  0001A8  1807               	xorwf	(date_check@current+2)^0,w,c
  1005  0001AA  A4D8               	btfss	status,2,c
  1006  0001AC  EFDA  F000         	goto	u1391
  1007  0001B0  EFDC  F000         	goto	u1390
  1008  0001B4                     u1391:
  1009  0001B4  EFFC  F000         	goto	l1556
  1010  0001B8                     u1390:
  1011  0001B8                     l1544:
  1012  0001B8  5008               	movf	(date_check@current+3)^0,w,c
  1013  0001BA  0A80               	xorlw	128
  1014  0001BC  0F61               	addlw	-159
  1015  0001BE  A0D8               	btfss	status,0,c
  1016  0001C0  EFE4  F000         	goto	u1401
  1017  0001C4  EFE6  F000         	goto	u1400
  1018  0001C8                     u1401:
  1019  0001C8  EFFC  F000         	goto	l1556
  1020  0001CC                     u1400:
  1021  0001CC                     l1546:
  1022                           
  1023                           ;dateandtime.c: 28: ;dateandtime.c: 29:         current.month = current.month+1;
  1024  0001CC  2807               	incf	(date_check@current+2)^0,w,c
  1025  0001CE  6E07               	movwf	(date_check@current+2)^0,c
  1026  0001D0                     
  1027                           ;dateandtime.c: 30:         current.date = 1;
  1028  0001D0  0E01               	movlw	1
  1029  0001D2  6E08               	movwf	(date_check@current+3)^0,c
  1030  0001D4                     
  1031                           ;dateandtime.c: 32:         if (current.month>12) {
  1032  0001D4  5007               	movf	(date_check@current+2)^0,w,c
  1033  0001D6  0A80               	xorlw	128
  1034  0001D8  0F73               	addlw	-141
  1035  0001DA  A0D8               	btfss	status,0,c
  1036  0001DC  EFF2  F000         	goto	u1411
  1037  0001E0  EFF4  F000         	goto	u1410
  1038  0001E4                     u1411:
  1039  0001E4  EFFC  F000         	goto	l1556
  1040  0001E8                     u1410:
  1041  0001E8                     
  1042                           ;dateandtime.c: 33:             current.year = current.year+1;
  1043  0001E8  0E01               	movlw	1
  1044  0001EA  2405               	addwf	date_check@current^0,w,c
  1045  0001EC  6E05               	movwf	date_check@current^0,c
  1046  0001EE  0E00               	movlw	0
  1047  0001F0  2006               	addwfc	(date_check@current+1)^0,w,c
  1048  0001F2  6E06               	movwf	(date_check@current+1)^0,c
  1049  0001F4                     
  1050                           ;dateandtime.c: 34:             current.month = 1;
  1051  0001F4  0E01               	movlw	1
  1052  0001F6  6E07               	movwf	(date_check@current+2)^0,c
  1053  0001F8                     l1556:
  1054                           
  1055                           ;dateandtime.c: 38:     return current;
  1056  0001F8  EE20  F005         	lfsr	2,date_check@current
  1057  0001FC  EE00  F005         	lfsr	0,?_date_check
  1058  000200  0E0A               	movlw	10
  1059  000202                     u1421:
  1060  000202  CFDB FFEB          	movff	plusw2,plusw0
  1061  000206  06E8               	decf	wreg,f,c
  1062  000208  E2FC               	bc	u1421
  1063  00020A  0012               	return		;funcret
  1064  00020C                     __end_of_date_check:
  1065                           	callstack 0
  1066                           
  1067 ;; *************** function _sunrise_sunset *****************
  1068 ;; Defined at:
  1069 ;;		line 110 in file "dateandtime.c"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;  current        11   26[COMRAM] struct .
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;		None
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  11   26[COMRAM] struct .
  1076 ;; Registers used:
  1077 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1083 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1086 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1087 ;;Total ram usage:       11 bytes
  1088 ;; Hardware stack levels used: 1
  1089 ;; Hardware stack levels required when called: 4
  1090 ;; This function calls:
  1091 ;;		_sun_sync
  1092 ;;		_sunrise
  1093 ;; This function is called by:
  1094 ;;		_main
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098                           	psect	text4
  1099  000894                     __ptext4:
  1100                           	callstack 0
  1101  000894                     _sunrise_sunset:
  1102                           	callstack 26
  1103  000894                     
  1104                           ;dateandtime.c: 111:     if (sunrise_flag==1) {
  1105  000894  0433               	decf	_sunrise_flag^0,w,c	;volatile
  1106  000896  A4D8               	btfss	status,2,c
  1107  000898  EF50  F004         	goto	u1511
  1108  00089C  EF52  F004         	goto	u1510
  1109  0008A0                     u1511:
  1110  0008A0  EF68  F004         	goto	l1624
  1111  0008A4                     u1510:
  1112  0008A4                     
  1113                           ;dateandtime.c: 112:     current=sunrise(current);
  1114  0008A4  EE20  F01B         	lfsr	2,sunrise_sunset@current
  1115  0008A8  EE00  F005         	lfsr	0,sunrise@current
  1116  0008AC  0E0A               	movlw	10
  1117  0008AE                     u1521:
  1118  0008AE  CFDB FFEB          	movff	plusw2,plusw0
  1119  0008B2  06E8               	decf	wreg,f,c
  1120  0008B4  E2FC               	bc	u1521
  1121  0008B6  EC72  F005         	call	_sunrise	;wreg free
  1122  0008BA  EE20  F01B         	lfsr	2,sunrise_sunset@current
  1123  0008BE  0E0A               	movlw	10
  1124  0008C0                     u1531:
  1125  0008C0  CFEB FFDB          	movff	plusw0,plusw2
  1126  0008C4  06E8               	decf	wreg,f,c
  1127  0008C6  E2FC               	bc	u1531
  1128  0008C8                     
  1129                           ;dateandtime.c: 113:     sunrise_flag=0;
  1130  0008C8  0E00               	movlw	0
  1131  0008CA  6E33               	movwf	_sunrise_flag^0,c	;volatile
  1132                           
  1133                           ;dateandtime.c: 114:     } else if (sunset_flag==1) {
  1134  0008CC  EF84  F004         	goto	l1630
  1135  0008D0                     l1624:
  1136  0008D0  0432               	decf	_sunset_flag^0,w,c	;volatile
  1137  0008D2  A4D8               	btfss	status,2,c
  1138  0008D4  EF6E  F004         	goto	u1541
  1139  0008D8  EF70  F004         	goto	u1540
  1140  0008DC                     u1541:
  1141  0008DC  EF84  F004         	goto	l1630
  1142  0008E0                     u1540:
  1143  0008E0                     
  1144                           ;dateandtime.c: 115:         current=sun_sync(current);
  1145  0008E0  EE20  F01B         	lfsr	2,sunrise_sunset@current
  1146  0008E4  EE00  F00D         	lfsr	0,sun_sync@current
  1147  0008E8  0E0A               	movlw	10
  1148  0008EA                     u1551:
  1149  0008EA  CFDB FFEB          	movff	plusw2,plusw0
  1150  0008EE  06E8               	decf	wreg,f,c
  1151  0008F0  E2FC               	bc	u1551
  1152  0008F2  EC72  F002         	call	_sun_sync	;wreg free
  1153  0008F6  EE20  F01B         	lfsr	2,sunrise_sunset@current
  1154  0008FA  0E0A               	movlw	10
  1155  0008FC                     u1561:
  1156  0008FC  CFEB FFDB          	movff	plusw0,plusw2
  1157  000900  06E8               	decf	wreg,f,c
  1158  000902  E2FC               	bc	u1561
  1159  000904                     
  1160                           ;dateandtime.c: 116:         sunset_flag=0;
  1161  000904  0E00               	movlw	0
  1162  000906  6E32               	movwf	_sunset_flag^0,c	;volatile
  1163  000908                     l1630:
  1164                           
  1165                           ;dateandtime.c: 118:     return current;
  1166  000908  EE20  F01B         	lfsr	2,sunrise_sunset@current
  1167  00090C  EE00  F01B         	lfsr	0,?_sunrise_sunset
  1168  000910  0E0A               	movlw	10
  1169  000912                     u1571:
  1170  000912  CFDB FFEB          	movff	plusw2,plusw0
  1171  000916  06E8               	decf	wreg,f,c
  1172  000918  E2FC               	bc	u1571
  1173  00091A  0012               	return		;funcret
  1174  00091C                     __end_of_sunrise_sunset:
  1175                           	callstack 0
  1176                           
  1177 ;; *************** function _sun_sync *****************
  1178 ;; Defined at:
  1179 ;;		line 88 in file "dateandtime.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;  current        11   12[COMRAM] struct .
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;  solarnoon_se    1   25[COMRAM] char 
  1184 ;;  solarnoon_mi    1   24[COMRAM] char 
  1185 ;;  solarnoon_ho    1   23[COMRAM] char 
  1186 ;; Return value:  Size  Location     Type
  1187 ;;                  11   12[COMRAM] struct .
  1188 ;; Registers used:
  1189 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  1190 ;; Tracked objects:
  1191 ;;		On entry : 0/0
  1192 ;;		On exit  : 0/0
  1193 ;;		Unchanged: 0/0
  1194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1195 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1196 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1198 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1199 ;;Total ram usage:       14 bytes
  1200 ;; Hardware stack levels used: 1
  1201 ;; Hardware stack levels required when called: 3
  1202 ;; This function calls:
  1203 ;;		___awdiv
  1204 ;; This function is called by:
  1205 ;;		_sunrise_sunset
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           	psect	text5
  1210  0004E4                     __ptext5:
  1211                           	callstack 0
  1212  0004E4                     _sun_sync:
  1213                           	callstack 26
  1214  0004E4                     
  1215                           ;dateandtime.c: 90:     signed char solarnoon_hour = (current.sunrise_hour + current.hou
      +                          r)/2;
  1216  0004E4  5015               	movf	(sun_sync@current+8)^0,w,c
  1217  0004E6  2412               	addwf	(sun_sync@current+5)^0,w,c
  1218  0004E8  6E05               	movwf	___awdiv@dividend^0,c
  1219  0004EA  6AE8               	clrf	wreg,c
  1220  0004EC  B0D8               	btfsc	status,0,c
  1221  0004EE  2AE8               	incf	wreg,f,c
  1222  0004F0  BE15               	btfsc	(sun_sync@current+8)^0,7,c
  1223  0004F2  06E8               	decf	wreg,f,c
  1224  0004F4  BE12               	btfsc	(sun_sync@current+5)^0,7,c
  1225  0004F6  06E8               	decf	wreg,f,c
  1226  0004F8  6E06               	movwf	(___awdiv@dividend+1)^0,c
  1227  0004FA  0E00               	movlw	0
  1228  0004FC  6E08               	movwf	(___awdiv@divisor+1)^0,c
  1229  0004FE  0E02               	movlw	2
  1230  000500  6E07               	movwf	___awdiv@divisor^0,c
  1231  000502  ECD7  F002         	call	___awdiv	;wreg free
  1232  000506  5005               	movf	?___awdiv^0,w,c
  1233  000508  6E18               	movwf	sun_sync@solarnoon_hour^0,c
  1234                           
  1235                           ;dateandtime.c: 91:     signed char solarnoon_minute = (current.sunrise_minute + current
      +                          .minute)/2;
  1236  00050A  5016               	movf	(sun_sync@current+9)^0,w,c
  1237  00050C  2413               	addwf	(sun_sync@current+6)^0,w,c
  1238  00050E  6E05               	movwf	___awdiv@dividend^0,c
  1239  000510  6AE8               	clrf	wreg,c
  1240  000512  B0D8               	btfsc	status,0,c
  1241  000514  2AE8               	incf	wreg,f,c
  1242  000516  BE16               	btfsc	(sun_sync@current+9)^0,7,c
  1243  000518  06E8               	decf	wreg,f,c
  1244  00051A  BE13               	btfsc	(sun_sync@current+6)^0,7,c
  1245  00051C  06E8               	decf	wreg,f,c
  1246  00051E  6E06               	movwf	(___awdiv@dividend+1)^0,c
  1247  000520  0E00               	movlw	0
  1248  000522  6E08               	movwf	(___awdiv@divisor+1)^0,c
  1249  000524  0E02               	movlw	2
  1250  000526  6E07               	movwf	___awdiv@divisor^0,c
  1251  000528  ECD7  F002         	call	___awdiv	;wreg free
  1252  00052C  5005               	movf	?___awdiv^0,w,c
  1253  00052E  6E19               	movwf	sun_sync@solarnoon_minute^0,c
  1254                           
  1255                           ;dateandtime.c: 92:     signed char solarnoon_second = (current.sunrise_second + current
      +                          .second)/2;
  1256  000530  5017               	movf	(sun_sync@current+10)^0,w,c
  1257  000532  2414               	addwf	(sun_sync@current+7)^0,w,c
  1258  000534  6E05               	movwf	___awdiv@dividend^0,c
  1259  000536  6AE8               	clrf	wreg,c
  1260  000538  B0D8               	btfsc	status,0,c
  1261  00053A  2AE8               	incf	wreg,f,c
  1262  00053C  BE17               	btfsc	(sun_sync@current+10)^0,7,c
  1263  00053E  06E8               	decf	wreg,f,c
  1264  000540  BE14               	btfsc	(sun_sync@current+7)^0,7,c
  1265  000542  06E8               	decf	wreg,f,c
  1266  000544  6E06               	movwf	(___awdiv@dividend+1)^0,c
  1267  000546  0E00               	movlw	0
  1268  000548  6E08               	movwf	(___awdiv@divisor+1)^0,c
  1269  00054A  0E02               	movlw	2
  1270  00054C  6E07               	movwf	___awdiv@divisor^0,c
  1271  00054E  ECD7  F002         	call	___awdiv	;wreg free
  1272  000552  5005               	movf	?___awdiv^0,w,c
  1273  000554  6E1A               	movwf	sun_sync@solarnoon_second^0,c
  1274  000556                     
  1275                           ;dateandtime.c: 94:     current.second = current.second - (solarnoon_second-0);
  1276  000556  501A               	movf	sun_sync@solarnoon_second^0,w,c
  1277  000558  5C14               	subwf	(sun_sync@current+7)^0,w,c
  1278  00055A  6E14               	movwf	(sun_sync@current+7)^0,c
  1279  00055C                     
  1280                           ;dateandtime.c: 95:     if (current.second<0) {
  1281  00055C  BE14               	btfsc	(sun_sync@current+7)^0,7,c
  1282  00055E  EFB5  F002         	goto	u1430
  1283  000562  EFB3  F002         	goto	u1431
  1284  000566                     u1431:
  1285  000566  EFBA  F002         	goto	l298
  1286  00056A                     u1430:
  1287  00056A                     
  1288                           ;dateandtime.c: 96:         current.second = current.second+60;
  1289  00056A  5014               	movf	(sun_sync@current+7)^0,w,c
  1290  00056C  0F3C               	addlw	60
  1291  00056E  6E14               	movwf	(sun_sync@current+7)^0,c
  1292                           
  1293                           ;dateandtime.c: 97:         current.minute = current.minute-1;
  1294  000570  0413               	decf	(sun_sync@current+6)^0,w,c
  1295  000572  6E13               	movwf	(sun_sync@current+6)^0,c
  1296  000574                     l298:
  1297                           
  1298                           ;dateandtime.c: 99:     current.minute = current.minute - (solarnoon_minute-0);
  1299  000574  5019               	movf	sun_sync@solarnoon_minute^0,w,c
  1300  000576  5C13               	subwf	(sun_sync@current+6)^0,w,c
  1301  000578  6E13               	movwf	(sun_sync@current+6)^0,c
  1302                           
  1303                           ;dateandtime.c: 100:     if (current.minute<0) {
  1304  00057A  BE13               	btfsc	(sun_sync@current+6)^0,7,c
  1305  00057C  EFC4  F002         	goto	u1440
  1306  000580  EFC2  F002         	goto	u1441
  1307  000584                     u1441:
  1308  000584  EFC9  F002         	goto	l299
  1309  000588                     u1440:
  1310  000588                     
  1311                           ;dateandtime.c: 101:         current.minute = current.minute+60;
  1312  000588  5013               	movf	(sun_sync@current+6)^0,w,c
  1313  00058A  0F3C               	addlw	60
  1314  00058C  6E13               	movwf	(sun_sync@current+6)^0,c
  1315                           
  1316                           ;dateandtime.c: 102:         current.hour = current.hour-1;
  1317  00058E  0412               	decf	(sun_sync@current+5)^0,w,c
  1318  000590  6E12               	movwf	(sun_sync@current+5)^0,c
  1319  000592                     l299:
  1320                           
  1321                           ;dateandtime.c: 104:     current.hour = current.hour - (solarnoon_hour-12);
  1322  000592  5018               	movf	sun_sync@solarnoon_hour^0,w,c
  1323  000594  5C12               	subwf	(sun_sync@current+5)^0,w,c
  1324  000596  0F0C               	addlw	12
  1325  000598  6E12               	movwf	(sun_sync@current+5)^0,c
  1326  00059A                     
  1327                           ;dateandtime.c: 106:     return current;
  1328  00059A  EE20  F00D         	lfsr	2,sun_sync@current
  1329  00059E  EE00  F00D         	lfsr	0,?_sun_sync
  1330  0005A2  0E0A               	movlw	10
  1331  0005A4                     u1451:
  1332  0005A4  CFDB FFEB          	movff	plusw2,plusw0
  1333  0005A8  06E8               	decf	wreg,f,c
  1334  0005AA  E2FC               	bc	u1451
  1335  0005AC  0012               	return		;funcret
  1336  0005AE                     __end_of_sun_sync:
  1337                           	callstack 0
  1338                           
  1339 ;; *************** function ___awdiv *****************
  1340 ;; Defined at:
  1341 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;  dividend        2    4[COMRAM] int 
  1344 ;;  divisor         2    6[COMRAM] int 
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;  quotient        2   10[COMRAM] int 
  1347 ;;  sign            1    9[COMRAM] unsigned char 
  1348 ;;  counter         1    8[COMRAM] unsigned char 
  1349 ;; Return value:  Size  Location     Type
  1350 ;;                  2    4[COMRAM] int 
  1351 ;; Registers used:
  1352 ;;		wreg, status,2, status,0
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1358 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1359 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1361 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1362 ;;Total ram usage:        8 bytes
  1363 ;; Hardware stack levels used: 1
  1364 ;; Hardware stack levels required when called: 2
  1365 ;; This function calls:
  1366 ;;		Nothing
  1367 ;; This function is called by:
  1368 ;;		_sun_sync
  1369 ;; This function uses a non-reentrant model
  1370 ;;
  1371                           
  1372                           	psect	text6
  1373  0005AE                     __ptext6:
  1374                           	callstack 0
  1375  0005AE                     ___awdiv:
  1376                           	callstack 26
  1377  0005AE  0E00               	movlw	0
  1378  0005B0  6E0A               	movwf	___awdiv@sign^0,c
  1379  0005B2  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  1380  0005B4  EFE0  F002         	goto	u1050
  1381  0005B8  EFDE  F002         	goto	u1051
  1382  0005BC                     u1051:
  1383  0005BC  EFE6  F002         	goto	l1434
  1384  0005C0                     u1050:
  1385  0005C0  6C07               	negf	___awdiv@divisor^0,c
  1386  0005C2  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  1387  0005C4  B0D8               	btfsc	status,0,c
  1388  0005C6  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  1389  0005C8  0E01               	movlw	1
  1390  0005CA  6E0A               	movwf	___awdiv@sign^0,c
  1391  0005CC                     l1434:
  1392  0005CC  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  1393  0005CE  EFED  F002         	goto	u1060
  1394  0005D2  EFEB  F002         	goto	u1061
  1395  0005D6                     u1061:
  1396  0005D6  EFF3  F002         	goto	l1440
  1397  0005DA                     u1060:
  1398  0005DA  6C05               	negf	___awdiv@dividend^0,c
  1399  0005DC  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  1400  0005DE  B0D8               	btfsc	status,0,c
  1401  0005E0  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  1402  0005E2  0E01               	movlw	1
  1403  0005E4  1A0A               	xorwf	___awdiv@sign^0,f,c
  1404  0005E6                     l1440:
  1405  0005E6  0E00               	movlw	0
  1406  0005E8  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  1407  0005EA  0E00               	movlw	0
  1408  0005EC  6E0B               	movwf	___awdiv@quotient^0,c
  1409  0005EE  5007               	movf	___awdiv@divisor^0,w,c
  1410  0005F0  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  1411  0005F2  B4D8               	btfsc	status,2,c
  1412  0005F4  EFFE  F002         	goto	u1071
  1413  0005F8  EF00  F003         	goto	u1070
  1414  0005FC                     u1071:
  1415  0005FC  EF28  F003         	goto	l1462
  1416  000600                     u1070:
  1417  000600  0E01               	movlw	1
  1418  000602  6E09               	movwf	___awdiv@counter^0,c
  1419  000604  EF08  F003         	goto	l1448
  1420  000608                     l1446:
  1421  000608  90D8               	bcf	status,0,c
  1422  00060A  3607               	rlcf	___awdiv@divisor^0,f,c
  1423  00060C  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  1424  00060E  2A09               	incf	___awdiv@counter^0,f,c
  1425  000610                     l1448:
  1426  000610  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  1427  000612  EF0D  F003         	goto	u1081
  1428  000616  EF0F  F003         	goto	u1080
  1429  00061A                     u1081:
  1430  00061A  EF04  F003         	goto	l1446
  1431  00061E                     u1080:
  1432  00061E                     l1450:
  1433  00061E  90D8               	bcf	status,0,c
  1434  000620  360B               	rlcf	___awdiv@quotient^0,f,c
  1435  000622  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  1436  000624  5007               	movf	___awdiv@divisor^0,w,c
  1437  000626  5C05               	subwf	___awdiv@dividend^0,w,c
  1438  000628  5008               	movf	(___awdiv@divisor+1)^0,w,c
  1439  00062A  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  1440  00062C  A0D8               	btfss	status,0,c
  1441  00062E  EF1B  F003         	goto	u1091
  1442  000632  EF1D  F003         	goto	u1090
  1443  000636                     u1091:
  1444  000636  EF22  F003         	goto	l1458
  1445  00063A                     u1090:
  1446  00063A  5007               	movf	___awdiv@divisor^0,w,c
  1447  00063C  5E05               	subwf	___awdiv@dividend^0,f,c
  1448  00063E  5008               	movf	(___awdiv@divisor+1)^0,w,c
  1449  000640  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  1450  000642  800B               	bsf	___awdiv@quotient^0,0,c
  1451  000644                     l1458:
  1452  000644  90D8               	bcf	status,0,c
  1453  000646  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  1454  000648  3207               	rrcf	___awdiv@divisor^0,f,c
  1455  00064A  2E09               	decfsz	___awdiv@counter^0,f,c
  1456  00064C  EF0F  F003         	goto	l1450
  1457  000650                     l1462:
  1458  000650  500A               	movf	___awdiv@sign^0,w,c
  1459  000652  B4D8               	btfsc	status,2,c
  1460  000654  EF2E  F003         	goto	u1101
  1461  000658  EF30  F003         	goto	u1100
  1462  00065C                     u1101:
  1463  00065C  EF34  F003         	goto	l1466
  1464  000660                     u1100:
  1465  000660  6C0B               	negf	___awdiv@quotient^0,c
  1466  000662  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  1467  000664  B0D8               	btfsc	status,0,c
  1468  000666  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  1469  000668                     l1466:
  1470  000668  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  1471  00066C  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  1472  000670  0012               	return		;funcret
  1473  000672                     __end_of___awdiv:
  1474                           	callstack 0
  1475                           
  1476 ;; *************** function _Timer0_init *****************
  1477 ;; Defined at:
  1478 ;;		line 9 in file "timers.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;		None
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;		None
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  1    wreg      void 
  1485 ;; Registers used:
  1486 ;;		wreg, status,2
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1496 ;;Total ram usage:        0 bytes
  1497 ;; Hardware stack levels used: 1
  1498 ;; Hardware stack levels required when called: 2
  1499 ;; This function calls:
  1500 ;;		Nothing
  1501 ;; This function is called by:
  1502 ;;		_main
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           	psect	text7
  1507  000B04                     __ptext7:
  1508                           	callstack 0
  1509  000B04                     _Timer0_init:
  1510                           	callstack 28
  1511  000B04                     
  1512                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
  1513  000B04  50D6               	movf	214,w,c	;volatile
  1514  000B06  0B1F               	andlw	-225
  1515  000B08  0940               	iorlw	64
  1516  000B0A  6ED6               	movwf	214,c	;volatile
  1517  000B0C                     
  1518                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
  1519  000B0C  88D6               	bsf	214,4,c	;volatile
  1520                           
  1521                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b0000;
  1522  000B0E  0EF0               	movlw	-16
  1523  000B10  16D6               	andwf	214,f,c	;volatile
  1524  000B12                     
  1525                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
  1526  000B12  88D5               	bsf	213,4,c	;volatile
  1527                           
  1528                           ;timers.c: 15:     TMR0H=0b11101110;
  1529  000B14  0EEE               	movlw	238
  1530  000B16  6ED4               	movwf	212,c	;volatile
  1531                           
  1532                           ;timers.c: 16:     TMR0L=0b10100011;
  1533  000B18  0EA3               	movlw	163
  1534  000B1A  6ED3               	movwf	211,c	;volatile
  1535  000B1C                     
  1536                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  1537  000B1C  8ED5               	bsf	213,7,c	;volatile
  1538  000B1E  0012               	return		;funcret
  1539  000B20                     __end_of_Timer0_init:
  1540                           	callstack 0
  1541                           
  1542 ;; *************** function _LEDarray_init *****************
  1543 ;; Defined at:
  1544 ;;		line 9 in file "LEDarray.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;		None
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;		None
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  1    wreg      void 
  1551 ;; Registers used:
  1552 ;;		None
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1562 ;;Total ram usage:        0 bytes
  1563 ;; Hardware stack levels used: 1
  1564 ;; Hardware stack levels required when called: 2
  1565 ;; This function calls:
  1566 ;;		Nothing
  1567 ;; This function is called by:
  1568 ;;		_main
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           	psect	text8
  1573  000A98                     __ptext8:
  1574                           	callstack 0
  1575  000A98                     _LEDarray_init:
  1576                           	callstack 28
  1577  000A98                     
  1578                           ;LEDarray.c: 11:     LATGbits.LATG0 = 0;
  1579  000A98  907F               	bcf	127,0,c	;volatile
  1580                           
  1581                           ;LEDarray.c: 12:     LATGbits.LATG1 = 0;
  1582  000A9A  927F               	bcf	127,1,c	;volatile
  1583                           
  1584                           ;LEDarray.c: 13:     LATAbits.LATA2 = 0;
  1585  000A9C  9479               	bcf	121,2,c	;volatile
  1586                           
  1587                           ;LEDarray.c: 14:     LATFbits.LATF6 = 0;
  1588  000A9E  9C7E               	bcf	126,6,c	;volatile
  1589                           
  1590                           ;LEDarray.c: 15:     LATAbits.LATA4 = 0;
  1591  000AA0  9879               	bcf	121,4,c	;volatile
  1592                           
  1593                           ;LEDarray.c: 16:     LATAbits.LATA5 = 0;
  1594  000AA2  9A79               	bcf	121,5,c	;volatile
  1595                           
  1596                           ;LEDarray.c: 17:     LATFbits.LATF0 = 0;
  1597  000AA4  907E               	bcf	126,0,c	;volatile
  1598                           
  1599                           ;LEDarray.c: 18:     LATBbits.LATB0 = 0;
  1600  000AA6  907A               	bcf	122,0,c	;volatile
  1601                           
  1602                           ;LEDarray.c: 19:     LATBbits.LATB1 = 0;
  1603  000AA8  927A               	bcf	122,1,c	;volatile
  1604                           
  1605                           ;LEDarray.c: 22:     TRISGbits.TRISG0 = 0;
  1606  000AAA  9087               	bcf	135,0,c	;volatile
  1607                           
  1608                           ;LEDarray.c: 23:     TRISGbits.TRISG1 = 0;
  1609  000AAC  9287               	bcf	135,1,c	;volatile
  1610                           
  1611                           ;LEDarray.c: 24:     TRISAbits.TRISA2 = 0;
  1612  000AAE  9481               	bcf	129,2,c	;volatile
  1613                           
  1614                           ;LEDarray.c: 25:     TRISFbits.TRISF6 = 0;
  1615  000AB0  9C86               	bcf	134,6,c	;volatile
  1616                           
  1617                           ;LEDarray.c: 26:     TRISAbits.TRISA4 = 0;
  1618  000AB2  9881               	bcf	129,4,c	;volatile
  1619                           
  1620                           ;LEDarray.c: 27:     TRISAbits.TRISA5 = 0;
  1621  000AB4  9A81               	bcf	129,5,c	;volatile
  1622                           
  1623                           ;LEDarray.c: 28:     TRISFbits.TRISF0 = 0;
  1624  000AB6  9086               	bcf	134,0,c	;volatile
  1625                           
  1626                           ;LEDarray.c: 29:     TRISBbits.TRISB0 = 0;
  1627  000AB8  9082               	bcf	130,0,c	;volatile
  1628                           
  1629                           ;LEDarray.c: 30:     TRISBbits.TRISB1 = 0;
  1630  000ABA  9282               	bcf	130,1,c	;volatile
  1631  000ABC  0012               	return		;funcret
  1632  000ABE                     __end_of_LEDarray_init:
  1633                           	callstack 0
  1634                           
  1635 ;; *************** function _LEDarray_disp_bin *****************
  1636 ;; Defined at:
  1637 ;;		line 37 in file "LEDarray.c"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;  number          1    wreg     unsigned char 
  1640 ;; Auto vars:     Size  Location     Type
  1641 ;;  number          1    4[COMRAM] unsigned char 
  1642 ;; Return value:  Size  Location     Type
  1643 ;;                  1    wreg      void 
  1644 ;; Registers used:
  1645 ;;		wreg
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1652 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1654 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1655 ;;Total ram usage:        1 bytes
  1656 ;; Hardware stack levels used: 1
  1657 ;; Hardware stack levels required when called: 2
  1658 ;; This function calls:
  1659 ;;		Nothing
  1660 ;; This function is called by:
  1661 ;;		_main
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664                           
  1665                           	psect	text9
  1666  000736                     __ptext9:
  1667                           	callstack 0
  1668  000736                     _LEDarray_disp_bin:
  1669                           	callstack 28
  1670                           
  1671                           ;incstack = 0
  1672                           ;LEDarray_disp_bin@number stored from wreg
  1673  000736  6E05               	movwf	LEDarray_disp_bin@number^0,c
  1674  000738                     
  1675                           ;LEDarray.c: 40:     if (number & 0b000000001) {LATGbits.LATG0 = 1;} else {LATGbits.LATG
      +                          0 = 0;}
  1676  000738  A005               	btfss	LEDarray_disp_bin@number^0,0,c
  1677  00073A  EFA1  F003         	goto	u811
  1678  00073E  EFA3  F003         	goto	u810
  1679  000742                     u811:
  1680  000742  EFA6  F003         	goto	l75
  1681  000746                     u810:
  1682  000746  807F               	bsf	127,0,c	;volatile
  1683  000748  EFA7  F003         	goto	l1332
  1684  00074C                     l75:
  1685  00074C  907F               	bcf	127,0,c	;volatile
  1686  00074E                     l1332:
  1687                           
  1688                           ;LEDarray.c: 41:     if (number & 0b000000010) {LATGbits.LATG1 = 1;} else {LATGbits.LATG
      +                          1 = 0;}
  1689  00074E  A205               	btfss	LEDarray_disp_bin@number^0,1,c
  1690  000750  EFAC  F003         	goto	u821
  1691  000754  EFAE  F003         	goto	u820
  1692  000758                     u821:
  1693  000758  EFB1  F003         	goto	l77
  1694  00075C                     u820:
  1695  00075C  827F               	bsf	127,1,c	;volatile
  1696  00075E  EFB2  F003         	goto	l1336
  1697  000762                     l77:
  1698  000762  927F               	bcf	127,1,c	;volatile
  1699  000764                     l1336:
  1700                           
  1701                           ;LEDarray.c: 42:     if (number & 0b000000100) {LATAbits.LATA2 = 1;} else {LATAbits.LATA
      +                          2 = 0;}
  1702  000764  A405               	btfss	LEDarray_disp_bin@number^0,2,c
  1703  000766  EFB7  F003         	goto	u831
  1704  00076A  EFB9  F003         	goto	u830
  1705  00076E                     u831:
  1706  00076E  EFBC  F003         	goto	l79
  1707  000772                     u830:
  1708  000772  8479               	bsf	121,2,c	;volatile
  1709  000774  EFBD  F003         	goto	l1340
  1710  000778                     l79:
  1711  000778  9479               	bcf	121,2,c	;volatile
  1712  00077A                     l1340:
  1713                           
  1714                           ;LEDarray.c: 43:     if (number & 0b000001000) {LATFbits.LATF6 = 1;} else {LATFbits.LATF
      +                          6 = 0;}
  1715  00077A  A605               	btfss	LEDarray_disp_bin@number^0,3,c
  1716  00077C  EFC2  F003         	goto	u841
  1717  000780  EFC4  F003         	goto	u840
  1718  000784                     u841:
  1719  000784  EFC7  F003         	goto	l81
  1720  000788                     u840:
  1721  000788  8C7E               	bsf	126,6,c	;volatile
  1722  00078A  EFC8  F003         	goto	l1344
  1723  00078E                     l81:
  1724  00078E  9C7E               	bcf	126,6,c	;volatile
  1725  000790                     l1344:
  1726                           
  1727                           ;LEDarray.c: 44:     if (number & 0b000010000) {LATAbits.LATA4 = 1;} else {LATAbits.LATA
      +                          4 = 0;}
  1728  000790  A805               	btfss	LEDarray_disp_bin@number^0,4,c
  1729  000792  EFCD  F003         	goto	u851
  1730  000796  EFCF  F003         	goto	u850
  1731  00079A                     u851:
  1732  00079A  EFD2  F003         	goto	l83
  1733  00079E                     u850:
  1734  00079E  8879               	bsf	121,4,c	;volatile
  1735  0007A0  EFD3  F003         	goto	l1348
  1736  0007A4                     l83:
  1737  0007A4  9879               	bcf	121,4,c	;volatile
  1738  0007A6                     l1348:
  1739                           
  1740                           ;LEDarray.c: 45:     if (number & 0b000100000) {LATAbits.LATA5 = 1;} else {LATAbits.LATA
      +                          5 = 0;}
  1741  0007A6  AA05               	btfss	LEDarray_disp_bin@number^0,5,c
  1742  0007A8  EFD8  F003         	goto	u861
  1743  0007AC  EFDA  F003         	goto	u860
  1744  0007B0                     u861:
  1745  0007B0  EFDD  F003         	goto	l85
  1746  0007B4                     u860:
  1747  0007B4  8A79               	bsf	121,5,c	;volatile
  1748  0007B6  EFDE  F003         	goto	l1352
  1749  0007BA                     l85:
  1750  0007BA  9A79               	bcf	121,5,c	;volatile
  1751  0007BC                     l1352:
  1752                           
  1753                           ;LEDarray.c: 46:     if (number & 0b001000000) {LATFbits.LATF0 = 1;} else {LATFbits.LATF
      +                          0 = 0;}
  1754  0007BC  AC05               	btfss	LEDarray_disp_bin@number^0,6,c
  1755  0007BE  EFE3  F003         	goto	u871
  1756  0007C2  EFE5  F003         	goto	u870
  1757  0007C6                     u871:
  1758  0007C6  EFE8  F003         	goto	l87
  1759  0007CA                     u870:
  1760  0007CA  807E               	bsf	126,0,c	;volatile
  1761  0007CC  EFE9  F003         	goto	l1356
  1762  0007D0                     l87:
  1763  0007D0  907E               	bcf	126,0,c	;volatile
  1764  0007D2                     l1356:
  1765                           
  1766                           ;LEDarray.c: 47:     if (number & 0b010000000) {LATBbits.LATB0 = 1;} else {LATBbits.LATB
      +                          0 = 0;}
  1767  0007D2  AE05               	btfss	LEDarray_disp_bin@number^0,7,c
  1768  0007D4  EFEE  F003         	goto	u881
  1769  0007D8  EFF0  F003         	goto	u880
  1770  0007DC                     u881:
  1771  0007DC  EFF3  F003         	goto	l89
  1772  0007E0                     u880:
  1773  0007E0  807A               	bsf	122,0,c	;volatile
  1774  0007E2  EFF4  F003         	goto	l91
  1775  0007E6                     l89:
  1776  0007E6  907A               	bcf	122,0,c	;volatile
  1777  0007E8                     l91:
  1778  0007E8  927A               	bcf	122,1,c	;volatile
  1779  0007EA  0012               	return		;funcret
  1780  0007EC                     __end_of_LEDarray_disp_bin:
  1781                           	callstack 0
  1782                           
  1783 ;; *************** function _LED_toggle *****************
  1784 ;; Defined at:
  1785 ;;		line 40 in file "LED.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;  current        11   15[COMRAM] struct .
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;		None
  1790 ;; Return value:  Size  Location     Type
  1791 ;;                  11   15[COMRAM] struct .
  1792 ;; Registers used:
  1793 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1799 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1801 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1802 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1803 ;;Total ram usage:       12 bytes
  1804 ;; Hardware stack levels used: 1
  1805 ;; Hardware stack levels required when called: 3
  1806 ;; This function calls:
  1807 ;;		_ADC_getval
  1808 ;;		_sunrise
  1809 ;; This function is called by:
  1810 ;;		_main
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           
  1814                           	psect	text10
  1815  000672                     __ptext10:
  1816                           	callstack 0
  1817  000672                     _LED_toggle:
  1818                           	callstack 27
  1819  000672                     
  1820                           ;LED.c: 41:     if (current.hour==1 && current.minute==0 && current.second==0) {
  1821  000672  0415               	decf	(LED_toggle@current+5)^0,w,c
  1822  000674  A4D8               	btfss	status,2,c
  1823  000676  EF3F  F003         	goto	u1701
  1824  00067A  EF41  F003         	goto	u1700
  1825  00067E                     u1701:
  1826  00067E  EF56  F003         	goto	l1678
  1827  000682                     u1700:
  1828  000682  5016               	movf	(LED_toggle@current+6)^0,w,c
  1829  000684  A4D8               	btfss	status,2,c
  1830  000686  EF47  F003         	goto	u1711
  1831  00068A  EF49  F003         	goto	u1710
  1832  00068E                     u1711:
  1833  00068E  EF56  F003         	goto	l1678
  1834  000692                     u1710:
  1835  000692  5017               	movf	(LED_toggle@current+7)^0,w,c
  1836  000694  A4D8               	btfss	status,2,c
  1837  000696  EF4F  F003         	goto	u1721
  1838  00069A  EF51  F003         	goto	u1720
  1839  00069E                     u1721:
  1840  00069E  EF56  F003         	goto	l1678
  1841  0006A2                     u1720:
  1842  0006A2                     
  1843                           ;LED.c: 42:         PIE2bits.C1IE = 0;
  1844  0006A2  010E               	movlb	14	; () banked
  1845  0006A4  912B               	bcf	43,0,b	;volatile
  1846                           
  1847                           ;LED.c: 43:         LATDbits.LATD7 = 0;
  1848  0006A6  9E7C               	bcf	124,7,c	;volatile
  1849                           
  1850                           ;LED.c: 44:     } else if (current.hour==5 && current.minute==0 && current.second==0) {
  1851  0006A8  EF91  F003         	goto	l1692
  1852  0006AC                     l1678:
  1853  0006AC  0E05               	movlw	5
  1854  0006AE  1815               	xorwf	(LED_toggle@current+5)^0,w,c
  1855  0006B0  A4D8               	btfss	status,2,c
  1856  0006B2  EF5D  F003         	goto	u1731
  1857  0006B6  EF5F  F003         	goto	u1730
  1858  0006BA                     u1731:
  1859  0006BA  EF91  F003         	goto	l1692
  1860  0006BE                     u1730:
  1861  0006BE  5016               	movf	(LED_toggle@current+6)^0,w,c
  1862  0006C0  A4D8               	btfss	status,2,c
  1863  0006C2  EF65  F003         	goto	u1741
  1864  0006C6  EF67  F003         	goto	u1740
  1865  0006CA                     u1741:
  1866  0006CA  EF91  F003         	goto	l1692
  1867  0006CE                     u1740:
  1868  0006CE  5017               	movf	(LED_toggle@current+7)^0,w,c
  1869  0006D0  A4D8               	btfss	status,2,c
  1870  0006D2  EF6D  F003         	goto	u1751
  1871  0006D6  EF6F  F003         	goto	u1750
  1872  0006DA                     u1751:
  1873  0006DA  EF91  F003         	goto	l1692
  1874  0006DE                     u1750:
  1875  0006DE                     
  1876                           ;LED.c: 45:         PIE2bits.C1IE = 1;
  1877  0006DE  010E               	movlb	14	; () banked
  1878  0006E0  812B               	bsf	43,0,b	;volatile
  1879  0006E2                     
  1880                           ; BSR set to: 14
  1881                           ;LED.c: 46:         if (ADC_getval()>=0b11011110) {LATDbits.LATD7 = 1;}
  1882  0006E2  EC9D  F005         	call	_ADC_getval	;wreg free
  1883  0006E6  6E1B               	movwf	??_LED_toggle^0,c
  1884  0006E8  0EDD               	movlw	221
  1885  0006EA  641B               	cpfsgt	??_LED_toggle^0,c
  1886  0006EC  EF7A  F003         	goto	u1761
  1887  0006F0  EF7C  F003         	goto	u1760
  1888  0006F4                     u1761:
  1889  0006F4  EF7F  F003         	goto	l1690
  1890  0006F8                     u1760:
  1891  0006F8  8E7C               	bsf	124,7,c	;volatile
  1892  0006FA  EF91  F003         	goto	l1692
  1893  0006FE                     l1690:
  1894  0006FE  EE20  F010         	lfsr	2,LED_toggle@current
  1895  000702  EE00  F005         	lfsr	0,sunrise@current
  1896  000706  0E0A               	movlw	10
  1897  000708                     u1771:
  1898  000708  CFDB FFEB          	movff	plusw2,plusw0
  1899  00070C  06E8               	decf	wreg,f,c
  1900  00070E  E2FC               	bc	u1771
  1901  000710  EC72  F005         	call	_sunrise	;wreg free
  1902  000714  EE20  F010         	lfsr	2,LED_toggle@current
  1903  000718  0E0A               	movlw	10
  1904  00071A                     u1781:
  1905  00071A  CFEB FFDB          	movff	plusw0,plusw2
  1906  00071E  06E8               	decf	wreg,f,c
  1907  000720  E2FC               	bc	u1781
  1908  000722                     l1692:
  1909                           
  1910                           ;LED.c: 50:     return current;
  1911  000722  EE20  F010         	lfsr	2,LED_toggle@current
  1912  000726  EE00  F010         	lfsr	0,?_LED_toggle
  1913  00072A  0E0A               	movlw	10
  1914  00072C                     u1791:
  1915  00072C  CFDB FFEB          	movff	plusw2,plusw0
  1916  000730  06E8               	decf	wreg,f,c
  1917  000732  E2FC               	bc	u1791
  1918  000734  0012               	return		;funcret
  1919  000736                     __end_of_LED_toggle:
  1920                           	callstack 0
  1921                           
  1922 ;; *************** function _sunrise *****************
  1923 ;; Defined at:
  1924 ;;		line 76 in file "dateandtime.c"
  1925 ;; Parameters:    Size  Location     Type
  1926 ;;  current        11    4[COMRAM] struct .
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;		None
  1929 ;; Return value:  Size  Location     Type
  1930 ;;                  11    4[COMRAM] struct .
  1931 ;; Registers used:
  1932 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1938 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1941 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1942 ;;Total ram usage:       11 bytes
  1943 ;; Hardware stack levels used: 1
  1944 ;; Hardware stack levels required when called: 2
  1945 ;; This function calls:
  1946 ;;		Nothing
  1947 ;; This function is called by:
  1948 ;;		_LED_toggle
  1949 ;;		_sunrise_sunset
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           
  1953                           	psect	text11
  1954  000AE4                     __ptext11:
  1955                           	callstack 0
  1956  000AE4                     _sunrise:
  1957                           	callstack 27
  1958  000AE4                     
  1959                           ;dateandtime.c: 77:     current.sunrise_hour = current.hour;
  1960  000AE4  C00A  F00D         	movff	sunrise@current+5,sunrise@current+8
  1961                           
  1962                           ;dateandtime.c: 78:     current.sunrise_minute = current.minute;
  1963  000AE8  C00B  F00E         	movff	sunrise@current+6,sunrise@current+9
  1964                           
  1965                           ;dateandtime.c: 79:     current.sunrise_second = current.second;
  1966  000AEC  C00C  F00F         	movff	sunrise@current+7,sunrise@current+10
  1967  000AF0                     
  1968                           ;dateandtime.c: 81:     return current;
  1969  000AF0  EE20  F005         	lfsr	2,sunrise@current
  1970  000AF4  EE00  F005         	lfsr	0,?_sunrise
  1971  000AF8  0E0A               	movlw	10
  1972  000AFA                     u1121:
  1973  000AFA  CFDB FFEB          	movff	plusw2,plusw0
  1974  000AFE  06E8               	decf	wreg,f,c
  1975  000B00  E2FC               	bc	u1121
  1976  000B02  0012               	return		;funcret
  1977  000B04                     __end_of_sunrise:
  1978                           	callstack 0
  1979                           
  1980 ;; *************** function _LED2_init *****************
  1981 ;; Defined at:
  1982 ;;		line 29 in file "LED.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;		None
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;		None
  1987 ;; Return value:  Size  Location     Type
  1988 ;;                  1    wreg      void 
  1989 ;; Registers used:
  1990 ;;		None
  1991 ;; Tracked objects:
  1992 ;;		On entry : 0/0
  1993 ;;		On exit  : 0/0
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2000 ;;Total ram usage:        0 bytes
  2001 ;; Hardware stack levels used: 1
  2002 ;; Hardware stack levels required when called: 2
  2003 ;; This function calls:
  2004 ;;		Nothing
  2005 ;; This function is called by:
  2006 ;;		_main
  2007 ;; This function uses a non-reentrant model
  2008 ;;
  2009                           
  2010                           	psect	text12
  2011  000B84                     __ptext12:
  2012                           	callstack 0
  2013  000B84                     _LED2_init:
  2014                           	callstack 28
  2015  000B84                     
  2016                           ;LED.c: 30:     LATHbits.LATH3 = 1;
  2017  000B84  8680               	bsf	128,3,c	;volatile
  2018                           
  2019                           ;LED.c: 31:     TRISHbits.TRISH3 = 0;
  2020  000B86  9688               	bcf	136,3,c	;volatile
  2021  000B88  0012               	return		;funcret
  2022  000B8A                     __end_of_LED2_init:
  2023                           	callstack 0
  2024                           
  2025 ;; *************** function _LED1_init *****************
  2026 ;; Defined at:
  2027 ;;		line 10 in file "LED.c"
  2028 ;; Parameters:    Size  Location     Type
  2029 ;;  current        11    5[COMRAM] struct .
  2030 ;; Auto vars:     Size  Location     Type
  2031 ;;		None
  2032 ;; Return value:  Size  Location     Type
  2033 ;;                  1    wreg      void 
  2034 ;; Registers used:
  2035 ;;		wreg, status,2, status,0, cstack
  2036 ;; Tracked objects:
  2037 ;;		On entry : 0/0
  2038 ;;		On exit  : 0/0
  2039 ;;		Unchanged: 0/0
  2040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2041 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2043 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2044 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2045 ;;Total ram usage:       12 bytes
  2046 ;; Hardware stack levels used: 1
  2047 ;; Hardware stack levels required when called: 3
  2048 ;; This function calls:
  2049 ;;		_ADC_getval
  2050 ;; This function is called by:
  2051 ;;		_main
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055                           	psect	text13
  2056  0009D8                     __ptext13:
  2057                           	callstack 0
  2058  0009D8                     _LED1_init:
  2059                           	callstack 27
  2060  0009D8                     
  2061                           ;LED.c: 18:     if ((current.hour<1||current.hour>=5) && (ADC_getval()>=0b11011110)) {
  2062  0009D8  500B               	movf	(LED1_init@current+5)^0,w,c
  2063  0009DA  0A80               	xorlw	128
  2064  0009DC  0F7F               	addlw	-129
  2065  0009DE  A0D8               	btfss	status,0,c
  2066  0009E0  EFF4  F004         	goto	u1481
  2067  0009E4  EFF6  F004         	goto	u1480
  2068  0009E8                     u1481:
  2069  0009E8  EF00  F005         	goto	l1582
  2070  0009EC                     u1480:
  2071  0009EC  500B               	movf	(LED1_init@current+5)^0,w,c
  2072  0009EE  0A80               	xorlw	128
  2073  0009F0  0F7B               	addlw	-133
  2074  0009F2  A0D8               	btfss	status,0,c
  2075  0009F4  EFFE  F004         	goto	u1491
  2076  0009F8  EF00  F005         	goto	u1490
  2077  0009FC                     u1491:
  2078  0009FC  EF0E  F005         	goto	l238
  2079  000A00                     u1490:
  2080  000A00                     l1582:
  2081  000A00  EC9D  F005         	call	_ADC_getval	;wreg free
  2082  000A04  6E11               	movwf	??_LED1_init^0,c
  2083  000A06  0EDD               	movlw	221
  2084  000A08  6411               	cpfsgt	??_LED1_init^0,c
  2085  000A0A  EF09  F005         	goto	u1501
  2086  000A0E  EF0B  F005         	goto	u1500
  2087  000A12                     u1501:
  2088  000A12  EF0E  F005         	goto	l238
  2089  000A16                     u1500:
  2090  000A16                     
  2091                           ;LED.c: 19:         LATDbits.LATD7 = 1;
  2092  000A16  8E7C               	bsf	124,7,c	;volatile
  2093                           
  2094                           ;LED.c: 20:     } else {LATDbits.LATD7 = 0;}
  2095  000A18  EF0F  F005         	goto	l241
  2096  000A1C                     l238:
  2097  000A1C  9E7C               	bcf	124,7,c	;volatile
  2098  000A1E                     l241:
  2099                           
  2100                           ;LED.c: 22:     TRISDbits.TRISD7 = 0;
  2101  000A1E  9E84               	bcf	132,7,c	;volatile
  2102  000A20  0012               	return		;funcret
  2103  000A22                     __end_of_LED1_init:
  2104                           	callstack 0
  2105                           
  2106 ;; *************** function _ADC_getval *****************
  2107 ;; Defined at:
  2108 ;;		line 26 in file "ADC.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;		None
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;  tmpval          1    4[COMRAM] unsigned char 
  2113 ;; Return value:  Size  Location     Type
  2114 ;;                  1    wreg      unsigned char 
  2115 ;; Registers used:
  2116 ;;		wreg, status,2
  2117 ;; Tracked objects:
  2118 ;;		On entry : 0/0
  2119 ;;		On exit  : 0/0
  2120 ;;		Unchanged: 0/0
  2121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2123 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2125 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2126 ;;Total ram usage:        1 bytes
  2127 ;; Hardware stack levels used: 1
  2128 ;; Hardware stack levels required when called: 2
  2129 ;; This function calls:
  2130 ;;		Nothing
  2131 ;; This function is called by:
  2132 ;;		_LED1_init
  2133 ;;		_LED_toggle
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137                           	psect	text14
  2138  000B3A                     __ptext14:
  2139                           	callstack 0
  2140  000B3A                     _ADC_getval:
  2141                           	callstack 27
  2142  000B3A                     
  2143                           ;ADC.c: 27:     unsigned char tmpval;;ADC.c: 29:     ADCON0bits.GO = 1;
  2144  000B3A  8060               	bsf	96,0,c	;volatile
  2145  000B3C                     l50:
  2146  000B3C  B060               	btfsc	96,0,c	;volatile
  2147  000B3E  EFA3  F005         	goto	u111
  2148  000B42  EFA5  F005         	goto	u110
  2149  000B46                     u111:
  2150  000B46  EF9E  F005         	goto	l50
  2151  000B4A                     u110:
  2152  000B4A                     
  2153                           ;ADC.c: 31:     tmpval = ADRESH;
  2154  000B4A  CF64 F005          	movff	3940,ADC_getval@tmpval	;volatile
  2155  000B4E                     
  2156                           ;ADC.c: 34:     return tmpval;
  2157  000B4E  5005               	movf	ADC_getval@tmpval^0,w,c
  2158  000B50  0012               	return		;funcret
  2159  000B52                     __end_of_ADC_getval:
  2160                           	callstack 0
  2161                           
  2162 ;; *************** function _LCD_init *****************
  2163 ;; Defined at:
  2164 ;;		line 52 in file "LCD.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;		None
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;		None
  2169 ;; Return value:  Size  Location     Type
  2170 ;;                  1    wreg      void 
  2171 ;; Registers used:
  2172 ;;		wreg, status,2, status,0, cstack
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/0
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2180 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2181 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2182 ;;Total ram usage:        2 bytes
  2183 ;; Hardware stack levels used: 1
  2184 ;; Hardware stack levels required when called: 5
  2185 ;; This function calls:
  2186 ;;		_LCD_sendbyte
  2187 ;;		_LCD_sendnibble
  2188 ;; This function is called by:
  2189 ;;		_main
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192                           
  2193                           	psect	text15
  2194  0007EC                     __ptext15:
  2195                           	callstack 0
  2196  0007EC                     _LCD_init:
  2197                           	callstack 25
  2198  0007EC                     
  2199                           ;LCD.c: 55:     TRISCbits.TRISC6 =0;
  2200  0007EC  9C83               	bcf	131,6,c	;volatile
  2201                           
  2202                           ;LCD.c: 56:     TRISCbits.TRISC2=0;
  2203  0007EE  9483               	bcf	131,2,c	;volatile
  2204                           
  2205                           ;LCD.c: 57:     TRISBbits.TRISB3=0;
  2206  0007F0  9682               	bcf	130,3,c	;volatile
  2207                           
  2208                           ;LCD.c: 58:     TRISBbits.TRISB2=0;
  2209  0007F2  9482               	bcf	130,2,c	;volatile
  2210                           
  2211                           ;LCD.c: 59:     TRISEbits.TRISE3=0;
  2212  0007F4  9685               	bcf	133,3,c	;volatile
  2213                           
  2214                           ;LCD.c: 60:     TRISEbits.TRISE1=0;
  2215  0007F6  9285               	bcf	133,1,c	;volatile
  2216                           
  2217                           ;LCD.c: 63:     LATCbits.LATC6 = 0;
  2218  0007F8  9C7B               	bcf	123,6,c	;volatile
  2219                           
  2220                           ;LCD.c: 64:     LATCbits.LATC2 = 0;
  2221  0007FA  947B               	bcf	123,2,c	;volatile
  2222                           
  2223                           ;LCD.c: 65:     LATBbits.LATB3 = 0;
  2224  0007FC  967A               	bcf	122,3,c	;volatile
  2225                           
  2226                           ;LCD.c: 66:     LATBbits.LATB2 = 0;
  2227  0007FE  947A               	bcf	122,2,c	;volatile
  2228                           
  2229                           ;LCD.c: 67:     LATEbits.LATE3 = 0;
  2230  000800  967D               	bcf	125,3,c	;volatile
  2231                           
  2232                           ;LCD.c: 68:     LATEbits.LATE1 = 0;
  2233  000802  927D               	bcf	125,1,c	;volatile
  2234  000804                     
  2235                           ;LCD.c: 74:     _delay((unsigned long)((45)*(64000000/4000.0)));
  2236  000804  0E04               	movlw	4
  2237  000806  6E09               	movwf	(??_LCD_init+1)^0,c
  2238  000808  0EA8               	movlw	168
  2239  00080A  6E08               	movwf	??_LCD_init^0,c
  2240  00080C  0E0C               	movlw	12
  2241  00080E                     u1917:
  2242  00080E  2EE8               	decfsz	wreg,f,c
  2243  000810  D7FE               	bra	u1917
  2244  000812  2E08               	decfsz	??_LCD_init^0,f,c
  2245  000814  D7FC               	bra	u1917
  2246  000816  2E09               	decfsz	(??_LCD_init+1)^0,f,c
  2247  000818  D7FA               	bra	u1917
  2248  00081A                     
  2249                           ;LCD.c: 75:     LCD_sendnibble(0b0010);
  2250  00081A  0E02               	movlw	2
  2251  00081C  EC8E  F004         	call	_LCD_sendnibble
  2252  000820                     
  2253                           ;LCD.c: 76:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  2254  000820  0EF0               	movlw	240
  2255  000822                     u1927:
  2256  000822  2EE8               	decfsz	wreg,f,c
  2257  000824  D7FE               	bra	u1927
  2258  000826                     
  2259                           ;LCD.c: 77:     LCD_sendbyte(0b00101000,0);
  2260  000826  0E00               	movlw	0
  2261  000828  6E06               	movwf	LCD_sendbyte@type^0,c
  2262  00082A  0E28               	movlw	40
  2263  00082C  EC32  F005         	call	_LCD_sendbyte
  2264  000830                     
  2265                           ;LCD.c: 78:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  2266  000830  0EF0               	movlw	240
  2267  000832                     u1937:
  2268  000832  2EE8               	decfsz	wreg,f,c
  2269  000834  D7FE               	bra	u1937
  2270  000836                     
  2271                           ;LCD.c: 79:     LCD_sendbyte(0b00101000,0);
  2272  000836  0E00               	movlw	0
  2273  000838  6E06               	movwf	LCD_sendbyte@type^0,c
  2274  00083A  0E28               	movlw	40
  2275  00083C  EC32  F005         	call	_LCD_sendbyte
  2276  000840                     
  2277                           ;LCD.c: 80:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  2278  000840  0EF0               	movlw	240
  2279  000842                     u1947:
  2280  000842  2EE8               	decfsz	wreg,f,c
  2281  000844  D7FE               	bra	u1947
  2282  000846                     
  2283                           ;LCD.c: 83:     LCD_sendbyte(0b00001000,0);
  2284  000846  0E00               	movlw	0
  2285  000848  6E06               	movwf	LCD_sendbyte@type^0,c
  2286  00084A  0E08               	movlw	8
  2287  00084C  EC32  F005         	call	_LCD_sendbyte
  2288  000850                     
  2289                           ;LCD.c: 84:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  2290  000850  0EF0               	movlw	240
  2291  000852                     u1957:
  2292  000852  2EE8               	decfsz	wreg,f,c
  2293  000854  D7FE               	bra	u1957
  2294  000856                     
  2295                           ;LCD.c: 85:     LCD_sendbyte(0b00000001,0);
  2296  000856  0E00               	movlw	0
  2297  000858  6E06               	movwf	LCD_sendbyte@type^0,c
  2298  00085A  0E01               	movlw	1
  2299  00085C  EC32  F005         	call	_LCD_sendbyte
  2300  000860                     
  2301                           ;LCD.c: 86:     _delay((unsigned long)((2)*(64000000/4000.0)));
  2302  000860  0E2A               	movlw	42
  2303  000862  6E08               	movwf	??_LCD_init^0,c
  2304  000864  0E8E               	movlw	142
  2305  000866                     u1967:
  2306  000866  2EE8               	decfsz	wreg,f,c
  2307  000868  D7FE               	bra	u1967
  2308  00086A  2E08               	decfsz	??_LCD_init^0,f,c
  2309  00086C  D7FC               	bra	u1967
  2310  00086E                     
  2311                           ;LCD.c: 87:     LCD_sendbyte(0b00000110,0);
  2312  00086E  0E00               	movlw	0
  2313  000870  6E06               	movwf	LCD_sendbyte@type^0,c
  2314  000872  0E06               	movlw	6
  2315  000874  EC32  F005         	call	_LCD_sendbyte
  2316  000878                     
  2317                           ;LCD.c: 88:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  2318  000878  0EA0               	movlw	160
  2319  00087A                     u1977:
  2320  00087A  D000               	nop2	
  2321  00087C  2EE8               	decfsz	wreg,f,c
  2322  00087E  D7FD               	bra	u1977
  2323  000880                     
  2324                           ;LCD.c: 91:     LCD_sendbyte(0b00001100,0);
  2325  000880  0E00               	movlw	0
  2326  000882  6E06               	movwf	LCD_sendbyte@type^0,c
  2327  000884  0E0C               	movlw	12
  2328  000886  EC32  F005         	call	_LCD_sendbyte
  2329  00088A                     
  2330                           ;LCD.c: 92:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  2331  00088A  0EA0               	movlw	160
  2332  00088C                     u1987:
  2333  00088C  D000               	nop2	
  2334  00088E  2EE8               	decfsz	wreg,f,c
  2335  000890  D7FD               	bra	u1987
  2336  000892  0012               	return		;funcret
  2337  000894                     __end_of_LCD_init:
  2338                           	callstack 0
  2339                           
  2340 ;; *************** function _LCD_sendbyte *****************
  2341 ;; Defined at:
  2342 ;;		line 34 in file "LCD.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;  Byte            1    wreg     unsigned char 
  2345 ;;  type            1    5[COMRAM] unsigned char 
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;  Byte            1    6[COMRAM] unsigned char 
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  1    wreg      void 
  2350 ;; Registers used:
  2351 ;;		wreg, status,2, status,0, cstack
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2357 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2358 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2360 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2361 ;;Total ram usage:        2 bytes
  2362 ;; Hardware stack levels used: 1
  2363 ;; Hardware stack levels required when called: 4
  2364 ;; This function calls:
  2365 ;;		_LCD_sendnibble
  2366 ;; This function is called by:
  2367 ;;		_LCD_init
  2368 ;;		_LCD_setline
  2369 ;;		_LCD_sendstring
  2370 ;;		_LCD_scroll
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           	psect	text16
  2375  000A64                     __ptext16:
  2376                           	callstack 0
  2377  000A64                     _LCD_sendbyte:
  2378                           	callstack 25
  2379                           
  2380                           ;incstack = 0
  2381                           ;LCD_sendbyte@Byte stored from wreg
  2382  000A64  6E07               	movwf	LCD_sendbyte@Byte^0,c
  2383  000A66                     
  2384                           ;LCD.c: 34: void LCD_sendbyte(unsigned char Byte, char type);LCD.c: 35: {;LCD.c: 37:    
      +                           if (type) {LATCbits.LATC6 = 1;} else {LATCbits.LATC6 = 0;}
  2385  000A66  5006               	movf	LCD_sendbyte@type^0,w,c
  2386  000A68  B4D8               	btfsc	status,2,c
  2387  000A6A  EF39  F005         	goto	u1111
  2388  000A6E  EF3B  F005         	goto	u1110
  2389  000A72                     u1111:
  2390  000A72  EF3E  F005         	goto	l202
  2391  000A76                     u1110:
  2392  000A76  8C7B               	bsf	123,6,c	;volatile
  2393  000A78  EF3F  F005         	goto	l1474
  2394  000A7C                     l202:
  2395  000A7C  9C7B               	bcf	123,6,c	;volatile
  2396  000A7E                     l1474:
  2397                           
  2398                           ;LCD.c: 40:     LCD_sendnibble(Byte>>4);
  2399  000A7E  3807               	swapf	LCD_sendbyte@Byte^0,w,c
  2400  000A80  0B0F               	andlw	15
  2401  000A82  EC8E  F004         	call	_LCD_sendnibble
  2402                           
  2403                           ;LCD.c: 43:     LCD_sendnibble(Byte&0b00001111);
  2404  000A86  5007               	movf	LCD_sendbyte@Byte^0,w,c
  2405  000A88  0B0F               	andlw	15
  2406  000A8A  EC8E  F004         	call	_LCD_sendnibble
  2407  000A8E                     
  2408                           ;LCD.c: 46:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  2409  000A8E  0EA0               	movlw	160
  2410  000A90                     u1997:
  2411  000A90  D000               	nop2	
  2412  000A92  2EE8               	decfsz	wreg,f,c
  2413  000A94  D7FD               	bra	u1997
  2414  000A96  0012               	return		;funcret
  2415  000A98                     __end_of_LCD_sendbyte:
  2416                           	callstack 0
  2417                           
  2418 ;; *************** function _LCD_sendnibble *****************
  2419 ;; Defined at:
  2420 ;;		line 18 in file "LCD.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;  number          1    wreg     unsigned char 
  2423 ;; Auto vars:     Size  Location     Type
  2424 ;;  number          1    4[COMRAM] unsigned char 
  2425 ;; Return value:  Size  Location     Type
  2426 ;;                  1    wreg      void 
  2427 ;; Registers used:
  2428 ;;		wreg, cstack
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2435 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2437 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2438 ;;Total ram usage:        1 bytes
  2439 ;; Hardware stack levels used: 1
  2440 ;; Hardware stack levels required when called: 3
  2441 ;; This function calls:
  2442 ;;		_LCD_E_TOG
  2443 ;; This function is called by:
  2444 ;;		_LCD_sendbyte
  2445 ;;		_LCD_init
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449                           	psect	text17
  2450  00091C                     __ptext17:
  2451                           	callstack 0
  2452  00091C                     _LCD_sendnibble:
  2453                           	callstack 26
  2454                           
  2455                           ;incstack = 0
  2456                           ;LCD_sendnibble@number stored from wreg
  2457  00091C  6E05               	movwf	LCD_sendnibble@number^0,c
  2458  00091E                     
  2459                           ;LCD.c: 18: void LCD_sendnibble(unsigned char number);LCD.c: 19: {;LCD.c: 21:     if (nu
      +                          mber & 0b0001) {LATBbits.LATB3 = 1;} else {LATBbits.LATB3 = 0;}
  2460  00091E  A005               	btfss	LCD_sendnibble@number^0,0,c
  2461  000920  EF94  F004         	goto	u11
  2462  000924  EF96  F004         	goto	u10
  2463  000928                     u11:
  2464  000928  EF99  F004         	goto	l191
  2465  00092C                     u10:
  2466  00092C  867A               	bsf	122,3,c	;volatile
  2467  00092E  EF9A  F004         	goto	l992
  2468  000932                     l191:
  2469  000932  967A               	bcf	122,3,c	;volatile
  2470  000934                     l992:
  2471                           
  2472                           ;LCD.c: 22:     if (number & 0b0010) {LATBbits.LATB2 = 1;} else {LATBbits.LATB2 = 0;}
  2473  000934  A205               	btfss	LCD_sendnibble@number^0,1,c
  2474  000936  EF9F  F004         	goto	u21
  2475  00093A  EFA1  F004         	goto	u20
  2476  00093E                     u21:
  2477  00093E  EFA4  F004         	goto	l193
  2478  000942                     u20:
  2479  000942  847A               	bsf	122,2,c	;volatile
  2480  000944  EFA5  F004         	goto	l996
  2481  000948                     l193:
  2482  000948  947A               	bcf	122,2,c	;volatile
  2483  00094A                     l996:
  2484                           
  2485                           ;LCD.c: 23:     if (number & 0b0100) {LATEbits.LATE3 = 1;} else {LATEbits.LATE3 = 0;}
  2486  00094A  A405               	btfss	LCD_sendnibble@number^0,2,c
  2487  00094C  EFAA  F004         	goto	u31
  2488  000950  EFAC  F004         	goto	u30
  2489  000954                     u31:
  2490  000954  EFAF  F004         	goto	l195
  2491  000958                     u30:
  2492  000958  867D               	bsf	125,3,c	;volatile
  2493  00095A  EFB0  F004         	goto	l1000
  2494  00095E                     l195:
  2495  00095E  967D               	bcf	125,3,c	;volatile
  2496  000960                     l1000:
  2497                           
  2498                           ;LCD.c: 24:     if (number & 0b1000) {LATEbits.LATE1 = 1;} else {LATEbits.LATE1 = 0;}
  2499  000960  A605               	btfss	LCD_sendnibble@number^0,3,c
  2500  000962  EFB5  F004         	goto	u41
  2501  000966  EFB7  F004         	goto	u40
  2502  00096A                     u41:
  2503  00096A  EFBA  F004         	goto	l197
  2504  00096E                     u40:
  2505  00096E  827D               	bsf	125,1,c	;volatile
  2506  000970  EFBB  F004         	goto	l1004
  2507  000974                     l197:
  2508  000974  927D               	bcf	125,1,c	;volatile
  2509  000976                     l1004:
  2510                           
  2511                           ;LCD.c: 26:     LCD_E_TOG();
  2512  000976  ECBB  F005         	call	_LCD_E_TOG	;wreg free
  2513  00097A                     
  2514                           ;LCD.c: 27:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  2515  00097A  0E1A               	movlw	26
  2516  00097C                     u2007:
  2517  00097C  2EE8               	decfsz	wreg,f,c
  2518  00097E  D7FE               	bra	u2007
  2519  000980  D000               	nop2	
  2520  000982  0012               	return		;funcret
  2521  000984                     __end_of_LCD_sendnibble:
  2522                           	callstack 0
  2523                           
  2524 ;; *************** function _LCD_E_TOG *****************
  2525 ;; Defined at:
  2526 ;;		line 8 in file "LCD.c"
  2527 ;; Parameters:    Size  Location     Type
  2528 ;;		None
  2529 ;; Auto vars:     Size  Location     Type
  2530 ;;		None
  2531 ;; Return value:  Size  Location     Type
  2532 ;;                  1    wreg      void 
  2533 ;; Registers used:
  2534 ;;		wreg
  2535 ;; Tracked objects:
  2536 ;;		On entry : 0/0
  2537 ;;		On exit  : 0/0
  2538 ;;		Unchanged: 0/0
  2539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2544 ;;Total ram usage:        0 bytes
  2545 ;; Hardware stack levels used: 1
  2546 ;; Hardware stack levels required when called: 2
  2547 ;; This function calls:
  2548 ;;		Nothing
  2549 ;; This function is called by:
  2550 ;;		_LCD_sendnibble
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           	psect	text18
  2555  000B76                     __ptext18:
  2556                           	callstack 0
  2557  000B76                     _LCD_E_TOG:
  2558                           	callstack 26
  2559  000B76                     
  2560                           ;LCD.c: 10:  LATCbits.LATC2 = 1;
  2561  000B76  847B               	bsf	123,2,c	;volatile
  2562  000B78                     
  2563                           ;LCD.c: 11:  _delay((unsigned long)((2)*(64000000/4000000.0)));
  2564  000B78  0E0A               	movlw	10
  2565  000B7A                     u2017:
  2566  000B7A  2EE8               	decfsz	wreg,f,c
  2567  000B7C  D7FE               	bra	u2017
  2568  000B7E  D000               	nop2	
  2569  000B80                     
  2570                           ;LCD.c: 12:  LATCbits.LATC2 = 0;
  2571  000B80  947B               	bcf	123,2,c	;volatile
  2572  000B82  0012               	return		;funcret
  2573  000B84                     __end_of_LCD_E_TOG:
  2574                           	callstack 0
  2575                           
  2576 ;; *************** function _Interrupts_init *****************
  2577 ;; Defined at:
  2578 ;;		line 12 in file "interrupts.c"
  2579 ;; Parameters:    Size  Location     Type
  2580 ;;  current        11    4[COMRAM] struct .
  2581 ;; Auto vars:     Size  Location     Type
  2582 ;;		None
  2583 ;; Return value:  Size  Location     Type
  2584 ;;                  1    wreg      void 
  2585 ;; Registers used:
  2586 ;;		wreg, status,2, status,0
  2587 ;; Tracked objects:
  2588 ;;		On entry : 0/0
  2589 ;;		On exit  : 0/0
  2590 ;;		Unchanged: 0/0
  2591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2592 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2595 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2596 ;;Total ram usage:       11 bytes
  2597 ;; Hardware stack levels used: 1
  2598 ;; Hardware stack levels required when called: 2
  2599 ;; This function calls:
  2600 ;;		Nothing
  2601 ;; This function is called by:
  2602 ;;		_main
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           
  2606                           	psect	text19
  2607  000A22                     __ptext19:
  2608                           	callstack 0
  2609  000A22                     _Interrupts_init:
  2610                           	callstack 28
  2611  000A22                     
  2612                           ;interrupts.c: 13:     if (current.hour<1 || current.hour>=5) {
  2613  000A22  500A               	movf	(Interrupts_init@current+5)^0,w,c
  2614  000A24  0A80               	xorlw	128
  2615  000A26  0F7F               	addlw	-129
  2616  000A28  A0D8               	btfss	status,0,c
  2617  000A2A  EF19  F005         	goto	u1461
  2618  000A2E  EF1B  F005         	goto	u1460
  2619  000A32                     u1461:
  2620  000A32  EF25  F005         	goto	l138
  2621  000A36                     u1460:
  2622  000A36  500A               	movf	(Interrupts_init@current+5)^0,w,c
  2623  000A38  0A80               	xorlw	128
  2624  000A3A  0F7B               	addlw	-133
  2625  000A3C  A0D8               	btfss	status,0,c
  2626  000A3E  EF23  F005         	goto	u1471
  2627  000A42  EF25  F005         	goto	u1470
  2628  000A46                     u1471:
  2629  000A46  EF29  F005         	goto	l136
  2630  000A4A                     u1470:
  2631  000A4A                     l138:
  2632                           
  2633                           ;interrupts.c: 14:         PIE2bits.C1IE = 1;
  2634  000A4A  010E               	movlb	14	; () banked
  2635  000A4C  812B               	bsf	43,0,b	;volatile
  2636                           
  2637                           ;interrupts.c: 15:     } else {PIE2bits.C1IE = 0;}
  2638  000A4E  EF2B  F005         	goto	l139
  2639  000A52                     l136:
  2640  000A52  010E               	movlb	14	; () banked
  2641  000A54  912B               	bcf	43,0,b	;volatile
  2642  000A56                     l139:
  2643                           
  2644                           ; BSR set to: 14
  2645                           ;interrupts.c: 16:     PIE0bits.TMR0IE = 1;
  2646  000A56  8B29               	bsf	41,5,b	;volatile
  2647                           
  2648                           ;interrupts.c: 18:     IPR2bits.C1IP = 1;
  2649  000A58  8121               	bsf	33,0,b	;volatile
  2650                           
  2651                           ;interrupts.c: 19:     IPR0bits.TMR0IP = 0;
  2652  000A5A  9B1F               	bcf	31,5,b	;volatile
  2653                           
  2654                           ;interrupts.c: 21:     INTCONbits.IPEN = 1;
  2655  000A5C  8AF2               	bsf	242,5,c	;volatile
  2656                           
  2657                           ;interrupts.c: 22:     INTCONbits.PEIE = 1;
  2658  000A5E  8CF2               	bsf	242,6,c	;volatile
  2659                           
  2660                           ;interrupts.c: 23:     INTCONbits.GIE = 1;
  2661  000A60  8EF2               	bsf	242,7,c	;volatile
  2662  000A62                     
  2663                           ; BSR set to: 14
  2664  000A62  0012               	return		;funcret
  2665  000A64                     __end_of_Interrupts_init:
  2666                           	callstack 0
  2667                           
  2668 ;; *************** function _Comp1_init *****************
  2669 ;; Defined at:
  2670 ;;		line 24 in file "comparator.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;		None
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;		None
  2675 ;; Return value:  Size  Location     Type
  2676 ;;                  1    wreg      void 
  2677 ;; Registers used:
  2678 ;;		wreg, status,2, cstack
  2679 ;; Tracked objects:
  2680 ;;		On entry : 0/0
  2681 ;;		On exit  : 0/0
  2682 ;;		Unchanged: 0/0
  2683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2688 ;;Total ram usage:        0 bytes
  2689 ;; Hardware stack levels used: 1
  2690 ;; Hardware stack levels required when called: 3
  2691 ;; This function calls:
  2692 ;;		_DAC_init
  2693 ;; This function is called by:
  2694 ;;		_main
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           
  2698                           	psect	text20
  2699  000ABE                     __ptext20:
  2700                           	callstack 0
  2701  000ABE                     _Comp1_init:
  2702                           	callstack 27
  2703  000ABE                     
  2704                           ;comparator.c: 25:     TRISFbits.TRISF7=1;
  2705  000ABE  8E86               	bsf	134,7,c	;volatile
  2706  000AC0                     
  2707                           ;comparator.c: 26:     CM1NCHbits.NCH=0b011;
  2708  000AC0  010E               	movlb	14	; () banked
  2709  000AC2  51D2               	movf	210,w,b	;volatile
  2710  000AC4  0BF8               	andlw	-8
  2711  000AC6  0903               	iorlw	3
  2712  000AC8  6FD2               	movwf	210,b	;volatile
  2713                           
  2714                           ;comparator.c: 27:     CM1PCHbits.PCH=0b101;
  2715  000ACA  51D3               	movf	211,w,b	;volatile
  2716  000ACC  0BF8               	andlw	-8
  2717  000ACE  0905               	iorlw	5
  2718  000AD0  6FD3               	movwf	211,b	;volatile
  2719  000AD2                     
  2720                           ; BSR set to: 14
  2721                           ;comparator.c: 28:     CM1CON0bits.HYS=1;
  2722  000AD2  83D0               	bsf	208,1,b	;volatile
  2723  000AD4                     
  2724                           ; BSR set to: 14
  2725                           ;comparator.c: 29:     CM1CON0bits.POL=1;
  2726  000AD4  89D0               	bsf	208,4,b	;volatile
  2727  000AD6                     
  2728                           ; BSR set to: 14
  2729                           ;comparator.c: 30:     CM1CON1bits.INTP=1;
  2730  000AD6  83D1               	bsf	209,1,b	;volatile
  2731  000AD8                     
  2732                           ; BSR set to: 14
  2733                           ;comparator.c: 31:     CM1CON1bits.INTN=1;
  2734  000AD8  81D1               	bsf	209,0,b	;volatile
  2735  000ADA                     
  2736                           ; BSR set to: 14
  2737                           ;comparator.c: 32:     DAC_init();
  2738  000ADA  ECA9  F005         	call	_DAC_init	;wreg free
  2739  000ADE                     
  2740                           ;comparator.c: 33:     CM1CON0bits.EN=1;
  2741  000ADE  010E               	movlb	14	; () banked
  2742  000AE0  8FD0               	bsf	208,7,b	;volatile
  2743  000AE2                     
  2744                           ; BSR set to: 14
  2745  000AE2  0012               	return		;funcret
  2746  000AE4                     __end_of_Comp1_init:
  2747                           	callstack 0
  2748                           
  2749 ;; *************** function _DAC_init *****************
  2750 ;; Defined at:
  2751 ;;		line 8 in file "comparator.c"
  2752 ;; Parameters:    Size  Location     Type
  2753 ;;		None
  2754 ;; Auto vars:     Size  Location     Type
  2755 ;;		None
  2756 ;; Return value:  Size  Location     Type
  2757 ;;                  1    wreg      void 
  2758 ;; Registers used:
  2759 ;;		wreg, status,2
  2760 ;; Tracked objects:
  2761 ;;		On entry : 0/0
  2762 ;;		On exit  : 0/0
  2763 ;;		Unchanged: 0/0
  2764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2769 ;;Total ram usage:        0 bytes
  2770 ;; Hardware stack levels used: 1
  2771 ;; Hardware stack levels required when called: 2
  2772 ;; This function calls:
  2773 ;;		Nothing
  2774 ;; This function is called by:
  2775 ;;		_Comp1_init
  2776 ;; This function uses a non-reentrant model
  2777 ;;
  2778                           
  2779                           	psect	text21
  2780  000B52                     __ptext21:
  2781                           	callstack 0
  2782  000B52                     _DAC_init:
  2783                           	callstack 27
  2784  000B52                     
  2785                           ;comparator.c: 9:     DAC1CON0bits.PSS=0b00;
  2786  000B52  0EF3               	movlw	-13
  2787  000B54  010E               	movlb	14	; () banked
  2788  000B56  17C6               	andwf	198,f,b	;volatile
  2789  000B58                     
  2790                           ; BSR set to: 14
  2791                           ;comparator.c: 10:     DAC1CON0bits.NSS=0b0;
  2792  000B58  91C6               	bcf	198,0,b	;volatile
  2793                           
  2794                           ;comparator.c: 15:     DAC1CON1bits.DAC1R=0b11011;
  2795  000B5A  51C7               	movf	199,w,b	;volatile
  2796  000B5C  0BE0               	andlw	-32
  2797  000B5E  091B               	iorlw	27
  2798  000B60  6FC7               	movwf	199,b	;volatile
  2799  000B62                     
  2800                           ; BSR set to: 14
  2801                           ;comparator.c: 16:     DAC1CON0bits.DAC1EN=1;
  2802  000B62  8FC6               	bsf	198,7,b	;volatile
  2803  000B64                     
  2804                           ; BSR set to: 14
  2805  000B64  0012               	return		;funcret
  2806  000B66                     __end_of_DAC_init:
  2807                           	callstack 0
  2808                           
  2809 ;; *************** function _ADC_init *****************
  2810 ;; Defined at:
  2811 ;;		line 8 in file "ADC.c"
  2812 ;; Parameters:    Size  Location     Type
  2813 ;;		None
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;		None
  2816 ;; Return value:  Size  Location     Type
  2817 ;;                  1    wreg      void 
  2818 ;; Registers used:
  2819 ;;		wreg, status,2
  2820 ;; Tracked objects:
  2821 ;;		On entry : 0/0
  2822 ;;		On exit  : 0/0
  2823 ;;		Unchanged: 0/0
  2824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2829 ;;Total ram usage:        0 bytes
  2830 ;; Hardware stack levels used: 1
  2831 ;; Hardware stack levels required when called: 2
  2832 ;; This function calls:
  2833 ;;		Nothing
  2834 ;; This function is called by:
  2835 ;;		_main
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           
  2839                           	psect	text22
  2840  000B20                     __ptext22:
  2841                           	callstack 0
  2842  000B20                     _ADC_init:
  2843                           	callstack 28
  2844  000B20                     
  2845                           ;ADC.c: 10:     TRISFbits.TRISF7=1;
  2846  000B20  8E86               	bsf	134,7,c	;volatile
  2847                           
  2848                           ;ADC.c: 11:     ANSELFbits.ANSELF7=1;
  2849  000B22  010E               	movlb	14	; () banked
  2850  000B24  8FB4               	bsf	180,7,b	;volatile
  2851                           
  2852                           ;ADC.c: 14:     ADREFbits.ADNREF = 0;
  2853  000B26  010F               	movlb	15	; () banked
  2854  000B28  9958               	bcf	88,4,b	;volatile
  2855  000B2A                     
  2856                           ; BSR set to: 15
  2857                           ;ADC.c: 15:     ADREFbits.ADPREF = 0b00;
  2858  000B2A  0EFC               	movlw	-4
  2859  000B2C  1758               	andwf	88,f,b	;volatile
  2860                           
  2861                           ;ADC.c: 16:     ADPCH=0b101111;
  2862  000B2E  0E2F               	movlw	47
  2863  000B30  6F5F               	movwf	95,b	;volatile
  2864  000B32                     
  2865                           ; BSR set to: 15
  2866                           ;ADC.c: 17:     ADCON0bits.ADFM = 0;
  2867  000B32  9460               	bcf	96,2,c	;volatile
  2868  000B34                     
  2869                           ; BSR set to: 15
  2870                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
  2871  000B34  8860               	bsf	96,4,c	;volatile
  2872  000B36                     
  2873                           ; BSR set to: 15
  2874                           ;ADC.c: 19:     ADCON0bits.ADON = 1;
  2875  000B36  8E60               	bsf	96,7,c	;volatile
  2876  000B38                     
  2877                           ; BSR set to: 15
  2878  000B38  0012               	return		;funcret
  2879  000B3A                     __end_of_ADC_init:
  2880                           	callstack 0
  2881                           
  2882 ;; *************** function _LowISR *****************
  2883 ;; Defined at:
  2884 ;;		line 52 in file "interrupts.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;		None
  2887 ;; Auto vars:     Size  Location     Type
  2888 ;;		None
  2889 ;; Return value:  Size  Location     Type
  2890 ;;                  1    wreg      void 
  2891 ;; Registers used:
  2892 ;;		wreg, status,2
  2893 ;; Tracked objects:
  2894 ;;		On entry : 0/0
  2895 ;;		On exit  : 0/0
  2896 ;;		Unchanged: 0/0
  2897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2900 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2901 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2902 ;;Total ram usage:        3 bytes
  2903 ;; Hardware stack levels used: 1
  2904 ;; Hardware stack levels required when called: 1
  2905 ;; This function calls:
  2906 ;;		Nothing
  2907 ;; This function is called by:
  2908 ;;		Interrupt level 1
  2909 ;; This function uses a non-reentrant model
  2910 ;;
  2911                           
  2912                           	psect	intcodelo
  2913  000018                     __pintcodelo:
  2914                           	callstack 0
  2915  000018                     _LowISR:
  2916                           	callstack 25
  2917                           
  2918                           ; BSR set to: 15
  2919                           ;incstack = 0
  2920  000018  8034               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  2921  00001A  CFD8 F002          	movff	status,??_LowISR
  2922  00001E  CFE8 F003          	movff	wreg,??_LowISR+1
  2923  000022  CFE0 F004          	movff	bsr,??_LowISR+2
  2924  000026                     
  2925                           ;interrupts.c: 53:     if (PIR0bits.TMR0IF) {
  2926  000026  010E               	movlb	14	; () banked
  2927  000028  AB33               	btfss	51,5,b	;volatile
  2928  00002A  EF19  F000         	goto	i1u101_21
  2929  00002E  EF1B  F000         	goto	i1u101_20
  2930  000032                     i1u101_21:
  2931  000032  EF22  F000         	goto	i1l160
  2932  000036                     i1u101_20:
  2933  000036                     
  2934                           ; BSR set to: 14
  2935                           ;interrupts.c: 54:         TMR0H = 0b11101110;
  2936  000036  0EEE               	movlw	238
  2937  000038  6ED4               	movwf	212,c	;volatile
  2938                           
  2939                           ;interrupts.c: 55:         TMR0L = 0b10100011;
  2940  00003A  0EA3               	movlw	163
  2941  00003C  6ED3               	movwf	211,c	;volatile
  2942                           
  2943                           ;interrupts.c: 56:         time_flag = 1;
  2944  00003E  0E01               	movlw	1
  2945  000040  6E31               	movwf	_time_flag^0,c	;volatile
  2946  000042                     
  2947                           ; BSR set to: 14
  2948                           ;interrupts.c: 57:         PIR0bits.TMR0IF = 0;
  2949  000042  9B33               	bcf	51,5,b	;volatile
  2950  000044                     i1l160:
  2951                           
  2952                           ; BSR set to: 14
  2953  000044  C004  FFE0         	movff	??_LowISR+2,bsr
  2954  000048  C003  FFE8         	movff	??_LowISR+1,wreg
  2955  00004C  C002  FFD8         	movff	??_LowISR,status
  2956  000050  9034               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2957  000052  0010               	retfie	
  2958  000054                     __end_of_LowISR:
  2959                           	callstack 0
  2960                           
  2961 ;; *************** function _HighISR *****************
  2962 ;; Defined at:
  2963 ;;		line 35 in file "interrupts.c"
  2964 ;; Parameters:    Size  Location     Type
  2965 ;;		None
  2966 ;; Auto vars:     Size  Location     Type
  2967 ;;		None
  2968 ;; Return value:  Size  Location     Type
  2969 ;;                  1    wreg      void 
  2970 ;; Registers used:
  2971 ;;		wreg, status,2, status,0
  2972 ;; Tracked objects:
  2973 ;;		On entry : 0/0
  2974 ;;		On exit  : 0/0
  2975 ;;		Unchanged: 0/0
  2976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2979 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2980 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2981 ;;Total ram usage:        1 bytes
  2982 ;; Hardware stack levels used: 1
  2983 ;; This function calls:
  2984 ;;		Nothing
  2985 ;; This function is called by:
  2986 ;;		Interrupt level 2
  2987 ;; This function uses a non-reentrant model
  2988 ;;
  2989                           
  2990                           	psect	intcode
  2991  000008                     __pintcode:
  2992                           	callstack 0
  2993  000008                     _HighISR:
  2994                           	callstack 25
  2995                           
  2996                           ; BSR set to: 14
  2997                           ;incstack = 0
  2998  000008  8234               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2999  00000A  EFC2  F004         	goto	int_func
  3000                           
  3001                           	psect	intcode_body
  3002  000984                     __pintcode_body:
  3003                           	callstack 25
  3004  000984                     int_func:
  3005                           	callstack 25
  3006  000984                     
  3007                           ;interrupts.c: 36:     if (PIR2bits.C1IF) {
  3008  000984  010E               	movlb	14	; () banked
  3009  000986  A135               	btfss	53,0,b	;volatile
  3010  000988  EFC8  F004         	goto	i2u97_41
  3011  00098C  EFCA  F004         	goto	i2u97_40
  3012  000990                     i2u97_41:
  3013  000990  EFEA  F004         	goto	i2l152
  3014  000994                     i2u97_40:
  3015  000994                     
  3016                           ; BSR set to: 14
  3017                           ;interrupts.c: 37:         LATDbits.LATD7 = !LATDbits.LATD7;
  3018  000994  AE7C               	btfss	124,7,c	;volatile
  3019  000996  EFCF  F004         	goto	i2u98_41
  3020  00099A  EFD3  F004         	goto	i2u98_40
  3021  00099E                     i2u98_41:
  3022  00099E  6A01               	clrf	??_HighISR^0,c
  3023  0009A0  2A01               	incf	??_HighISR^0,f,c
  3024  0009A2  EFD4  F004         	goto	i2u99_48
  3025  0009A6                     i2u98_40:
  3026  0009A6  6A01               	clrf	??_HighISR^0,c
  3027  0009A8                     i2u99_48:
  3028  0009A8  3201               	rrcf	??_HighISR^0,f,c
  3029  0009AA  3201               	rrcf	??_HighISR^0,f,c
  3030  0009AC  507C               	movf	124,w,c	;volatile
  3031  0009AE  1801               	xorwf	??_HighISR^0,w,c
  3032  0009B0  0B7F               	andlw	-129
  3033  0009B2  1801               	xorwf	??_HighISR^0,w,c
  3034  0009B4  6E7C               	movwf	124,c	;volatile
  3035  0009B6                     
  3036                           ;interrupts.c: 38:         if (LATDbits.LATD7==0) {sunrise_flag=1;}
  3037  0009B6  BE7C               	btfsc	124,7,c	;volatile
  3038  0009B8  EFE0  F004         	goto	i2u100_41
  3039  0009BC  EFE2  F004         	goto	i2u100_40
  3040  0009C0                     i2u100_41:
  3041  0009C0  EFE6  F004         	goto	i2l1392
  3042  0009C4                     i2u100_40:
  3043  0009C4  0E01               	movlw	1
  3044  0009C6  6E33               	movwf	_sunrise_flag^0,c	;volatile
  3045  0009C8  EFE8  F004         	goto	i2l1394
  3046  0009CC                     i2l1392:
  3047  0009CC  0E01               	movlw	1
  3048  0009CE  6E32               	movwf	_sunset_flag^0,c	;volatile
  3049  0009D0                     i2l1394:
  3050                           
  3051                           ;interrupts.c: 40:         PIR2bits.C1IF = 0;
  3052  0009D0  010E               	movlb	14	; () banked
  3053  0009D2  9135               	bcf	53,0,b	;volatile
  3054  0009D4                     i2l152:
  3055                           
  3056                           ; BSR set to: 14
  3057  0009D4  9234               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3058  0009D6  0011               	retfie		f
  3059  0009D8                     __end_of_HighISR:
  3060                           	callstack 0
  3061  0000                     
  3062                           	psect	rparam
  3063  0000                     
  3064                           	psect	temp
  3065  000034                     btemp:
  3066                           	callstack 0
  3067  000034                     	ds	1
  3068  0000                     int$flags	set	btemp
  3069  0000                     wtemp8	set	btemp+1
  3070  0000                     ttemp5	set	btemp+1
  3071  0000                     ttemp6	set	btemp+4
  3072  0000                     ttemp7	set	btemp+8
  3073                           
  3074                           	psect	idloc
  3075                           
  3076                           ;Config register IDLOC0 @ 0x200000
  3077                           ;	unspecified, using default values
  3078  200000                     	org	2097152
  3079  200000  0FFF               	dw	4095
  3080                           
  3081                           ;Config register IDLOC1 @ 0x200002
  3082                           ;	unspecified, using default values
  3083  200002                     	org	2097154
  3084  200002  0FFF               	dw	4095
  3085                           
  3086                           ;Config register IDLOC2 @ 0x200004
  3087                           ;	unspecified, using default values
  3088  200004                     	org	2097156
  3089  200004  0FFF               	dw	4095
  3090                           
  3091                           ;Config register IDLOC3 @ 0x200006
  3092                           ;	unspecified, using default values
  3093  200006                     	org	2097158
  3094  200006  0FFF               	dw	4095
  3095                           
  3096                           ;Config register IDLOC4 @ 0x200008
  3097                           ;	unspecified, using default values
  3098  200008                     	org	2097160
  3099  200008  0FFF               	dw	4095
  3100                           
  3101                           ;Config register IDLOC5 @ 0x20000A
  3102                           ;	unspecified, using default values
  3103  20000A                     	org	2097162
  3104  20000A  0FFF               	dw	4095
  3105                           
  3106                           ;Config register IDLOC6 @ 0x20000C
  3107                           ;	unspecified, using default values
  3108  20000C                     	org	2097164
  3109  20000C  0FFF               	dw	4095
  3110                           
  3111                           ;Config register IDLOC7 @ 0x20000E
  3112                           ;	unspecified, using default values
  3113  20000E                     	org	2097166
  3114  20000E  0FFF               	dw	4095
  3115                           
  3116                           	psect	config
  3117                           
  3118                           ;Config register CONFIG1L @ 0x300000
  3119                           ;	External Oscillator mode Selection bits
  3120                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3121                           ;	Power-up default value for COSC bits
  3122                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3123  300000                     	org	3145728
  3124  300000  AA                 	db	170
  3125                           
  3126                           ;Config register CONFIG1H @ 0x300001
  3127                           ;	unspecified, using default values
  3128                           ;	Clock Out Enable bit
  3129                           ;	CLKOUTEN = 0x1, unprogrammed default
  3130                           ;	Clock Switch Enable bit
  3131                           ;	CSWEN = 0x1, unprogrammed default
  3132                           ;	Fail-Safe Clock Monitor Enable bit
  3133                           ;	FCMEN = 0x1, unprogrammed default
  3134  300001                     	org	3145729
  3135  300001  FF                 	db	255
  3136                           
  3137                           ;Config register CONFIG2L @ 0x300002
  3138                           ;	unspecified, using default values
  3139                           ;	Master Clear Enable bit
  3140                           ;	MCLRE = 0x1, unprogrammed default
  3141                           ;	Power-up Timer Enable bit
  3142                           ;	PWRTE = 0x1, unprogrammed default
  3143                           ;	Low-power BOR enable bit
  3144                           ;	LPBOREN = 0x1, unprogrammed default
  3145                           ;	Brown-out Reset Enable bits
  3146                           ;	BOREN = 0x3, unprogrammed default
  3147  300002                     	org	3145730
  3148  300002  FF                 	db	255
  3149                           
  3150                           ;Config register CONFIG2H @ 0x300003
  3151                           ;	unspecified, using default values
  3152                           ;	Brown Out Reset Voltage selection bits
  3153                           ;	BORV = 0x3, unprogrammed default
  3154                           ;	ZCD Disable bit
  3155                           ;	ZCD = 0x1, unprogrammed default
  3156                           ;	PPSLOCK bit One-Way Set Enable bit
  3157                           ;	PPS1WAY = 0x1, unprogrammed default
  3158                           ;	Stack Full/Underflow Reset Enable bit
  3159                           ;	STVREN = 0x1, unprogrammed default
  3160                           ;	Debugger Enable bit
  3161                           ;	DEBUG = 0x1, unprogrammed default
  3162                           ;	Extended Instruction Set Enable bit
  3163                           ;	XINST = 0x1, unprogrammed default
  3164  300003                     	org	3145731
  3165  300003  FF                 	db	255
  3166                           
  3167                           ;Config register CONFIG3L @ 0x300004
  3168                           ;	WDT Period Select bits
  3169                           ;	WDTCPS = 0x1F, unprogrammed default
  3170                           ;	WDT operating mode
  3171                           ;	WDTE = OFF, WDT Disabled
  3172  300004                     	org	3145732
  3173  300004  9F                 	db	159
  3174                           
  3175                           ;Config register CONFIG3H @ 0x300005
  3176                           ;	unspecified, using default values
  3177                           ;	WDT Window Select bits
  3178                           ;	WDTCWS = 0x7, unprogrammed default
  3179                           ;	WDT input clock selector
  3180                           ;	WDTCCS = 0x7, unprogrammed default
  3181  300005                     	org	3145733
  3182  300005  FF                 	db	255
  3183                           
  3184                           ;Config register CONFIG4L @ 0x300006
  3185                           ;	unspecified, using default values
  3186                           ;	Write Protection Block 0
  3187                           ;	WRT0 = 0x1, unprogrammed default
  3188                           ;	Write Protection Block 1
  3189                           ;	WRT1 = 0x1, unprogrammed default
  3190                           ;	Write Protection Block 2
  3191                           ;	WRT2 = 0x1, unprogrammed default
  3192                           ;	Write Protection Block 3
  3193                           ;	WRT3 = 0x1, unprogrammed default
  3194                           ;	Write Protection Block 3
  3195                           ;	WRT4 = 0x1, unprogrammed default
  3196                           ;	Write Protection Block 3
  3197                           ;	WRT5 = 0x1, unprogrammed default
  3198                           ;	Write Protection Block 3
  3199                           ;	WRT6 = 0x1, unprogrammed default
  3200                           ;	Write Protection Block 3
  3201                           ;	WRT7 = 0x1, unprogrammed default
  3202  300006                     	org	3145734
  3203  300006  FF                 	db	255
  3204                           
  3205                           ;Config register CONFIG4H @ 0x300007
  3206                           ;	unspecified, using default values
  3207                           ;	Configuration Register Write Protection bit
  3208                           ;	WRTC = 0x1, unprogrammed default
  3209                           ;	Boot Block Write Protection bit
  3210                           ;	WRTB = 0x1, unprogrammed default
  3211                           ;	Data EEPROM Write Protection bit
  3212                           ;	WRTD = 0x1, unprogrammed default
  3213                           ;	Scanner Enable bit
  3214                           ;	SCANE = 0x1, unprogrammed default
  3215                           ;	Low Voltage Programming Enable bit
  3216                           ;	LVP = 0x1, unprogrammed default
  3217  300007                     	org	3145735
  3218  300007  FF                 	db	255
  3219                           
  3220                           ;Config register CONFIG5L @ 0x300008
  3221                           ;	unspecified, using default values
  3222                           ;	UserNVM Program Memory Code Protection bit
  3223                           ;	CP = 0x1, unprogrammed default
  3224                           ;	DataNVM Memory Code Protection bit
  3225                           ;	CPD = 0x1, unprogrammed default
  3226  300008                     	org	3145736
  3227  300008  FF                 	db	255
  3228                           
  3229                           ;Config register CONFIG5H @ 0x300009
  3230                           ;	unspecified, using default values
  3231  300009                     	org	3145737
  3232  300009  FF                 	db	255
  3233                           
  3234                           ;Config register CONFIG6L @ 0x30000A
  3235                           ;	unspecified, using default values
  3236                           ;	Table Read Protection Block 0
  3237                           ;	EBTR0 = 0x1, unprogrammed default
  3238                           ;	Table Read Protection Block 1
  3239                           ;	EBTR1 = 0x1, unprogrammed default
  3240                           ;	Table Read Protection Block 2
  3241                           ;	EBTR2 = 0x1, unprogrammed default
  3242                           ;	Table Read Protection Block 3
  3243                           ;	EBTR3 = 0x1, unprogrammed default
  3244                           ;	Table Read Protection Block 4
  3245                           ;	EBTR4 = 0x1, unprogrammed default
  3246                           ;	Table Read Protection Block 5
  3247                           ;	EBTR5 = 0x1, unprogrammed default
  3248                           ;	Table Read Protection Block 6
  3249                           ;	EBTR6 = 0x1, unprogrammed default
  3250                           ;	Table Read Protection Block 7
  3251                           ;	EBTR7 = 0x1, unprogrammed default
  3252  30000A                     	org	3145738
  3253  30000A  FF                 	db	255
  3254                           
  3255                           ;Config register CONFIG6H @ 0x30000B
  3256                           ;	unspecified, using default values
  3257                           ;	Boot Block Table Read Protection bit
  3258                           ;	EBTRB = 0x1, unprogrammed default
  3259  30000B                     	org	3145739
  3260  30000B  FF                 	db	255
  3261                           tosu	equ	0xFFF
  3262                           tosh	equ	0xFFE
  3263                           tosl	equ	0xFFD
  3264                           stkptr	equ	0xFFC
  3265                           pclatu	equ	0xFFB
  3266                           pclath	equ	0xFFA
  3267                           pcl	equ	0xFF9
  3268                           tblptru	equ	0xFF8
  3269                           tblptrh	equ	0xFF7
  3270                           tblptrl	equ	0xFF6
  3271                           tablat	equ	0xFF5
  3272                           prodh	equ	0xFF4
  3273                           prodl	equ	0xFF3
  3274                           indf0	equ	0xFEF
  3275                           postinc0	equ	0xFEE
  3276                           postdec0	equ	0xFED
  3277                           preinc0	equ	0xFEC
  3278                           plusw0	equ	0xFEB
  3279                           fsr0h	equ	0xFEA
  3280                           fsr0l	equ	0xFE9
  3281                           wreg	equ	0xFE8
  3282                           indf1	equ	0xFE7
  3283                           postinc1	equ	0xFE6
  3284                           postdec1	equ	0xFE5
  3285                           preinc1	equ	0xFE4
  3286                           plusw1	equ	0xFE3
  3287                           fsr1h	equ	0xFE2
  3288                           fsr1l	equ	0xFE1
  3289                           bsr	equ	0xFE0
  3290                           indf2	equ	0xFDF
  3291                           postinc2	equ	0xFDE
  3292                           postdec2	equ	0xFDD
  3293                           preinc2	equ	0xFDC
  3294                           plusw2	equ	0xFDB
  3295                           fsr2h	equ	0xFDA
  3296                           fsr2l	equ	0xFD9
  3297                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     48      51
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_sunrise_sunset
    _time_incre->_date_check
    _time_incre->_daylightsavingstime_toggle
    _sunrise_sunset->_sun_sync
    _sun_sync->___awdiv
    _LED_toggle->_sunrise
    _LED1_init->_ADC_getval
    _LCD_init->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0    5779
                                             37 COMRAM    11    11      0
                           _ADC_init
                         _Comp1_init
                    _Interrupts_init
                           _LCD_init
                          _LED1_init
                          _LED2_init
                         _LED_toggle
                  _LEDarray_disp_bin
                      _LEDarray_init
                        _Timer0_init
                     _sunrise_sunset
                         _time_incre
 ---------------------------------------------------------------------------------
 (1) _time_incre                                          12     1     11    1617
                                             17 COMRAM    12     1     11
                         _date_check
         _daylightsavingstime_toggle
 ---------------------------------------------------------------------------------
 (2) _daylightsavingstime_toggle                          13     2     11     376
                                              4 COMRAM    13     2     11
 ---------------------------------------------------------------------------------
 (2) _date_check                                          13     2     11     674
                                              4 COMRAM    13     2     11
 ---------------------------------------------------------------------------------
 (1) _sunrise_sunset                                      11     0     11    1895
                                             26 COMRAM    11     0     11
                           _sun_sync
                            _sunrise
 ---------------------------------------------------------------------------------
 (2) _sun_sync                                            14     3     11    1436
                                             12 COMRAM    14     3     11
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     756
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    1     1      0     120
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LED_toggle                                          12     1     11     589
                                             15 COMRAM    12     1     11
                         _ADC_getval
                            _sunrise
 ---------------------------------------------------------------------------------
 (2) _sunrise                                             11     0     11     315
                                              4 COMRAM    11     0     11
 ---------------------------------------------------------------------------------
 (1) _LED2_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED1_init                                           12     1     11     137
                                              5 COMRAM    12     1     11
                         _ADC_getval
 ---------------------------------------------------------------------------------
 (2) _ADC_getval                                           1     1      0      15
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0     946
                                              7 COMRAM     2     2      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (2) _LCD_sendbyte                                         2     1      1     886
                                              5 COMRAM     2     1      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (2) _LCD_sendnibble                                       1     1      0      60
                                              4 COMRAM     1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (3) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                     11     0     11     122
                                              4 COMRAM    11     0     11
 ---------------------------------------------------------------------------------
 (1) _Comp1_init                                           0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _LowISR                                               3     3      0       0
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Comp1_init
     _DAC_init
   _Interrupts_init
   _LCD_init
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
     _LCD_sendnibble
   _LED1_init
     _ADC_getval
   _LED2_init
   _LED_toggle
     _ADC_getval
     _sunrise
   _LEDarray_disp_bin
   _LEDarray_init
   _Timer0_init
   _sunrise_sunset
     _sun_sync
       ___awdiv
     _sunrise
   _time_incre
     _date_check
     _daylightsavingstime_toggle

 _LowISR (ROOT)

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     30      33       1       54.3%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      33       8        0.0%
DATA                 0      0      33       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Nov 09 07:51:03 2021

                                 l50 0B3C                                   l52 0B4A  
                                 l53 0B50                                   l47 0B38  
                                 l72 0ABC                                   l81 078E  
                                 l91 07E8                                   l83 07A4  
                                 l75 074C                                   l93 07EA  
                                 l85 07BA                                   l77 0762  
                                 l87 07D0                                   l79 0778  
                                 l89 07E6                                   u10 092C  
                                 u11 0928                                   u20 0942  
                                 u21 093E                                   u30 0958  
                                 u31 0954                                   u40 096E  
                                 u41 096A                         ___awdiv@sign 000A  
                                 bsr 000FE0                    ??_Interrupts_init 0010  
                                l110 0B64                                  l113 0AE2  
                                l202 0A7C                                  l140 0A62  
                                l204 0A96                                  l300 05AC  
                                l207 0892                                  l136 0A52  
                                l241 0A1E                                  l138 0A4A  
                                l242 0A20                                  l306 091A  
                                l139 0A56                                  l171 0B1E  
                                l245 0B88                                  l253 0734  
                                l238 0A1C                                  l191 0932  
                                l193 0948                                  l195 095E  
                                l267 04E2                                  l188 0B82  
                                l540 0670                                  l284 020A  
                                l292 0312                                  l197 0974  
                                l199 0982                                  l295 0B02  
                                l288 02FC                                  l298 0574  
                                l299 0592                                  l982 0B76  
                                l990 092C                                  l984 0B78  
                                l992 0934                                  l986 0B80  
                                l994 0942                                  l996 094A  
                                l988 091E                                  l998 0958  
                                u110 0B4A                                  u111 0B46  
                                u810 0746                                  u811 0742  
                                u820 075C                                  u821 0758  
                                u830 0772                                  u831 076E  
                                u840 0788                                  u841 0784  
                                u850 079E                                  u851 079A  
                                u860 07B4                                  u861 07B0  
                                u870 07CA                                  u871 07C6  
                                u880 07E0                                  u881 07DC  
                                wreg 000FE8               Interrupts_init@current 0005  
                __size_of_ADC_getval 0018                          ?_LED_toggle 0010  
                 __size_of_LED1_init 004A                   __size_of_LED2_init 0006  
                               l1000 0960                                 l1002 096E  
                               l1004 0976                                 l1006 097A  
                               l1200 0B1C                                 l1060 0B58  
                               l1052 0B3A                                 l1062 0B62  
                               l1054 0B4E                                 l1214 0B84  
                               l1216 0A98                                 l1170 0B2A  
                               l1058 0B52                                 l1330 0746  
                               l1172 0B32                                 l1180 0AC0  
                               l1340 077A                                 l1332 074E  
                               l1500 04BA                                 l1174 0B34  
                               l1190 0ADA                                 l1182 0AD2  
                               l1350 07B4                                 l1342 0788  
                               l1334 075C                                 l1430 05C0  
                               l1510 0076                                 l1502 04CC  
                               l1176 0B36                                 l1168 0B20  
                               l1192 0ADE                                 l1184 0AD4  
                               l1600 0840                                 l1352 07BC  
                               l1344 0790                                 l1336 0764  
                               l1328 0738                                 l1440 05E6  
                               l1432 05C8                                 l1520 00E0  
                               l1512 0088                                 l1504 04D0  
                               l1186 0AD6                                 l1178 0ABE  
                               l1610 086E                                 l1602 0846  
                               l1354 07CA                                 l1346 079E  
                               l1338 0772                                 l1194 0B04  
                               l1450 061E                                 l1442 05EE  
                               l1434 05CC                                 l1426 05AE  
                               l1530 0138                                 l1522 00F0  
                               l1514 009C                                 l1188 0AD8  
                               l1612 0878                                 l1604 0850  
                               l1356 07D2                                 l1348 07A6  
                               l1196 0B0C                                 l1460 064A  
                               l1452 0624                                 l1444 0600  
                               l1436 05DA                                 l1428 05B2  
                               l1620 08A4                                 l1540 0194  
                               l1532 014A                                 l1524 0102  
                               l1516 00BA                                 l1508 0058  
                               l1700 0344                                 l1470 0A66  
                               l1614 0880                                 l1606 0856  
                               l1358 07E0                                 l1198 0B12  
                               l1454 063A                                 l1446 0608  
                               l1462 0650                                 l1438 05E2  
                               l1630 0908                                 l1622 08C8  
                               l1550 01D4                                 l1542 01A6  
                               l1526 0114                                 l1534 015C  
                               l1518 00CC                                 l1710 0384  
                               l1702 0348                                 l1472 0A76  
                               l1616 088A                                 l1608 0860  
                               l1480 0AF0                                 l1464 0660  
                               l1456 0642                                 l1448 0610  
                               l1560 04E4                                 l1624 08D0  
                               l1552 01E8                                 l1544 01B8  
                               l1536 0170                                 l1528 0126  
                               l1640 0258                                 l1712 03A8  
                               l1704 034C                                 l1474 0A7E  
                               l1466 0668                                 l1458 0644  
                               l1570 059A                                 l1562 0556  
                               l1626 08E0                                 l1618 0894  
                               l1554 01F4                                 l1538 0182  
                               l1546 01CC                                 l1490 0450  
                               l1650 027C                                 l1642 025C  
                               l1634 020C                                 l1714 03CC  
                               l1706 0362                                 l1476 0A8E  
                               l1580 09EC                                 l1564 055C  
                               l1628 0904                                 l1548 01D0  
                               l1556 01F8                                 l1492 0460  
                               l1484 03FE                                 l1660 02E0  
                               l1652 02A0                                 l1644 0260  
                               l1636 021C                                 l1716 03F0  
                               l1708 0380                                 l1574 0A22  
                               l1590 081A                                 l1582 0A00  
                               l1478 0AE4                                 l1670 0672  
                               l1566 056A                                 l1486 0410  
                               l1494 0468                                 l1662 02E4  
                               l1654 02B4                                 l1646 0274  
                               l1638 0234                                 l1576 0A36  
                               l1592 0820                                 l1584 0A16  
                               l1680 06BE                                 l1672 0682  
                               l1568 0588                                 l1496 047A  
                               l1488 043E                                 l1664 02F8  
                               l1656 02B8                                 l1648 0278  
                               l1594 0826                                 l1586 07EC  
                               l1578 09D8                                 l1690 06FE  
                               l1682 06CE                                 l1674 0692  
                               l1498 04A8                                 l1658 02BC  
                               l1666 0300                                 l1596 0830  
                               l1588 0804                                 l1684 06DE  
                               l1692 0722                                 l1676 06A2  
                               l1598 0836                                 l1686 06E2  
                               l1678 06AC                                 l1688 06F8  
                               l1696 0314                                 l1698 0340  
                               u1100 0660                                 u1101 065C  
                               u1110 0A76                                 u1111 0A72  
                               u1200 04CC                                 u1121 0AFA  
                               u1201 04C8                                 u1050 05C0  
                               u1130 0410                                 u1051 05BC  
                               u1211 04DA                                 u1131 040C  
                               u1060 05DA                                 u1300 0114  
                               u1220 0076                                 u1140 043E  
                               u1061 05D6                                 u1301 0110  
                               u1221 0072                                 u1141 043A  
                               u1070 0600                                 u1310 0126  
                               u1230 0088                                 u1150 0450  
                               u2007 097C                                 u1071 05FC  
                               u1311 0122                                 u1231 0084  
                               u1151 044C                                 u1080 061E  
                               u1400 01CC                                 u1320 0138  
                               u1240 009C                                 u1160 0460  
                               u2017 0B7A                                 u1081 061A  
                               u1401 01C8                                 u1321 0134  
                               u1241 0098                                 u1161 045C  
                               u1090 063A                                 u1410 01E8  
                               u1330 014A                                 u1250 00BA  
                               u1170 047A                                 u1091 0636  
                               u1411 01E4                                 u1331 0146  
                               u1251 00B6                                 u1171 0476  
                               u1500 0A16                                 u1340 015C  
                               u1260 00CC                                 u1180 04A8  
                               u1501 0A12                                 u1421 0202  
                               u1341 0158                                 u1261 00C8  
                               u1181 04A4                                 u1430 056A  
                               u1510 08A4                                 u1350 0170  
                               u1270 00E0                                 u1190 04BA  
                               u1431 0566                                 u1511 08A0  
                               u1351 016C                                 u1271 00DC  
                               u1191 04B6                                 u1440 0588  
                               u1360 0182                                 u1280 00F0  
                               u1600 0246                                 u1441 0584  
                               u1521 08AE                                 u1361 017E  
                               u1281 00EC                                 u1601 023E  
                               u1370 0194                                 u1290 0102  
                               u1451 05A4                                 u1531 08C0  
                               u1371 0190                                 u1291 00FE  
                               u1460 0A36                                 u1700 0682  
                               u1540 08E0                                 u1380 01A6  
                               u1620 0274                                 u1461 0A32  
                               u1701 067E                                 u1541 08DC  
                               u1381 01A2                                 u1621 0270  
                               u1470 0A4A                                 u1710 0692  
                               u1390 01B8                                 u1471 0A46  
                               u1711 068E                                 u1551 08EA  
                               u1391 01B4                                 u1631 0286  
                               u1480 09EC                                 u1720 06A2  
                               u1481 09E8                                 u1721 069E  
                               u1561 08FC                                 u1641 0298  
                               u1801 0356                                 u1490 0A00  
                               u1730 06BE                                 u1650 02B4  
                               u1618 0248                                 u1491 09FC  
                               u1731 06BA                                 u1571 0912  
                               u1651 02B0                                 u1811 036C  
                               u1740 06CE                                 u1580 021C  
                               u1741 06CA                                 u1661 02C6  
                               u1581 0218                                 u1821 038E  
                               u1750 06DE                                 u1590 0234  
                               u1751 06DA                                 u1671 02D8  
                               u1591 0230                                 u1831 03A0  
                               u1760 06F8                                 u1680 02F8  
                               u1761 06F4                                 u1681 02F4  
                               u1841 03B2                                 u1771 0708  
                               u1691 030A                                 u1851 03C4  
                               u1917 080E                                 u1781 071A  
                               u1861 03D6                                 u1927 0822  
                               u1791 072C                                 u1871 03E8  
                               u1937 0832                                 u1947 0842  
                               u1957 0852                                 u1967 0866  
                               u1977 087A                                 u1987 088C  
                               u1997 0A90                          main@current 0026  
                 __size_of_LCD_E_TOG 000E                                 _main 0314  
                               btemp 0034                                 start 0054  
                   __end_of_ADC_init 0B3A                     __end_of_DAC_init 0B66  
                    __end_of_HighISR 09D8                     ??_sunrise_sunset 0026  
                       ___param_bank 000000                           _Comp1_init 0ABE  
                        _sunset_flag 0032                     __end_of_LCD_init 0894  
                              ?_main 0001                                _ADPCH 000F5F  
                    __end_of___awdiv 0672                      ___awdiv@divisor 0007  
                              i1l160 0044                                i2l152 09D4  
                    ___awdiv@counter 0009                                _TMR0H 000FD4  
                              _TMR0L 000FD3                        ?_LCD_sendbyte 0006  
                              plusw0 000FEB                                plusw2 000FDB  
                              ttemp5 0035                                ttemp6 0038  
                              ttemp7 003C                                status 000FD8  
                              wtemp8 0035                      __end_of_sunrise 0B04  
            __size_of_LCD_sendnibble 0068                      __initialization 0B66  
                       __end_of_main 03FE                    __end_of_LED1_init 0A22  
                __size_of_LED_toggle 00C4                    __end_of_LED2_init 0B8A  
                  LED_toggle@current 0010                    __end_of_LCD_E_TOG 0B84  
                             ??_main 0026                        __activetblptr 000000  
             __size_of_LEDarray_init 0026                         _sunrise_flag 0033  
                             _ADRESH 000F64                       ??_LCD_sendbyte 0007  
                   ___awdiv@dividend 0005                               i1l1400 0042  
                             i1l1396 0026                               i1l1398 0036  
       ??_daylightsavingstime_toggle 0010                               i2l1390 09C4  
                             i2l1392 09CC                               i2l1384 0984  
                             i2l1394 09D0                               i2l1386 0994  
                             i2l1388 09B6                            ??_HighISR 0001  
                  _LEDarray_disp_bin 0736                               _LowISR 0018  
                 ?_LEDarray_disp_bin 0001                         ??_ADC_getval 0005  
                      ??_Timer0_init 0005                          ?_Comp1_init 0001  
                          ??___awdiv 0009                  ??_LEDarray_disp_bin 0005  
                   ___awdiv@quotient 000B                               isa$std 000001  
        ?_daylightsavingstime_toggle 0005                            ?_ADC_init 0001  
                          ?_DAC_init 0001                   __end_of_ADC_getval 0B52  
                          ??_sunrise 0010                     __end_of_sun_sync 05AE  
          __end_of_LEDarray_disp_bin 07EC                           __accesstop 0060  
            __end_of__initialization 0B6C                            ?_LCD_init 0001  
                      ___rparam_used 000001                        _LEDarray_init 0A98  
                    _Interrupts_init 0A22                       __pcstackCOMRAM 0001  
                __end_of_Timer0_init 0B20                           ??_ADC_init 0005  
                         ??_DAC_init 0005                         ??_LED_toggle 001B  
                __size_of_Comp1_init 0026                       _LCD_sendnibble 091C  
                         _date_check 0058                           ??_LCD_init 0008  
                     ?_LEDarray_init 0001                              ?_LowISR 0001  
               __end_of_LCD_sendbyte 0A98                   __end_of_LED_toggle 0736  
                   LED1_init@current 0006                              i2u97_40 0994  
                            i2u97_41 0990                              i2u98_40 09A6  
                            i2u98_41 099E                              i2u99_48 09A8  
             __end_of_LCD_sendnibble 0984           __size_of_LEDarray_disp_bin 00B6  
            __end_of_Interrupts_init 0A64                              _HighISR 0008  
                          _ADREFbits 000F58                              __Hparam 0000  
                            __Lparam 0000                      __size_of_LowISR 003C  
                  date_check@current 0005                          _Timer0_init 0B04  
                            ___awdiv 05AE                              __pcinit 0B66  
                          ?_sun_sync 000D                              __ramtop 0E00  
                            __ptext0 0314                              __ptext1 020C  
                            __ptext2 03FE                              __ptext3 0058  
                            __ptext4 0894                              __ptext5 04E4  
                            __ptext6 05AE                              __ptext7 0B04  
                            __ptext8 0A98                              __ptext9 0736  
                          _LED1_init 09D8                            _LED2_init 0B84  
                          _LCD_E_TOG 0B76                       __pintcode_body 0984  
                            _sunrise 0AE4                 end_of_initialization 0B6C  
                    ?_LCD_sendnibble 0001                     ADC_getval@tmpval 0005  
                    ??_LEDarray_init 0005                              int_func 0984  
                        ?_date_check 0005                         ??_Comp1_init 0005  
                         _time_incre 020C                           ??_sun_sync 0018  
                         ?_LED1_init 0006                           ?_LED2_init 0001  
            __size_of_sunrise_sunset 0088                           ?_LCD_E_TOG 0001  
                          _TRISAbits 000F81                            _TRISBbits 000F82  
                          _TRISCbits 000F83                            _TRISDbits 000F84  
                          _TRISEbits 000F85                            _TRISFbits 000F86  
                          _TRISGbits 000F87                            _TRISHbits 000F88  
                  __size_of_ADC_init 001A                    __size_of_DAC_init 0014  
                 __end_of_Comp1_init 0AE4                          _CM1CON0bits 000ED0  
                        _CM1CON1bits 000ED1                     ?_Interrupts_init 0005  
              __size_of_LCD_sendbyte 0034                    __size_of_LCD_init 00A8  
                     __end_of_LowISR 0054                 LCD_sendnibble@number 0005  
                __size_of_date_check 01B4                  start_initialization 0B66  
                       _LCD_sendbyte 0A64                             ??_LowISR 0002  
                        ?_time_incre 0012                    time_incre@current 0012  
                        ??_LED1_init 0011                          ??_LED2_init 0005  
              sunrise_sunset@current 001B                          __pbssCOMRAM 0031  
                        ??_LCD_E_TOG 0005                             ?_HighISR 0001  
                       ?_Timer0_init 0001                            __pintcode 0008  
                           ?___awdiv 0005                          __pintcodelo 0018  
                     _sunrise_sunset 0894                    __size_of_sun_sync 00CA  
                   ??_LCD_sendnibble 0005               sun_sync@solarnoon_hour 0018  
                           _ADC_init 0B20                             _DAC_init 0B52  
                           ?_sunrise 0005                     LCD_sendbyte@Byte 0007  
                __size_of_time_incre 0108                     LCD_sendbyte@type 0006  
                       ??_date_check 0010                             _LATAbits 000F79  
                           _LATBbits 000F7A                             _LATCbits 000F7B  
                           _LATDbits 000F7C                             _LATEbits 000F7D  
                           _LATFbits 000F7E                             _LATGbits 000F7F  
                           _LATHbits 000F80                             _LCD_init 07EC  
                           _IPR0bits 000E1F                             _PIE0bits 000E29  
                           _IPR2bits 000E21                             _PIE2bits 000E2B  
                           i1u101_20 0036                             i1u101_21 0032  
                           i2u100_40 09C4                             i2u100_41 09C0  
                           _PIR0bits 000E33                             _PIR2bits 000E35  
                          _time_flag 0031               __end_of_sunrise_sunset 091C  
                         _ADCON0bits 000F60                   __end_of_date_check 020C  
                         _CM1NCHbits 000ED2                           _CM1PCHbits 000ED3  
                   __size_of_HighISR 09D0                __end_of_LEDarray_init 0ABE  
                           __Hrparam 0000                           _ADC_getval 0B3A  
           sun_sync@solarnoon_minute 0019             sun_sync@solarnoon_second 001A  
                           __Lrparam 0000                     __size_of___awdiv 00C4  
                    ?_sunrise_sunset 001B  __size_of_daylightsavingstime_toggle 00E6  
                         _ANSELFbits 000EB4                           _T0CON0bits 000FD5  
                         _T0CON1bits 000FD6                             __ptext10 0672  
                           __ptext11 0AE4                             __ptext20 0ABE  
                           __ptext12 0B84                             __ptext21 0B52  
                           __ptext13 09D8                             __ptext22 0B20  
                           __ptext14 0B3A                             __ptext15 07EC  
                           __ptext16 0A64                             __ptext17 091C  
                           __ptext18 0B76                             __ptext19 0A22  
                     sunrise@current 0005              LEDarray_disp_bin@number 0005  
                   __size_of_sunrise 0020                        __size_of_main 00EA  
                           isa$xinst 000000             __size_of_Interrupts_init 0042  
                           int$flags 0034                 __size_of_Timer0_init 001C  
                       ??_time_incre 001D                             _sun_sync 04E4  
                         _INTCONbits 000FF2                           _LED_toggle 0672  
                           intlevel1 0000                             intlevel2 0000  
                       _DAC1CON0bits 000EC6                         _DAC1CON1bits 000EC7  
                 __end_of_time_incre 0314    daylightsavingstime_toggle@current 0005  
                        ?_ADC_getval 0001                      sun_sync@current 000D  
 __end_of_daylightsavingstime_toggle 04E4           _daylightsavingstime_toggle 03FE  
