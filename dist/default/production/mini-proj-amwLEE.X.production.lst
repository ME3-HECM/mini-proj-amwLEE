

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Nov 09 16:20:42 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    59                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    60                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    61  0000                     
    62                           ; Version 2.20
    63                           ; Generated 05/05/2020 GMT
    64                           ; 
    65                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC18F67K40 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96  0000                     _PIR0bits	set	3635
    97  0000                     _PIR2bits	set	3637
    98  0000                     _IPR0bits	set	3615
    99  0000                     _IPR2bits	set	3617
   100  0000                     _PIE0bits	set	3625
   101  0000                     _PIE2bits	set	3627
   102  0000                     _CM1CON1bits	set	3793
   103  0000                     _CM1CON0bits	set	3792
   104  0000                     _CM1PCHbits	set	3795
   105  0000                     _CM1NCHbits	set	3794
   106  0000                     _DAC1CON1bits	set	3783
   107  0000                     _DAC1CON0bits	set	3782
   108  0000                     _ANSELFbits	set	3764
   109  0000                     _ADPCH	set	3935
   110  0000                     _ADREFbits	set	3928
   111  0000                     _TRISHbits	set	3976
   112  0000                     _LATHbits	set	3968
   113  0000                     _TRISDbits	set	3972
   114  0000                     _TRISEbits	set	3973
   115  0000                     _TRISCbits	set	3971
   116  0000                     _LATEbits	set	3965
   117  0000                     _LATCbits	set	3963
   118  0000                     _T0CON0bits	set	4053
   119  0000                     _T0CON1bits	set	4054
   120  0000                     _TMR0L	set	4051
   121  0000                     _TMR0H	set	4052
   122  0000                     _LATDbits	set	3964
   123  0000                     _INTCONbits	set	4082
   124  0000                     _TRISBbits	set	3970
   125  0000                     _TRISAbits	set	3969
   126  0000                     _TRISGbits	set	3975
   127  0000                     _LATBbits	set	3962
   128  0000                     _LATFbits	set	3966
   129  0000                     _LATAbits	set	3961
   130  0000                     _LATGbits	set	3967
   131  0000                     _ADRESH	set	3940
   132  0000                     _ADCON0bits	set	3936
   133  0000                     _TRISFbits	set	3974
   134                           
   135                           	psect	smallconst
   136  000E00                     __psmallconst:
   137                           	callstack 0
   138  000E00  00                 	db	0
   139  000E01                     STR_3:
   140                           
   141                           ; BSR set to: 14
   142  000E01  25                 	db	37
   143  000E02  30                 	db	48	;'0'
   144  000E03  32                 	db	50	;'2'
   145  000E04  64                 	db	100	;'d'
   146  000E05  3A                 	db	58	;':'
   147  000E06  25                 	db	37
   148  000E07  30                 	db	48	;'0'
   149  000E08  32                 	db	50	;'2'
   150  000E09  64                 	db	100	;'d'
   151  000E0A  3A                 	db	58	;':'
   152  000E0B  25                 	db	37
   153  000E0C  30                 	db	48	;'0'
   154  000E0D  32                 	db	50	;'2'
   155  000E0E  64                 	db	100	;'d'
   156  000E0F  00                 	db	0
   157  000E10                     STR_1:
   158                           
   159                           ; BSR set to: 14
   160  000E10  25                 	db	37
   161  000E11  30                 	db	48	;'0'
   162  000E12  34                 	db	52	;'4'
   163  000E13  64                 	db	100	;'d'
   164  000E14  2D                 	db	45
   165  000E15  25                 	db	37
   166  000E16  30                 	db	48	;'0'
   167  000E17  32                 	db	50	;'2'
   168  000E18  64                 	db	100	;'d'
   169  000E19  2D                 	db	45
   170  000E1A  25                 	db	37
   171  000E1B  30                 	db	48	;'0'
   172  000E1C  32                 	db	50	;'2'
   173  000E1D  64                 	db	100	;'d'
   174  000E1E  00                 	db	0
   175  000E1F  00                 	db	0	; dummy byte at the end
   176  0000                     
   177                           ; #config settings
   178                           
   179                           	psect	cinit
   180  0028EE                     __pcinit:
   181                           	callstack 0
   182  0028EE                     start_initialization:
   183                           	callstack 0
   184  0028EE                     __initialization:
   185                           	callstack 0
   186                           
   187                           ; Clear objects allocated to BANK1 (32 bytes)
   188  0028EE  EE01  F000         	lfsr	0,__pbssBANK1
   189  0028F2  0E20               	movlw	32
   190  0028F4                     clear_0:
   191  0028F4  6AEE               	clrf	postinc0,c
   192  0028F6  06E8               	decf	wreg,f,c
   193  0028F8  E1FD               	bnz	clear_0
   194                           
   195                           ; Clear objects allocated to BANK0 (7 bytes)
   196  0028FA  EE00  F0EC         	lfsr	0,__pbssBANK0
   197  0028FE  0E07               	movlw	7
   198  002900                     clear_1:
   199  002900  6AEE               	clrf	postinc0,c
   200  002902  06E8               	decf	wreg,f,c
   201  002904  E1FD               	bnz	clear_1
   202                           
   203                           ; Clear objects allocated to COMRAM (4 bytes)
   204  002906  6A55               	clrf	(__pbssCOMRAM+3)& (0+255),c
   205  002908  6A54               	clrf	(__pbssCOMRAM+2)& (0+255),c
   206  00290A  6A53               	clrf	(__pbssCOMRAM+1)& (0+255),c
   207  00290C  6A52               	clrf	__pbssCOMRAM& (0+255),c
   208  00290E                     end_of_initialization:
   209                           	callstack 0
   210  00290E                     __end_of__initialization:
   211                           	callstack 0
   212  00290E  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   213  002910  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   214  002912  0100               	movlb	0
   215  002914  EF51  F00F         	goto	_main	;jump to C main() function
   216                           
   217                           	psect	bssCOMRAM
   218  000052                     __pbssCOMRAM:
   219                           	callstack 0
   220  000052                     _flags:
   221                           	callstack 0
   222  000052                     	ds	2
   223  000054                     _sunset_flag:
   224                           	callstack 0
   225  000054                     	ds	1
   226  000055                     _sunrise_flag:
   227                           	callstack 0
   228  000055                     	ds	1
   229                           
   230                           	psect	bssBANK0
   231  0000EC                     __pbssBANK0:
   232                           	callstack 0
   233  0000EC                     _nout:
   234                           	callstack 0
   235  0000EC                     	ds	2
   236  0000EE                     _width:
   237                           	callstack 0
   238  0000EE                     	ds	2
   239  0000F0                     _prec:
   240                           	callstack 0
   241  0000F0                     	ds	2
   242  0000F2                     _time_flag:
   243                           	callstack 0
   244  0000F2                     	ds	1
   245                           
   246                           	psect	bssBANK1
   247  000100                     __pbssBANK1:
   248                           	callstack 0
   249  000100                     _dbuf:
   250                           	callstack 0
   251  000100                     	ds	32
   252                           
   253                           	psect	cstackBANK0
   254  000060                     __pcstackBANK0:
   255                           	callstack 0
   256  000060                     vfpfcnvrt@ll:
   257                           	callstack 0
   258                           
   259                           ; 8 bytes @ 0x0
   260  000060                     	ds	8
   261  000068                     vfpfcnvrt@done:
   262                           	callstack 0
   263                           
   264                           ; 2 bytes @ 0x8
   265  000068                     	ds	2
   266  00006A                     _vfpfcnvrt$2239:
   267                           	callstack 0
   268                           
   269                           ; 2 bytes @ 0xA
   270  00006A                     	ds	2
   271  00006C                     ?_vfprintf:
   272                           	callstack 0
   273  00006C                     vfprintf@fp:
   274                           	callstack 0
   275                           
   276                           ; 2 bytes @ 0xC
   277  00006C                     	ds	2
   278  00006E                     vfprintf@fmt:
   279                           	callstack 0
   280                           
   281                           ; 2 bytes @ 0xE
   282  00006E                     	ds	2
   283  000070                     vfprintf@ap:
   284                           	callstack 0
   285                           
   286                           ; 2 bytes @ 0x10
   287  000070                     	ds	2
   288  000072                     ?_sprintf:
   289                           	callstack 0
   290  000072                     sprintf@s:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0x12
   294  000072                     	ds	2
   295  000074                     sprintf@fmt:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0x14
   299  000074                     	ds	8
   300  00007C                     sprintf@ap:
   301                           	callstack 0
   302                           
   303                           ; 2 bytes @ 0x1C
   304  00007C                     	ds	2
   305  00007E                     sprintf@f:
   306                           	callstack 0
   307                           
   308                           ; 6 bytes @ 0x1E
   309  00007E                     	ds	6
   310  000084                     ?_time_incre:
   311                           	callstack 0
   312  000084                     LCD_init@current:
   313                           	callstack 0
   314  000084                     time_incre@current:
   315                           	callstack 0
   316                           
   317                           ; 12 bytes @ 0x24
   318  000084                     	ds	12
   319  000090                     LCD_init@buf:
   320                           	callstack 0
   321  000090                     time_incre@buf1:
   322                           	callstack 0
   323                           
   324                           ; 40 bytes @ 0x30
   325  000090                     	ds	40
   326  0000B8                     time_incre@buf2:
   327                           	callstack 0
   328                           
   329                           ; 40 bytes @ 0x58
   330  0000B8                     	ds	40
   331  0000E0                     main@current:
   332                           	callstack 0
   333                           
   334                           ; 12 bytes @ 0x80
   335  0000E0                     	ds	12
   336                           
   337                           	psect	cstackCOMRAM
   338  000001                     __pcstackCOMRAM:
   339                           	callstack 0
   340  000001                     ??_HighISR:
   341  000001                     
   342                           ; 1 bytes @ 0x0
   343  000001                     	ds	1
   344  000002                     ??_LowISR:
   345                           
   346                           ; 1 bytes @ 0x1
   347  000002                     	ds	3
   348  000005                     ??_LEDarray_disp_bin:
   349  000005                     ?_strlen:
   350                           	callstack 0
   351  000005                     ?_isdigit:
   352                           	callstack 0
   353  000005                     ?_isspace:
   354                           	callstack 0
   355  000005                     ?___wmul:
   356                           	callstack 0
   357  000005                     ?___awdiv:
   358                           	callstack 0
   359  000005                     ?___aodiv:
   360                           	callstack 0
   361  000005                     ?___aomod:
   362                           	callstack 0
   363  000005                     ?_sunrise:
   364                           	callstack 0
   365  000005                     ?_daylightsavingstime_toggle:
   366                           	callstack 0
   367  000005                     ?_date_check:
   368                           	callstack 0
   369  000005                     ADC_getval@tmpval:
   370                           	callstack 0
   371  000005                     LCD_sendnibble@number:
   372                           	callstack 0
   373  000005                     ___wmul@multiplier:
   374                           	callstack 0
   375  000005                     ___awdiv@dividend:
   376                           	callstack 0
   377  000005                     isdigit@c:
   378                           	callstack 0
   379  000005                     isspace@c:
   380                           	callstack 0
   381  000005                     fputc@c:
   382                           	callstack 0
   383  000005                     strlen@s:
   384                           	callstack 0
   385  000005                     ___aodiv@dividend:
   386                           	callstack 0
   387  000005                     ___aomod@dividend:
   388                           	callstack 0
   389  000005                     Interrupts_init@current:
   390                           	callstack 0
   391  000005                     daylightsavingstime_toggle@current:
   392                           	callstack 0
   393  000005                     date_check@current:
   394                           	callstack 0
   395  000005                     sunrise@current:
   396                           	callstack 0
   397                           
   398                           ; 12 bytes @ 0x4
   399  000005                     	ds	1
   400  000006                     LCD_sendbyte@type:
   401                           	callstack 0
   402  000006                     LED1_init@current:
   403                           	callstack 0
   404                           
   405                           ; 12 bytes @ 0x5
   406  000006                     	ds	1
   407  000007                     ??_isdigit:
   408  000007                     ??_isspace:
   409  000007                     LEDarray_disp_bin@number:
   410                           	callstack 0
   411  000007                     LCD_sendbyte@Byte:
   412                           	callstack 0
   413  000007                     ___wmul@multiplicand:
   414                           	callstack 0
   415  000007                     ___awdiv@divisor:
   416                           	callstack 0
   417  000007                     fputc@fp:
   418                           	callstack 0
   419  000007                     strlen@a:
   420                           	callstack 0
   421                           
   422                           ; 2 bytes @ 0x6
   423  000007                     	ds	1
   424  000008                     LCD_setline@line:
   425                           	callstack 0
   426  000008                     LCD_sendstring@string:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x7
   430  000008                     	ds	1
   431  000009                     ??_fputc:
   432  000009                     ___awdiv@counter:
   433                           	callstack 0
   434  000009                     ___wmul@product:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x8
   438  000009                     	ds	1
   439  00000A                     ___awdiv@sign:
   440                           	callstack 0
   441                           
   442                           ; 1 bytes @ 0x9
   443  00000A                     	ds	1
   444  00000B                     _isspace$2277:
   445                           	callstack 0
   446  00000B                     ___awdiv@quotient:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0xA
   450  00000B                     	ds	1
   451  00000C                     ?_atoi:
   452                           	callstack 0
   453  00000C                     atoi@s:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0xB
   457  00000C                     	ds	1
   458  00000D                     ?_sun_sync:
   459                           	callstack 0
   460  00000D                     ___aodiv@divisor:
   461                           	callstack 0
   462  00000D                     ___aomod@divisor:
   463                           	callstack 0
   464  00000D                     sun_sync@current:
   465                           	callstack 0
   466                           
   467                           ; 12 bytes @ 0xC
   468  00000D                     	ds	1
   469  00000E                     ??_atoi:
   470  00000E                     fputs@s:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0xD
   474  00000E                     	ds	2
   475  000010                     fputs@fp:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0xF
   479  000010                     	ds	1
   480  000011                     ??_daylightsavingstime_toggle:
   481  000011                     ??_date_check:
   482  000011                     ?_LED_toggle:
   483                           	callstack 0
   484  000011                     LED_toggle@current:
   485                           	callstack 0
   486                           
   487                           ; 12 bytes @ 0x10
   488  000011                     	ds	1
   489  000012                     ??_LED1_init:
   490  000012                     fputs@c:
   491                           	callstack 0
   492  000012                     atoi@neg:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x11
   496  000012                     	ds	1
   497  000013                     fputs@i:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x12
   501  000013                     	ds	1
   502  000014                     _atoi$2259:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x13
   506  000014                     	ds	1
   507  000015                     ?_pad:
   508                           	callstack 0
   509  000015                     ___aodiv@counter:
   510                           	callstack 0
   511  000015                     ___aomod@counter:
   512                           	callstack 0
   513  000015                     pad@fp:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x14
   517  000015                     	ds	1
   518  000016                     ___aodiv@sign:
   519                           	callstack 0
   520  000016                     ___aomod@sign:
   521                           	callstack 0
   522  000016                     _atoi$2261:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x15
   526  000016                     	ds	1
   527  000017                     ?_abs:
   528                           	callstack 0
   529  000017                     pad@buf:
   530                           	callstack 0
   531  000017                     abs@a:
   532                           	callstack 0
   533  000017                     ___aodiv@quotient:
   534                           	callstack 0
   535                           
   536                           ; 8 bytes @ 0x16
   537  000017                     	ds	1
   538  000018                     _atoi$2260:
   539                           	callstack 0
   540                           
   541                           ; 1 bytes @ 0x17
   542  000018                     	ds	1
   543  000019                     ??_abs:
   544  000019                     sun_sync@solarnoon_hour:
   545                           	callstack 0
   546  000019                     pad@p:
   547                           	callstack 0
   548  000019                     atoi@n:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x18
   552  000019                     	ds	1
   553  00001A                     sun_sync@solarnoon_minute:
   554                           	callstack 0
   555                           
   556                           ; 1 bytes @ 0x19
   557  00001A                     	ds	1
   558  00001B                     ??_pad:
   559  00001B                     sun_sync@solarnoon_second:
   560                           	callstack 0
   561                           
   562                           ; 1 bytes @ 0x1A
   563  00001B                     	ds	1
   564  00001C                     ?_sunrise_sunset:
   565                           	callstack 0
   566  00001C                     pad@i:
   567                           	callstack 0
   568  00001C                     sunrise_sunset@current:
   569                           	callstack 0
   570                           
   571                           ; 12 bytes @ 0x1B
   572  00001C                     	ds	1
   573  00001D                     ??_LED_toggle:
   574                           
   575                           ; 1 bytes @ 0x1C
   576  00001D                     	ds	1
   577  00001E                     pad@w:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x1D
   581  00001E                     	ds	2
   582  000020                     ?_dtoa:
   583                           	callstack 0
   584  000020                     dtoa@fp:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x1F
   588  000020                     	ds	2
   589  000022                     dtoa@d:
   590                           	callstack 0
   591                           
   592                           ; 8 bytes @ 0x21
   593  000022                     	ds	6
   594  000028                     
   595                           ; 1 bytes @ 0x27
   596  000028                     	ds	2
   597  00002A                     ??_dtoa:
   598                           
   599                           ; 1 bytes @ 0x29
   600  00002A                     	ds	8
   601  000032                     _dtoa$2224:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0x31
   605  000032                     	ds	2
   606  000034                     dtoa@p:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x33
   610  000034                     	ds	2
   611  000036                     dtoa@w:
   612                           	callstack 0
   613                           
   614                           ; 2 bytes @ 0x35
   615  000036                     	ds	2
   616  000038                     dtoa@s:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x37
   620  000038                     	ds	2
   621  00003A                     dtoa@n:
   622                           	callstack 0
   623                           
   624                           ; 8 bytes @ 0x39
   625  00003A                     	ds	8
   626  000042                     dtoa@i:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x41
   630  000042                     	ds	2
   631  000044                     ?_vfpfcnvrt:
   632                           	callstack 0
   633  000044                     vfpfcnvrt@fp:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0x43
   637  000044                     	ds	2
   638  000046                     vfpfcnvrt@fmt:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0x45
   642  000046                     	ds	2
   643  000048                     vfpfcnvrt@ap:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x47
   647  000048                     	ds	2
   648  00004A                     ??_vfpfcnvrt:
   649                           
   650                           ; 1 bytes @ 0x49
   651  00004A                     	ds	4
   652  00004E                     vfprintf@cfmt:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x4D
   656  00004E                     	ds	2
   657  000050                     ??_LCD_init:
   658  000050                     ??_time_incre:
   659  000050                     
   660                           ; 1 bytes @ 0x4F
   661  000050                     	ds	2
   662  000052                     
   663                           ; 1 bytes @ 0x51
   664 ;;
   665 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   666 ;;
   667 ;; *************** function _main *****************
   668 ;; Defined at:
   669 ;;		line 7 in file "main.c"
   670 ;; Parameters:    Size  Location     Type
   671 ;;		None
   672 ;; Auto vars:     Size  Location     Type
   673 ;;  current        12  128[BANK0 ] struct .
   674 ;; Return value:  Size  Location     Type
   675 ;;                  1    wreg      void 
   676 ;; Registers used:
   677 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   678 ;; Tracked objects:
   679 ;;		On entry : 0/0
   680 ;;		On exit  : 0/0
   681 ;;		Unchanged: 0/0
   682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   684 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   686 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   687 ;;Total ram usage:       12 bytes
   688 ;; Hardware stack levels required when called: 11
   689 ;; This function calls:
   690 ;;		_ADC_init
   691 ;;		_Comp1_init
   692 ;;		_Interrupts_init
   693 ;;		_LCD_init
   694 ;;		_LED1_init
   695 ;;		_LED2_init
   696 ;;		_LED_toggle
   697 ;;		_LEDarray_disp_bin
   698 ;;		_LEDarray_init
   699 ;;		_Timer0_init
   700 ;;		_sunrise_sunset
   701 ;;		_time_incre
   702 ;; This function is called by:
   703 ;;		Startup code after reset
   704 ;; This function uses a non-reentrant model
   705 ;;
   706                           
   707                           	psect	text0
   708  001EA2                     __ptext0:
   709                           	callstack 0
   710  001EA2                     _main:
   711                           	callstack 20
   712  001EA2                     
   713                           ;main.c: 12:     dateandtime current;;main.c: 13:     current.year = 2021;
   714  001EA2  0E07               	movlw	7
   715  001EA4  0100               	movlb	0	; () banked
   716  001EA6  6FE1               	movwf	(main@current+1)& (0+255),b
   717  001EA8  0EE5               	movlw	229
   718  001EAA  6FE0               	movwf	main@current& (0+255),b
   719                           
   720                           ;main.c: 14:     current.month = 10;
   721  001EAC  0E0A               	movlw	10
   722  001EAE  6FE2               	movwf	(main@current+2)& (0+255),b
   723                           
   724                           ;main.c: 15:     current.date = 30;
   725  001EB0  0E1E               	movlw	30
   726  001EB2  6FE3               	movwf	(main@current+3)& (0+255),b
   727                           
   728                           ;main.c: 16:     current.day = 6;
   729  001EB4  0E06               	movlw	6
   730  001EB6  6FE4               	movwf	(main@current+4)& (0+255),b
   731                           
   732                           ;main.c: 17:     current.dst = 1;
   733  001EB8  0E01               	movlw	1
   734  001EBA  6FE5               	movwf	(main@current+5)& (0+255),b
   735                           
   736                           ;main.c: 18:     current.hour = 18;
   737  001EBC  0E12               	movlw	18
   738  001EBE  6FE6               	movwf	(main@current+6)& (0+255),b
   739                           
   740                           ;main.c: 19:     current.minute = 0;
   741  001EC0  0E00               	movlw	0
   742  001EC2  6FE7               	movwf	(main@current+7)& (0+255),b
   743                           
   744                           ;main.c: 20:     current.second = 0;
   745  001EC4  0E00               	movlw	0
   746  001EC6  6FE8               	movwf	(main@current+8)& (0+255),b
   747                           
   748                           ;main.c: 21:     current.sunrise_hour = 7;
   749  001EC8  0E07               	movlw	7
   750  001ECA  6FE9               	movwf	(main@current+9)& (0+255),b
   751                           
   752                           ;main.c: 22:     current.sunrise_minute = 0;
   753  001ECC  0E00               	movlw	0
   754  001ECE  6FEA               	movwf	(main@current+10)& (0+255),b
   755                           
   756                           ;main.c: 23:     current.sunrise_second = 0;
   757  001ED0  0E00               	movlw	0
   758  001ED2  6FEB               	movwf	(main@current+11)& (0+255),b
   759  001ED4                     
   760                           ; BSR set to: 0
   761                           ;main.c: 26:     ADC_init();
   762  001ED4  ECE3  F014         	call	_ADC_init	;wreg free
   763  001ED8                     
   764                           ;main.c: 27:     Comp1_init();
   765  001ED8  ECB2  F014         	call	_Comp1_init	;wreg free
   766  001EDC                     
   767                           ;main.c: 28:     Timer0_init();
   768  001EDC  ECD5  F014         	call	_Timer0_init	;wreg free
   769  001EE0                     
   770                           ;main.c: 29:     Interrupts_init(current);
   771  001EE0  EE20  F0E0         	lfsr	2,main@current
   772  001EE4  EE00  F005         	lfsr	0,Interrupts_init@current
   773  001EE8  0E0B               	movlw	11
   774  001EEA                     u4111:
   775  001EEA  CFDB FFEB          	movff	plusw2,plusw0
   776  001EEE  06E8               	decf	wreg,f,c
   777  001EF0  E2FC               	bc	u4111
   778  001EF2  ECCB  F013         	call	_Interrupts_init	;wreg free
   779  001EF6                     
   780                           ;main.c: 30:     LED1_init(current);
   781  001EF6  EE20  F0E0         	lfsr	2,main@current
   782  001EFA  EE00  F006         	lfsr	0,LED1_init@current
   783  001EFE  0E0B               	movlw	11
   784  001F00                     u4121:
   785  001F00  CFDB FFEB          	movff	plusw2,plusw0
   786  001F04  06E8               	decf	wreg,f,c
   787  001F06  E2FC               	bc	u4121
   788  001F08  EC5F  F013         	call	_LED1_init	;wreg free
   789                           
   790                           ;main.c: 31:     LED2_init();
   791  001F0C  EC0D  F015         	call	_LED2_init	;wreg free
   792                           
   793                           ;main.c: 32:     LEDarray_init();
   794  001F10  EC8C  F014         	call	_LEDarray_init	;wreg free
   795  001F14                     
   796                           ;main.c: 33:     LCD_init(current);
   797  001F14  EE20  F0E0         	lfsr	2,main@current
   798  001F18  EE00  F084         	lfsr	0,LCD_init@current
   799  001F1C  0E0B               	movlw	11
   800  001F1E                     u4131:
   801  001F1E  CFDB FFEB          	movff	plusw2,plusw0
   802  001F22  06E8               	decf	wreg,f,c
   803  001F24  E2FC               	bc	u4131
   804  001F26  ECD3  F00F         	call	_LCD_init	;wreg free
   805  001F2A                     l3433:
   806                           
   807                           ;main.c: 37:         current = sunrise_sunset(current);
   808  001F2A  EE20  F0E0         	lfsr	2,main@current
   809  001F2E  EE00  F01C         	lfsr	0,sunrise_sunset@current
   810  001F32  0E0B               	movlw	11
   811  001F34                     u4141:
   812  001F34  CFDB FFEB          	movff	plusw2,plusw0
   813  001F38  06E8               	decf	wreg,f,c
   814  001F3A  E2FC               	bc	u4141
   815  001F3C  EC38  F012         	call	_sunrise_sunset	;wreg free
   816  001F40  EE20  F0E0         	lfsr	2,main@current
   817  001F44  0E0B               	movlw	11
   818  001F46                     u4151:
   819  001F46  CFEB FFDB          	movff	plusw0,plusw2
   820  001F4A  06E8               	decf	wreg,f,c
   821  001F4C  E2FC               	bc	u4151
   822  001F4E                     
   823                           ;main.c: 41:         current = time_incre(current);
   824  001F4E  EE20  F0E0         	lfsr	2,main@current
   825  001F52  EE00  F084         	lfsr	0,time_incre@current
   826  001F56  0E0B               	movlw	11
   827  001F58                     u4161:
   828  001F58  CFDB FFEB          	movff	plusw2,plusw0
   829  001F5C  06E8               	decf	wreg,f,c
   830  001F5E  E2FC               	bc	u4161
   831  001F60  ECF2  F00B         	call	_time_incre	;wreg free
   832  001F64  EE20  F0E0         	lfsr	2,main@current
   833  001F68  0E0B               	movlw	11
   834  001F6A                     u4171:
   835  001F6A  CFEB FFDB          	movff	plusw0,plusw2
   836  001F6E  06E8               	decf	wreg,f,c
   837  001F70  E2FC               	bc	u4171
   838  001F72                     
   839                           ;main.c: 45:         current = LED_toggle(current);
   840  001F72  EE20  F0E0         	lfsr	2,main@current
   841  001F76  EE00  F011         	lfsr	0,LED_toggle@current
   842  001F7A  0E0B               	movlw	11
   843  001F7C                     u4181:
   844  001F7C  CFDB FFEB          	movff	plusw2,plusw0
   845  001F80  06E8               	decf	wreg,f,c
   846  001F82  E2FC               	bc	u4181
   847  001F84  EC75  F011         	call	_LED_toggle	;wreg free
   848  001F88  EE20  F0E0         	lfsr	2,main@current
   849  001F8C  0E0B               	movlw	11
   850  001F8E                     u4191:
   851  001F8E  CFEB FFDB          	movff	plusw0,plusw2
   852  001F92  06E8               	decf	wreg,f,c
   853  001F94  E2FC               	bc	u4191
   854  001F96                     
   855                           ;main.c: 50:         LEDarray_disp_bin(current.hour);
   856  001F96  0100               	movlb	0	; () banked
   857  001F98  51E6               	movf	(main@current+6)& (0+255),w,b
   858  001F9A  EC38  F00E         	call	_LEDarray_disp_bin
   859  001F9E  EF95  F00F         	goto	l3433
   860  001FA2  EF2C  F000         	goto	start
   861  001FA6                     __end_of_main:
   862                           	callstack 0
   863                           
   864 ;; *************** function _time_incre *****************
   865 ;; Defined at:
   866 ;;		line 59 in file "dateandtime.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;  current        12   36[BANK0 ] struct .
   869 ;; Auto vars:     Size  Location     Type
   870 ;;  buf1           40   48[BANK0 ] unsigned char [40]
   871 ;;  buf2           40   88[BANK0 ] unsigned char [40]
   872 ;; Return value:  Size  Location     Type
   873 ;;                  12   36[BANK0 ] struct .
   874 ;; Registers used:
   875 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   881 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   882 ;;      Locals:         0      80       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   883 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   884 ;;      Totals:         1      92       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   885 ;;Total ram usage:       93 bytes
   886 ;; Hardware stack levels used: 1
   887 ;; Hardware stack levels required when called: 10
   888 ;; This function calls:
   889 ;;		_LCD_sendstring
   890 ;;		_LCD_setline
   891 ;;		_date_check
   892 ;;		_daylightsavingstime_toggle
   893 ;;		_sprintf
   894 ;; This function is called by:
   895 ;;		_main
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899                           	psect	text1
   900  0017E4                     __ptext1:
   901                           	callstack 0
   902  0017E4                     _time_incre:
   903                           	callstack 20
   904  0017E4                     
   905                           ;dateandtime.c: 61:     if (time_flag==1) {
   906  0017E4  0100               	movlb	0	; () banked
   907  0017E6  05F2               	decf	_time_flag& (0+255),w,b	;volatile
   908  0017E8  A4D8               	btfss	status,2,c
   909  0017EA  EFF9  F00B         	goto	u3991
   910  0017EE  EFFB  F00B         	goto	u3990
   911  0017F2                     u3991:
   912  0017F2  EFB8  F00C         	goto	l3415
   913  0017F6                     u3990:
   914  0017F6                     
   915                           ; BSR set to: 0
   916                           ;dateandtime.c: 62:         current.second = current.second+1;
   917  0017F6  298C               	incf	(time_incre@current+8)& (0+255),w,b
   918  0017F8  6F8C               	movwf	(time_incre@current+8)& (0+255),b
   919                           
   920                           ;dateandtime.c: 63:         if (current.second>59) {
   921  0017FA  518C               	movf	(time_incre@current+8)& (0+255),w,b
   922  0017FC  0A80               	xorlw	128
   923  0017FE  0F44               	addlw	-188
   924  001800  A0D8               	btfss	status,0,c
   925  001802  EF05  F00C         	goto	u4001
   926  001806  EF07  F00C         	goto	u4000
   927  00180A                     u4001:
   928  00180A  EF92  F00C         	goto	l3407
   929  00180E                     u4000:
   930  00180E                     
   931                           ; BSR set to: 0
   932                           ;dateandtime.c: 64:             LATHbits.LATH3 = !LATHbits.LATH3;
   933  00180E  A680               	btfss	128,3,c	;volatile
   934  001810  EF0C  F00C         	goto	u4011
   935  001814  EF10  F00C         	goto	u4010
   936  001818                     u4011:
   937  001818  6A50               	clrf	??_time_incre^0,c
   938  00181A  2A50               	incf	??_time_incre^0,f,c
   939  00181C  EF11  F00C         	goto	u4028
   940  001820                     u4010:
   941  001820  6A50               	clrf	??_time_incre^0,c
   942  001822                     u4028:
   943  001822  4650               	rlncf	??_time_incre^0,f,c
   944  001824  4650               	rlncf	??_time_incre^0,f,c
   945  001826  4650               	rlncf	??_time_incre^0,f,c
   946  001828  5080               	movf	128,w,c	;volatile
   947  00182A  1850               	xorwf	??_time_incre^0,w,c
   948  00182C  0BF7               	andlw	-9
   949  00182E  1850               	xorwf	??_time_incre^0,w,c
   950  001830  6E80               	movwf	128,c	;volatile
   951  001832                     
   952                           ;dateandtime.c: 65:             current.second = 0;
   953  001832  0E00               	movlw	0
   954  001834  0100               	movlb	0	; () banked
   955  001836  6F8C               	movwf	(time_incre@current+8)& (0+255),b
   956  001838                     
   957                           ; BSR set to: 0
   958                           ;dateandtime.c: 66:             current.minute = current.minute+1;
   959  001838  298B               	incf	(time_incre@current+7)& (0+255),w,b
   960  00183A  6F8B               	movwf	(time_incre@current+7)& (0+255),b
   961  00183C                     
   962                           ; BSR set to: 0
   963                           ;dateandtime.c: 67:             if (current.minute>59) {
   964  00183C  518B               	movf	(time_incre@current+7)& (0+255),w,b
   965  00183E  0A80               	xorlw	128
   966  001840  0F44               	addlw	-188
   967  001842  A0D8               	btfss	status,0,c
   968  001844  EF26  F00C         	goto	u4031
   969  001848  EF28  F00C         	goto	u4030
   970  00184C                     u4031:
   971  00184C  EF92  F00C         	goto	l3407
   972  001850                     u4030:
   973  001850                     
   974                           ; BSR set to: 0
   975                           ;dateandtime.c: 68:                 current.minute = 0;
   976  001850  0E00               	movlw	0
   977  001852  6F8B               	movwf	(time_incre@current+7)& (0+255),b
   978  001854                     
   979                           ; BSR set to: 0
   980                           ;dateandtime.c: 69:                 current.hour = current.hour+1;
   981  001854  298A               	incf	(time_incre@current+6)& (0+255),w,b
   982  001856  6F8A               	movwf	(time_incre@current+6)& (0+255),b
   983  001858                     
   984                           ; BSR set to: 0
   985                           ;dateandtime.c: 70:                 current = daylightsavingstime_toggle(current);
   986  001858  EE20  F084         	lfsr	2,time_incre@current
   987  00185C  EE00  F005         	lfsr	0,daylightsavingstime_toggle@current
   988  001860  0E0B               	movlw	11
   989  001862                     u4041:
   990  001862  CFDB FFEB          	movff	plusw2,plusw0
   991  001866  06E8               	decf	wreg,f,c
   992  001868  E2FC               	bc	u4041
   993  00186A  ECCA  F00E         	call	_daylightsavingstime_toggle	;wreg free
   994  00186E  EE20  F084         	lfsr	2,time_incre@current
   995  001872  0E0B               	movlw	11
   996  001874                     u4051:
   997  001874  CFEB FFDB          	movff	plusw0,plusw2
   998  001878  06E8               	decf	wreg,f,c
   999  00187A  E2FC               	bc	u4051
  1000  00187C                     
  1001                           ;dateandtime.c: 71:                 if (current.hour>23) {
  1002  00187C  0100               	movlb	0	; () banked
  1003  00187E  518A               	movf	(time_incre@current+6)& (0+255),w,b
  1004  001880  0A80               	xorlw	128
  1005  001882  0F68               	addlw	-152
  1006  001884  A0D8               	btfss	status,0,c
  1007  001886  EF47  F00C         	goto	u4061
  1008  00188A  EF49  F00C         	goto	u4060
  1009  00188E                     u4061:
  1010  00188E  EF92  F00C         	goto	l3407
  1011  001892                     u4060:
  1012  001892                     
  1013                           ; BSR set to: 0
  1014                           ;dateandtime.c: 72:                     current.hour = 0;
  1015  001892  0E00               	movlw	0
  1016  001894  6F8A               	movwf	(time_incre@current+6)& (0+255),b
  1017  001896                     
  1018                           ; BSR set to: 0
  1019                           ;dateandtime.c: 73:                     current.date = current.date+1;
  1020  001896  2987               	incf	(time_incre@current+3)& (0+255),w,b
  1021  001898  6F87               	movwf	(time_incre@current+3)& (0+255),b
  1022  00189A                     
  1023                           ; BSR set to: 0
  1024                           ;dateandtime.c: 74:                     current = date_check(current);
  1025  00189A  EE20  F084         	lfsr	2,time_incre@current
  1026  00189E  EE00  F005         	lfsr	0,date_check@current
  1027  0018A2  0E0B               	movlw	11
  1028  0018A4                     u4071:
  1029  0018A4  CFDB FFEB          	movff	plusw2,plusw0
  1030  0018A8  06E8               	decf	wreg,f,c
  1031  0018AA  E2FC               	bc	u4071
  1032  0018AC  EC46  F00A         	call	_date_check	;wreg free
  1033  0018B0  EE20  F084         	lfsr	2,time_incre@current
  1034  0018B4  0E0B               	movlw	11
  1035  0018B6                     u4081:
  1036  0018B6  CFEB FFDB          	movff	plusw0,plusw2
  1037  0018BA  06E8               	decf	wreg,f,c
  1038  0018BC  E2FC               	bc	u4081
  1039  0018BE                     
  1040                           ;dateandtime.c: 76:                     char buf1[40];;dateandtime.c: 77:               
      +                                LCD_setline(1);
  1041  0018BE  0E01               	movlw	1
  1042  0018C0  EC84  F013         	call	_LCD_setline
  1043  0018C4                     
  1044                           ;dateandtime.c: 78:                     sprintf(buf1,"%04d-%02d-%02d",current.year,curre
      +                          nt.month,current.date);
  1045  0018C4  0E90               	movlw	low time_incre@buf1
  1046  0018C6  0100               	movlb	0	; () banked
  1047  0018C8  6F72               	movwf	sprintf@s& (0+255),b
  1048  0018CA  0E00               	movlw	high time_incre@buf1
  1049  0018CC  6F73               	movwf	(sprintf@s+1)& (0+255),b
  1050  0018CE  0E10               	movlw	low STR_1
  1051  0018D0  6F74               	movwf	sprintf@fmt& (0+255),b
  1052  0018D2  0E0E               	movlw	high STR_1
  1053  0018D4  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  1054  0018D6  C084  F076         	movff	time_incre@current,?_sprintf+4
  1055  0018DA  C085  F077         	movff	time_incre@current+1,?_sprintf+5
  1056  0018DE  5186               	movf	(time_incre@current+2)& (0+255),w,b
  1057  0018E0  6F78               	movwf	(?_sprintf+6)& (0+255),b
  1058  0018E2  6B79               	clrf	(?_sprintf+7)& (0+255),b
  1059  0018E4  BF78               	btfsc	(?_sprintf+6)& (0+255),7,b
  1060  0018E6  0779               	decf	(?_sprintf+7)& (0+255),f,b
  1061  0018E8  5187               	movf	(time_incre@current+3)& (0+255),w,b
  1062  0018EA  6F7A               	movwf	(?_sprintf+8)& (0+255),b
  1063  0018EC  6B7B               	clrf	(?_sprintf+9)& (0+255),b
  1064  0018EE  BF7A               	btfsc	(?_sprintf+8)& (0+255),7,b
  1065  0018F0  077B               	decf	(?_sprintf+9)& (0+255),f,b
  1066  0018F2  EC0D  F013         	call	_sprintf	;wreg free
  1067  0018F6                     
  1068                           ;dateandtime.c: 79:                     LCD_sendstring(buf1);
  1069  0018F6  0E90               	movlw	low time_incre@buf1
  1070  0018F8  6E08               	movwf	LCD_sendstring@string^0,c
  1071  0018FA  0E00               	movlw	high time_incre@buf1
  1072  0018FC  6E09               	movwf	(LCD_sendstring@string+1)^0,c
  1073  0018FE  EC43  F014         	call	_LCD_sendstring	;wreg free
  1074  001902                     
  1075                           ;dateandtime.c: 81:                     current.day = current.day+1;
  1076  001902  0100               	movlb	0	; () banked
  1077  001904  2988               	incf	(time_incre@current+4)& (0+255),w,b
  1078  001906  6F88               	movwf	(time_incre@current+4)& (0+255),b
  1079  001908                     
  1080                           ; BSR set to: 0
  1081                           ;dateandtime.c: 82:                     if (current.day>7) {
  1082  001908  5188               	movf	(time_incre@current+4)& (0+255),w,b
  1083  00190A  0A80               	xorlw	128
  1084  00190C  0F78               	addlw	-136
  1085  00190E  A0D8               	btfss	status,0,c
  1086  001910  EF8C  F00C         	goto	u4091
  1087  001914  EF8E  F00C         	goto	u4090
  1088  001918                     u4091:
  1089  001918  EF92  F00C         	goto	l298
  1090  00191C                     u4090:
  1091  00191C                     
  1092                           ; BSR set to: 0
  1093                           ;dateandtime.c: 83:                         current.day = 1;
  1094  00191C  0E01               	movlw	1
  1095  00191E  6F88               	movwf	(time_incre@current+4)& (0+255),b
  1096  001920  EF92  F00C         	goto	l3407
  1097  001924                     l298:
  1098  001924                     l3407:
  1099                           
  1100                           ; BSR set to: 0
  1101                           ;dateandtime.c: 88:         char buf2[40];;dateandtime.c: 89:         LCD_setline(2);
  1102  001924  0E02               	movlw	2
  1103  001926  EC84  F013         	call	_LCD_setline
  1104  00192A                     
  1105                           ;dateandtime.c: 90:         sprintf(buf2,"%02d:%02d:%02d",current.hour,current.minute,cu
      +                          rrent.second);
  1106  00192A  0EB8               	movlw	low time_incre@buf2
  1107  00192C  0100               	movlb	0	; () banked
  1108  00192E  6F72               	movwf	sprintf@s& (0+255),b
  1109  001930  0E00               	movlw	high time_incre@buf2
  1110  001932  6F73               	movwf	(sprintf@s+1)& (0+255),b
  1111  001934  0E01               	movlw	low STR_3
  1112  001936  6F74               	movwf	sprintf@fmt& (0+255),b
  1113  001938  0E0E               	movlw	high STR_3
  1114  00193A  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  1115  00193C  518A               	movf	(time_incre@current+6)& (0+255),w,b
  1116  00193E  6F76               	movwf	(?_sprintf+4)& (0+255),b
  1117  001940  6B77               	clrf	(?_sprintf+5)& (0+255),b
  1118  001942  BF76               	btfsc	(?_sprintf+4)& (0+255),7,b
  1119  001944  0777               	decf	(?_sprintf+5)& (0+255),f,b
  1120  001946  518B               	movf	(time_incre@current+7)& (0+255),w,b
  1121  001948  6F78               	movwf	(?_sprintf+6)& (0+255),b
  1122  00194A  6B79               	clrf	(?_sprintf+7)& (0+255),b
  1123  00194C  BF78               	btfsc	(?_sprintf+6)& (0+255),7,b
  1124  00194E  0779               	decf	(?_sprintf+7)& (0+255),f,b
  1125  001950  518C               	movf	(time_incre@current+8)& (0+255),w,b
  1126  001952  6F7A               	movwf	(?_sprintf+8)& (0+255),b
  1127  001954  6B7B               	clrf	(?_sprintf+9)& (0+255),b
  1128  001956  BF7A               	btfsc	(?_sprintf+8)& (0+255),7,b
  1129  001958  077B               	decf	(?_sprintf+9)& (0+255),f,b
  1130  00195A  EC0D  F013         	call	_sprintf	;wreg free
  1131  00195E                     
  1132                           ;dateandtime.c: 91:         LCD_sendstring(buf2);
  1133  00195E  0EB8               	movlw	low time_incre@buf2
  1134  001960  6E08               	movwf	LCD_sendstring@string^0,c
  1135  001962  0E00               	movlw	high time_incre@buf2
  1136  001964  6E09               	movwf	(LCD_sendstring@string+1)^0,c
  1137  001966  EC43  F014         	call	_LCD_sendstring	;wreg free
  1138  00196A                     
  1139                           ;dateandtime.c: 93:         time_flag=0;
  1140  00196A  0E00               	movlw	0
  1141  00196C  0100               	movlb	0	; () banked
  1142  00196E  6FF2               	movwf	_time_flag& (0+255),b	;volatile
  1143  001970                     l3415:
  1144                           
  1145                           ; BSR set to: 0
  1146                           ;dateandtime.c: 96:     return current;
  1147  001970  EE20  F084         	lfsr	2,time_incre@current
  1148  001974  EE00  F084         	lfsr	0,?_time_incre
  1149  001978  0E0B               	movlw	11
  1150  00197A                     u4101:
  1151  00197A  CFDB FFEB          	movff	plusw2,plusw0
  1152  00197E  06E8               	decf	wreg,f,c
  1153  001980  E2FC               	bc	u4101
  1154  001982                     
  1155                           ; BSR set to: 0
  1156  001982  0012               	return		;funcret
  1157  001984                     __end_of_time_incre:
  1158                           	callstack 0
  1159                           
  1160 ;; *************** function _daylightsavingstime_toggle *****************
  1161 ;; Defined at:
  1162 ;;		line 13 in file "dateandtime.c"
  1163 ;; Parameters:    Size  Location     Type
  1164 ;;  current        12    4[COMRAM] struct .
  1165 ;; Auto vars:     Size  Location     Type
  1166 ;;		None
  1167 ;; Return value:  Size  Location     Type
  1168 ;;                  12    4[COMRAM] struct .
  1169 ;; Registers used:
  1170 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  1171 ;; Tracked objects:
  1172 ;;		On entry : 0/0
  1173 ;;		On exit  : 0/0
  1174 ;;		Unchanged: 0/0
  1175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1176 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1178 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1179 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1180 ;;Total ram usage:       14 bytes
  1181 ;; Hardware stack levels used: 1
  1182 ;; Hardware stack levels required when called: 2
  1183 ;; This function calls:
  1184 ;;		Nothing
  1185 ;; This function is called by:
  1186 ;;		_time_incre
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190                           	psect	text2
  1191  001D94                     __ptext2:
  1192                           	callstack 0
  1193  001D94                     _daylightsavingstime_toggle:
  1194                           	callstack 27
  1195  001D94                     
  1196                           ;dateandtime.c: 15:     if (current.month==3 && (current.date+7)>31 && current.day==7 &&
      +                           current.hour==1 && current.dst==0) {
  1197  001D94  0E03               	movlw	3
  1198  001D96  1807               	xorwf	(daylightsavingstime_toggle@current+2)^0,w,c
  1199  001D98  A4D8               	btfss	status,2,c
  1200  001D9A  EFD1  F00E         	goto	u2491
  1201  001D9E  EFD3  F00E         	goto	u2490
  1202  001DA2                     u2491:
  1203  001DA2  EF09  F00F         	goto	l2577
  1204  001DA6                     u2490:
  1205  001DA6  C008  F011         	movff	daylightsavingstime_toggle@current+3,??_daylightsavingstime_toggle
  1206  001DAA  6A12               	clrf	(??_daylightsavingstime_toggle+1)^0,c
  1207  001DAC  BE11               	btfsc	??_daylightsavingstime_toggle^0,7,c
  1208  001DAE  0612               	decf	(??_daylightsavingstime_toggle+1)^0,f,c
  1209  001DB0  0E07               	movlw	7
  1210  001DB2  2611               	addwf	??_daylightsavingstime_toggle^0,f,c
  1211  001DB4  0E00               	movlw	0
  1212  001DB6  2212               	addwfc	(??_daylightsavingstime_toggle+1)^0,f,c
  1213  001DB8  BE12               	btfsc	(??_daylightsavingstime_toggle+1)^0,7,c
  1214  001DBA  EFE8  F00E         	goto	u2501
  1215  001DBE  5012               	movf	(??_daylightsavingstime_toggle+1)^0,w,c
  1216  001DC0  E109               	bnz	u2500
  1217  001DC2  0E20               	movlw	32
  1218  001DC4  5C11               	subwf	??_daylightsavingstime_toggle^0,w,c
  1219  001DC6  A0D8               	btfss	status,0,c
  1220  001DC8  EFE8  F00E         	goto	u2501
  1221  001DCC  EFEA  F00E         	goto	u2500
  1222  001DD0                     u2501:
  1223  001DD0  EF09  F00F         	goto	l2577
  1224  001DD4                     u2500:
  1225  001DD4  0E07               	movlw	7
  1226  001DD6  1809               	xorwf	(daylightsavingstime_toggle@current+4)^0,w,c
  1227  001DD8  A4D8               	btfss	status,2,c
  1228  001DDA  EFF1  F00E         	goto	u2511
  1229  001DDE  EFF3  F00E         	goto	u2510
  1230  001DE2                     u2511:
  1231  001DE2  EF09  F00F         	goto	l2577
  1232  001DE6                     u2510:
  1233  001DE6  040B               	decf	(daylightsavingstime_toggle@current+6)^0,w,c
  1234  001DE8  A4D8               	btfss	status,2,c
  1235  001DEA  EFF9  F00E         	goto	u2521
  1236  001DEE  EFFB  F00E         	goto	u2520
  1237  001DF2                     u2521:
  1238  001DF2  EF09  F00F         	goto	l2577
  1239  001DF6                     u2520:
  1240  001DF6  500A               	movf	(daylightsavingstime_toggle@current+5)^0,w,c
  1241  001DF8  A4D8               	btfss	status,2,c
  1242  001DFA  EF01  F00F         	goto	u2531
  1243  001DFE  EF03  F00F         	goto	u2530
  1244  001E02                     u2531:
  1245  001E02  EF09  F00F         	goto	l2577
  1246  001E06                     u2530:
  1247  001E06                     
  1248                           ;dateandtime.c: 16:         current.hour = current.hour+1;
  1249  001E06  280B               	incf	(daylightsavingstime_toggle@current+6)^0,w,c
  1250  001E08  6E0B               	movwf	(daylightsavingstime_toggle@current+6)^0,c
  1251  001E0A                     
  1252                           ;dateandtime.c: 17:         current.dst = 1;
  1253  001E0A  0E01               	movlw	1
  1254  001E0C  6E0A               	movwf	(daylightsavingstime_toggle@current+5)^0,c
  1255                           
  1256                           ;dateandtime.c: 18:     } else if (current.month==10 && (current.date+7)>31 && current.d
      +                          ay==7 && current.hour==2 && current.dst==1) {
  1257  001E0E  EF47  F00F         	goto	l2591
  1258  001E12                     l2577:
  1259  001E12  0E0A               	movlw	10
  1260  001E14  1807               	xorwf	(daylightsavingstime_toggle@current+2)^0,w,c
  1261  001E16  A4D8               	btfss	status,2,c
  1262  001E18  EF10  F00F         	goto	u2541
  1263  001E1C  EF12  F00F         	goto	u2540
  1264  001E20                     u2541:
  1265  001E20  EF47  F00F         	goto	l2591
  1266  001E24                     u2540:
  1267  001E24  C008  F011         	movff	daylightsavingstime_toggle@current+3,??_daylightsavingstime_toggle
  1268  001E28  6A12               	clrf	(??_daylightsavingstime_toggle+1)^0,c
  1269  001E2A  BE11               	btfsc	??_daylightsavingstime_toggle^0,7,c
  1270  001E2C  0612               	decf	(??_daylightsavingstime_toggle+1)^0,f,c
  1271  001E2E  0E07               	movlw	7
  1272  001E30  2611               	addwf	??_daylightsavingstime_toggle^0,f,c
  1273  001E32  0E00               	movlw	0
  1274  001E34  2212               	addwfc	(??_daylightsavingstime_toggle+1)^0,f,c
  1275  001E36  BE12               	btfsc	(??_daylightsavingstime_toggle+1)^0,7,c
  1276  001E38  EF27  F00F         	goto	u2551
  1277  001E3C  5012               	movf	(??_daylightsavingstime_toggle+1)^0,w,c
  1278  001E3E  E109               	bnz	u2550
  1279  001E40  0E20               	movlw	32
  1280  001E42  5C11               	subwf	??_daylightsavingstime_toggle^0,w,c
  1281  001E44  A0D8               	btfss	status,0,c
  1282  001E46  EF27  F00F         	goto	u2551
  1283  001E4A  EF29  F00F         	goto	u2550
  1284  001E4E                     u2551:
  1285  001E4E  EF47  F00F         	goto	l2591
  1286  001E52                     u2550:
  1287  001E52  0E07               	movlw	7
  1288  001E54  1809               	xorwf	(daylightsavingstime_toggle@current+4)^0,w,c
  1289  001E56  A4D8               	btfss	status,2,c
  1290  001E58  EF30  F00F         	goto	u2561
  1291  001E5C  EF32  F00F         	goto	u2560
  1292  001E60                     u2561:
  1293  001E60  EF47  F00F         	goto	l2591
  1294  001E64                     u2560:
  1295  001E64  0E02               	movlw	2
  1296  001E66  180B               	xorwf	(daylightsavingstime_toggle@current+6)^0,w,c
  1297  001E68  A4D8               	btfss	status,2,c
  1298  001E6A  EF39  F00F         	goto	u2571
  1299  001E6E  EF3B  F00F         	goto	u2570
  1300  001E72                     u2571:
  1301  001E72  EF47  F00F         	goto	l2591
  1302  001E76                     u2570:
  1303  001E76  040A               	decf	(daylightsavingstime_toggle@current+5)^0,w,c
  1304  001E78  A4D8               	btfss	status,2,c
  1305  001E7A  EF41  F00F         	goto	u2581
  1306  001E7E  EF43  F00F         	goto	u2580
  1307  001E82                     u2581:
  1308  001E82  EF47  F00F         	goto	l2591
  1309  001E86                     u2580:
  1310  001E86                     
  1311                           ;dateandtime.c: 19:         current.hour = current.hour-1;
  1312  001E86  040B               	decf	(daylightsavingstime_toggle@current+6)^0,w,c
  1313  001E88  6E0B               	movwf	(daylightsavingstime_toggle@current+6)^0,c
  1314  001E8A                     
  1315                           ;dateandtime.c: 20:         current.dst = 0;
  1316  001E8A  0E00               	movlw	0
  1317  001E8C  6E0A               	movwf	(daylightsavingstime_toggle@current+5)^0,c
  1318  001E8E                     l2591:
  1319                           
  1320                           ;dateandtime.c: 23:     return current;
  1321  001E8E  EE20  F005         	lfsr	2,daylightsavingstime_toggle@current
  1322  001E92  EE00  F005         	lfsr	0,?_daylightsavingstime_toggle
  1323  001E96  0E0B               	movlw	11
  1324  001E98                     u2591:
  1325  001E98  CFDB FFEB          	movff	plusw2,plusw0
  1326  001E9C  06E8               	decf	wreg,f,c
  1327  001E9E  E2FC               	bc	u2591
  1328  001EA0  0012               	return		;funcret
  1329  001EA2                     __end_of_daylightsavingstime_toggle:
  1330                           	callstack 0
  1331                           
  1332 ;; *************** function _date_check *****************
  1333 ;; Defined at:
  1334 ;;		line 32 in file "dateandtime.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;  current        12    4[COMRAM] struct .
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;		None
  1339 ;; Return value:  Size  Location     Type
  1340 ;;                  12    4[COMRAM] struct .
  1341 ;; Registers used:
  1342 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1348 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1350 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1351 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1352 ;;Total ram usage:       14 bytes
  1353 ;; Hardware stack levels used: 1
  1354 ;; Hardware stack levels required when called: 2
  1355 ;; This function calls:
  1356 ;;		Nothing
  1357 ;; This function is called by:
  1358 ;;		_time_incre
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           	psect	text3
  1363  00148C                     __ptext3:
  1364                           	callstack 0
  1365  00148C                     _date_check:
  1366                           	callstack 27
  1367  00148C                     
  1368                           ;dateandtime.c: 38:     if ((current.year%4==0 && current.month==2 && current.date>29) |
      +                          | (current.year%4!=0 && current.month==2 && current.date>28) || ((current.month==1 || cu
      +                          rrent.month==3 || current.month==5 || current.month==7 || current.month==8 || current.mo
      +                          nth==10 || current.month==12) && current.date>31) || ((current.month==4 || current.month
      +                          ==6 || current.month==9 || current.month==11) && current.date>30)) {
  1369  00148C  0E03               	movlw	3
  1370  00148E  1405               	andwf	date_check@current^0,w,c
  1371  001490  6E11               	movwf	??_date_check^0,c
  1372  001492  0E00               	movlw	0
  1373  001494  1406               	andwf	(date_check@current+1)^0,w,c
  1374  001496  6E12               	movwf	(??_date_check+1)^0,c
  1375  001498  5011               	movf	??_date_check^0,w,c
  1376  00149A  1012               	iorwf	(??_date_check+1)^0,w,c
  1377  00149C  A4D8               	btfss	status,2,c
  1378  00149E  EF53  F00A         	goto	u2601
  1379  0014A2  EF55  F00A         	goto	u2600
  1380  0014A6                     u2601:
  1381  0014A6  EF68  F00A         	goto	l2601
  1382  0014AA                     u2600:
  1383  0014AA  0E02               	movlw	2
  1384  0014AC  1807               	xorwf	(date_check@current+2)^0,w,c
  1385  0014AE  A4D8               	btfss	status,2,c
  1386  0014B0  EF5C  F00A         	goto	u2611
  1387  0014B4  EF5E  F00A         	goto	u2610
  1388  0014B8                     u2611:
  1389  0014B8  EF68  F00A         	goto	l2601
  1390  0014BC                     u2610:
  1391  0014BC  5008               	movf	(date_check@current+3)^0,w,c
  1392  0014BE  0A80               	xorlw	128
  1393  0014C0  0F62               	addlw	-158
  1394  0014C2  B0D8               	btfsc	status,0,c
  1395  0014C4  EF66  F00A         	goto	u2621
  1396  0014C8  EF68  F00A         	goto	u2620
  1397  0014CC                     u2621:
  1398  0014CC  EF00  F00B         	goto	l2633
  1399  0014D0                     u2620:
  1400  0014D0                     l2601:
  1401  0014D0  0E03               	movlw	3
  1402  0014D2  1405               	andwf	date_check@current^0,w,c
  1403  0014D4  6E11               	movwf	??_date_check^0,c
  1404  0014D6  0E00               	movlw	0
  1405  0014D8  1406               	andwf	(date_check@current+1)^0,w,c
  1406  0014DA  6E12               	movwf	(??_date_check+1)^0,c
  1407  0014DC  5011               	movf	??_date_check^0,w,c
  1408  0014DE  1012               	iorwf	(??_date_check+1)^0,w,c
  1409  0014E0  B4D8               	btfsc	status,2,c
  1410  0014E2  EF75  F00A         	goto	u2631
  1411  0014E6  EF77  F00A         	goto	u2630
  1412  0014EA                     u2631:
  1413  0014EA  EF8A  F00A         	goto	l2607
  1414  0014EE                     u2630:
  1415  0014EE  0E02               	movlw	2
  1416  0014F0  1807               	xorwf	(date_check@current+2)^0,w,c
  1417  0014F2  A4D8               	btfss	status,2,c
  1418  0014F4  EF7E  F00A         	goto	u2641
  1419  0014F8  EF80  F00A         	goto	u2640
  1420  0014FC                     u2641:
  1421  0014FC  EF8A  F00A         	goto	l2607
  1422  001500                     u2640:
  1423  001500  5008               	movf	(date_check@current+3)^0,w,c
  1424  001502  0A80               	xorlw	128
  1425  001504  0F63               	addlw	-157
  1426  001506  B0D8               	btfsc	status,0,c
  1427  001508  EF88  F00A         	goto	u2651
  1428  00150C  EF8A  F00A         	goto	u2650
  1429  001510                     u2651:
  1430  001510  EF00  F00B         	goto	l2633
  1431  001514                     u2650:
  1432  001514                     l2607:
  1433  001514  0407               	decf	(date_check@current+2)^0,w,c
  1434  001516  B4D8               	btfsc	status,2,c
  1435  001518  EF90  F00A         	goto	u2661
  1436  00151C  EF92  F00A         	goto	u2660
  1437  001520                     u2661:
  1438  001520  EFC8  F00A         	goto	l2621
  1439  001524                     u2660:
  1440  001524  0E03               	movlw	3
  1441  001526  1807               	xorwf	(date_check@current+2)^0,w,c
  1442  001528  B4D8               	btfsc	status,2,c
  1443  00152A  EF99  F00A         	goto	u2671
  1444  00152E  EF9B  F00A         	goto	u2670
  1445  001532                     u2671:
  1446  001532  EFC8  F00A         	goto	l2621
  1447  001536                     u2670:
  1448  001536  0E05               	movlw	5
  1449  001538  1807               	xorwf	(date_check@current+2)^0,w,c
  1450  00153A  B4D8               	btfsc	status,2,c
  1451  00153C  EFA2  F00A         	goto	u2681
  1452  001540  EFA4  F00A         	goto	u2680
  1453  001544                     u2681:
  1454  001544  EFC8  F00A         	goto	l2621
  1455  001548                     u2680:
  1456  001548  0E07               	movlw	7
  1457  00154A  1807               	xorwf	(date_check@current+2)^0,w,c
  1458  00154C  B4D8               	btfsc	status,2,c
  1459  00154E  EFAB  F00A         	goto	u2691
  1460  001552  EFAD  F00A         	goto	u2690
  1461  001556                     u2691:
  1462  001556  EFC8  F00A         	goto	l2621
  1463  00155A                     u2690:
  1464  00155A  0E08               	movlw	8
  1465  00155C  1807               	xorwf	(date_check@current+2)^0,w,c
  1466  00155E  B4D8               	btfsc	status,2,c
  1467  001560  EFB4  F00A         	goto	u2701
  1468  001564  EFB6  F00A         	goto	u2700
  1469  001568                     u2701:
  1470  001568  EFC8  F00A         	goto	l2621
  1471  00156C                     u2700:
  1472  00156C  0E0A               	movlw	10
  1473  00156E  1807               	xorwf	(date_check@current+2)^0,w,c
  1474  001570  B4D8               	btfsc	status,2,c
  1475  001572  EFBD  F00A         	goto	u2711
  1476  001576  EFBF  F00A         	goto	u2710
  1477  00157A                     u2711:
  1478  00157A  EFC8  F00A         	goto	l2621
  1479  00157E                     u2710:
  1480  00157E  0E0C               	movlw	12
  1481  001580  1807               	xorwf	(date_check@current+2)^0,w,c
  1482  001582  A4D8               	btfss	status,2,c
  1483  001584  EFC6  F00A         	goto	u2721
  1484  001588  EFC8  F00A         	goto	u2720
  1485  00158C                     u2721:
  1486  00158C  EFD2  F00A         	goto	l2623
  1487  001590                     u2720:
  1488  001590                     l2621:
  1489  001590  5008               	movf	(date_check@current+3)^0,w,c
  1490  001592  0A80               	xorlw	128
  1491  001594  0F60               	addlw	-160
  1492  001596  B0D8               	btfsc	status,0,c
  1493  001598  EFD0  F00A         	goto	u2731
  1494  00159C  EFD2  F00A         	goto	u2730
  1495  0015A0                     u2731:
  1496  0015A0  EF00  F00B         	goto	l2633
  1497  0015A4                     u2730:
  1498  0015A4                     l2623:
  1499  0015A4  0E04               	movlw	4
  1500  0015A6  1807               	xorwf	(date_check@current+2)^0,w,c
  1501  0015A8  B4D8               	btfsc	status,2,c
  1502  0015AA  EFD9  F00A         	goto	u2741
  1503  0015AE  EFDB  F00A         	goto	u2740
  1504  0015B2                     u2741:
  1505  0015B2  EFF6  F00A         	goto	l2631
  1506  0015B6                     u2740:
  1507  0015B6  0E06               	movlw	6
  1508  0015B8  1807               	xorwf	(date_check@current+2)^0,w,c
  1509  0015BA  B4D8               	btfsc	status,2,c
  1510  0015BC  EFE2  F00A         	goto	u2751
  1511  0015C0  EFE4  F00A         	goto	u2750
  1512  0015C4                     u2751:
  1513  0015C4  EFF6  F00A         	goto	l2631
  1514  0015C8                     u2750:
  1515  0015C8  0E09               	movlw	9
  1516  0015CA  1807               	xorwf	(date_check@current+2)^0,w,c
  1517  0015CC  B4D8               	btfsc	status,2,c
  1518  0015CE  EFEB  F00A         	goto	u2761
  1519  0015D2  EFED  F00A         	goto	u2760
  1520  0015D6                     u2761:
  1521  0015D6  EFF6  F00A         	goto	l2631
  1522  0015DA                     u2760:
  1523  0015DA  0E0B               	movlw	11
  1524  0015DC  1807               	xorwf	(date_check@current+2)^0,w,c
  1525  0015DE  A4D8               	btfss	status,2,c
  1526  0015E0  EFF4  F00A         	goto	u2771
  1527  0015E4  EFF6  F00A         	goto	u2770
  1528  0015E8                     u2771:
  1529  0015E8  EF16  F00B         	goto	l2643
  1530  0015EC                     u2770:
  1531  0015EC                     l2631:
  1532  0015EC  5008               	movf	(date_check@current+3)^0,w,c
  1533  0015EE  0A80               	xorlw	128
  1534  0015F0  0F61               	addlw	-159
  1535  0015F2  A0D8               	btfss	status,0,c
  1536  0015F4  EFFE  F00A         	goto	u2781
  1537  0015F8  EF00  F00B         	goto	u2780
  1538  0015FC                     u2781:
  1539  0015FC  EF16  F00B         	goto	l2643
  1540  001600                     u2780:
  1541  001600                     l2633:
  1542                           
  1543                           ;dateandtime.c: 41: ;dateandtime.c: 42:         current.month = current.month+1;
  1544  001600  2807               	incf	(date_check@current+2)^0,w,c
  1545  001602  6E07               	movwf	(date_check@current+2)^0,c
  1546  001604                     
  1547                           ;dateandtime.c: 43:         current.date = 1;
  1548  001604  0E01               	movlw	1
  1549  001606  6E08               	movwf	(date_check@current+3)^0,c
  1550  001608                     
  1551                           ;dateandtime.c: 45:         if (current.month>12) {
  1552  001608  5007               	movf	(date_check@current+2)^0,w,c
  1553  00160A  0A80               	xorlw	128
  1554  00160C  0F73               	addlw	-141
  1555  00160E  A0D8               	btfss	status,0,c
  1556  001610  EF0C  F00B         	goto	u2791
  1557  001614  EF0E  F00B         	goto	u2790
  1558  001618                     u2791:
  1559  001618  EF16  F00B         	goto	l2643
  1560  00161C                     u2790:
  1561  00161C                     
  1562                           ;dateandtime.c: 46:             current.year = current.year+1;
  1563  00161C  0E01               	movlw	1
  1564  00161E  2405               	addwf	date_check@current^0,w,c
  1565  001620  6E05               	movwf	date_check@current^0,c
  1566  001622  0E00               	movlw	0
  1567  001624  2006               	addwfc	(date_check@current+1)^0,w,c
  1568  001626  6E06               	movwf	(date_check@current+1)^0,c
  1569  001628                     
  1570                           ;dateandtime.c: 47:             current.month = 1;
  1571  001628  0E01               	movlw	1
  1572  00162A  6E07               	movwf	(date_check@current+2)^0,c
  1573  00162C                     l2643:
  1574                           
  1575                           ;dateandtime.c: 51:     return current;
  1576  00162C  EE20  F005         	lfsr	2,date_check@current
  1577  001630  EE00  F005         	lfsr	0,?_date_check
  1578  001634  0E0B               	movlw	11
  1579  001636                     u2801:
  1580  001636  CFDB FFEB          	movff	plusw2,plusw0
  1581  00163A  06E8               	decf	wreg,f,c
  1582  00163C  E2FC               	bc	u2801
  1583  00163E  0012               	return		;funcret
  1584  001640                     __end_of_date_check:
  1585                           	callstack 0
  1586                           
  1587 ;; *************** function _sunrise_sunset *****************
  1588 ;; Defined at:
  1589 ;;		line 148 in file "dateandtime.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;  current        12   27[COMRAM] struct .
  1592 ;; Auto vars:     Size  Location     Type
  1593 ;;		None
  1594 ;; Return value:  Size  Location     Type
  1595 ;;                  12   27[COMRAM] struct .
  1596 ;; Registers used:
  1597 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  1598 ;; Tracked objects:
  1599 ;;		On entry : 0/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1603 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1606 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1607 ;;Total ram usage:       12 bytes
  1608 ;; Hardware stack levels used: 1
  1609 ;; Hardware stack levels required when called: 4
  1610 ;; This function calls:
  1611 ;;		_sun_sync
  1612 ;;		_sunrise
  1613 ;; This function is called by:
  1614 ;;		_main
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617                           
  1618                           	psect	text4
  1619  002470                     __ptext4:
  1620                           	callstack 0
  1621  002470                     _sunrise_sunset:
  1622                           	callstack 26
  1623  002470                     
  1624                           ;dateandtime.c: 150:     if (sunrise_flag==1) {
  1625  002470  0455               	decf	_sunrise_flag^0,w,c	;volatile
  1626  002472  A4D8               	btfss	status,2,c
  1627  002474  EF3E  F012         	goto	u2891
  1628  002478  EF40  F012         	goto	u2890
  1629  00247C                     u2891:
  1630  00247C  EF56  F012         	goto	l2755
  1631  002480                     u2890:
  1632  002480                     
  1633                           ;dateandtime.c: 151:     current=sunrise(current);
  1634  002480  EE20  F01C         	lfsr	2,sunrise_sunset@current
  1635  002484  EE00  F005         	lfsr	0,sunrise@current
  1636  002488  0E0B               	movlw	11
  1637  00248A                     u2901:
  1638  00248A  CFDB FFEB          	movff	plusw2,plusw0
  1639  00248E  06E8               	decf	wreg,f,c
  1640  002490  E2FC               	bc	u2901
  1641  002492  ECC5  F014         	call	_sunrise	;wreg free
  1642  002496  EE20  F01C         	lfsr	2,sunrise_sunset@current
  1643  00249A  0E0B               	movlw	11
  1644  00249C                     u2911:
  1645  00249C  CFEB FFDB          	movff	plusw0,plusw2
  1646  0024A0  06E8               	decf	wreg,f,c
  1647  0024A2  E2FC               	bc	u2911
  1648  0024A4                     
  1649                           ;dateandtime.c: 152:     sunrise_flag=0;
  1650  0024A4  0E00               	movlw	0
  1651  0024A6  6E55               	movwf	_sunrise_flag^0,c	;volatile
  1652                           
  1653                           ;dateandtime.c: 153:     } else if (sunset_flag==1) {
  1654  0024A8  EF72  F012         	goto	l2761
  1655  0024AC                     l2755:
  1656  0024AC  0454               	decf	_sunset_flag^0,w,c	;volatile
  1657  0024AE  A4D8               	btfss	status,2,c
  1658  0024B0  EF5C  F012         	goto	u2921
  1659  0024B4  EF5E  F012         	goto	u2920
  1660  0024B8                     u2921:
  1661  0024B8  EF72  F012         	goto	l2761
  1662  0024BC                     u2920:
  1663  0024BC                     
  1664                           ;dateandtime.c: 154:         current=sun_sync(current);
  1665  0024BC  EE20  F01C         	lfsr	2,sunrise_sunset@current
  1666  0024C0  EE00  F00D         	lfsr	0,sun_sync@current
  1667  0024C4  0E0B               	movlw	11
  1668  0024C6                     u2931:
  1669  0024C6  CFDB FFEB          	movff	plusw2,plusw0
  1670  0024CA  06E8               	decf	wreg,f,c
  1671  0024CC  E2FC               	bc	u2931
  1672  0024CE  EC49  F010         	call	_sun_sync	;wreg free
  1673  0024D2  EE20  F01C         	lfsr	2,sunrise_sunset@current
  1674  0024D6  0E0B               	movlw	11
  1675  0024D8                     u2941:
  1676  0024D8  CFEB FFDB          	movff	plusw0,plusw2
  1677  0024DC  06E8               	decf	wreg,f,c
  1678  0024DE  E2FC               	bc	u2941
  1679  0024E0                     
  1680                           ;dateandtime.c: 155:         sunset_flag=0;
  1681  0024E0  0E00               	movlw	0
  1682  0024E2  6E54               	movwf	_sunset_flag^0,c	;volatile
  1683  0024E4                     l2761:
  1684                           
  1685                           ;dateandtime.c: 158:     return current;
  1686  0024E4  EE20  F01C         	lfsr	2,sunrise_sunset@current
  1687  0024E8  EE00  F01C         	lfsr	0,?_sunrise_sunset
  1688  0024EC  0E0B               	movlw	11
  1689  0024EE                     u2951:
  1690  0024EE  CFDB FFEB          	movff	plusw2,plusw0
  1691  0024F2  06E8               	decf	wreg,f,c
  1692  0024F4  E2FC               	bc	u2951
  1693  0024F6  0012               	return		;funcret
  1694  0024F8                     __end_of_sunrise_sunset:
  1695                           	callstack 0
  1696                           
  1697 ;; *************** function _sun_sync *****************
  1698 ;; Defined at:
  1699 ;;		line 119 in file "dateandtime.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;  current        12   12[COMRAM] struct .
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;  solarnoon_se    1   26[COMRAM] char 
  1704 ;;  solarnoon_mi    1   25[COMRAM] char 
  1705 ;;  solarnoon_ho    1   24[COMRAM] char 
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  12   12[COMRAM] struct .
  1708 ;; Registers used:
  1709 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1715 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1716 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1718 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1719 ;;Total ram usage:       15 bytes
  1720 ;; Hardware stack levels used: 1
  1721 ;; Hardware stack levels required when called: 3
  1722 ;; This function calls:
  1723 ;;		___awdiv
  1724 ;; This function is called by:
  1725 ;;		_sunrise_sunset
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729                           	psect	text5
  1730  002092                     __ptext5:
  1731                           	callstack 0
  1732  002092                     _sun_sync:
  1733                           	callstack 26
  1734  002092                     
  1735                           ;dateandtime.c: 121:     signed char solarnoon_hour = (current.sunrise_hour + current.ho
      +                          ur)/2;
  1736  002092  5016               	movf	(sun_sync@current+9)^0,w,c
  1737  002094  2413               	addwf	(sun_sync@current+6)^0,w,c
  1738  002096  6E05               	movwf	___awdiv@dividend^0,c
  1739  002098  6AE8               	clrf	wreg,c
  1740  00209A  B0D8               	btfsc	status,0,c
  1741  00209C  2AE8               	incf	wreg,f,c
  1742  00209E  BE16               	btfsc	(sun_sync@current+9)^0,7,c
  1743  0020A0  06E8               	decf	wreg,f,c
  1744  0020A2  BE13               	btfsc	(sun_sync@current+6)^0,7,c
  1745  0020A4  06E8               	decf	wreg,f,c
  1746  0020A6  6E06               	movwf	(___awdiv@dividend+1)^0,c
  1747  0020A8  0E00               	movlw	0
  1748  0020AA  6E08               	movwf	(___awdiv@divisor+1)^0,c
  1749  0020AC  0E02               	movlw	2
  1750  0020AE  6E07               	movwf	___awdiv@divisor^0,c
  1751  0020B0  EC13  F011         	call	___awdiv	;wreg free
  1752  0020B4  5005               	movf	?___awdiv^0,w,c
  1753  0020B6  6E19               	movwf	sun_sync@solarnoon_hour^0,c
  1754                           
  1755                           ;dateandtime.c: 122:     signed char solarnoon_minute = (current.sunrise_minute + curren
      +                          t.minute)/2;
  1756  0020B8  5017               	movf	(sun_sync@current+10)^0,w,c
  1757  0020BA  2414               	addwf	(sun_sync@current+7)^0,w,c
  1758  0020BC  6E05               	movwf	___awdiv@dividend^0,c
  1759  0020BE  6AE8               	clrf	wreg,c
  1760  0020C0  B0D8               	btfsc	status,0,c
  1761  0020C2  2AE8               	incf	wreg,f,c
  1762  0020C4  BE17               	btfsc	(sun_sync@current+10)^0,7,c
  1763  0020C6  06E8               	decf	wreg,f,c
  1764  0020C8  BE14               	btfsc	(sun_sync@current+7)^0,7,c
  1765  0020CA  06E8               	decf	wreg,f,c
  1766  0020CC  6E06               	movwf	(___awdiv@dividend+1)^0,c
  1767  0020CE  0E00               	movlw	0
  1768  0020D0  6E08               	movwf	(___awdiv@divisor+1)^0,c
  1769  0020D2  0E02               	movlw	2
  1770  0020D4  6E07               	movwf	___awdiv@divisor^0,c
  1771  0020D6  EC13  F011         	call	___awdiv	;wreg free
  1772  0020DA  5005               	movf	?___awdiv^0,w,c
  1773  0020DC  6E1A               	movwf	sun_sync@solarnoon_minute^0,c
  1774                           
  1775                           ;dateandtime.c: 123:     signed char solarnoon_second = (current.sunrise_second + curren
      +                          t.second)/2;
  1776  0020DE  5018               	movf	(sun_sync@current+11)^0,w,c
  1777  0020E0  2415               	addwf	(sun_sync@current+8)^0,w,c
  1778  0020E2  6E05               	movwf	___awdiv@dividend^0,c
  1779  0020E4  6AE8               	clrf	wreg,c
  1780  0020E6  B0D8               	btfsc	status,0,c
  1781  0020E8  2AE8               	incf	wreg,f,c
  1782  0020EA  BE18               	btfsc	(sun_sync@current+11)^0,7,c
  1783  0020EC  06E8               	decf	wreg,f,c
  1784  0020EE  BE15               	btfsc	(sun_sync@current+8)^0,7,c
  1785  0020F0  06E8               	decf	wreg,f,c
  1786  0020F2  6E06               	movwf	(___awdiv@dividend+1)^0,c
  1787  0020F4  0E00               	movlw	0
  1788  0020F6  6E08               	movwf	(___awdiv@divisor+1)^0,c
  1789  0020F8  0E02               	movlw	2
  1790  0020FA  6E07               	movwf	___awdiv@divisor^0,c
  1791  0020FC  EC13  F011         	call	___awdiv	;wreg free
  1792  002100  5005               	movf	?___awdiv^0,w,c
  1793  002102  6E1B               	movwf	sun_sync@solarnoon_second^0,c
  1794  002104                     
  1795                           ;dateandtime.c: 125:     current.second = current.second - (solarnoon_second-0);
  1796  002104  501B               	movf	sun_sync@solarnoon_second^0,w,c
  1797  002106  5C15               	subwf	(sun_sync@current+8)^0,w,c
  1798  002108  6E15               	movwf	(sun_sync@current+8)^0,c
  1799  00210A                     
  1800                           ;dateandtime.c: 126:     if (current.second<0) {
  1801  00210A  BE15               	btfsc	(sun_sync@current+8)^0,7,c
  1802  00210C  EF8C  F010         	goto	u2810
  1803  002110  EF8A  F010         	goto	u2811
  1804  002114                     u2811:
  1805  002114  EF91  F010         	goto	l307
  1806  002118                     u2810:
  1807  002118                     
  1808                           ;dateandtime.c: 127:         current.second = current.second+60;
  1809  002118  5015               	movf	(sun_sync@current+8)^0,w,c
  1810  00211A  0F3C               	addlw	60
  1811  00211C  6E15               	movwf	(sun_sync@current+8)^0,c
  1812                           
  1813                           ;dateandtime.c: 128:         current.minute = current.minute-1;
  1814  00211E  0414               	decf	(sun_sync@current+7)^0,w,c
  1815  002120  6E14               	movwf	(sun_sync@current+7)^0,c
  1816  002122                     l307:
  1817                           
  1818                           ;dateandtime.c: 130:     current.minute = current.minute - (solarnoon_minute-0);
  1819  002122  501A               	movf	sun_sync@solarnoon_minute^0,w,c
  1820  002124  5C14               	subwf	(sun_sync@current+7)^0,w,c
  1821  002126  6E14               	movwf	(sun_sync@current+7)^0,c
  1822                           
  1823                           ;dateandtime.c: 131:     if (current.minute<0) {
  1824  002128  BE14               	btfsc	(sun_sync@current+7)^0,7,c
  1825  00212A  EF9B  F010         	goto	u2820
  1826  00212E  EF99  F010         	goto	u2821
  1827  002132                     u2821:
  1828  002132  EFA0  F010         	goto	l308
  1829  002136                     u2820:
  1830  002136                     
  1831                           ;dateandtime.c: 132:         current.minute = current.minute+60;
  1832  002136  5014               	movf	(sun_sync@current+7)^0,w,c
  1833  002138  0F3C               	addlw	60
  1834  00213A  6E14               	movwf	(sun_sync@current+7)^0,c
  1835                           
  1836                           ;dateandtime.c: 133:         current.hour = current.hour-1;
  1837  00213C  0413               	decf	(sun_sync@current+6)^0,w,c
  1838  00213E  6E13               	movwf	(sun_sync@current+6)^0,c
  1839  002140                     l308:
  1840                           
  1841                           ;dateandtime.c: 135:     current.hour = current.hour - (solarnoon_hour-12);
  1842  002140  5019               	movf	sun_sync@solarnoon_hour^0,w,c
  1843  002142  5C13               	subwf	(sun_sync@current+6)^0,w,c
  1844  002144  0F0C               	addlw	12
  1845  002146  6E13               	movwf	(sun_sync@current+6)^0,c
  1846  002148                     
  1847                           ;dateandtime.c: 141:     return current;
  1848  002148  EE20  F00D         	lfsr	2,sun_sync@current
  1849  00214C  EE00  F00D         	lfsr	0,?_sun_sync
  1850  002150  0E0B               	movlw	11
  1851  002152                     u2831:
  1852  002152  CFDB FFEB          	movff	plusw2,plusw0
  1853  002156  06E8               	decf	wreg,f,c
  1854  002158  E2FC               	bc	u2831
  1855  00215A  0012               	return		;funcret
  1856  00215C                     __end_of_sun_sync:
  1857                           	callstack 0
  1858                           
  1859 ;; *************** function ___awdiv *****************
  1860 ;; Defined at:
  1861 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  1862 ;; Parameters:    Size  Location     Type
  1863 ;;  dividend        2    4[COMRAM] int 
  1864 ;;  divisor         2    6[COMRAM] int 
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;  quotient        2   10[COMRAM] int 
  1867 ;;  sign            1    9[COMRAM] unsigned char 
  1868 ;;  counter         1    8[COMRAM] unsigned char 
  1869 ;; Return value:  Size  Location     Type
  1870 ;;                  2    4[COMRAM] int 
  1871 ;; Registers used:
  1872 ;;		wreg, status,2, status,0
  1873 ;; Tracked objects:
  1874 ;;		On entry : 0/0
  1875 ;;		On exit  : 0/0
  1876 ;;		Unchanged: 0/0
  1877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1878 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1879 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1881 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1882 ;;Total ram usage:        8 bytes
  1883 ;; Hardware stack levels used: 1
  1884 ;; Hardware stack levels required when called: 2
  1885 ;; This function calls:
  1886 ;;		Nothing
  1887 ;; This function is called by:
  1888 ;;		_sun_sync
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892                           	psect	text6
  1893  002226                     __ptext6:
  1894                           	callstack 0
  1895  002226                     ___awdiv:
  1896                           	callstack 26
  1897  002226  0E00               	movlw	0
  1898  002228  6E0A               	movwf	___awdiv@sign^0,c
  1899  00222A  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  1900  00222C  EF1C  F011         	goto	u2370
  1901  002230  EF1A  F011         	goto	u2371
  1902  002234                     u2371:
  1903  002234  EF22  F011         	goto	l2469
  1904  002238                     u2370:
  1905  002238  6C07               	negf	___awdiv@divisor^0,c
  1906  00223A  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  1907  00223C  B0D8               	btfsc	status,0,c
  1908  00223E  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  1909  002240  0E01               	movlw	1
  1910  002242  6E0A               	movwf	___awdiv@sign^0,c
  1911  002244                     l2469:
  1912  002244  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  1913  002246  EF29  F011         	goto	u2380
  1914  00224A  EF27  F011         	goto	u2381
  1915  00224E                     u2381:
  1916  00224E  EF2F  F011         	goto	l2475
  1917  002252                     u2380:
  1918  002252  6C05               	negf	___awdiv@dividend^0,c
  1919  002254  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  1920  002256  B0D8               	btfsc	status,0,c
  1921  002258  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  1922  00225A  0E01               	movlw	1
  1923  00225C  1A0A               	xorwf	___awdiv@sign^0,f,c
  1924  00225E                     l2475:
  1925  00225E  0E00               	movlw	0
  1926  002260  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  1927  002262  0E00               	movlw	0
  1928  002264  6E0B               	movwf	___awdiv@quotient^0,c
  1929  002266  5007               	movf	___awdiv@divisor^0,w,c
  1930  002268  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  1931  00226A  B4D8               	btfsc	status,2,c
  1932  00226C  EF3A  F011         	goto	u2391
  1933  002270  EF3C  F011         	goto	u2390
  1934  002274                     u2391:
  1935  002274  EF64  F011         	goto	l2497
  1936  002278                     u2390:
  1937  002278  0E01               	movlw	1
  1938  00227A  6E09               	movwf	___awdiv@counter^0,c
  1939  00227C  EF44  F011         	goto	l2483
  1940  002280                     l2481:
  1941  002280  90D8               	bcf	status,0,c
  1942  002282  3607               	rlcf	___awdiv@divisor^0,f,c
  1943  002284  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  1944  002286  2A09               	incf	___awdiv@counter^0,f,c
  1945  002288                     l2483:
  1946  002288  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  1947  00228A  EF49  F011         	goto	u2401
  1948  00228E  EF4B  F011         	goto	u2400
  1949  002292                     u2401:
  1950  002292  EF40  F011         	goto	l2481
  1951  002296                     u2400:
  1952  002296                     l2485:
  1953  002296  90D8               	bcf	status,0,c
  1954  002298  360B               	rlcf	___awdiv@quotient^0,f,c
  1955  00229A  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  1956  00229C  5007               	movf	___awdiv@divisor^0,w,c
  1957  00229E  5C05               	subwf	___awdiv@dividend^0,w,c
  1958  0022A0  5008               	movf	(___awdiv@divisor+1)^0,w,c
  1959  0022A2  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  1960  0022A4  A0D8               	btfss	status,0,c
  1961  0022A6  EF57  F011         	goto	u2411
  1962  0022AA  EF59  F011         	goto	u2410
  1963  0022AE                     u2411:
  1964  0022AE  EF5E  F011         	goto	l2493
  1965  0022B2                     u2410:
  1966  0022B2  5007               	movf	___awdiv@divisor^0,w,c
  1967  0022B4  5E05               	subwf	___awdiv@dividend^0,f,c
  1968  0022B6  5008               	movf	(___awdiv@divisor+1)^0,w,c
  1969  0022B8  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  1970  0022BA  800B               	bsf	___awdiv@quotient^0,0,c
  1971  0022BC                     l2493:
  1972  0022BC  90D8               	bcf	status,0,c
  1973  0022BE  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  1974  0022C0  3207               	rrcf	___awdiv@divisor^0,f,c
  1975  0022C2  2E09               	decfsz	___awdiv@counter^0,f,c
  1976  0022C4  EF4B  F011         	goto	l2485
  1977  0022C8                     l2497:
  1978  0022C8  500A               	movf	___awdiv@sign^0,w,c
  1979  0022CA  B4D8               	btfsc	status,2,c
  1980  0022CC  EF6A  F011         	goto	u2421
  1981  0022D0  EF6C  F011         	goto	u2420
  1982  0022D4                     u2421:
  1983  0022D4  EF70  F011         	goto	l2501
  1984  0022D8                     u2420:
  1985  0022D8  6C0B               	negf	___awdiv@quotient^0,c
  1986  0022DA  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  1987  0022DC  B0D8               	btfsc	status,0,c
  1988  0022DE  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  1989  0022E0                     l2501:
  1990  0022E0  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  1991  0022E4  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  1992  0022E8  0012               	return		;funcret
  1993  0022EA                     __end_of___awdiv:
  1994                           	callstack 0
  1995                           
  1996 ;; *************** function _Timer0_init *****************
  1997 ;; Defined at:
  1998 ;;		line 9 in file "timers.c"
  1999 ;; Parameters:    Size  Location     Type
  2000 ;;		None
  2001 ;; Auto vars:     Size  Location     Type
  2002 ;;		None
  2003 ;; Return value:  Size  Location     Type
  2004 ;;                  1    wreg      void 
  2005 ;; Registers used:
  2006 ;;		wreg, status,2
  2007 ;; Tracked objects:
  2008 ;;		On entry : 0/0
  2009 ;;		On exit  : 0/0
  2010 ;;		Unchanged: 0/0
  2011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2016 ;;Total ram usage:        0 bytes
  2017 ;; Hardware stack levels used: 1
  2018 ;; Hardware stack levels required when called: 2
  2019 ;; This function calls:
  2020 ;;		Nothing
  2021 ;; This function is called by:
  2022 ;;		_main
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           
  2026                           	psect	text7
  2027  0029AA                     __ptext7:
  2028                           	callstack 0
  2029  0029AA                     _Timer0_init:
  2030                           	callstack 28
  2031  0029AA                     
  2032                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
  2033  0029AA  50D6               	movf	214,w,c	;volatile
  2034  0029AC  0B1F               	andlw	-225
  2035  0029AE  0940               	iorlw	64
  2036  0029B0  6ED6               	movwf	214,c	;volatile
  2037  0029B2                     
  2038                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
  2039  0029B2  88D6               	bsf	214,4,c	;volatile
  2040                           
  2041                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b0000;
  2042  0029B4  0EF0               	movlw	-16
  2043  0029B6  16D6               	andwf	214,f,c	;volatile
  2044  0029B8                     
  2045                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
  2046  0029B8  88D5               	bsf	213,4,c	;volatile
  2047                           
  2048                           ;timers.c: 15:     TMR0H=0b11101110;
  2049  0029BA  0EEE               	movlw	238
  2050  0029BC  6ED4               	movwf	212,c	;volatile
  2051                           
  2052                           ;timers.c: 16:     TMR0L=0b10100011;
  2053  0029BE  0EA3               	movlw	163
  2054  0029C0  6ED3               	movwf	211,c	;volatile
  2055  0029C2                     
  2056                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  2057  0029C2  8ED5               	bsf	213,7,c	;volatile
  2058  0029C4  0012               	return		;funcret
  2059  0029C6                     __end_of_Timer0_init:
  2060                           	callstack 0
  2061                           
  2062 ;; *************** function _LEDarray_init *****************
  2063 ;; Defined at:
  2064 ;;		line 9 in file "LEDarray.c"
  2065 ;; Parameters:    Size  Location     Type
  2066 ;;		None
  2067 ;; Auto vars:     Size  Location     Type
  2068 ;;		None
  2069 ;; Return value:  Size  Location     Type
  2070 ;;                  1    wreg      void 
  2071 ;; Registers used:
  2072 ;;		None
  2073 ;; Tracked objects:
  2074 ;;		On entry : 0/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2082 ;;Total ram usage:        0 bytes
  2083 ;; Hardware stack levels used: 1
  2084 ;; Hardware stack levels required when called: 2
  2085 ;; This function calls:
  2086 ;;		Nothing
  2087 ;; This function is called by:
  2088 ;;		_main
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092                           	psect	text8
  2093  002918                     __ptext8:
  2094                           	callstack 0
  2095  002918                     _LEDarray_init:
  2096                           	callstack 28
  2097  002918                     
  2098                           ;LEDarray.c: 11:     LATGbits.LATG0 = 0;
  2099  002918  907F               	bcf	127,0,c	;volatile
  2100                           
  2101                           ;LEDarray.c: 12:     LATGbits.LATG1 = 0;
  2102  00291A  927F               	bcf	127,1,c	;volatile
  2103                           
  2104                           ;LEDarray.c: 13:     LATAbits.LATA2 = 0;
  2105  00291C  9479               	bcf	121,2,c	;volatile
  2106                           
  2107                           ;LEDarray.c: 14:     LATFbits.LATF6 = 0;
  2108  00291E  9C7E               	bcf	126,6,c	;volatile
  2109                           
  2110                           ;LEDarray.c: 15:     LATAbits.LATA4 = 0;
  2111  002920  9879               	bcf	121,4,c	;volatile
  2112                           
  2113                           ;LEDarray.c: 16:     LATAbits.LATA5 = 0;
  2114  002922  9A79               	bcf	121,5,c	;volatile
  2115                           
  2116                           ;LEDarray.c: 17:     LATFbits.LATF0 = 0;
  2117  002924  907E               	bcf	126,0,c	;volatile
  2118                           
  2119                           ;LEDarray.c: 18:     LATBbits.LATB0 = 0;
  2120  002926  907A               	bcf	122,0,c	;volatile
  2121                           
  2122                           ;LEDarray.c: 19:     LATBbits.LATB1 = 0;
  2123  002928  927A               	bcf	122,1,c	;volatile
  2124                           
  2125                           ;LEDarray.c: 22:     TRISGbits.TRISG0 = 0;
  2126  00292A  9087               	bcf	135,0,c	;volatile
  2127                           
  2128                           ;LEDarray.c: 23:     TRISGbits.TRISG1 = 0;
  2129  00292C  9287               	bcf	135,1,c	;volatile
  2130                           
  2131                           ;LEDarray.c: 24:     TRISAbits.TRISA2 = 0;
  2132  00292E  9481               	bcf	129,2,c	;volatile
  2133                           
  2134                           ;LEDarray.c: 25:     TRISFbits.TRISF6 = 0;
  2135  002930  9C86               	bcf	134,6,c	;volatile
  2136                           
  2137                           ;LEDarray.c: 26:     TRISAbits.TRISA4 = 0;
  2138  002932  9881               	bcf	129,4,c	;volatile
  2139                           
  2140                           ;LEDarray.c: 27:     TRISAbits.TRISA5 = 0;
  2141  002934  9A81               	bcf	129,5,c	;volatile
  2142                           
  2143                           ;LEDarray.c: 28:     TRISFbits.TRISF0 = 0;
  2144  002936  9086               	bcf	134,0,c	;volatile
  2145                           
  2146                           ;LEDarray.c: 29:     TRISBbits.TRISB0 = 0;
  2147  002938  9082               	bcf	130,0,c	;volatile
  2148                           
  2149                           ;LEDarray.c: 30:     TRISBbits.TRISB1 = 0;
  2150  00293A  9282               	bcf	130,1,c	;volatile
  2151  00293C  0012               	return		;funcret
  2152  00293E                     __end_of_LEDarray_init:
  2153                           	callstack 0
  2154                           
  2155 ;; *************** function _LEDarray_disp_bin *****************
  2156 ;; Defined at:
  2157 ;;		line 37 in file "LEDarray.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;  number          1    wreg     char 
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;  number          1    6[COMRAM] char 
  2162 ;; Return value:  Size  Location     Type
  2163 ;;                  1    wreg      void 
  2164 ;; Registers used:
  2165 ;;		wreg, status,2
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2172 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2173 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2174 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2175 ;;Total ram usage:        3 bytes
  2176 ;; Hardware stack levels used: 1
  2177 ;; Hardware stack levels required when called: 2
  2178 ;; This function calls:
  2179 ;;		Nothing
  2180 ;; This function is called by:
  2181 ;;		_main
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           	psect	text9
  2186  001C70                     __ptext9:
  2187                           	callstack 0
  2188  001C70                     _LEDarray_disp_bin:
  2189                           	callstack 28
  2190                           
  2191                           ;incstack = 0
  2192                           ;LEDarray_disp_bin@number stored from wreg
  2193  001C70  6E07               	movwf	LEDarray_disp_bin@number^0,c
  2194  001C72                     
  2195                           ;LEDarray.c: 40:     if (number & 0b000000001) {LATGbits.LATG0 = 1;} else {LATGbits.LATG
      +                          0 = 0;}
  2196  001C72  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  2197  001C76  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  2198  001C78  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  2199  001C7A  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  2200  001C7C  A005               	btfss	??_LEDarray_disp_bin^0,0,c
  2201  001C7E  EF43  F00E         	goto	u3181
  2202  001C82  EF45  F00E         	goto	u3180
  2203  001C86                     u3181:
  2204  001C86  EF48  F00E         	goto	l75
  2205  001C8A                     u3180:
  2206  001C8A  807F               	bsf	127,0,c	;volatile
  2207  001C8C  EF49  F00E         	goto	l2845
  2208  001C90                     l75:
  2209  001C90  907F               	bcf	127,0,c	;volatile
  2210  001C92                     l2845:
  2211                           
  2212                           ;LEDarray.c: 41:     if (number & 0b000000010) {LATGbits.LATG1 = 1;} else {LATGbits.LATG
      +                          1 = 0;}
  2213  001C92  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  2214  001C96  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  2215  001C98  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  2216  001C9A  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  2217  001C9C  A205               	btfss	??_LEDarray_disp_bin^0,1,c
  2218  001C9E  EF53  F00E         	goto	u3191
  2219  001CA2  EF55  F00E         	goto	u3190
  2220  001CA6                     u3191:
  2221  001CA6  EF58  F00E         	goto	l77
  2222  001CAA                     u3190:
  2223  001CAA  827F               	bsf	127,1,c	;volatile
  2224  001CAC  EF59  F00E         	goto	l2849
  2225  001CB0                     l77:
  2226  001CB0  927F               	bcf	127,1,c	;volatile
  2227  001CB2                     l2849:
  2228                           
  2229                           ;LEDarray.c: 42:     if (number & 0b000000100) {LATAbits.LATA2 = 1;} else {LATAbits.LATA
      +                          2 = 0;}
  2230  001CB2  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  2231  001CB6  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  2232  001CB8  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  2233  001CBA  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  2234  001CBC  A405               	btfss	??_LEDarray_disp_bin^0,2,c
  2235  001CBE  EF63  F00E         	goto	u3201
  2236  001CC2  EF65  F00E         	goto	u3200
  2237  001CC6                     u3201:
  2238  001CC6  EF68  F00E         	goto	l79
  2239  001CCA                     u3200:
  2240  001CCA  8479               	bsf	121,2,c	;volatile
  2241  001CCC  EF69  F00E         	goto	l2853
  2242  001CD0                     l79:
  2243  001CD0  9479               	bcf	121,2,c	;volatile
  2244  001CD2                     l2853:
  2245                           
  2246                           ;LEDarray.c: 43:     if (number & 0b000001000) {LATFbits.LATF6 = 1;} else {LATFbits.LATF
      +                          6 = 0;}
  2247  001CD2  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  2248  001CD6  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  2249  001CD8  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  2250  001CDA  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  2251  001CDC  A605               	btfss	??_LEDarray_disp_bin^0,3,c
  2252  001CDE  EF73  F00E         	goto	u3211
  2253  001CE2  EF75  F00E         	goto	u3210
  2254  001CE6                     u3211:
  2255  001CE6  EF78  F00E         	goto	l81
  2256  001CEA                     u3210:
  2257  001CEA  8C7E               	bsf	126,6,c	;volatile
  2258  001CEC  EF79  F00E         	goto	l2857
  2259  001CF0                     l81:
  2260  001CF0  9C7E               	bcf	126,6,c	;volatile
  2261  001CF2                     l2857:
  2262                           
  2263                           ;LEDarray.c: 44:     if (number & 0b000010000) {LATAbits.LATA4 = 1;} else {LATAbits.LATA
      +                          4 = 0;}
  2264  001CF2  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  2265  001CF6  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  2266  001CF8  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  2267  001CFA  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  2268  001CFC  A805               	btfss	??_LEDarray_disp_bin^0,4,c
  2269  001CFE  EF83  F00E         	goto	u3221
  2270  001D02  EF85  F00E         	goto	u3220
  2271  001D06                     u3221:
  2272  001D06  EF88  F00E         	goto	l83
  2273  001D0A                     u3220:
  2274  001D0A  8879               	bsf	121,4,c	;volatile
  2275  001D0C  EF89  F00E         	goto	l2861
  2276  001D10                     l83:
  2277  001D10  9879               	bcf	121,4,c	;volatile
  2278  001D12                     l2861:
  2279                           
  2280                           ;LEDarray.c: 45:     if (number & 0b000100000) {LATAbits.LATA5 = 1;} else {LATAbits.LATA
      +                          5 = 0;}
  2281  001D12  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  2282  001D16  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  2283  001D18  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  2284  001D1A  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  2285  001D1C  AA05               	btfss	??_LEDarray_disp_bin^0,5,c
  2286  001D1E  EF93  F00E         	goto	u3231
  2287  001D22  EF95  F00E         	goto	u3230
  2288  001D26                     u3231:
  2289  001D26  EF98  F00E         	goto	l85
  2290  001D2A                     u3230:
  2291  001D2A  8A79               	bsf	121,5,c	;volatile
  2292  001D2C  EF99  F00E         	goto	l2865
  2293  001D30                     l85:
  2294  001D30  9A79               	bcf	121,5,c	;volatile
  2295  001D32                     l2865:
  2296                           
  2297                           ;LEDarray.c: 46:     if (number & 0b001000000) {LATFbits.LATF0 = 1;} else {LATFbits.LATF
      +                          0 = 0;}
  2298  001D32  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  2299  001D36  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  2300  001D38  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  2301  001D3A  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  2302  001D3C  AC05               	btfss	??_LEDarray_disp_bin^0,6,c
  2303  001D3E  EFA3  F00E         	goto	u3241
  2304  001D42  EFA5  F00E         	goto	u3240
  2305  001D46                     u3241:
  2306  001D46  EFA8  F00E         	goto	l87
  2307  001D4A                     u3240:
  2308  001D4A  807E               	bsf	126,0,c	;volatile
  2309  001D4C  EFA9  F00E         	goto	l2869
  2310  001D50                     l87:
  2311  001D50  907E               	bcf	126,0,c	;volatile
  2312  001D52                     l2869:
  2313                           
  2314                           ;LEDarray.c: 47:     if (number & 0b010000000) {LATBbits.LATB0 = 1;} else {LATBbits.LATB
      +                          0 = 0;}
  2315  001D52  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  2316  001D56  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  2317  001D58  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  2318  001D5A  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  2319  001D5C  AE05               	btfss	??_LEDarray_disp_bin^0,7,c
  2320  001D5E  EFB3  F00E         	goto	u3251
  2321  001D62  EFB5  F00E         	goto	u3250
  2322  001D66                     u3251:
  2323  001D66  EFB8  F00E         	goto	l89
  2324  001D6A                     u3250:
  2325  001D6A  807A               	bsf	122,0,c	;volatile
  2326  001D6C  EFB9  F00E         	goto	l2873
  2327  001D70                     l89:
  2328  001D70  907A               	bcf	122,0,c	;volatile
  2329  001D72                     l2873:
  2330                           
  2331                           ;LEDarray.c: 48:     if (number & 0b100000000) {LATBbits.LATB1 = 1;} else {LATBbits.LATB
      +                          1 = 0;}
  2332  001D72  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  2333  001D76  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  2334  001D78  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  2335  001D7A  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  2336  001D7C  A006               	btfss	(??_LEDarray_disp_bin+1)^0,0,c
  2337  001D7E  EFC3  F00E         	goto	u3261
  2338  001D82  EFC5  F00E         	goto	u3260
  2339  001D86                     u3261:
  2340  001D86  EFC8  F00E         	goto	l91
  2341  001D8A                     u3260:
  2342  001D8A  827A               	bsf	122,1,c	;volatile
  2343  001D8C  EFC9  F00E         	goto	l93
  2344  001D90                     l91:
  2345  001D90  927A               	bcf	122,1,c	;volatile
  2346  001D92                     l93:
  2347  001D92  0012               	return		;funcret
  2348  001D94                     __end_of_LEDarray_disp_bin:
  2349                           	callstack 0
  2350                           
  2351 ;; *************** function _LED_toggle *****************
  2352 ;; Defined at:
  2353 ;;		line 40 in file "LED.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;  current        12   16[COMRAM] struct .
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;		None
  2358 ;; Return value:  Size  Location     Type
  2359 ;;                  12   16[COMRAM] struct .
  2360 ;; Registers used:
  2361 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2367 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2369 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2370 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2371 ;;Total ram usage:       13 bytes
  2372 ;; Hardware stack levels used: 1
  2373 ;; Hardware stack levels required when called: 3
  2374 ;; This function calls:
  2375 ;;		_ADC_getval
  2376 ;;		_sunrise
  2377 ;; This function is called by:
  2378 ;;		_main
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           	psect	text10
  2383  0022EA                     __ptext10:
  2384                           	callstack 0
  2385  0022EA                     _LED_toggle:
  2386                           	callstack 27
  2387  0022EA                     
  2388                           ;LED.c: 41:     if (current.hour==1 && current.minute==0 && current.second==0) {
  2389  0022EA  0417               	decf	(LED_toggle@current+6)^0,w,c
  2390  0022EC  A4D8               	btfss	status,2,c
  2391  0022EE  EF7B  F011         	goto	u3081
  2392  0022F2  EF7D  F011         	goto	u3080
  2393  0022F6                     u3081:
  2394  0022F6  EF92  F011         	goto	l2823
  2395  0022FA                     u3080:
  2396  0022FA  5018               	movf	(LED_toggle@current+7)^0,w,c
  2397  0022FC  A4D8               	btfss	status,2,c
  2398  0022FE  EF83  F011         	goto	u3091
  2399  002302  EF85  F011         	goto	u3090
  2400  002306                     u3091:
  2401  002306  EF92  F011         	goto	l2823
  2402  00230A                     u3090:
  2403  00230A  5019               	movf	(LED_toggle@current+8)^0,w,c
  2404  00230C  A4D8               	btfss	status,2,c
  2405  00230E  EF8B  F011         	goto	u3101
  2406  002312  EF8D  F011         	goto	u3100
  2407  002316                     u3101:
  2408  002316  EF92  F011         	goto	l2823
  2409  00231A                     u3100:
  2410  00231A                     
  2411                           ;LED.c: 42:         PIE2bits.C1IE = 0;
  2412  00231A  010E               	movlb	14	; () banked
  2413  00231C  912B               	bcf	43,0,b	;volatile
  2414                           
  2415                           ;LED.c: 43:         LATDbits.LATD7 = 0;
  2416  00231E  9E7C               	bcf	124,7,c	;volatile
  2417                           
  2418                           ;LED.c: 44:     } else if (current.hour==5 && current.minute==0 && current.second==0) {
  2419  002320  EFCD  F011         	goto	l2837
  2420  002324                     l2823:
  2421  002324  0E05               	movlw	5
  2422  002326  1817               	xorwf	(LED_toggle@current+6)^0,w,c
  2423  002328  A4D8               	btfss	status,2,c
  2424  00232A  EF99  F011         	goto	u3111
  2425  00232E  EF9B  F011         	goto	u3110
  2426  002332                     u3111:
  2427  002332  EFCD  F011         	goto	l2837
  2428  002336                     u3110:
  2429  002336  5018               	movf	(LED_toggle@current+7)^0,w,c
  2430  002338  A4D8               	btfss	status,2,c
  2431  00233A  EFA1  F011         	goto	u3121
  2432  00233E  EFA3  F011         	goto	u3120
  2433  002342                     u3121:
  2434  002342  EFCD  F011         	goto	l2837
  2435  002346                     u3120:
  2436  002346  5019               	movf	(LED_toggle@current+8)^0,w,c
  2437  002348  A4D8               	btfss	status,2,c
  2438  00234A  EFA9  F011         	goto	u3131
  2439  00234E  EFAB  F011         	goto	u3130
  2440  002352                     u3131:
  2441  002352  EFCD  F011         	goto	l2837
  2442  002356                     u3130:
  2443  002356                     
  2444                           ;LED.c: 45:         PIE2bits.C1IE = 1;
  2445  002356  010E               	movlb	14	; () banked
  2446  002358  812B               	bsf	43,0,b	;volatile
  2447  00235A                     
  2448                           ; BSR set to: 14
  2449                           ;LED.c: 46:         if (ADC_getval()>=0b11011110) {LATDbits.LATD7 = 1;}
  2450  00235A  ECF0  F014         	call	_ADC_getval	;wreg free
  2451  00235E  6E1D               	movwf	??_LED_toggle^0,c
  2452  002360  0EDD               	movlw	221
  2453  002362  641D               	cpfsgt	??_LED_toggle^0,c
  2454  002364  EFB6  F011         	goto	u3141
  2455  002368  EFB8  F011         	goto	u3140
  2456  00236C                     u3141:
  2457  00236C  EFBB  F011         	goto	l2835
  2458  002370                     u3140:
  2459  002370  8E7C               	bsf	124,7,c	;volatile
  2460  002372  EFCD  F011         	goto	l2837
  2461  002376                     l2835:
  2462  002376  EE20  F011         	lfsr	2,LED_toggle@current
  2463  00237A  EE00  F005         	lfsr	0,sunrise@current
  2464  00237E  0E0B               	movlw	11
  2465  002380                     u3151:
  2466  002380  CFDB FFEB          	movff	plusw2,plusw0
  2467  002384  06E8               	decf	wreg,f,c
  2468  002386  E2FC               	bc	u3151
  2469  002388  ECC5  F014         	call	_sunrise	;wreg free
  2470  00238C  EE20  F011         	lfsr	2,LED_toggle@current
  2471  002390  0E0B               	movlw	11
  2472  002392                     u3161:
  2473  002392  CFEB FFDB          	movff	plusw0,plusw2
  2474  002396  06E8               	decf	wreg,f,c
  2475  002398  E2FC               	bc	u3161
  2476  00239A                     l2837:
  2477                           
  2478                           ;LED.c: 50:     return current;
  2479  00239A  EE20  F011         	lfsr	2,LED_toggle@current
  2480  00239E  EE00  F011         	lfsr	0,?_LED_toggle
  2481  0023A2  0E0B               	movlw	11
  2482  0023A4                     u3171:
  2483  0023A4  CFDB FFEB          	movff	plusw2,plusw0
  2484  0023A8  06E8               	decf	wreg,f,c
  2485  0023AA  E2FC               	bc	u3171
  2486  0023AC  0012               	return		;funcret
  2487  0023AE                     __end_of_LED_toggle:
  2488                           	callstack 0
  2489                           
  2490 ;; *************** function _sunrise *****************
  2491 ;; Defined at:
  2492 ;;		line 103 in file "dateandtime.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;  current        12    4[COMRAM] struct .
  2495 ;; Auto vars:     Size  Location     Type
  2496 ;;		None
  2497 ;; Return value:  Size  Location     Type
  2498 ;;                  12    4[COMRAM] struct .
  2499 ;; Registers used:
  2500 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  2501 ;; Tracked objects:
  2502 ;;		On entry : 0/0
  2503 ;;		On exit  : 0/0
  2504 ;;		Unchanged: 0/0
  2505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2506 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2509 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2510 ;;Total ram usage:       12 bytes
  2511 ;; Hardware stack levels used: 1
  2512 ;; Hardware stack levels required when called: 2
  2513 ;; This function calls:
  2514 ;;		Nothing
  2515 ;; This function is called by:
  2516 ;;		_LED_toggle
  2517 ;;		_sunrise_sunset
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           	psect	text11
  2522  00298A                     __ptext11:
  2523                           	callstack 0
  2524  00298A                     _sunrise:
  2525                           	callstack 27
  2526  00298A                     
  2527                           ;dateandtime.c: 105:     current.sunrise_hour = current.hour;
  2528  00298A  C00B  F00E         	movff	sunrise@current+6,sunrise@current+9
  2529                           
  2530                           ;dateandtime.c: 106:     current.sunrise_minute = current.minute;
  2531  00298E  C00C  F00F         	movff	sunrise@current+7,sunrise@current+10
  2532                           
  2533                           ;dateandtime.c: 107:     current.sunrise_second = current.second;
  2534  002992  C00D  F010         	movff	sunrise@current+8,sunrise@current+11
  2535  002996                     
  2536                           ;dateandtime.c: 109:     return current;
  2537  002996  EE20  F005         	lfsr	2,sunrise@current
  2538  00299A  EE00  F005         	lfsr	0,?_sunrise
  2539  00299E  0E0B               	movlw	11
  2540  0029A0                     u2481:
  2541  0029A0  CFDB FFEB          	movff	plusw2,plusw0
  2542  0029A4  06E8               	decf	wreg,f,c
  2543  0029A6  E2FC               	bc	u2481
  2544  0029A8  0012               	return		;funcret
  2545  0029AA                     __end_of_sunrise:
  2546                           	callstack 0
  2547                           
  2548 ;; *************** function _LED2_init *****************
  2549 ;; Defined at:
  2550 ;;		line 29 in file "LED.c"
  2551 ;; Parameters:    Size  Location     Type
  2552 ;;		None
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;		None
  2555 ;; Return value:  Size  Location     Type
  2556 ;;                  1    wreg      void 
  2557 ;; Registers used:
  2558 ;;		None
  2559 ;; Tracked objects:
  2560 ;;		On entry : 0/0
  2561 ;;		On exit  : 0/0
  2562 ;;		Unchanged: 0/0
  2563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2568 ;;Total ram usage:        0 bytes
  2569 ;; Hardware stack levels used: 1
  2570 ;; Hardware stack levels required when called: 2
  2571 ;; This function calls:
  2572 ;;		Nothing
  2573 ;; This function is called by:
  2574 ;;		_main
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578                           	psect	text12
  2579  002A1A                     __ptext12:
  2580                           	callstack 0
  2581  002A1A                     _LED2_init:
  2582                           	callstack 28
  2583  002A1A                     
  2584                           ;LED.c: 30:     LATHbits.LATH3 = 1;
  2585  002A1A  8680               	bsf	128,3,c	;volatile
  2586                           
  2587                           ;LED.c: 31:     TRISHbits.TRISH3 = 0;
  2588  002A1C  9688               	bcf	136,3,c	;volatile
  2589  002A1E  0012               	return		;funcret
  2590  002A20                     __end_of_LED2_init:
  2591                           	callstack 0
  2592                           
  2593 ;; *************** function _LED1_init *****************
  2594 ;; Defined at:
  2595 ;;		line 10 in file "LED.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;  current        12    5[COMRAM] struct .
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;		None
  2600 ;; Return value:  Size  Location     Type
  2601 ;;                  1    wreg      void 
  2602 ;; Registers used:
  2603 ;;		wreg, status,2, status,0, cstack
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2609 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2611 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2612 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2613 ;;Total ram usage:       13 bytes
  2614 ;; Hardware stack levels used: 1
  2615 ;; Hardware stack levels required when called: 3
  2616 ;; This function calls:
  2617 ;;		_ADC_getval
  2618 ;; This function is called by:
  2619 ;;		_main
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623                           	psect	text13
  2624  0026BE                     __ptext13:
  2625                           	callstack 0
  2626  0026BE                     _LED1_init:
  2627                           	callstack 27
  2628  0026BE                     
  2629                           ;LED.c: 18:     if ((current.hour<1||current.hour>=5) && (ADC_getval()>=0b11011110)) {
  2630  0026BE  500C               	movf	(LED1_init@current+6)^0,w,c
  2631  0026C0  0A80               	xorlw	128
  2632  0026C2  0F7F               	addlw	-129
  2633  0026C4  A0D8               	btfss	status,0,c
  2634  0026C6  EF67  F013         	goto	u2861
  2635  0026CA  EF69  F013         	goto	u2860
  2636  0026CE                     u2861:
  2637  0026CE  EF73  F013         	goto	l2703
  2638  0026D2                     u2860:
  2639  0026D2  500C               	movf	(LED1_init@current+6)^0,w,c
  2640  0026D4  0A80               	xorlw	128
  2641  0026D6  0F7B               	addlw	-133
  2642  0026D8  A0D8               	btfss	status,0,c
  2643  0026DA  EF71  F013         	goto	u2871
  2644  0026DE  EF73  F013         	goto	u2870
  2645  0026E2                     u2871:
  2646  0026E2  EF81  F013         	goto	l241
  2647  0026E6                     u2870:
  2648  0026E6                     l2703:
  2649  0026E6  ECF0  F014         	call	_ADC_getval	;wreg free
  2650  0026EA  6E12               	movwf	??_LED1_init^0,c
  2651  0026EC  0EDD               	movlw	221
  2652  0026EE  6412               	cpfsgt	??_LED1_init^0,c
  2653  0026F0  EF7C  F013         	goto	u2881
  2654  0026F4  EF7E  F013         	goto	u2880
  2655  0026F8                     u2881:
  2656  0026F8  EF81  F013         	goto	l241
  2657  0026FC                     u2880:
  2658  0026FC                     
  2659                           ;LED.c: 19:         LATDbits.LATD7 = 1;
  2660  0026FC  8E7C               	bsf	124,7,c	;volatile
  2661                           
  2662                           ;LED.c: 20:     } else {LATDbits.LATD7 = 0;}
  2663  0026FE  EF82  F013         	goto	l244
  2664  002702                     l241:
  2665  002702  9E7C               	bcf	124,7,c	;volatile
  2666  002704                     l244:
  2667                           
  2668                           ;LED.c: 22:     TRISDbits.TRISD7 = 0;
  2669  002704  9E84               	bcf	132,7,c	;volatile
  2670  002706  0012               	return		;funcret
  2671  002708                     __end_of_LED1_init:
  2672                           	callstack 0
  2673                           
  2674 ;; *************** function _ADC_getval *****************
  2675 ;; Defined at:
  2676 ;;		line 26 in file "ADC.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;		None
  2679 ;; Auto vars:     Size  Location     Type
  2680 ;;  tmpval          1    4[COMRAM] unsigned char 
  2681 ;; Return value:  Size  Location     Type
  2682 ;;                  1    wreg      unsigned char 
  2683 ;; Registers used:
  2684 ;;		wreg, status,2
  2685 ;; Tracked objects:
  2686 ;;		On entry : 0/0
  2687 ;;		On exit  : 0/0
  2688 ;;		Unchanged: 0/0
  2689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2691 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2693 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2694 ;;Total ram usage:        1 bytes
  2695 ;; Hardware stack levels used: 1
  2696 ;; Hardware stack levels required when called: 2
  2697 ;; This function calls:
  2698 ;;		Nothing
  2699 ;; This function is called by:
  2700 ;;		_LED1_init
  2701 ;;		_LED_toggle
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           
  2705                           	psect	text14
  2706  0029E0                     __ptext14:
  2707                           	callstack 0
  2708  0029E0                     _ADC_getval:
  2709                           	callstack 27
  2710  0029E0                     
  2711                           ;ADC.c: 27:     unsigned char tmpval;;ADC.c: 29:     ADCON0bits.GO = 1;
  2712  0029E0  8060               	bsf	96,0,c	;volatile
  2713  0029E2                     l50:
  2714  0029E2  B060               	btfsc	96,0,c	;volatile
  2715  0029E4  EFF6  F014         	goto	u2441
  2716  0029E8  EFF8  F014         	goto	u2440
  2717  0029EC                     u2441:
  2718  0029EC  EFF1  F014         	goto	l50
  2719  0029F0                     u2440:
  2720  0029F0                     
  2721                           ;ADC.c: 31:     tmpval = ADRESH;
  2722  0029F0  CF64 F005          	movff	3940,ADC_getval@tmpval	;volatile
  2723  0029F4                     
  2724                           ;ADC.c: 34:     return tmpval;
  2725  0029F4  5005               	movf	ADC_getval@tmpval^0,w,c
  2726  0029F6  0012               	return		;funcret
  2727  0029F8                     __end_of_ADC_getval:
  2728                           	callstack 0
  2729                           
  2730 ;; *************** function _LCD_init *****************
  2731 ;; Defined at:
  2732 ;;		line 56 in file "LCD.c"
  2733 ;; Parameters:    Size  Location     Type
  2734 ;;  current        12   36[BANK0 ] struct .
  2735 ;; Auto vars:     Size  Location     Type
  2736 ;;  buf            40   48[BANK0 ] unsigned char [40]
  2737 ;; Return value:  Size  Location     Type
  2738 ;;                  1    wreg      void 
  2739 ;; Registers used:
  2740 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2741 ;; Tracked objects:
  2742 ;;		On entry : 0/0
  2743 ;;		On exit  : 0/0
  2744 ;;		Unchanged: 0/0
  2745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2746 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2747 ;;      Locals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2748 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2749 ;;      Totals:         2      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2750 ;;Total ram usage:       54 bytes
  2751 ;; Hardware stack levels used: 1
  2752 ;; Hardware stack levels required when called: 10
  2753 ;; This function calls:
  2754 ;;		_LCD_sendbyte
  2755 ;;		_LCD_sendnibble
  2756 ;;		_LCD_sendstring
  2757 ;;		_LCD_setline
  2758 ;;		_sprintf
  2759 ;; This function is called by:
  2760 ;;		_main
  2761 ;; This function uses a non-reentrant model
  2762 ;;
  2763                           
  2764                           	psect	text15
  2765  001FA6                     __ptext15:
  2766                           	callstack 0
  2767  001FA6                     _LCD_init:
  2768                           	callstack 20
  2769  001FA6                     
  2770                           ;LCD.c: 58:     TRISCbits.TRISC6 =0;
  2771  001FA6  9C83               	bcf	131,6,c	;volatile
  2772                           
  2773                           ;LCD.c: 59:     TRISCbits.TRISC2=0;
  2774  001FA8  9483               	bcf	131,2,c	;volatile
  2775                           
  2776                           ;LCD.c: 60:     TRISBbits.TRISB3=0;
  2777  001FAA  9682               	bcf	130,3,c	;volatile
  2778                           
  2779                           ;LCD.c: 61:     TRISBbits.TRISB2=0;
  2780  001FAC  9482               	bcf	130,2,c	;volatile
  2781                           
  2782                           ;LCD.c: 62:     TRISEbits.TRISE3=0;
  2783  001FAE  9685               	bcf	133,3,c	;volatile
  2784                           
  2785                           ;LCD.c: 63:     TRISEbits.TRISE1=0;
  2786  001FB0  9285               	bcf	133,1,c	;volatile
  2787                           
  2788                           ;LCD.c: 66:     LATCbits.LATC6 = 0;
  2789  001FB2  9C7B               	bcf	123,6,c	;volatile
  2790                           
  2791                           ;LCD.c: 67:     LATCbits.LATC2 = 0;
  2792  001FB4  947B               	bcf	123,2,c	;volatile
  2793                           
  2794                           ;LCD.c: 68:     LATBbits.LATB3 = 0;
  2795  001FB6  967A               	bcf	122,3,c	;volatile
  2796                           
  2797                           ;LCD.c: 69:     LATBbits.LATB2 = 0;
  2798  001FB8  947A               	bcf	122,2,c	;volatile
  2799                           
  2800                           ;LCD.c: 70:     LATEbits.LATE3 = 0;
  2801  001FBA  967D               	bcf	125,3,c	;volatile
  2802                           
  2803                           ;LCD.c: 71:     LATEbits.LATE1 = 0;
  2804  001FBC  927D               	bcf	125,1,c	;volatile
  2805  001FBE                     
  2806                           ;LCD.c: 77:     _delay((unsigned long)((45)*(64000000/4000.0)));
  2807  001FBE  0E04               	movlw	4
  2808  001FC0  6E51               	movwf	(??_LCD_init+1)^0,c
  2809  001FC2  0EA8               	movlw	168
  2810  001FC4  6E50               	movwf	??_LCD_init^0,c
  2811  001FC6  0E0C               	movlw	12
  2812  001FC8                     u4207:
  2813  001FC8  2EE8               	decfsz	wreg,f,c
  2814  001FCA  D7FE               	bra	u4207
  2815  001FCC  2E50               	decfsz	??_LCD_init^0,f,c
  2816  001FCE  D7FC               	bra	u4207
  2817  001FD0  2E51               	decfsz	(??_LCD_init+1)^0,f,c
  2818  001FD2  D7FA               	bra	u4207
  2819  001FD4                     
  2820                           ;LCD.c: 78:     LCD_sendnibble(0b0010);
  2821  001FD4  0E02               	movlw	2
  2822  001FD6  EC7C  F012         	call	_LCD_sendnibble
  2823  001FDA                     
  2824                           ;LCD.c: 79:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  2825  001FDA  0EF0               	movlw	240
  2826  001FDC                     u4217:
  2827  001FDC  2EE8               	decfsz	wreg,f,c
  2828  001FDE  D7FE               	bra	u4217
  2829  001FE0                     
  2830                           ;LCD.c: 80:     LCD_sendbyte(0b00101000,0);
  2831  001FE0  0E00               	movlw	0
  2832  001FE2  6E06               	movwf	LCD_sendbyte@type^0,c
  2833  001FE4  0E28               	movlw	40
  2834  001FE6  EC5D  F014         	call	_LCD_sendbyte
  2835  001FEA                     
  2836                           ;LCD.c: 81:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  2837  001FEA  0EF0               	movlw	240
  2838  001FEC                     u4227:
  2839  001FEC  2EE8               	decfsz	wreg,f,c
  2840  001FEE  D7FE               	bra	u4227
  2841  001FF0                     
  2842                           ;LCD.c: 82:     LCD_sendbyte(0b00101000,0);
  2843  001FF0  0E00               	movlw	0
  2844  001FF2  6E06               	movwf	LCD_sendbyte@type^0,c
  2845  001FF4  0E28               	movlw	40
  2846  001FF6  EC5D  F014         	call	_LCD_sendbyte
  2847  001FFA                     
  2848                           ;LCD.c: 83:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  2849  001FFA  0EF0               	movlw	240
  2850  001FFC                     u4237:
  2851  001FFC  2EE8               	decfsz	wreg,f,c
  2852  001FFE  D7FE               	bra	u4237
  2853  002000                     
  2854                           ;LCD.c: 86:     LCD_sendbyte(0b00001000,0);
  2855  002000  0E00               	movlw	0
  2856  002002  6E06               	movwf	LCD_sendbyte@type^0,c
  2857  002004  0E08               	movlw	8
  2858  002006  EC5D  F014         	call	_LCD_sendbyte
  2859  00200A                     
  2860                           ;LCD.c: 87:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  2861  00200A  0EF0               	movlw	240
  2862  00200C                     u4247:
  2863  00200C  2EE8               	decfsz	wreg,f,c
  2864  00200E  D7FE               	bra	u4247
  2865  002010                     
  2866                           ;LCD.c: 88:     LCD_sendbyte(0b00000001,0);
  2867  002010  0E00               	movlw	0
  2868  002012  6E06               	movwf	LCD_sendbyte@type^0,c
  2869  002014  0E01               	movlw	1
  2870  002016  EC5D  F014         	call	_LCD_sendbyte
  2871  00201A                     
  2872                           ;LCD.c: 89:     _delay((unsigned long)((2)*(64000000/4000.0)));
  2873  00201A  0E2A               	movlw	42
  2874  00201C  6E50               	movwf	??_LCD_init^0,c
  2875  00201E  0E8E               	movlw	142
  2876  002020                     u4257:
  2877  002020  2EE8               	decfsz	wreg,f,c
  2878  002022  D7FE               	bra	u4257
  2879  002024  2E50               	decfsz	??_LCD_init^0,f,c
  2880  002026  D7FC               	bra	u4257
  2881  002028                     
  2882                           ;LCD.c: 90:     LCD_sendbyte(0b00000110,0);
  2883  002028  0E00               	movlw	0
  2884  00202A  6E06               	movwf	LCD_sendbyte@type^0,c
  2885  00202C  0E06               	movlw	6
  2886  00202E  EC5D  F014         	call	_LCD_sendbyte
  2887  002032                     
  2888                           ;LCD.c: 91:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  2889  002032  0EA0               	movlw	160
  2890  002034                     u4267:
  2891  002034  D000               	nop2	
  2892  002036  2EE8               	decfsz	wreg,f,c
  2893  002038  D7FD               	bra	u4267
  2894  00203A                     
  2895                           ;LCD.c: 94:     LCD_sendbyte(0b00001100,0);
  2896  00203A  0E00               	movlw	0
  2897  00203C  6E06               	movwf	LCD_sendbyte@type^0,c
  2898  00203E  0E0C               	movlw	12
  2899  002040  EC5D  F014         	call	_LCD_sendbyte
  2900  002044                     
  2901                           ;LCD.c: 95:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  2902  002044  0EA0               	movlw	160
  2903  002046                     u4277:
  2904  002046  D000               	nop2	
  2905  002048  2EE8               	decfsz	wreg,f,c
  2906  00204A  D7FD               	bra	u4277
  2907  00204C                     
  2908                           ;LCD.c: 98:     char buf[40];;LCD.c: 99:     LCD_setline(1);
  2909  00204C  0E01               	movlw	1
  2910  00204E  EC84  F013         	call	_LCD_setline
  2911  002052                     
  2912                           ;LCD.c: 100:     sprintf(buf,"%04d-%02d-%02d",current.year,current.month,current.date);
  2913  002052  0E90               	movlw	low LCD_init@buf
  2914  002054  0100               	movlb	0	; () banked
  2915  002056  6F72               	movwf	sprintf@s& (0+255),b
  2916  002058  0E00               	movlw	high LCD_init@buf
  2917  00205A  6F73               	movwf	(sprintf@s+1)& (0+255),b
  2918  00205C  0E10               	movlw	low STR_1
  2919  00205E  6F74               	movwf	sprintf@fmt& (0+255),b
  2920  002060  0E0E               	movlw	high STR_1
  2921  002062  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  2922  002064  C084  F076         	movff	LCD_init@current,?_sprintf+4
  2923  002068  C085  F077         	movff	LCD_init@current+1,?_sprintf+5
  2924  00206C  5186               	movf	(LCD_init@current+2)& (0+255),w,b
  2925  00206E  6F78               	movwf	(?_sprintf+6)& (0+255),b
  2926  002070  6B79               	clrf	(?_sprintf+7)& (0+255),b
  2927  002072  BF78               	btfsc	(?_sprintf+6)& (0+255),7,b
  2928  002074  0779               	decf	(?_sprintf+7)& (0+255),f,b
  2929  002076  5187               	movf	(LCD_init@current+3)& (0+255),w,b
  2930  002078  6F7A               	movwf	(?_sprintf+8)& (0+255),b
  2931  00207A  6B7B               	clrf	(?_sprintf+9)& (0+255),b
  2932  00207C  BF7A               	btfsc	(?_sprintf+8)& (0+255),7,b
  2933  00207E  077B               	decf	(?_sprintf+9)& (0+255),f,b
  2934  002080  EC0D  F013         	call	_sprintf	;wreg free
  2935  002084                     
  2936                           ;LCD.c: 101:     LCD_sendstring(buf);
  2937  002084  0E90               	movlw	low LCD_init@buf
  2938  002086  6E08               	movwf	LCD_sendstring@string^0,c
  2939  002088  0E00               	movlw	high LCD_init@buf
  2940  00208A  6E09               	movwf	(LCD_sendstring@string+1)^0,c
  2941  00208C  EC43  F014         	call	_LCD_sendstring	;wreg free
  2942  002090  0012               	return		;funcret
  2943  002092                     __end_of_LCD_init:
  2944                           	callstack 0
  2945                           
  2946 ;; *************** function _sprintf *****************
  2947 ;; Defined at:
  2948 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  2949 ;; Parameters:    Size  Location     Type
  2950 ;;  s               2   18[BANK0 ] PTR unsigned char 
  2951 ;;		 -> time_incre@buf2(40), time_incre@buf1(40), LCD_init@buf(40), 
  2952 ;;  fmt             2   20[BANK0 ] PTR const unsigned char 
  2953 ;;		 -> STR_3(15), STR_2(15), STR_1(15), 
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;  f               6   30[BANK0 ] struct _IO_FILE
  2956 ;;  ap              2   28[BANK0 ] PTR void [1]
  2957 ;;		 -> ?_sprintf(2), 
  2958 ;;  ret             2    0        int 
  2959 ;; Return value:  Size  Location     Type
  2960 ;;                  2   18[BANK0 ] int 
  2961 ;; Registers used:
  2962 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2963 ;; Tracked objects:
  2964 ;;		On entry : 0/0
  2965 ;;		On exit  : 0/0
  2966 ;;		Unchanged: 0/0
  2967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2968 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2969 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2971 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2972 ;;Total ram usage:       18 bytes
  2973 ;; Hardware stack levels used: 1
  2974 ;; Hardware stack levels required when called: 9
  2975 ;; This function calls:
  2976 ;;		_vfprintf
  2977 ;; This function is called by:
  2978 ;;		_LCD_init
  2979 ;;		_time_incre
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982                           
  2983                           	psect	text16
  2984  00261A                     __ptext16:
  2985                           	callstack 0
  2986  00261A                     _sprintf:
  2987                           	callstack 20
  2988  00261A  0E76               	movlw	low (?_sprintf+4)
  2989  00261C  0100               	movlb	0	; () banked
  2990  00261E  6F7C               	movwf	sprintf@ap& (0+255),b
  2991  002620  0E00               	movlw	high (?_sprintf+4)
  2992  002622  6F7D               	movwf	(sprintf@ap+1)& (0+255),b
  2993  002624  C072  F07E         	movff	sprintf@s,sprintf@f
  2994  002628  C073  F07F         	movff	sprintf@s+1,sprintf@f+1
  2995  00262C                     
  2996                           ; BSR set to: 0
  2997  00262C  0E00               	movlw	0
  2998  00262E  6F81               	movwf	(sprintf@f+3)& (0+255),b
  2999  002630  0E00               	movlw	0
  3000  002632  6F80               	movwf	(sprintf@f+2)& (0+255),b
  3001  002634                     
  3002                           ; BSR set to: 0
  3003  002634  0E00               	movlw	0
  3004  002636  6F83               	movwf	(sprintf@f+5)& (0+255),b
  3005  002638  0E00               	movlw	0
  3006  00263A  6F82               	movwf	(sprintf@f+4)& (0+255),b
  3007  00263C                     
  3008                           ; BSR set to: 0
  3009  00263C  0E7E               	movlw	low sprintf@f
  3010  00263E  6F6C               	movwf	vfprintf@fp& (0+255),b
  3011  002640  0E00               	movlw	high sprintf@f
  3012  002642  6F6D               	movwf	(vfprintf@fp+1)& (0+255),b
  3013  002644  C074  F06E         	movff	sprintf@fmt,vfprintf@fmt
  3014  002648  C075  F06F         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3015  00264C  0E7C               	movlw	low sprintf@ap
  3016  00264E  6F70               	movwf	vfprintf@ap& (0+255),b
  3017  002650  0E00               	movlw	high sprintf@ap
  3018  002652  6F71               	movwf	(vfprintf@ap+1)& (0+255),b
  3019  002654  ECB0  F012         	call	_vfprintf	;wreg free
  3020  002658  0100               	movlb	0	; () banked
  3021  00265A  5180               	movf	(sprintf@f+2)& (0+255),w,b
  3022  00265C  2572               	addwf	sprintf@s& (0+255),w,b
  3023  00265E  6ED9               	movwf	fsr2l,c
  3024  002660  5181               	movf	(sprintf@f+3)& (0+255),w,b
  3025  002662  2173               	addwfc	(sprintf@s+1)& (0+255),w,b
  3026  002664  6EDA               	movwf	fsr2h,c
  3027  002666  0E00               	movlw	0
  3028  002668  6EDF               	movwf	indf2,c
  3029  00266A                     
  3030                           ; BSR set to: 0
  3031  00266A  0012               	return		;funcret
  3032  00266C                     __end_of_sprintf:
  3033                           	callstack 0
  3034                           
  3035 ;; *************** function _vfprintf *****************
  3036 ;; Defined at:
  3037 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3038 ;; Parameters:    Size  Location     Type
  3039 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
  3040 ;;		 -> sprintf@f(6), 
  3041 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  3042 ;;		 -> STR_3(15), STR_2(15), STR_1(15), 
  3043 ;;  ap              2   16[BANK0 ] PTR PTR void 
  3044 ;;		 -> sprintf@ap(2), 
  3045 ;; Auto vars:     Size  Location     Type
  3046 ;;  cfmt            2   77[COMRAM] PTR unsigned char 
  3047 ;;		 -> STR_3(15), STR_2(15), STR_1(15), 
  3048 ;; Return value:  Size  Location     Type
  3049 ;;                  2   12[BANK0 ] int 
  3050 ;; Registers used:
  3051 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3052 ;; Tracked objects:
  3053 ;;		On entry : 0/0
  3054 ;;		On exit  : 0/0
  3055 ;;		Unchanged: 0/0
  3056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3057 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3058 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3060 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3061 ;;Total ram usage:        8 bytes
  3062 ;; Hardware stack levels used: 1
  3063 ;; Hardware stack levels required when called: 8
  3064 ;; This function calls:
  3065 ;;		_vfpfcnvrt
  3066 ;; This function is called by:
  3067 ;;		_sprintf
  3068 ;; This function uses a non-reentrant model
  3069 ;;
  3070                           
  3071                           	psect	text17
  3072  002560                     __ptext17:
  3073                           	callstack 0
  3074  002560                     _vfprintf:
  3075                           	callstack 20
  3076  002560                     
  3077                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3078  002560  C06E  F04E         	movff	vfprintf@fmt,vfprintf@cfmt
  3079  002564  C06F  F04F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3080  002568                     
  3081                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3082  002568  0E00               	movlw	0
  3083  00256A  0100               	movlb	0	; () banked
  3084  00256C  6FED               	movwf	(_nout+1)& (0+255),b
  3085  00256E  0E00               	movlw	0
  3086  002570  6FEC               	movwf	_nout& (0+255),b
  3087                           
  3088                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3089  002572  EFCE  F012         	goto	l3317
  3090  002576                     l3315:
  3091                           
  3092                           ; BSR set to: 0
  3093                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3094  002576  C06C  F044         	movff	vfprintf@fp,vfpfcnvrt@fp
  3095  00257A  C06D  F045         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3096  00257E  0E4E               	movlw	low vfprintf@cfmt
  3097  002580  6E46               	movwf	vfpfcnvrt@fmt^0,c
  3098  002582  0E00               	movlw	high vfprintf@cfmt
  3099  002584  6E47               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3100  002586  C070  F048         	movff	vfprintf@ap,vfpfcnvrt@ap
  3101  00258A  C071  F049         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3102  00258E  EC10  F007         	call	_vfpfcnvrt	;wreg free
  3103  002592  5044               	movf	?_vfpfcnvrt^0,w,c
  3104  002594  0100               	movlb	0	; () banked
  3105  002596  27EC               	addwf	_nout& (0+255),f,b
  3106  002598  5045               	movf	(?_vfpfcnvrt+1)^0,w,c
  3107  00259A  23ED               	addwfc	(_nout+1)& (0+255),f,b
  3108  00259C                     l3317:
  3109                           
  3110                           ; BSR set to: 0
  3111                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3112  00259C  C04E  FFF6         	movff	vfprintf@cfmt,tblptrl
  3113  0025A0  C04F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3114  0025A4                     	if	0	;tblptru may be non-zero
  3115  0025A4                     	endif
  3116  0025A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3117  0025A4  0E00               	movlw	low (__mediumconst shr (0+16))
  3118  0025A6  6EF8               	movwf	tblptru,c
  3119  0025A8                     	endif
  3120  0025A8  0008               	tblrd		*
  3121  0025AA  50F5               	movf	tablat,w,c
  3122  0025AC  0900               	iorlw	0
  3123  0025AE  A4D8               	btfss	status,2,c
  3124  0025B0  EFDC  F012         	goto	u3981
  3125  0025B4  EFDE  F012         	goto	u3980
  3126  0025B8                     u3981:
  3127  0025B8  EFBB  F012         	goto	l3315
  3128  0025BC                     u3980:
  3129  0025BC                     
  3130                           ; BSR set to: 0
  3131                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3132  0025BC  C0EC  F06C         	movff	_nout,?_vfprintf
  3133  0025C0  C0ED  F06D         	movff	_nout+1,?_vfprintf+1
  3134  0025C4                     
  3135                           ; BSR set to: 0
  3136  0025C4  0012               	return		;funcret
  3137  0025C6                     __end_of_vfprintf:
  3138                           	callstack 0
  3139                           
  3140 ;; *************** function _vfpfcnvrt *****************
  3141 ;; Defined at:
  3142 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;  fp              2   67[COMRAM] PTR struct _IO_FILE
  3145 ;;		 -> sprintf@f(6), 
  3146 ;;  fmt             2   69[COMRAM] PTR PTR unsigned char 
  3147 ;;		 -> vfprintf@cfmt(2), 
  3148 ;;  ap              2   71[COMRAM] PTR PTR void 
  3149 ;;		 -> sprintf@ap(2), 
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;  ll              8    0[BANK0 ] long long 
  3152 ;;  llu             8    0        unsigned long long 
  3153 ;;  f               4    0        unsigned long long 
  3154 ;;  vp              3    0        PTR void 
  3155 ;;  ct              3    0        unsigned char [3]
  3156 ;;  cp              3    0        PTR unsigned char 
  3157 ;;  done            2    8[BANK0 ] int 
  3158 ;;  i               2    0        int 
  3159 ;;  c               1    0        unsigned char 
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  2   67[COMRAM] int 
  3162 ;; Registers used:
  3163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3169 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3170 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3171 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3172 ;;      Totals:        10      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3173 ;;Total ram usage:       22 bytes
  3174 ;; Hardware stack levels used: 1
  3175 ;; Hardware stack levels required when called: 7
  3176 ;; This function calls:
  3177 ;;		_atoi
  3178 ;;		_dtoa
  3179 ;;		_fputc
  3180 ;;		_isdigit
  3181 ;; This function is called by:
  3182 ;;		_vfprintf
  3183 ;; This function uses a non-reentrant model
  3184 ;;
  3185                           
  3186                           	psect	text18
  3187  000E20                     __ptext18:
  3188                           	callstack 0
  3189  000E20                     _vfpfcnvrt:
  3190                           	callstack 20
  3191  000E20                     
  3192                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3193  000E20  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3194  000E24  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3195  000E28  CFDE FFF6          	movff	postinc2,tblptrl
  3196  000E2C  CFDD FFF7          	movff	postdec2,tblptrh
  3197  000E30                     	if	0	;tblptru may be non-zero
  3198  000E30                     	endif
  3199  000E30                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3200  000E30  0E00               	movlw	low (__mediumconst shr (0+16))
  3201  000E32  6EF8               	movwf	tblptru,c
  3202  000E34                     	endif
  3203  000E34  0008               	tblrd		*
  3204  000E36  50F5               	movf	tablat,w,c
  3205  000E38  0A25               	xorlw	37
  3206  000E3A  A4D8               	btfss	status,2,c
  3207  000E3C  EF22  F007         	goto	u3871
  3208  000E40  EF24  F007         	goto	u3870
  3209  000E44                     u3871:
  3210  000E44  EFB8  F008         	goto	l3293
  3211  000E48                     u3870:
  3212  000E48                     
  3213                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3214  000E48  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3215  000E4C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3216  000E50  2ADE               	incf	postinc2,f,c
  3217  000E52  0E00               	movlw	0
  3218  000E54  22DD               	addwfc	postdec2,f,c
  3219  000E56                     
  3220                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3221  000E56  0E00               	movlw	0
  3222  000E58  0100               	movlb	0	; () banked
  3223  000E5A  6FEF               	movwf	(_width+1)& (0+255),b
  3224  000E5C  0E00               	movlw	0
  3225  000E5E  6FEE               	movwf	_width& (0+255),b
  3226  000E60  C0EE  F052         	movff	_width,_flags
  3227  000E64  C0EF  F053         	movff	_width+1,_flags+1
  3228  000E68                     
  3229                           ; BSR set to: 0
  3230                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3231  000E68  69F0               	setf	_prec& (0+255),b
  3232  000E6A  69F1               	setf	(_prec+1)& (0+255),b
  3233  000E6C                     
  3234                           ; BSR set to: 0
  3235                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  3236  000E6C  0E00               	movlw	0
  3237  000E6E  6F69               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3238  000E70  0E00               	movlw	0
  3239  000E72  6F68               	movwf	vfpfcnvrt@done& (0+255),b
  3240                           
  3241                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  3242  000E74  EF84  F007         	goto	l3245
  3243  000E78                     l3219:
  3244                           
  3245                           ; BSR set to: 0
  3246                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  3247  000E78  8052               	bsf	_flags^0,0,c
  3248  000E7A                     l3221:
  3249                           
  3250                           ; BSR set to: 0
  3251                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  3252  000E7A  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3253  000E7E  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3254  000E82  2ADE               	incf	postinc2,f,c
  3255  000E84  0E00               	movlw	0
  3256  000E86  22DD               	addwfc	postdec2,f,c
  3257                           
  3258                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  3259  000E88  EF84  F007         	goto	l3245
  3260  000E8C                     l3223:
  3261                           
  3262                           ; BSR set to: 0
  3263                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  3264  000E8C  8252               	bsf	_flags^0,1,c
  3265  000E8E  EF3D  F007         	goto	l3221
  3266  000E92                     l3227:
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  3270  000E92  8452               	bsf	_flags^0,2,c
  3271  000E94  EF3D  F007         	goto	l3221
  3272  000E98                     l3231:
  3273                           
  3274                           ; BSR set to: 0
  3275                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  3276  000E98  8652               	bsf	_flags^0,3,c
  3277  000E9A  EF3D  F007         	goto	l3221
  3278  000E9E                     l3235:
  3279                           
  3280                           ; BSR set to: 0
  3281                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  3282  000E9E  8852               	bsf	_flags^0,4,c
  3283  000EA0  EF3D  F007         	goto	l3221
  3284  000EA4                     l3239:
  3285                           
  3286                           ; BSR set to: 0
  3287                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  3288  000EA4  0E00               	movlw	0
  3289  000EA6  6F69               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3290  000EA8  0E01               	movlw	1
  3291  000EAA  6F68               	movwf	vfpfcnvrt@done& (0+255),b
  3292                           
  3293                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  3294  000EAC  EF84  F007         	goto	l3245
  3295  000EB0                     l3243:
  3296                           
  3297                           ; BSR set to: 0
  3298  000EB0  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3299  000EB4  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3300  000EB8  CFDE FFF6          	movff	postinc2,tblptrl
  3301  000EBC  CFDD FFF7          	movff	postdec2,tblptrh
  3302  000EC0                     	if	0	;tblptru may be non-zero
  3303  000EC0                     	endif
  3304  000EC0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3305  000EC0  0E00               	movlw	low (__mediumconst shr (0+16))
  3306  000EC2  6EF8               	movwf	tblptru,c
  3307  000EC4                     	endif
  3308  000EC4  0008               	tblrd		*
  3309  000EC6  50F5               	movf	tablat,w,c
  3310  000EC8  6E4A               	movwf	??_vfpfcnvrt^0,c
  3311  000ECA  6A4B               	clrf	(??_vfpfcnvrt+1)^0,c
  3312                           
  3313                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3314                           ; Switch size 1, requested type "simple"
  3315                           ; Number of cases is 1, Range of values is 0 to 0
  3316                           ; switch strategies available:
  3317                           ; Name         Instructions Cycles
  3318                           ; simple_byte            4     3 (average)
  3319                           ;	Chosen strategy is simple_byte
  3320  000ECC  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
  3321  000ECE  0A00               	xorlw	0	; case 0
  3322  000ED0  B4D8               	btfsc	status,2,c
  3323  000ED2  EF6D  F007         	goto	l3511
  3324  000ED6  EF52  F007         	goto	l3239
  3325  000EDA                     l3511:
  3326                           
  3327                           ; BSR set to: 0
  3328                           ; Switch size 1, requested type "simple"
  3329                           ; Number of cases is 5, Range of values is 32 to 48
  3330                           ; switch strategies available:
  3331                           ; Name         Instructions Cycles
  3332                           ; simple_byte           16     9 (average)
  3333                           ;	Chosen strategy is simple_byte
  3334  000EDA  504A               	movf	??_vfpfcnvrt^0,w,c
  3335  000EDC  0A20               	xorlw	32	; case 32
  3336  000EDE  B4D8               	btfsc	status,2,c
  3337  000EE0  EF4C  F007         	goto	l3231
  3338  000EE4  0A03               	xorlw	3	; case 35
  3339  000EE6  B4D8               	btfsc	status,2,c
  3340  000EE8  EF4F  F007         	goto	l3235
  3341  000EEC  0A08               	xorlw	8	; case 43
  3342  000EEE  B4D8               	btfsc	status,2,c
  3343  000EF0  EF49  F007         	goto	l3227
  3344  000EF4  0A06               	xorlw	6	; case 45
  3345  000EF6  B4D8               	btfsc	status,2,c
  3346  000EF8  EF3C  F007         	goto	l3219
  3347  000EFC  0A1D               	xorlw	29	; case 48
  3348  000EFE  B4D8               	btfsc	status,2,c
  3349  000F00  EF46  F007         	goto	l3223
  3350  000F04  EF52  F007         	goto	l3239
  3351  000F08                     l3245:
  3352                           
  3353                           ; BSR set to: 0
  3354                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  3355  000F08  5168               	movf	vfpfcnvrt@done& (0+255),w,b
  3356  000F0A  1169               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  3357  000F0C  B4D8               	btfsc	status,2,c
  3358  000F0E  EF8B  F007         	goto	u3881
  3359  000F12  EF8D  F007         	goto	u3880
  3360  000F16                     u3881:
  3361  000F16  EF58  F007         	goto	l3243
  3362  000F1A                     u3880:
  3363  000F1A                     
  3364                           ; BSR set to: 0
  3365                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  3366  000F1A  A052               	btfss	_flags^0,0,c
  3367  000F1C  EF92  F007         	goto	u3891
  3368  000F20  EF94  F007         	goto	u3890
  3369  000F24                     u3891:
  3370  000F24  EF95  F007         	goto	l3249
  3371  000F28                     u3890:
  3372  000F28                     
  3373                           ; BSR set to: 0
  3374                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  3375  000F28  9252               	bcf	_flags^0,1,c
  3376  000F2A                     l3249:
  3377                           
  3378                           ; BSR set to: 0
  3379                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  3380  000F2A  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3381  000F2E  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3382  000F32  CFDE FFF6          	movff	postinc2,tblptrl
  3383  000F36  CFDD FFF7          	movff	postdec2,tblptrh
  3384  000F3A                     	if	0	;tblptru may be non-zero
  3385  000F3A                     	endif
  3386  000F3A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3387  000F3A  0E00               	movlw	low (__mediumconst shr (0+16))
  3388  000F3C  6EF8               	movwf	tblptru,c
  3389  000F3E                     	endif
  3390  000F3E  0008               	tblrd		*
  3391  000F40  50F5               	movf	tablat,w,c
  3392  000F42  0A2A               	xorlw	42
  3393  000F44  A4D8               	btfss	status,2,c
  3394  000F46  EFA7  F007         	goto	u3901
  3395  000F4A  EFA9  F007         	goto	u3900
  3396  000F4E                     u3901:
  3397  000F4E  EFD2  F007         	goto	l3257
  3398  000F52                     u3900:
  3399  000F52                     
  3400                           ; BSR set to: 0
  3401                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  3402  000F52  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3403  000F56  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3404  000F5A  2ADE               	incf	postinc2,f,c
  3405  000F5C  0E00               	movlw	0
  3406  000F5E  22DD               	addwfc	postdec2,f,c
  3407                           
  3408                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3409  000F60  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3410  000F64  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3411  000F68  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  3412  000F6C  0E02               	movlw	2
  3413  000F6E  26DE               	addwf	postinc2,f,c
  3414  000F70  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  3415  000F74  0E00               	movlw	0
  3416  000F76  22DD               	addwfc	postdec2,f,c
  3417  000F78  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3418  000F7C  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3419  000F80  CFDE F0EE          	movff	postinc2,_width
  3420  000F84  CFDD F0EF          	movff	postdec2,_width+1
  3421  000F88                     
  3422                           ; BSR set to: 0
  3423                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  3424  000F88  BFEF               	btfsc	(_width+1)& (0+255),7,b
  3425  000F8A  EFCB  F007         	goto	u3910
  3426  000F8E  EFC9  F007         	goto	u3911
  3427  000F92                     u3911:
  3428  000F92  EF18  F008         	goto	l3267
  3429  000F96                     u3910:
  3430  000F96                     
  3431                           ; BSR set to: 0
  3432                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  3433  000F96  8052               	bsf	_flags^0,0,c
  3434                           
  3435                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  3436  000F98  6DEE               	negf	_width& (0+255),b
  3437  000F9A  1FEF               	comf	(_width+1)& (0+255),f,b
  3438  000F9C  B0D8               	btfsc	status,0,c
  3439  000F9E  2BEF               	incf	(_width+1)& (0+255),f,b
  3440  000FA0  EF18  F008         	goto	l3267
  3441  000FA4                     l3257:
  3442                           
  3443                           ; BSR set to: 0
  3444                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  3445  000FA4  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3446  000FA8  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3447  000FAC  CFDE F00C          	movff	postinc2,atoi@s
  3448  000FB0  CFDD F00D          	movff	postdec2,atoi@s+1
  3449  000FB4  EC20  F00B         	call	_atoi	;wreg free
  3450  000FB8  C00C  F0EE         	movff	?_atoi,_width
  3451  000FBC  C00D  F0EF         	movff	?_atoi+1,_width+1
  3452                           
  3453                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3454  000FC0  EFE9  F007         	goto	l3261
  3455  000FC4                     l3259:
  3456                           
  3457                           ; BSR set to: 0
  3458                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  3459  000FC4  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3460  000FC8  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3461  000FCC  2ADE               	incf	postinc2,f,c
  3462  000FCE  0E00               	movlw	0
  3463  000FD0  22DD               	addwfc	postdec2,f,c
  3464  000FD2                     l3261:
  3465  000FD2  0ED0               	movlw	208
  3466  000FD4  6E4A               	movwf	??_vfpfcnvrt^0,c
  3467  000FD6  0EFF               	movlw	255
  3468  000FD8  6E4B               	movwf	(??_vfpfcnvrt+1)^0,c
  3469  000FDA  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3470  000FDE  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3471  000FE2  CFDE FFF6          	movff	postinc2,tblptrl
  3472  000FE6  CFDD FFF7          	movff	postdec2,tblptrh
  3473  000FEA                     	if	0	;tblptru may be non-zero
  3474  000FEA                     	endif
  3475  000FEA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3476  000FEA  0E00               	movlw	low (__mediumconst shr (0+16))
  3477  000FEC  6EF8               	movwf	tblptru,c
  3478  000FEE                     	endif
  3479  000FEE  0008               	tblrd		*
  3480  000FF0  50F5               	movf	tablat,w,c
  3481  000FF2  6E4C               	movwf	(??_vfpfcnvrt+2)^0,c
  3482  000FF4  6A4D               	clrf	(??_vfpfcnvrt+3)^0,c
  3483  000FF6  504A               	movf	??_vfpfcnvrt^0,w,c
  3484  000FF8  264C               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3485  000FFA  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
  3486  000FFC  224D               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3487  000FFE  504D               	movf	(??_vfpfcnvrt+3)^0,w,c
  3488  001000  E10A               	bnz	u3920
  3489  001002  0E0A               	movlw	10
  3490  001004  5C4C               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3491  001006  A0D8               	btfss	status,0,c
  3492  001008  EF08  F008         	goto	u3921
  3493  00100C  EF0B  F008         	goto	u3920
  3494  001010                     u3921:
  3495  001010  0E01               	movlw	1
  3496  001012  EF0C  F008         	goto	u3930
  3497  001016                     u3920:
  3498  001016  0E00               	movlw	0
  3499  001018                     u3930:
  3500  001018  0100               	movlb	0	; () banked
  3501  00101A  6F6A               	movwf	_vfpfcnvrt$2239& (0+255),b
  3502  00101C  6B6B               	clrf	(_vfpfcnvrt$2239+1)& (0+255),b
  3503  00101E                     
  3504                           ; BSR set to: 0
  3505  00101E  516A               	movf	_vfpfcnvrt$2239& (0+255),w,b
  3506  001020  116B               	iorwf	(_vfpfcnvrt$2239+1)& (0+255),w,b
  3507  001022  A4D8               	btfss	status,2,c
  3508  001024  EF16  F008         	goto	u3941
  3509  001028  EF18  F008         	goto	u3940
  3510  00102C                     u3941:
  3511  00102C  EFE2  F007         	goto	l3259
  3512  001030                     u3940:
  3513  001030                     l3267:
  3514                           
  3515                           ; BSR set to: 0
  3516                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3517  001030  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3518  001034  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3519  001038  CFDE FFF6          	movff	postinc2,tblptrl
  3520  00103C  CFDD FFF7          	movff	postdec2,tblptrh
  3521  001040                     	if	0	;tblptru may be non-zero
  3522  001040                     	endif
  3523  001040                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3524  001040  0E00               	movlw	low (__mediumconst shr (0+16))
  3525  001042  6EF8               	movwf	tblptru,c
  3526  001044                     	endif
  3527  001044  0008               	tblrd		*
  3528  001046  50F5               	movf	tablat,w,c
  3529  001048  0A64               	xorlw	100
  3530  00104A  B4D8               	btfsc	status,2,c
  3531  00104C  EF2A  F008         	goto	u3951
  3532  001050  EF2C  F008         	goto	u3950
  3533  001054                     u3951:
  3534  001054  EF40  F008         	goto	l3271
  3535  001058                     u3950:
  3536  001058                     
  3537                           ; BSR set to: 0
  3538  001058  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3539  00105C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3540  001060  CFDE FFF6          	movff	postinc2,tblptrl
  3541  001064  CFDD FFF7          	movff	postdec2,tblptrh
  3542  001068                     	if	0	;tblptru may be non-zero
  3543  001068                     	endif
  3544  001068                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3545  001068  0E00               	movlw	low (__mediumconst shr (0+16))
  3546  00106A  6EF8               	movwf	tblptru,c
  3547  00106C                     	endif
  3548  00106C  0008               	tblrd		*
  3549  00106E  50F5               	movf	tablat,w,c
  3550  001070  0A69               	xorlw	105
  3551  001072  A4D8               	btfss	status,2,c
  3552  001074  EF3E  F008         	goto	u3961
  3553  001078  EF40  F008         	goto	u3960
  3554  00107C                     u3961:
  3555  00107C  EF80  F008         	goto	l3277
  3556  001080                     u3960:
  3557  001080                     l3271:
  3558                           
  3559                           ; BSR set to: 0
  3560                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3561  001080  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3562  001084  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3563  001088  2ADE               	incf	postinc2,f,c
  3564  00108A  0E00               	movlw	0
  3565  00108C  22DD               	addwfc	postdec2,f,c
  3566                           
  3567                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3568  00108E  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3569  001092  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3570  001096  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  3571  00109A  0E02               	movlw	2
  3572  00109C  26DE               	addwf	postinc2,f,c
  3573  00109E  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  3574  0010A2  0E00               	movlw	0
  3575  0010A4  22DD               	addwfc	postdec2,f,c
  3576  0010A6  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3577  0010AA  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3578  0010AE  CFDE F060          	movff	postinc2,vfpfcnvrt@ll
  3579  0010B2  CFDD F061          	movff	postdec2,vfpfcnvrt@ll+1
  3580  0010B6  0E00               	movlw	0
  3581  0010B8  BF61               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3582  0010BA  0EFF               	movlw	-1
  3583  0010BC  6F62               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3584  0010BE  6F63               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3585  0010C0  6F64               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3586  0010C2  6F65               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3587  0010C4  6F66               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3588  0010C6  6F67               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3589  0010C8                     
  3590                           ; BSR set to: 0
  3591                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3592  0010C8  C044  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  3593  0010CC  C045  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3594  0010D0  C060  F022         	movff	vfpfcnvrt@ll,dtoa@d
  3595  0010D4  C061  F023         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3596  0010D8  C062  F024         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3597  0010DC  C063  F025         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3598  0010E0  C064  F026         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3599  0010E4  C065  F027         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3600  0010E8  C066  F028         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3601  0010EC  C067  F029         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3602  0010F0  ECD6  F008         	call	_dtoa	;wreg free
  3603  0010F4  C020  F044         	movff	?_dtoa,?_vfpfcnvrt
  3604  0010F8  C021  F045         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3605  0010FC  EFD5  F008         	goto	l1087
  3606  001100                     l3277:
  3607                           
  3608                           ; BSR set to: 0
  3609                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3610  001100  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3611  001104  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3612  001108  CFDE FFF6          	movff	postinc2,tblptrl
  3613  00110C  CFDD FFF7          	movff	postdec2,tblptrh
  3614  001110                     	if	0	;tblptru may be non-zero
  3615  001110                     	endif
  3616  001110                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3617  001110  0E00               	movlw	low (__mediumconst shr (0+16))
  3618  001112  6EF8               	movwf	tblptru,c
  3619  001114                     	endif
  3620  001114  0008               	tblrd		*
  3621  001116  50F5               	movf	tablat,w,c
  3622  001118  0A25               	xorlw	37
  3623  00111A  A4D8               	btfss	status,2,c
  3624  00111C  EF92  F008         	goto	u3971
  3625  001120  EF94  F008         	goto	u3970
  3626  001124                     u3971:
  3627  001124  EFAB  F008         	goto	l3287
  3628  001128                     u3970:
  3629  001128                     
  3630                           ; BSR set to: 0
  3631                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3632  001128  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3633  00112C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3634  001130  2ADE               	incf	postinc2,f,c
  3635  001132  0E00               	movlw	0
  3636  001134  22DD               	addwfc	postdec2,f,c
  3637  001136                     
  3638                           ; BSR set to: 0
  3639                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3640  001136  0E00               	movlw	0
  3641  001138  6E06               	movwf	(fputc@c+1)^0,c
  3642  00113A  0E25               	movlw	37
  3643  00113C  6E05               	movwf	fputc@c^0,c
  3644  00113E  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  3645  001142  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3646  001146  ECAE  F010         	call	_fputc	;wreg free
  3647  00114A                     l3283:
  3648                           
  3649                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3650  00114A  0E00               	movlw	0
  3651  00114C  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  3652  00114E  0E01               	movlw	1
  3653  001150  6E44               	movwf	?_vfpfcnvrt^0,c
  3654  001152  EFD5  F008         	goto	l1087
  3655  001156                     l3287:
  3656                           
  3657                           ; BSR set to: 0
  3658                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3659  001156  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3660  00115A  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3661  00115E  2ADE               	incf	postinc2,f,c
  3662  001160  0E00               	movlw	0
  3663  001162  22DD               	addwfc	postdec2,f,c
  3664  001164                     
  3665                           ; BSR set to: 0
  3666                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3667  001164  0E00               	movlw	0
  3668  001166  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  3669  001168  0E00               	movlw	0
  3670  00116A  6E44               	movwf	?_vfpfcnvrt^0,c
  3671  00116C  EFD5  F008         	goto	l1087
  3672  001170                     l3293:
  3673                           
  3674                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3675  001170  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3676  001174  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3677  001178  CFDE FFF6          	movff	postinc2,tblptrl
  3678  00117C  CFDD FFF7          	movff	postdec2,tblptrh
  3679  001180                     	if	0	;tblptru may be non-zero
  3680  001180                     	endif
  3681  001180                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3682  001180  0E00               	movlw	low (__mediumconst shr (0+16))
  3683  001182  6EF8               	movwf	tblptru,c
  3684  001184                     	endif
  3685  001184  0008               	tblrd		*
  3686  001186  50F5               	movf	tablat,w,c
  3687  001188  6E05               	movwf	fputc@c^0,c
  3688  00118A  6A06               	clrf	(fputc@c+1)^0,c
  3689  00118C  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  3690  001190  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3691  001194  ECAE  F010         	call	_fputc	;wreg free
  3692  001198                     
  3693                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3694  001198  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3695  00119C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3696  0011A0  2ADE               	incf	postinc2,f,c
  3697  0011A2  0E00               	movlw	0
  3698  0011A4  22DD               	addwfc	postdec2,f,c
  3699  0011A6  EFA5  F008         	goto	l3283
  3700  0011AA                     l1087:
  3701  0011AA  0012               	return		;funcret
  3702  0011AC                     __end_of_vfpfcnvrt:
  3703                           	callstack 0
  3704                           
  3705 ;; *************** function _dtoa *****************
  3706 ;; Defined at:
  3707 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  3710 ;;		 -> sprintf@f(6), 
  3711 ;;  d               8   33[COMRAM] long long 
  3712 ;; Auto vars:     Size  Location     Type
  3713 ;;  n               8   57[COMRAM] long long 
  3714 ;;  i               2   65[COMRAM] int 
  3715 ;;  s               2   55[COMRAM] int 
  3716 ;;  w               2   53[COMRAM] int 
  3717 ;;  p               2   51[COMRAM] int 
  3718 ;; Return value:  Size  Location     Type
  3719 ;;                  2   31[COMRAM] int 
  3720 ;; Registers used:
  3721 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3722 ;; Tracked objects:
  3723 ;;		On entry : 0/0
  3724 ;;		On exit  : 0/0
  3725 ;;		Unchanged: 0/0
  3726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3727 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3728 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3729 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3730 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3731 ;;Total ram usage:       36 bytes
  3732 ;; Hardware stack levels used: 1
  3733 ;; Hardware stack levels required when called: 6
  3734 ;; This function calls:
  3735 ;;		___aodiv
  3736 ;;		___aomod
  3737 ;;		_abs
  3738 ;;		_pad
  3739 ;; This function is called by:
  3740 ;;		_vfpfcnvrt
  3741 ;; This function uses a non-reentrant model
  3742 ;;
  3743                           
  3744                           	psect	text19
  3745  0011AC                     __ptext19:
  3746                           	callstack 0
  3747  0011AC                     _dtoa:
  3748                           	callstack 20
  3749  0011AC                     
  3750                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  3751  0011AC  C022  F03A         	movff	dtoa@d,dtoa@n
  3752  0011B0  C023  F03B         	movff	dtoa@d+1,dtoa@n+1
  3753  0011B4  C024  F03C         	movff	dtoa@d+2,dtoa@n+2
  3754  0011B8  C025  F03D         	movff	dtoa@d+3,dtoa@n+3
  3755  0011BC  C026  F03E         	movff	dtoa@d+4,dtoa@n+4
  3756  0011C0  C027  F03F         	movff	dtoa@d+5,dtoa@n+5
  3757  0011C4  C028  F040         	movff	dtoa@d+6,dtoa@n+6
  3758  0011C8  C029  F041         	movff	dtoa@d+7,dtoa@n+7
  3759  0011CC                     
  3760                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  3761  0011CC  BE41               	btfsc	(dtoa@n+7)^0,7,c
  3762  0011CE  EFEB  F008         	goto	u3651
  3763  0011D2  EFEE  F008         	goto	u3650
  3764  0011D6                     u3651:
  3765  0011D6  0E01               	movlw	1
  3766  0011D8  EFEF  F008         	goto	u3660
  3767  0011DC                     u3650:
  3768  0011DC  0E00               	movlw	0
  3769  0011DE                     u3660:
  3770  0011DE  6E38               	movwf	dtoa@s^0,c
  3771  0011E0  6A39               	clrf	(dtoa@s+1)^0,c
  3772                           
  3773                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  3774  0011E2  5038               	movf	dtoa@s^0,w,c
  3775  0011E4  1039               	iorwf	(dtoa@s+1)^0,w,c
  3776  0011E6  B4D8               	btfsc	status,2,c
  3777  0011E8  EFF8  F008         	goto	u3671
  3778  0011EC  EFFA  F008         	goto	u3670
  3779  0011F0                     u3671:
  3780  0011F0  EF0A  F009         	goto	l3111
  3781  0011F4                     u3670:
  3782  0011F4                     
  3783                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  3784  0011F4  1E41               	comf	(dtoa@n+7)^0,f,c
  3785  0011F6  1E40               	comf	(dtoa@n+6)^0,f,c
  3786  0011F8  1E3F               	comf	(dtoa@n+5)^0,f,c
  3787  0011FA  1E3E               	comf	(dtoa@n+4)^0,f,c
  3788  0011FC  1E3D               	comf	(dtoa@n+3)^0,f,c
  3789  0011FE  1E3C               	comf	(dtoa@n+2)^0,f,c
  3790  001200  1E3B               	comf	(dtoa@n+1)^0,f,c
  3791  001202  6C3A               	negf	dtoa@n^0,c
  3792  001204  0E00               	movlw	0
  3793  001206  223B               	addwfc	(dtoa@n+1)^0,f,c
  3794  001208  223C               	addwfc	(dtoa@n+2)^0,f,c
  3795  00120A  223D               	addwfc	(dtoa@n+3)^0,f,c
  3796  00120C  223E               	addwfc	(dtoa@n+4)^0,f,c
  3797  00120E  223F               	addwfc	(dtoa@n+5)^0,f,c
  3798  001210  2240               	addwfc	(dtoa@n+6)^0,f,c
  3799  001212  2241               	addwfc	(dtoa@n+7)^0,f,c
  3800  001214                     l3111:
  3801                           
  3802                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  3803  001214  0100               	movlb	0	; () banked
  3804  001216  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  3805  001218  EF10  F009         	goto	u3681
  3806  00121C  EF12  F009         	goto	u3680
  3807  001220                     u3681:
  3808  001220  EF13  F009         	goto	l3115
  3809  001224                     u3680:
  3810  001224                     
  3811                           ; BSR set to: 0
  3812                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  3813  001224  9252               	bcf	_flags^0,1,c
  3814  001226                     l3115:
  3815                           
  3816                           ; BSR set to: 0
  3817                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  3818  001226  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  3819  001228  EF20  F009         	goto	u3690
  3820  00122C  51F1               	movf	(_prec+1)& (0+255),w,b
  3821  00122E  E106               	bnz	u3691
  3822  001230  05F0               	decf	_prec& (0+255),w,b
  3823  001232  B0D8               	btfsc	status,0,c
  3824  001234  EF1E  F009         	goto	u3691
  3825  001238  EF20  F009         	goto	u3690
  3826  00123C                     u3691:
  3827  00123C  EF26  F009         	goto	l1038
  3828  001240                     u3690:
  3829  001240                     
  3830                           ; BSR set to: 0
  3831  001240  0E00               	movlw	0
  3832  001242  6E35               	movwf	(dtoa@p+1)^0,c
  3833  001244  0E01               	movlw	1
  3834  001246  6E34               	movwf	dtoa@p^0,c
  3835  001248  EF2A  F009         	goto	l1040
  3836  00124C                     l1038:
  3837                           
  3838                           ; BSR set to: 0
  3839  00124C  C0F0  F034         	movff	_prec,dtoa@p
  3840  001250  C0F1  F035         	movff	_prec+1,dtoa@p+1
  3841  001254                     l1040:
  3842                           
  3843                           ; BSR set to: 0
  3844                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  3845  001254  C0EE  F036         	movff	_width,dtoa@w
  3846  001258  C0EF  F037         	movff	_width+1,dtoa@w+1
  3847  00125C                     
  3848                           ; BSR set to: 0
  3849                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  3850  00125C  5038               	movf	dtoa@s^0,w,c
  3851  00125E  1039               	iorwf	(dtoa@s+1)^0,w,c
  3852  001260  A4D8               	btfss	status,2,c
  3853  001262  EF35  F009         	goto	u3701
  3854  001266  EF37  F009         	goto	u3700
  3855  00126A                     u3701:
  3856  00126A  EF3E  F009         	goto	l3123
  3857  00126E                     u3700:
  3858  00126E                     
  3859                           ; BSR set to: 0
  3860  00126E  A452               	btfss	_flags^0,2,c
  3861  001270  EF3C  F009         	goto	u3711
  3862  001274  EF3E  F009         	goto	u3710
  3863  001278                     u3711:
  3864  001278  EF41  F009         	goto	l3125
  3865  00127C                     u3710:
  3866  00127C                     l3123:
  3867                           
  3868                           ; BSR set to: 0
  3869                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  3870  00127C  0636               	decf	dtoa@w^0,f,c
  3871  00127E  A0D8               	btfss	status,0,c
  3872  001280  0637               	decf	(dtoa@w+1)^0,f,c
  3873  001282                     l3125:
  3874                           
  3875                           ; BSR set to: 0
  3876                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  3877  001282  0E00               	movlw	0
  3878  001284  6E43               	movwf	(dtoa@i+1)^0,c
  3879  001286  0E1F               	movlw	31
  3880  001288  6E42               	movwf	dtoa@i^0,c
  3881  00128A                     
  3882                           ; BSR set to: 0
  3883                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  3884  00128A  0E00               	movlw	0
  3885  00128C  0101               	movlb	1	; () banked
  3886  00128E  6F1F               	movwf	(_dbuf+31)& (0+255),b
  3887                           
  3888                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3889  001290  EFC6  F009         	goto	l3139
  3890  001294                     l3129:
  3891                           
  3892                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  3893  001294  0642               	decf	dtoa@i^0,f,c
  3894  001296  A0D8               	btfss	status,0,c
  3895  001298  0643               	decf	(dtoa@i+1)^0,f,c
  3896  00129A                     
  3897                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3898  00129A  0E00               	movlw	low _dbuf
  3899  00129C  2442               	addwf	dtoa@i^0,w,c
  3900  00129E  6ED9               	movwf	fsr2l,c
  3901  0012A0  0E01               	movlw	high _dbuf
  3902  0012A2  2043               	addwfc	(dtoa@i+1)^0,w,c
  3903  0012A4  6EDA               	movwf	fsr2h,c
  3904  0012A6  C03A  F005         	movff	dtoa@n,___aomod@dividend
  3905  0012AA  C03B  F006         	movff	dtoa@n+1,___aomod@dividend+1
  3906  0012AE  C03C  F007         	movff	dtoa@n+2,___aomod@dividend+2
  3907  0012B2  C03D  F008         	movff	dtoa@n+3,___aomod@dividend+3
  3908  0012B6  C03E  F009         	movff	dtoa@n+4,___aomod@dividend+4
  3909  0012BA  C03F  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  3910  0012BE  C040  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  3911  0012C2  C041  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  3912  0012C6  0E0A               	movlw	10
  3913  0012C8  6E0D               	movwf	___aomod@divisor^0,c
  3914  0012CA  0E00               	movlw	0
  3915  0012CC  6E0E               	movwf	(___aomod@divisor+1)^0,c
  3916  0012CE  0E00               	movlw	0
  3917  0012D0  6E0F               	movwf	(___aomod@divisor+2)^0,c
  3918  0012D2  0E00               	movlw	0
  3919  0012D4  6E10               	movwf	(___aomod@divisor+3)^0,c
  3920  0012D6  0E00               	movlw	0
  3921  0012D8  6E11               	movwf	(___aomod@divisor+4)^0,c
  3922  0012DA  0E00               	movlw	0
  3923  0012DC  6E12               	movwf	(___aomod@divisor+5)^0,c
  3924  0012DE  0E00               	movlw	0
  3925  0012E0  6E13               	movwf	(___aomod@divisor+6)^0,c
  3926  0012E2  0E00               	movlw	0
  3927  0012E4  6E14               	movwf	(___aomod@divisor+7)^0,c
  3928  0012E6  EC86  F00D         	call	___aomod	;wreg free
  3929  0012EA  C005  F02A         	movff	?___aomod,??_dtoa
  3930  0012EE  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  3931  0012F2  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  3932  0012F6  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  3933  0012FA  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  3934  0012FE  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  3935  001302  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  3936  001306  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  3937  00130A  C02A  F017         	movff	??_dtoa,abs@a
  3938  00130E  C02C  F018         	movff	??_dtoa+2,abs@a+1
  3939  001312  ECEC  F013         	call	_abs	;wreg free
  3940  001316  5017               	movf	?_abs^0,w,c
  3941  001318  0F30               	addlw	48
  3942  00131A  6EDF               	movwf	indf2,c
  3943  00131C                     
  3944                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  3945  00131C  0634               	decf	dtoa@p^0,f,c
  3946  00131E  A0D8               	btfss	status,0,c
  3947  001320  0635               	decf	(dtoa@p+1)^0,f,c
  3948  001322                     
  3949                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  3950  001322  0636               	decf	dtoa@w^0,f,c
  3951  001324  A0D8               	btfss	status,0,c
  3952  001326  0637               	decf	(dtoa@w+1)^0,f,c
  3953  001328                     
  3954                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  3955  001328  C03A  F005         	movff	dtoa@n,___aodiv@dividend
  3956  00132C  C03B  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  3957  001330  C03C  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  3958  001334  C03D  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  3959  001338  C03E  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  3960  00133C  C03F  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  3961  001340  C040  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  3962  001344  C041  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  3963  001348  0E0A               	movlw	10
  3964  00134A  6E0D               	movwf	___aodiv@divisor^0,c
  3965  00134C  0E00               	movlw	0
  3966  00134E  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  3967  001350  0E00               	movlw	0
  3968  001352  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  3969  001354  0E00               	movlw	0
  3970  001356  6E10               	movwf	(___aodiv@divisor+3)^0,c
  3971  001358  0E00               	movlw	0
  3972  00135A  6E11               	movwf	(___aodiv@divisor+4)^0,c
  3973  00135C  0E00               	movlw	0
  3974  00135E  6E12               	movwf	(___aodiv@divisor+5)^0,c
  3975  001360  0E00               	movlw	0
  3976  001362  6E13               	movwf	(___aodiv@divisor+6)^0,c
  3977  001364  0E00               	movlw	0
  3978  001366  6E14               	movwf	(___aodiv@divisor+7)^0,c
  3979  001368  ECC2  F00C         	call	___aodiv	;wreg free
  3980  00136C  C005  F03A         	movff	?___aodiv,dtoa@n
  3981  001370  C006  F03B         	movff	?___aodiv+1,dtoa@n+1
  3982  001374  C007  F03C         	movff	?___aodiv+2,dtoa@n+2
  3983  001378  C008  F03D         	movff	?___aodiv+3,dtoa@n+3
  3984  00137C  C009  F03E         	movff	?___aodiv+4,dtoa@n+4
  3985  001380  C00A  F03F         	movff	?___aodiv+5,dtoa@n+5
  3986  001384  C00B  F040         	movff	?___aodiv+6,dtoa@n+6
  3987  001388  C00C  F041         	movff	?___aodiv+7,dtoa@n+7
  3988  00138C                     l3139:
  3989                           
  3990                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3991  00138C  BE43               	btfsc	(dtoa@i+1)^0,7,c
  3992  00138E  EFD1  F009         	goto	u3721
  3993  001392  5043               	movf	(dtoa@i+1)^0,w,c
  3994  001394  E108               	bnz	u3720
  3995  001396  0442               	decf	dtoa@i^0,w,c
  3996  001398  A0D8               	btfss	status,0,c
  3997  00139A  EFD1  F009         	goto	u3721
  3998  00139E  EFD3  F009         	goto	u3720
  3999  0013A2                     u3721:
  4000  0013A2  EF03  F00A         	goto	l3149
  4001  0013A6                     u3720:
  4002  0013A6  503A               	movf	dtoa@n^0,w,c
  4003  0013A8  103B               	iorwf	(dtoa@n+1)^0,w,c
  4004  0013AA  103C               	iorwf	(dtoa@n+2)^0,w,c
  4005  0013AC  103D               	iorwf	(dtoa@n+3)^0,w,c
  4006  0013AE  103E               	iorwf	(dtoa@n+4)^0,w,c
  4007  0013B0  103F               	iorwf	(dtoa@n+5)^0,w,c
  4008  0013B2  1040               	iorwf	(dtoa@n+6)^0,w,c
  4009  0013B4  1041               	iorwf	(dtoa@n+7)^0,w,c
  4010  0013B6  A4D8               	btfss	status,2,c
  4011  0013B8  EFE0  F009         	goto	u3731
  4012  0013BC  EFE2  F009         	goto	u3730
  4013  0013C0                     u3731:
  4014  0013C0  EF4A  F009         	goto	l3129
  4015  0013C4                     u3730:
  4016  0013C4  BE35               	btfsc	(dtoa@p+1)^0,7,c
  4017  0013C6  EFEF  F009         	goto	u3740
  4018  0013CA  5035               	movf	(dtoa@p+1)^0,w,c
  4019  0013CC  E106               	bnz	u3741
  4020  0013CE  0434               	decf	dtoa@p^0,w,c
  4021  0013D0  B0D8               	btfsc	status,0,c
  4022  0013D2  EFED  F009         	goto	u3741
  4023  0013D6  EFEF  F009         	goto	u3740
  4024  0013DA                     u3741:
  4025  0013DA  EF4A  F009         	goto	l3129
  4026  0013DE                     u3740:
  4027  0013DE  BE37               	btfsc	(dtoa@w+1)^0,7,c
  4028  0013E0  EFFA  F009         	goto	u3751
  4029  0013E4  5037               	movf	(dtoa@w+1)^0,w,c
  4030  0013E6  E108               	bnz	u3750
  4031  0013E8  0436               	decf	dtoa@w^0,w,c
  4032  0013EA  A0D8               	btfss	status,0,c
  4033  0013EC  EFFA  F009         	goto	u3751
  4034  0013F0  EFFC  F009         	goto	u3750
  4035  0013F4                     u3751:
  4036  0013F4  EF03  F00A         	goto	l3149
  4037  0013F8                     u3750:
  4038  0013F8  B252               	btfsc	_flags^0,1,c
  4039  0013FA  EF01  F00A         	goto	u3761
  4040  0013FE  EF03  F00A         	goto	u3760
  4041  001402                     u3761:
  4042  001402  EF4A  F009         	goto	l3129
  4043  001406                     u3760:
  4044  001406                     l3149:
  4045                           
  4046                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  4047  001406  5038               	movf	dtoa@s^0,w,c
  4048  001408  1039               	iorwf	(dtoa@s+1)^0,w,c
  4049  00140A  A4D8               	btfss	status,2,c
  4050  00140C  EF0A  F00A         	goto	u3771
  4051  001410  EF0C  F00A         	goto	u3770
  4052  001414                     u3771:
  4053  001414  EF13  F00A         	goto	l3153
  4054  001418                     u3770:
  4055  001418  A452               	btfss	_flags^0,2,c
  4056  00141A  EF11  F00A         	goto	u3781
  4057  00141E  EF13  F00A         	goto	u3780
  4058  001422                     u3781:
  4059  001422  EF31  F00A         	goto	l3163
  4060  001426                     u3780:
  4061  001426                     l3153:
  4062                           
  4063                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  4064  001426  0642               	decf	dtoa@i^0,f,c
  4065  001428  A0D8               	btfss	status,0,c
  4066  00142A  0643               	decf	(dtoa@i+1)^0,f,c
  4067  00142C                     
  4068                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  4069  00142C  5038               	movf	dtoa@s^0,w,c
  4070  00142E  1039               	iorwf	(dtoa@s+1)^0,w,c
  4071  001430  A4D8               	btfss	status,2,c
  4072  001432  EF1D  F00A         	goto	u3791
  4073  001436  EF1F  F00A         	goto	u3790
  4074  00143A                     u3791:
  4075  00143A  EF25  F00A         	goto	l3159
  4076  00143E                     u3790:
  4077  00143E  0E00               	movlw	0
  4078  001440  6E33               	movwf	(_dtoa$2224+1)^0,c
  4079  001442  0E2B               	movlw	43
  4080  001444  6E32               	movwf	_dtoa$2224^0,c
  4081  001446  EF29  F00A         	goto	l3161
  4082  00144A                     l3159:
  4083  00144A  0E00               	movlw	0
  4084  00144C  6E33               	movwf	(_dtoa$2224+1)^0,c
  4085  00144E  0E2D               	movlw	45
  4086  001450  6E32               	movwf	_dtoa$2224^0,c
  4087  001452                     l3161:
  4088  001452  0E00               	movlw	low _dbuf
  4089  001454  2442               	addwf	dtoa@i^0,w,c
  4090  001456  6ED9               	movwf	fsr2l,c
  4091  001458  0E01               	movlw	high _dbuf
  4092  00145A  2043               	addwfc	(dtoa@i+1)^0,w,c
  4093  00145C  6EDA               	movwf	fsr2h,c
  4094  00145E  C032  FFDF         	movff	_dtoa$2224,indf2
  4095  001462                     l3163:
  4096                           
  4097                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  4098  001462  C020  F015         	movff	dtoa@fp,pad@fp
  4099  001466  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  4100  00146A  0E00               	movlw	low _dbuf
  4101  00146C  2442               	addwf	dtoa@i^0,w,c
  4102  00146E  6E17               	movwf	pad@buf^0,c
  4103  001470  0E01               	movlw	high _dbuf
  4104  001472  2043               	addwfc	(dtoa@i+1)^0,w,c
  4105  001474  6E18               	movwf	(pad@buf+1)^0,c
  4106  001476  C036  F019         	movff	dtoa@w,pad@p
  4107  00147A  C037  F01A         	movff	dtoa@w+1,pad@p+1
  4108  00147E  ECD7  F011         	call	_pad	;wreg free
  4109  001482  C015  F020         	movff	?_pad,?_dtoa
  4110  001486  C016  F021         	movff	?_pad+1,?_dtoa+1
  4111  00148A  0012               	return		;funcret
  4112  00148C                     __end_of_dtoa:
  4113                           	callstack 0
  4114                           
  4115 ;; *************** function _pad *****************
  4116 ;; Defined at:
  4117 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4118 ;; Parameters:    Size  Location     Type
  4119 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  4120 ;;		 -> sprintf@f(6), 
  4121 ;;  buf             2   22[COMRAM] PTR unsigned char 
  4122 ;;		 -> dbuf(32), 
  4123 ;;  p               2   24[COMRAM] int 
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;  w               2   29[COMRAM] int 
  4126 ;;  i               2   27[COMRAM] int 
  4127 ;; Return value:  Size  Location     Type
  4128 ;;                  2   20[COMRAM] int 
  4129 ;; Registers used:
  4130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4131 ;; Tracked objects:
  4132 ;;		On entry : 0/0
  4133 ;;		On exit  : 0/0
  4134 ;;		Unchanged: 0/0
  4135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4136 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4137 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4138 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4139 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4140 ;;Total ram usage:       11 bytes
  4141 ;; Hardware stack levels used: 1
  4142 ;; Hardware stack levels required when called: 5
  4143 ;; This function calls:
  4144 ;;		_fputc
  4145 ;;		_fputs
  4146 ;;		_strlen
  4147 ;; This function is called by:
  4148 ;;		_dtoa
  4149 ;; This function uses a non-reentrant model
  4150 ;;
  4151                           
  4152                           	psect	text20
  4153  0023AE                     __ptext20:
  4154                           	callstack 0
  4155  0023AE                     _pad:
  4156                           	callstack 20
  4157  0023AE                     
  4158                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4159  0023AE  A052               	btfss	_flags^0,0,c
  4160  0023B0  EFDC  F011         	goto	u3561
  4161  0023B4  EFDE  F011         	goto	u3560
  4162  0023B8                     u3561:
  4163  0023B8  EFE8  F011         	goto	l3067
  4164  0023BC                     u3560:
  4165  0023BC                     
  4166                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4167  0023BC  C017  F00E         	movff	pad@buf,fputs@s
  4168  0023C0  C018  F00F         	movff	pad@buf+1,fputs@s+1
  4169  0023C4  C015  F010         	movff	pad@fp,fputs@fp
  4170  0023C8  C016  F011         	movff	pad@fp+1,fputs@fp+1
  4171  0023CC  ECA9  F013         	call	_fputs	;wreg free
  4172  0023D0                     l3067:
  4173                           
  4174                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4175  0023D0  BE1A               	btfsc	(pad@p+1)^0,7,c
  4176  0023D2  EFED  F011         	goto	u3571
  4177  0023D6  EFEF  F011         	goto	u3570
  4178  0023DA                     u3571:
  4179  0023DA  EFF5  F011         	goto	l3071
  4180  0023DE                     u3570:
  4181  0023DE  C019  F01E         	movff	pad@p,pad@w
  4182  0023E2  C01A  F01F         	movff	pad@p+1,pad@w+1
  4183  0023E6  EFF9  F011         	goto	l1027
  4184  0023EA                     l3071:
  4185  0023EA  0E00               	movlw	0
  4186  0023EC  6E1F               	movwf	(pad@w+1)^0,c
  4187  0023EE  0E00               	movlw	0
  4188  0023F0  6E1E               	movwf	pad@w^0,c
  4189  0023F2                     l1027:
  4190                           
  4191                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4192  0023F2  0E00               	movlw	0
  4193  0023F4  6E1D               	movwf	(pad@i+1)^0,c
  4194  0023F6  0E00               	movlw	0
  4195  0023F8  6E1C               	movwf	pad@i^0,c
  4196                           
  4197                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4198  0023FA  EF0B  F012         	goto	l3077
  4199  0023FE                     l3073:
  4200                           
  4201                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4202  0023FE  0E00               	movlw	0
  4203  002400  6E06               	movwf	(fputc@c+1)^0,c
  4204  002402  0E20               	movlw	32
  4205  002404  6E05               	movwf	fputc@c^0,c
  4206  002406  C015  F007         	movff	pad@fp,fputc@fp
  4207  00240A  C016  F008         	movff	pad@fp+1,fputc@fp+1
  4208  00240E  ECAE  F010         	call	_fputc	;wreg free
  4209  002412                     
  4210                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4211  002412  4A1C               	infsnz	pad@i^0,f,c
  4212  002414  2A1D               	incf	(pad@i+1)^0,f,c
  4213  002416                     l3077:
  4214                           
  4215                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4216  002416  501E               	movf	pad@w^0,w,c
  4217  002418  5C1C               	subwf	pad@i^0,w,c
  4218  00241A  501D               	movf	(pad@i+1)^0,w,c
  4219  00241C  0A80               	xorlw	128
  4220  00241E  6E1B               	movwf	??_pad^0,c
  4221  002420  501F               	movf	(pad@w+1)^0,w,c
  4222  002422  0A80               	xorlw	128
  4223  002424  581B               	subwfb	??_pad^0,w,c
  4224  002426  A0D8               	btfss	status,0,c
  4225  002428  EF18  F012         	goto	u3581
  4226  00242C  EF1A  F012         	goto	u3580
  4227  002430                     u3581:
  4228  002430  EFFF  F011         	goto	l3073
  4229  002434                     u3580:
  4230  002434                     
  4231                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4232  002434  B052               	btfsc	_flags^0,0,c
  4233  002436  EF1F  F012         	goto	u3591
  4234  00243A  EF21  F012         	goto	u3590
  4235  00243E                     u3591:
  4236  00243E  EF2B  F012         	goto	l3081
  4237  002442                     u3590:
  4238  002442                     
  4239                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4240  002442  C017  F00E         	movff	pad@buf,fputs@s
  4241  002446  C018  F00F         	movff	pad@buf+1,fputs@s+1
  4242  00244A  C015  F010         	movff	pad@fp,fputs@fp
  4243  00244E  C016  F011         	movff	pad@fp+1,fputs@fp+1
  4244  002452  ECA9  F013         	call	_fputs	;wreg free
  4245  002456                     l3081:
  4246                           
  4247                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4248  002456  C017  F005         	movff	pad@buf,strlen@s
  4249  00245A  C018  F006         	movff	pad@buf+1,strlen@s+1
  4250  00245E  EC28  F014         	call	_strlen	;wreg free
  4251  002462  501E               	movf	pad@w^0,w,c
  4252  002464  2405               	addwf	?_strlen^0,w,c
  4253  002466  6E15               	movwf	?_pad^0,c
  4254  002468  501F               	movf	(pad@w+1)^0,w,c
  4255  00246A  2006               	addwfc	(?_strlen+1)^0,w,c
  4256  00246C  6E16               	movwf	(?_pad+1)^0,c
  4257  00246E  0012               	return		;funcret
  4258  002470                     __end_of_pad:
  4259                           	callstack 0
  4260                           
  4261 ;; *************** function _strlen *****************
  4262 ;; Defined at:
  4263 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  4264 ;; Parameters:    Size  Location     Type
  4265 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4266 ;;		 -> dbuf(32), 
  4267 ;; Auto vars:     Size  Location     Type
  4268 ;;  a               2    6[COMRAM] PTR const unsigned char 
  4269 ;;		 -> dbuf(32), 
  4270 ;; Return value:  Size  Location     Type
  4271 ;;                  2    4[COMRAM] unsigned int 
  4272 ;; Registers used:
  4273 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4274 ;; Tracked objects:
  4275 ;;		On entry : 0/0
  4276 ;;		On exit  : 0/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4279 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4280 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4282 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4283 ;;Total ram usage:        4 bytes
  4284 ;; Hardware stack levels used: 1
  4285 ;; Hardware stack levels required when called: 2
  4286 ;; This function calls:
  4287 ;;		Nothing
  4288 ;; This function is called by:
  4289 ;;		_pad
  4290 ;; This function uses a non-reentrant model
  4291 ;;
  4292                           
  4293                           	psect	text21
  4294  002850                     __ptext21:
  4295                           	callstack 0
  4296  002850                     _strlen:
  4297                           	callstack 22
  4298  002850  C005  F007         	movff	strlen@s,strlen@a
  4299  002854  C006  F008         	movff	strlen@s+1,strlen@a+1
  4300  002858  EF30  F014         	goto	l2971
  4301  00285C                     l2969:
  4302  00285C  4A05               	infsnz	strlen@s^0,f,c
  4303  00285E  2A06               	incf	(strlen@s+1)^0,f,c
  4304  002860                     l2971:
  4305  002860  C005  FFD9         	movff	strlen@s,fsr2l
  4306  002864  C006  FFDA         	movff	strlen@s+1,fsr2h
  4307  002868  50DF               	movf	indf2,w,c
  4308  00286A  A4D8               	btfss	status,2,c
  4309  00286C  EF3A  F014         	goto	u3421
  4310  002870  EF3C  F014         	goto	u3420
  4311  002874                     u3421:
  4312  002874  EF2E  F014         	goto	l2969
  4313  002878                     u3420:
  4314  002878  5007               	movf	strlen@a^0,w,c
  4315  00287A  5C05               	subwf	strlen@s^0,w,c
  4316  00287C  6E05               	movwf	?_strlen^0,c
  4317  00287E  5008               	movf	(strlen@a+1)^0,w,c
  4318  002880  5806               	subwfb	(strlen@s+1)^0,w,c
  4319  002882  6E06               	movwf	(?_strlen+1)^0,c
  4320  002884  0012               	return		;funcret
  4321  002886                     __end_of_strlen:
  4322                           	callstack 0
  4323                           
  4324 ;; *************** function _fputs *****************
  4325 ;; Defined at:
  4326 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  4327 ;; Parameters:    Size  Location     Type
  4328 ;;  s               2   13[COMRAM] PTR const unsigned char 
  4329 ;;		 -> dbuf(32), 
  4330 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  4331 ;;		 -> sprintf@f(6), 
  4332 ;; Auto vars:     Size  Location     Type
  4333 ;;  i               2   18[COMRAM] int 
  4334 ;;  c               1   17[COMRAM] unsigned char 
  4335 ;; Return value:  Size  Location     Type
  4336 ;;                  2   13[COMRAM] int 
  4337 ;; Registers used:
  4338 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4339 ;; Tracked objects:
  4340 ;;		On entry : 0/0
  4341 ;;		On exit  : 0/0
  4342 ;;		Unchanged: 0/0
  4343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4344 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4345 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4347 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4348 ;;Total ram usage:        7 bytes
  4349 ;; Hardware stack levels used: 1
  4350 ;; Hardware stack levels required when called: 4
  4351 ;; This function calls:
  4352 ;;		_fputc
  4353 ;; This function is called by:
  4354 ;;		_pad
  4355 ;; This function uses a non-reentrant model
  4356 ;;
  4357                           
  4358                           	psect	text22
  4359  002752                     __ptext22:
  4360                           	callstack 0
  4361  002752                     _fputs:
  4362                           	callstack 20
  4363  002752  0E00               	movlw	0
  4364  002754  6E14               	movwf	(fputs@i+1)^0,c
  4365  002756  0E00               	movlw	0
  4366  002758  6E13               	movwf	fputs@i^0,c
  4367  00275A  EFBA  F013         	goto	l2965
  4368  00275E                     l2961:
  4369  00275E  C012  F005         	movff	fputs@c,fputc@c
  4370  002762  6A06               	clrf	(fputc@c+1)^0,c
  4371  002764  C010  F007         	movff	fputs@fp,fputc@fp
  4372  002768  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  4373  00276C  ECAE  F010         	call	_fputc	;wreg free
  4374  002770  4A13               	infsnz	fputs@i^0,f,c
  4375  002772  2A14               	incf	(fputs@i+1)^0,f,c
  4376  002774                     l2965:
  4377  002774  5013               	movf	fputs@i^0,w,c
  4378  002776  240E               	addwf	fputs@s^0,w,c
  4379  002778  6ED9               	movwf	fsr2l,c
  4380  00277A  5014               	movf	(fputs@i+1)^0,w,c
  4381  00277C  200F               	addwfc	(fputs@s+1)^0,w,c
  4382  00277E  6EDA               	movwf	fsr2h,c
  4383  002780  50DF               	movf	indf2,w,c
  4384  002782  6E12               	movwf	fputs@c^0,c
  4385  002784  5012               	movf	fputs@c^0,w,c
  4386  002786  A4D8               	btfss	status,2,c
  4387  002788  EFC8  F013         	goto	u3411
  4388  00278C  EFCA  F013         	goto	u3410
  4389  002790                     u3411:
  4390  002790  EFAF  F013         	goto	l2961
  4391  002794                     u3410:
  4392  002794  0012               	return		;funcret
  4393  002796                     __end_of_fputs:
  4394                           	callstack 0
  4395                           
  4396 ;; *************** function _fputc *****************
  4397 ;; Defined at:
  4398 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  4399 ;; Parameters:    Size  Location     Type
  4400 ;;  c               2    4[COMRAM] int 
  4401 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  4402 ;;		 -> sprintf@f(6), 
  4403 ;; Auto vars:     Size  Location     Type
  4404 ;;		None
  4405 ;; Return value:  Size  Location     Type
  4406 ;;                  2    4[COMRAM] int 
  4407 ;; Registers used:
  4408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/0
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4414 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4416 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4417 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4418 ;;Total ram usage:        9 bytes
  4419 ;; Hardware stack levels used: 1
  4420 ;; Hardware stack levels required when called: 3
  4421 ;; This function calls:
  4422 ;;		_putch
  4423 ;; This function is called by:
  4424 ;;		_pad
  4425 ;;		_vfpfcnvrt
  4426 ;;		_fputs
  4427 ;; This function uses a non-reentrant model
  4428 ;;
  4429                           
  4430                           	psect	text23
  4431  00215C                     __ptext23:
  4432                           	callstack 0
  4433  00215C                     _fputc:
  4434                           	callstack 23
  4435  00215C  5007               	movf	fputc@fp^0,w,c
  4436  00215E  1008               	iorwf	(fputc@fp+1)^0,w,c
  4437  002160  B4D8               	btfsc	status,2,c
  4438  002162  EFB5  F010         	goto	u3371
  4439  002166  EFB7  F010         	goto	u3370
  4440  00216A                     u3371:
  4441  00216A  EFC0  F010         	goto	l2949
  4442  00216E                     u3370:
  4443  00216E  5007               	movf	fputc@fp^0,w,c
  4444  002170  1008               	iorwf	(fputc@fp+1)^0,w,c
  4445  002172  A4D8               	btfss	status,2,c
  4446  002174  EFBE  F010         	goto	u3381
  4447  002178  EFC0  F010         	goto	u3380
  4448  00217C                     u3381:
  4449  00217C  EFC5  F010         	goto	l2951
  4450  002180                     u3380:
  4451  002180                     l2949:
  4452  002180  5005               	movf	fputc@c^0,w,c
  4453  002182  EC10  F015         	call	_putch
  4454  002186  EF12  F011         	goto	l1158
  4455  00218A                     l2951:
  4456  00218A  EE20 F004          	lfsr	2,4
  4457  00218E  5007               	movf	fputc@fp^0,w,c
  4458  002190  26D9               	addwf	fsr2l,f,c
  4459  002192  5008               	movf	(fputc@fp+1)^0,w,c
  4460  002194  22DA               	addwfc	fsr2h,f,c
  4461  002196  50DE               	movf	postinc2,w,c
  4462  002198  10DE               	iorwf	postinc2,w,c
  4463  00219A  B4D8               	btfsc	status,2,c
  4464  00219C  EFD2  F010         	goto	u3391
  4465  0021A0  EFD4  F010         	goto	u3390
  4466  0021A4                     u3391:
  4467  0021A4  EFEF  F010         	goto	l2955
  4468  0021A8                     u3390:
  4469  0021A8  EE20 F004          	lfsr	2,4
  4470  0021AC  5007               	movf	fputc@fp^0,w,c
  4471  0021AE  26D9               	addwf	fsr2l,f,c
  4472  0021B0  5008               	movf	(fputc@fp+1)^0,w,c
  4473  0021B2  22DA               	addwfc	fsr2h,f,c
  4474  0021B4  EE10 F002          	lfsr	1,2
  4475  0021B8  5007               	movf	fputc@fp^0,w,c
  4476  0021BA  26E1               	addwf	fsr1l,f,c
  4477  0021BC  5008               	movf	(fputc@fp+1)^0,w,c
  4478  0021BE  22E2               	addwfc	fsr1h,f,c
  4479  0021C0  50DE               	movf	postinc2,w,c
  4480  0021C2  5CE6               	subwf	postinc1,w,c
  4481  0021C4  50E6               	movf	postinc1,w,c
  4482  0021C6  0A80               	xorlw	128
  4483  0021C8  6E0D               	movwf	(??_fputc+4)^0,c
  4484  0021CA  50DE               	movf	postinc2,w,c
  4485  0021CC  0A80               	xorlw	128
  4486  0021CE  580D               	subwfb	(??_fputc+4)^0,w,c
  4487  0021D0  B0D8               	btfsc	status,0,c
  4488  0021D2  EFED  F010         	goto	u3401
  4489  0021D6  EFEF  F010         	goto	u3400
  4490  0021DA                     u3401:
  4491  0021DA  EF12  F011         	goto	l1158
  4492  0021DE                     u3400:
  4493  0021DE                     l2955:
  4494  0021DE  EE20 F002          	lfsr	2,2
  4495  0021E2  5007               	movf	fputc@fp^0,w,c
  4496  0021E4  26D9               	addwf	fsr2l,f,c
  4497  0021E6  5008               	movf	(fputc@fp+1)^0,w,c
  4498  0021E8  22DA               	addwfc	fsr2h,f,c
  4499  0021EA  CFDE F009          	movff	postinc2,??_fputc
  4500  0021EE  CFDD F00A          	movff	postdec2,??_fputc+1
  4501  0021F2  C007  FFD9         	movff	fputc@fp,fsr2l
  4502  0021F6  C008  FFDA         	movff	fputc@fp+1,fsr2h
  4503  0021FA  CFDE F00B          	movff	postinc2,??_fputc+2
  4504  0021FE  CFDD F00C          	movff	postdec2,??_fputc+3
  4505  002202  5009               	movf	??_fputc^0,w,c
  4506  002204  240B               	addwf	(??_fputc+2)^0,w,c
  4507  002206  6ED9               	movwf	fsr2l,c
  4508  002208  500A               	movf	(??_fputc+1)^0,w,c
  4509  00220A  200C               	addwfc	(??_fputc+3)^0,w,c
  4510  00220C  6EDA               	movwf	fsr2h,c
  4511  00220E  C005  FFDF         	movff	fputc@c,indf2
  4512  002212  EE20 F002          	lfsr	2,2
  4513  002216  5007               	movf	fputc@fp^0,w,c
  4514  002218  26D9               	addwf	fsr2l,f,c
  4515  00221A  5008               	movf	(fputc@fp+1)^0,w,c
  4516  00221C  22DA               	addwfc	fsr2h,f,c
  4517  00221E  2ADE               	incf	postinc2,f,c
  4518  002220  0E00               	movlw	0
  4519  002222  22DD               	addwfc	postdec2,f,c
  4520  002224                     l1158:
  4521  002224  0012               	return		;funcret
  4522  002226                     __end_of_fputc:
  4523                           	callstack 0
  4524                           
  4525 ;; *************** function _putch *****************
  4526 ;; Defined at:
  4527 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  4528 ;; Parameters:    Size  Location     Type
  4529 ;;  c               1    wreg     unsigned char 
  4530 ;; Auto vars:     Size  Location     Type
  4531 ;;  c               1    0[COMRAM] unsigned char 
  4532 ;; Return value:  Size  Location     Type
  4533 ;;                  1    wreg      void 
  4534 ;; Registers used:
  4535 ;;		wreg
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4545 ;;Total ram usage:        0 bytes
  4546 ;; Hardware stack levels used: 1
  4547 ;; Hardware stack levels required when called: 2
  4548 ;; This function calls:
  4549 ;;		Nothing
  4550 ;; This function is called by:
  4551 ;;		_fputc
  4552 ;; This function uses a non-reentrant model
  4553 ;;
  4554                           
  4555                           	psect	text24
  4556  002A20                     __ptext24:
  4557                           	callstack 0
  4558  002A20                     _putch:
  4559                           	callstack 23
  4560  002A20  0012               	return		;funcret
  4561  002A22                     __end_of_putch:
  4562                           	callstack 0
  4563                           
  4564 ;; *************** function _abs *****************
  4565 ;; Defined at:
  4566 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  4567 ;; Parameters:    Size  Location     Type
  4568 ;;  a               2   22[COMRAM] int 
  4569 ;; Auto vars:     Size  Location     Type
  4570 ;;		None
  4571 ;; Return value:  Size  Location     Type
  4572 ;;                  2   22[COMRAM] int 
  4573 ;; Registers used:
  4574 ;;		wreg, status,2, status,0
  4575 ;; Tracked objects:
  4576 ;;		On entry : 0/0
  4577 ;;		On exit  : 0/0
  4578 ;;		Unchanged: 0/0
  4579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4580 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4582 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4583 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4584 ;;Total ram usage:        4 bytes
  4585 ;; Hardware stack levels used: 1
  4586 ;; Hardware stack levels required when called: 2
  4587 ;; This function calls:
  4588 ;;		Nothing
  4589 ;; This function is called by:
  4590 ;;		_dtoa
  4591 ;; This function uses a non-reentrant model
  4592 ;;
  4593                           
  4594                           	psect	text25
  4595  0027D8                     __ptext25:
  4596                           	callstack 0
  4597  0027D8                     _abs:
  4598                           	callstack 23
  4599  0027D8  BE18               	btfsc	(abs@a+1)^0,7,c
  4600  0027DA  EFF9  F013         	goto	u3600
  4601  0027DE  5018               	movf	(abs@a+1)^0,w,c
  4602  0027E0  E106               	bnz	u3601
  4603  0027E2  0417               	decf	abs@a^0,w,c
  4604  0027E4  B0D8               	btfsc	status,0,c
  4605  0027E6  EFF7  F013         	goto	u3601
  4606  0027EA  EFF9  F013         	goto	u3600
  4607  0027EE                     u3601:
  4608  0027EE  EF07  F014         	goto	l1098
  4609  0027F2                     u3600:
  4610  0027F2  C017  F019         	movff	abs@a,??_abs
  4611  0027F6  C018  F01A         	movff	abs@a+1,??_abs+1
  4612  0027FA  1E19               	comf	??_abs^0,f,c
  4613  0027FC  1E1A               	comf	(??_abs+1)^0,f,c
  4614  0027FE  4A19               	infsnz	??_abs^0,f,c
  4615  002800  2A1A               	incf	(??_abs+1)^0,f,c
  4616  002802  C019  F017         	movff	??_abs,?_abs
  4617  002806  C01A  F018         	movff	??_abs+1,?_abs+1
  4618  00280A  EF0B  F014         	goto	l1101
  4619  00280E                     l1098:
  4620  00280E  C017  F017         	movff	abs@a,?_abs
  4621  002812  C018  F018         	movff	abs@a+1,?_abs+1
  4622  002816                     l1101:
  4623  002816  0012               	return		;funcret
  4624  002818                     __end_of_abs:
  4625                           	callstack 0
  4626                           
  4627 ;; *************** function ___aomod *****************
  4628 ;; Defined at:
  4629 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  4630 ;; Parameters:    Size  Location     Type
  4631 ;;  dividend        8    4[COMRAM] long long 
  4632 ;;  divisor         8   12[COMRAM] long long 
  4633 ;; Auto vars:     Size  Location     Type
  4634 ;;  sign            1   21[COMRAM] unsigned char 
  4635 ;;  counter         1   20[COMRAM] unsigned char 
  4636 ;; Return value:  Size  Location     Type
  4637 ;;                  8    4[COMRAM] long long 
  4638 ;; Registers used:
  4639 ;;		wreg, status,2, status,0
  4640 ;; Tracked objects:
  4641 ;;		On entry : 0/0
  4642 ;;		On exit  : 0/0
  4643 ;;		Unchanged: 0/0
  4644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4645 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4646 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4648 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4649 ;;Total ram usage:       18 bytes
  4650 ;; Hardware stack levels used: 1
  4651 ;; Hardware stack levels required when called: 2
  4652 ;; This function calls:
  4653 ;;		Nothing
  4654 ;; This function is called by:
  4655 ;;		_dtoa
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658                           
  4659                           	psect	text26
  4660  001B0C                     __ptext26:
  4661                           	callstack 0
  4662  001B0C                     ___aomod:
  4663                           	callstack 23
  4664  001B0C  0E00               	movlw	0
  4665  001B0E  6E16               	movwf	___aomod@sign^0,c
  4666  001B10  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  4667  001B12  EF8F  F00D         	goto	u3500
  4668  001B16  EF8D  F00D         	goto	u3501
  4669  001B1A                     u3501:
  4670  001B1A  EFA1  F00D         	goto	l3035
  4671  001B1E                     u3500:
  4672  001B1E  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  4673  001B20  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  4674  001B22  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  4675  001B24  1E09               	comf	(___aomod@dividend+4)^0,f,c
  4676  001B26  1E08               	comf	(___aomod@dividend+3)^0,f,c
  4677  001B28  1E07               	comf	(___aomod@dividend+2)^0,f,c
  4678  001B2A  1E06               	comf	(___aomod@dividend+1)^0,f,c
  4679  001B2C  6C05               	negf	___aomod@dividend^0,c
  4680  001B2E  0E00               	movlw	0
  4681  001B30  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  4682  001B32  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  4683  001B34  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  4684  001B36  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  4685  001B38  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  4686  001B3A  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  4687  001B3C  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  4688  001B3E  0E01               	movlw	1
  4689  001B40  6E16               	movwf	___aomod@sign^0,c
  4690  001B42                     l3035:
  4691  001B42  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  4692  001B44  EFA8  F00D         	goto	u3510
  4693  001B48  EFA6  F00D         	goto	u3511
  4694  001B4C                     u3511:
  4695  001B4C  EFB8  F00D         	goto	l3039
  4696  001B50                     u3510:
  4697  001B50  1E14               	comf	(___aomod@divisor+7)^0,f,c
  4698  001B52  1E13               	comf	(___aomod@divisor+6)^0,f,c
  4699  001B54  1E12               	comf	(___aomod@divisor+5)^0,f,c
  4700  001B56  1E11               	comf	(___aomod@divisor+4)^0,f,c
  4701  001B58  1E10               	comf	(___aomod@divisor+3)^0,f,c
  4702  001B5A  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  4703  001B5C  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  4704  001B5E  6C0D               	negf	___aomod@divisor^0,c
  4705  001B60  0E00               	movlw	0
  4706  001B62  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  4707  001B64  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  4708  001B66  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  4709  001B68  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  4710  001B6A  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  4711  001B6C  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  4712  001B6E  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  4713  001B70                     l3039:
  4714  001B70  500D               	movf	___aomod@divisor^0,w,c
  4715  001B72  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  4716  001B74  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  4717  001B76  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  4718  001B78  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  4719  001B7A  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  4720  001B7C  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  4721  001B7E  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  4722  001B80  B4D8               	btfsc	status,2,c
  4723  001B82  EFC5  F00D         	goto	u3521
  4724  001B86  EFC7  F00D         	goto	u3520
  4725  001B8A                     u3521:
  4726  001B8A  EF0F  F00E         	goto	l3055
  4727  001B8E                     u3520:
  4728  001B8E  0E01               	movlw	1
  4729  001B90  6E15               	movwf	___aomod@counter^0,c
  4730  001B92  EFD5  F00D         	goto	l3045
  4731  001B96                     l3043:
  4732  001B96  90D8               	bcf	status,0,c
  4733  001B98  360D               	rlcf	___aomod@divisor^0,f,c
  4734  001B9A  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  4735  001B9C  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  4736  001B9E  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  4737  001BA0  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  4738  001BA2  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  4739  001BA4  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  4740  001BA6  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  4741  001BA8  2A15               	incf	___aomod@counter^0,f,c
  4742  001BAA                     l3045:
  4743  001BAA  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  4744  001BAC  EFDA  F00D         	goto	u3531
  4745  001BB0  EFDC  F00D         	goto	u3530
  4746  001BB4                     u3531:
  4747  001BB4  EFCB  F00D         	goto	l3043
  4748  001BB8                     u3530:
  4749  001BB8                     l3047:
  4750  001BB8  500D               	movf	___aomod@divisor^0,w,c
  4751  001BBA  5C05               	subwf	___aomod@dividend^0,w,c
  4752  001BBC  500E               	movf	(___aomod@divisor+1)^0,w,c
  4753  001BBE  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  4754  001BC0  500F               	movf	(___aomod@divisor+2)^0,w,c
  4755  001BC2  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  4756  001BC4  5010               	movf	(___aomod@divisor+3)^0,w,c
  4757  001BC6  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  4758  001BC8  5011               	movf	(___aomod@divisor+4)^0,w,c
  4759  001BCA  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  4760  001BCC  5012               	movf	(___aomod@divisor+5)^0,w,c
  4761  001BCE  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  4762  001BD0  5013               	movf	(___aomod@divisor+6)^0,w,c
  4763  001BD2  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  4764  001BD4  5014               	movf	(___aomod@divisor+7)^0,w,c
  4765  001BD6  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  4766  001BD8  A0D8               	btfss	status,0,c
  4767  001BDA  EFF1  F00D         	goto	u3541
  4768  001BDE  EFF3  F00D         	goto	u3540
  4769  001BE2                     u3541:
  4770  001BE2  EF03  F00E         	goto	l3051
  4771  001BE6                     u3540:
  4772  001BE6  500D               	movf	___aomod@divisor^0,w,c
  4773  001BE8  5E05               	subwf	___aomod@dividend^0,f,c
  4774  001BEA  500E               	movf	(___aomod@divisor+1)^0,w,c
  4775  001BEC  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  4776  001BEE  500F               	movf	(___aomod@divisor+2)^0,w,c
  4777  001BF0  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  4778  001BF2  5010               	movf	(___aomod@divisor+3)^0,w,c
  4779  001BF4  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  4780  001BF6  5011               	movf	(___aomod@divisor+4)^0,w,c
  4781  001BF8  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  4782  001BFA  5012               	movf	(___aomod@divisor+5)^0,w,c
  4783  001BFC  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  4784  001BFE  5013               	movf	(___aomod@divisor+6)^0,w,c
  4785  001C00  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  4786  001C02  5014               	movf	(___aomod@divisor+7)^0,w,c
  4787  001C04  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  4788  001C06                     l3051:
  4789  001C06  90D8               	bcf	status,0,c
  4790  001C08  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  4791  001C0A  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  4792  001C0C  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  4793  001C0E  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  4794  001C10  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  4795  001C12  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  4796  001C14  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  4797  001C16  320D               	rrcf	___aomod@divisor^0,f,c
  4798  001C18  2E15               	decfsz	___aomod@counter^0,f,c
  4799  001C1A  EFDC  F00D         	goto	l3047
  4800  001C1E                     l3055:
  4801  001C1E  5016               	movf	___aomod@sign^0,w,c
  4802  001C20  B4D8               	btfsc	status,2,c
  4803  001C22  EF15  F00E         	goto	u3551
  4804  001C26  EF17  F00E         	goto	u3550
  4805  001C2A                     u3551:
  4806  001C2A  EF27  F00E         	goto	l3059
  4807  001C2E                     u3550:
  4808  001C2E  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  4809  001C30  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  4810  001C32  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  4811  001C34  1E09               	comf	(___aomod@dividend+4)^0,f,c
  4812  001C36  1E08               	comf	(___aomod@dividend+3)^0,f,c
  4813  001C38  1E07               	comf	(___aomod@dividend+2)^0,f,c
  4814  001C3A  1E06               	comf	(___aomod@dividend+1)^0,f,c
  4815  001C3C  6C05               	negf	___aomod@dividend^0,c
  4816  001C3E  0E00               	movlw	0
  4817  001C40  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  4818  001C42  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  4819  001C44  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  4820  001C46  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  4821  001C48  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  4822  001C4A  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  4823  001C4C  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  4824  001C4E                     l3059:
  4825  001C4E  C005  F005         	movff	___aomod@dividend,?___aomod
  4826  001C52  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  4827  001C56  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  4828  001C5A  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  4829  001C5E  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  4830  001C62  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  4831  001C66  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  4832  001C6A  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  4833  001C6E  0012               	return		;funcret
  4834  001C70                     __end_of___aomod:
  4835                           	callstack 0
  4836                           
  4837 ;; *************** function ___aodiv *****************
  4838 ;; Defined at:
  4839 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  4840 ;; Parameters:    Size  Location     Type
  4841 ;;  dividend        8    4[COMRAM] long long 
  4842 ;;  divisor         8   12[COMRAM] long long 
  4843 ;; Auto vars:     Size  Location     Type
  4844 ;;  quotient        8   22[COMRAM] long long 
  4845 ;;  sign            1   21[COMRAM] unsigned char 
  4846 ;;  counter         1   20[COMRAM] unsigned char 
  4847 ;; Return value:  Size  Location     Type
  4848 ;;                  8    4[COMRAM] long long 
  4849 ;; Registers used:
  4850 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4851 ;; Tracked objects:
  4852 ;;		On entry : 0/0
  4853 ;;		On exit  : 0/0
  4854 ;;		Unchanged: 0/0
  4855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4856 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4857 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4859 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4860 ;;Total ram usage:       26 bytes
  4861 ;; Hardware stack levels used: 1
  4862 ;; Hardware stack levels required when called: 2
  4863 ;; This function calls:
  4864 ;;		Nothing
  4865 ;; This function is called by:
  4866 ;;		_dtoa
  4867 ;; This function uses a non-reentrant model
  4868 ;;
  4869                           
  4870                           	psect	text27
  4871  001984                     __ptext27:
  4872                           	callstack 0
  4873  001984                     ___aodiv:
  4874                           	callstack 23
  4875  001984  0E00               	movlw	0
  4876  001986  6E16               	movwf	___aodiv@sign^0,c
  4877  001988  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  4878  00198A  EFCB  F00C         	goto	u3430
  4879  00198E  EFC9  F00C         	goto	u3431
  4880  001992                     u3431:
  4881  001992  EFDD  F00C         	goto	l2991
  4882  001996                     u3430:
  4883  001996  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  4884  001998  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  4885  00199A  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  4886  00199C  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  4887  00199E  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  4888  0019A0  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  4889  0019A2  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  4890  0019A4  6C0D               	negf	___aodiv@divisor^0,c
  4891  0019A6  0E00               	movlw	0
  4892  0019A8  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  4893  0019AA  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  4894  0019AC  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  4895  0019AE  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  4896  0019B0  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  4897  0019B2  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  4898  0019B4  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  4899  0019B6  0E01               	movlw	1
  4900  0019B8  6E16               	movwf	___aodiv@sign^0,c
  4901  0019BA                     l2991:
  4902  0019BA  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  4903  0019BC  EFE4  F00C         	goto	u3440
  4904  0019C0  EFE2  F00C         	goto	u3441
  4905  0019C4                     u3441:
  4906  0019C4  EFF6  F00C         	goto	l2997
  4907  0019C8                     u3440:
  4908  0019C8  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  4909  0019CA  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  4910  0019CC  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  4911  0019CE  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  4912  0019D0  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  4913  0019D2  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  4914  0019D4  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  4915  0019D6  6C05               	negf	___aodiv@dividend^0,c
  4916  0019D8  0E00               	movlw	0
  4917  0019DA  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  4918  0019DC  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  4919  0019DE  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  4920  0019E0  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  4921  0019E2  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  4922  0019E4  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  4923  0019E6  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  4924  0019E8  0E01               	movlw	1
  4925  0019EA  1A16               	xorwf	___aodiv@sign^0,f,c
  4926  0019EC                     l2997:
  4927  0019EC  EE20  F017         	lfsr	2,___aodiv@quotient
  4928  0019F0  0E07               	movlw	7
  4929  0019F2                     u3451:
  4930  0019F2  6ADE               	clrf	postinc2,c
  4931  0019F4  06E8               	decf	wreg,f,c
  4932  0019F6  E2FD               	bc	u3451
  4933  0019F8  500D               	movf	___aodiv@divisor^0,w,c
  4934  0019FA  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  4935  0019FC  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  4936  0019FE  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  4937  001A00  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  4938  001A02  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  4939  001A04  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  4940  001A06  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  4941  001A08  B4D8               	btfsc	status,2,c
  4942  001A0A  EF09  F00D         	goto	u3461
  4943  001A0E  EF0B  F00D         	goto	u3460
  4944  001A12                     u3461:
  4945  001A12  EF5D  F00D         	goto	l3019
  4946  001A16                     u3460:
  4947  001A16  0E01               	movlw	1
  4948  001A18  6E15               	movwf	___aodiv@counter^0,c
  4949  001A1A  EF19  F00D         	goto	l3005
  4950  001A1E                     l3003:
  4951  001A1E  90D8               	bcf	status,0,c
  4952  001A20  360D               	rlcf	___aodiv@divisor^0,f,c
  4953  001A22  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  4954  001A24  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  4955  001A26  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  4956  001A28  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  4957  001A2A  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  4958  001A2C  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  4959  001A2E  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  4960  001A30  2A15               	incf	___aodiv@counter^0,f,c
  4961  001A32                     l3005:
  4962  001A32  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  4963  001A34  EF1E  F00D         	goto	u3471
  4964  001A38  EF20  F00D         	goto	u3470
  4965  001A3C                     u3471:
  4966  001A3C  EF0F  F00D         	goto	l3003
  4967  001A40                     u3470:
  4968  001A40                     l3007:
  4969  001A40  90D8               	bcf	status,0,c
  4970  001A42  3617               	rlcf	___aodiv@quotient^0,f,c
  4971  001A44  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  4972  001A46  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  4973  001A48  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  4974  001A4A  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  4975  001A4C  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  4976  001A4E  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  4977  001A50  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  4978  001A52  500D               	movf	___aodiv@divisor^0,w,c
  4979  001A54  5C05               	subwf	___aodiv@dividend^0,w,c
  4980  001A56  500E               	movf	(___aodiv@divisor+1)^0,w,c
  4981  001A58  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  4982  001A5A  500F               	movf	(___aodiv@divisor+2)^0,w,c
  4983  001A5C  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  4984  001A5E  5010               	movf	(___aodiv@divisor+3)^0,w,c
  4985  001A60  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  4986  001A62  5011               	movf	(___aodiv@divisor+4)^0,w,c
  4987  001A64  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  4988  001A66  5012               	movf	(___aodiv@divisor+5)^0,w,c
  4989  001A68  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  4990  001A6A  5013               	movf	(___aodiv@divisor+6)^0,w,c
  4991  001A6C  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  4992  001A6E  5014               	movf	(___aodiv@divisor+7)^0,w,c
  4993  001A70  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  4994  001A72  A0D8               	btfss	status,0,c
  4995  001A74  EF3E  F00D         	goto	u3481
  4996  001A78  EF40  F00D         	goto	u3480
  4997  001A7C                     u3481:
  4998  001A7C  EF51  F00D         	goto	l3015
  4999  001A80                     u3480:
  5000  001A80  500D               	movf	___aodiv@divisor^0,w,c
  5001  001A82  5E05               	subwf	___aodiv@dividend^0,f,c
  5002  001A84  500E               	movf	(___aodiv@divisor+1)^0,w,c
  5003  001A86  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  5004  001A88  500F               	movf	(___aodiv@divisor+2)^0,w,c
  5005  001A8A  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  5006  001A8C  5010               	movf	(___aodiv@divisor+3)^0,w,c
  5007  001A8E  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  5008  001A90  5011               	movf	(___aodiv@divisor+4)^0,w,c
  5009  001A92  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  5010  001A94  5012               	movf	(___aodiv@divisor+5)^0,w,c
  5011  001A96  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  5012  001A98  5013               	movf	(___aodiv@divisor+6)^0,w,c
  5013  001A9A  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  5014  001A9C  5014               	movf	(___aodiv@divisor+7)^0,w,c
  5015  001A9E  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  5016  001AA0  8017               	bsf	___aodiv@quotient^0,0,c
  5017  001AA2                     l3015:
  5018  001AA2  90D8               	bcf	status,0,c
  5019  001AA4  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  5020  001AA6  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  5021  001AA8  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  5022  001AAA  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  5023  001AAC  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  5024  001AAE  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  5025  001AB0  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  5026  001AB2  320D               	rrcf	___aodiv@divisor^0,f,c
  5027  001AB4  2E15               	decfsz	___aodiv@counter^0,f,c
  5028  001AB6  EF20  F00D         	goto	l3007
  5029  001ABA                     l3019:
  5030  001ABA  5016               	movf	___aodiv@sign^0,w,c
  5031  001ABC  B4D8               	btfsc	status,2,c
  5032  001ABE  EF63  F00D         	goto	u3491
  5033  001AC2  EF65  F00D         	goto	u3490
  5034  001AC6                     u3491:
  5035  001AC6  EF75  F00D         	goto	l3023
  5036  001ACA                     u3490:
  5037  001ACA  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  5038  001ACC  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  5039  001ACE  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  5040  001AD0  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  5041  001AD2  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  5042  001AD4  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  5043  001AD6  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  5044  001AD8  6C17               	negf	___aodiv@quotient^0,c
  5045  001ADA  0E00               	movlw	0
  5046  001ADC  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  5047  001ADE  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  5048  001AE0  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  5049  001AE2  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  5050  001AE4  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  5051  001AE6  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  5052  001AE8  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  5053  001AEA                     l3023:
  5054  001AEA  C017  F005         	movff	___aodiv@quotient,?___aodiv
  5055  001AEE  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  5056  001AF2  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  5057  001AF6  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  5058  001AFA  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  5059  001AFE  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  5060  001B02  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  5061  001B06  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  5062  001B0A  0012               	return		;funcret
  5063  001B0C                     __end_of___aodiv:
  5064                           	callstack 0
  5065                           
  5066 ;; *************** function _atoi *****************
  5067 ;; Defined at:
  5068 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  5069 ;; Parameters:    Size  Location     Type
  5070 ;;  s               2   11[COMRAM] PTR const unsigned char 
  5071 ;;		 -> STR_3(15), STR_2(15), STR_1(15), 
  5072 ;; Auto vars:     Size  Location     Type
  5073 ;;  n               2   24[COMRAM] int 
  5074 ;;  neg             2   17[COMRAM] int 
  5075 ;; Return value:  Size  Location     Type
  5076 ;;                  2   11[COMRAM] int 
  5077 ;; Registers used:
  5078 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5079 ;; Tracked objects:
  5080 ;;		On entry : 0/0
  5081 ;;		On exit  : 0/0
  5082 ;;		Unchanged: 0/0
  5083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5084 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5085 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5086 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5087 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5088 ;;Total ram usage:       15 bytes
  5089 ;; Hardware stack levels used: 1
  5090 ;; Hardware stack levels required when called: 3
  5091 ;; This function calls:
  5092 ;;		___wmul
  5093 ;;		_isdigit
  5094 ;;		_isspace
  5095 ;; This function is called by:
  5096 ;;		_vfpfcnvrt
  5097 ;; This function uses a non-reentrant model
  5098 ;;
  5099                           
  5100                           	psect	text28
  5101  001640                     __ptext28:
  5102                           	callstack 0
  5103  001640                     _atoi:
  5104                           	callstack 23
  5105  001640  0E00               	movlw	0
  5106  001642  6E1A               	movwf	(atoi@n+1)^0,c
  5107  001644  0E00               	movlw	0
  5108  001646  6E19               	movwf	atoi@n^0,c
  5109  001648  0E00               	movlw	0
  5110  00164A  6E13               	movwf	(atoi@neg+1)^0,c
  5111  00164C  0E00               	movlw	0
  5112  00164E  6E12               	movwf	atoi@neg^0,c
  5113  001650  EF2C  F00B         	goto	l3171
  5114  001654                     l3169:
  5115  001654  4A0C               	infsnz	atoi@s^0,f,c
  5116  001656  2A0D               	incf	(atoi@s+1)^0,f,c
  5117  001658                     l3171:
  5118  001658  0E01               	movlw	1
  5119  00165A  6E18               	movwf	_atoi$2260^0,c
  5120  00165C  C00C  FFF6         	movff	atoi@s,tblptrl
  5121  001660  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5122  001664                     	if	0	;tblptru may be non-zero
  5123  001664                     	endif
  5124  001664                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5125  001664  0E00               	movlw	low (__mediumconst shr (0+16))
  5126  001666  6EF8               	movwf	tblptru,c
  5127  001668                     	endif
  5128  001668  0008               	tblrd		*
  5129  00166A  50F5               	movf	tablat,w,c
  5130  00166C  0A20               	xorlw	32
  5131  00166E  B4D8               	btfsc	status,2,c
  5132  001670  EF3C  F00B         	goto	u3801
  5133  001674  EF3E  F00B         	goto	u3800
  5134  001678                     u3801:
  5135  001678  EF5D  F00B         	goto	l3179
  5136  00167C                     u3800:
  5137  00167C  0EF7               	movlw	247
  5138  00167E  6E0E               	movwf	??_atoi^0,c
  5139  001680  0EFF               	movlw	255
  5140  001682  6E0F               	movwf	(??_atoi+1)^0,c
  5141  001684  C00C  FFF6         	movff	atoi@s,tblptrl
  5142  001688  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5143  00168C                     	if	0	;tblptru may be non-zero
  5144  00168C                     	endif
  5145  00168C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5146  00168C  0E00               	movlw	low (__mediumconst shr (0+16))
  5147  00168E  6EF8               	movwf	tblptru,c
  5148  001690                     	endif
  5149  001690  0008               	tblrd		*
  5150  001692  50F5               	movf	tablat,w,c
  5151  001694  6E10               	movwf	(??_atoi+2)^0,c
  5152  001696  6A11               	clrf	(??_atoi+3)^0,c
  5153  001698  500E               	movf	??_atoi^0,w,c
  5154  00169A  2610               	addwf	(??_atoi+2)^0,f,c
  5155  00169C  500F               	movf	(??_atoi+1)^0,w,c
  5156  00169E  2211               	addwfc	(??_atoi+3)^0,f,c
  5157  0016A0  5011               	movf	(??_atoi+3)^0,w,c
  5158  0016A2  E109               	bnz	u3810
  5159  0016A4  0E05               	movlw	5
  5160  0016A6  5C10               	subwf	(??_atoi+2)^0,w,c
  5161  0016A8  A0D8               	btfss	status,0,c
  5162  0016AA  EF59  F00B         	goto	u3811
  5163  0016AE  EF5B  F00B         	goto	u3810
  5164  0016B2                     u3811:
  5165  0016B2  EF5D  F00B         	goto	l3179
  5166  0016B6                     u3810:
  5167  0016B6  0E00               	movlw	0
  5168  0016B8  6E18               	movwf	_atoi$2260^0,c
  5169  0016BA                     l3179:
  5170  0016BA  C018  F014         	movff	_atoi$2260,_atoi$2259
  5171  0016BE  6A15               	clrf	(_atoi$2259+1)^0,c
  5172  0016C0  5014               	movf	_atoi$2259^0,w,c
  5173  0016C2  1015               	iorwf	(_atoi$2259+1)^0,w,c
  5174  0016C4  A4D8               	btfss	status,2,c
  5175  0016C6  EF67  F00B         	goto	u3821
  5176  0016CA  EF69  F00B         	goto	u3820
  5177  0016CE                     u3821:
  5178  0016CE  EF2A  F00B         	goto	l3169
  5179  0016D2                     u3820:
  5180  0016D2  EF73  F00B         	goto	l3189
  5181  0016D6                     l3185:
  5182  0016D6  0E00               	movlw	0
  5183  0016D8  6E13               	movwf	(atoi@neg+1)^0,c
  5184  0016DA  0E01               	movlw	1
  5185  0016DC  6E12               	movwf	atoi@neg^0,c
  5186  0016DE                     l3187:
  5187  0016DE  4A0C               	infsnz	atoi@s^0,f,c
  5188  0016E0  2A0D               	incf	(atoi@s+1)^0,f,c
  5189  0016E2  EFAC  F00B         	goto	l3195
  5190  0016E6                     l3189:
  5191  0016E6  C00C  FFF6         	movff	atoi@s,tblptrl
  5192  0016EA  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5193  0016EE                     	if	0	;tblptru may be non-zero
  5194  0016EE                     	endif
  5195  0016EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5196  0016EE  0E00               	movlw	low (__mediumconst shr (0+16))
  5197  0016F0  6EF8               	movwf	tblptru,c
  5198  0016F2                     	endif
  5199  0016F2  0008               	tblrd		*
  5200  0016F4  50F5               	movf	tablat,w,c
  5201  0016F6  6E0E               	movwf	??_atoi^0,c
  5202  0016F8  6A0F               	clrf	(??_atoi+1)^0,c
  5203                           
  5204                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5205                           ; Switch size 1, requested type "simple"
  5206                           ; Number of cases is 1, Range of values is 0 to 0
  5207                           ; switch strategies available:
  5208                           ; Name         Instructions Cycles
  5209                           ; simple_byte            4     3 (average)
  5210                           ;	Chosen strategy is simple_byte
  5211  0016FA  500F               	movf	(??_atoi+1)^0,w,c
  5212  0016FC  0A00               	xorlw	0	; case 0
  5213  0016FE  B4D8               	btfsc	status,2,c
  5214  001700  EF84  F00B         	goto	l3513
  5215  001704  EFAC  F00B         	goto	l3195
  5216  001708                     l3513:
  5217                           
  5218                           ; Switch size 1, requested type "simple"
  5219                           ; Number of cases is 2, Range of values is 43 to 45
  5220                           ; switch strategies available:
  5221                           ; Name         Instructions Cycles
  5222                           ; simple_byte            7     4 (average)
  5223                           ;	Chosen strategy is simple_byte
  5224  001708  500E               	movf	??_atoi^0,w,c
  5225  00170A  0A2B               	xorlw	43	; case 43
  5226  00170C  B4D8               	btfsc	status,2,c
  5227  00170E  EF6F  F00B         	goto	l3187
  5228  001712  0A06               	xorlw	6	; case 45
  5229  001714  B4D8               	btfsc	status,2,c
  5230  001716  EF6B  F00B         	goto	l3185
  5231  00171A  EFAC  F00B         	goto	l3195
  5232  00171E                     l3191:
  5233  00171E  C019  F005         	movff	atoi@n,___wmul@multiplier
  5234  001722  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  5235  001726  0E00               	movlw	0
  5236  001728  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  5237  00172A  0E0A               	movlw	10
  5238  00172C  6E07               	movwf	___wmul@multiplicand^0,c
  5239  00172E  EC9F  F014         	call	___wmul	;wreg free
  5240  001732  C00C  FFF6         	movff	atoi@s,tblptrl
  5241  001736  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5242  00173A                     	if	0	;tblptru may be non-zero
  5243  00173A                     	endif
  5244  00173A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5245  00173A  0E00               	movlw	low (__mediumconst shr (0+16))
  5246  00173C  6EF8               	movwf	tblptru,c
  5247  00173E                     	endif
  5248  00173E  0008               	tblrd		*
  5249  001740  50F5               	movf	tablat,w,c
  5250  001742  5E05               	subwf	?___wmul^0,f,c
  5251  001744  0E00               	movlw	0
  5252  001746  5A06               	subwfb	(?___wmul+1)^0,f,c
  5253  001748  0E30               	movlw	48
  5254  00174A  2405               	addwf	?___wmul^0,w,c
  5255  00174C  6E19               	movwf	atoi@n^0,c
  5256  00174E  0E00               	movlw	0
  5257  001750  2006               	addwfc	(?___wmul+1)^0,w,c
  5258  001752  6E1A               	movwf	(atoi@n+1)^0,c
  5259  001754  EF6F  F00B         	goto	l3187
  5260  001758                     l3195:
  5261  001758  0ED0               	movlw	208
  5262  00175A  6E0E               	movwf	??_atoi^0,c
  5263  00175C  0EFF               	movlw	255
  5264  00175E  6E0F               	movwf	(??_atoi+1)^0,c
  5265  001760  C00C  FFF6         	movff	atoi@s,tblptrl
  5266  001764  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5267  001768                     	if	0	;tblptru may be non-zero
  5268  001768                     	endif
  5269  001768                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5270  001768  0E00               	movlw	low (__mediumconst shr (0+16))
  5271  00176A  6EF8               	movwf	tblptru,c
  5272  00176C                     	endif
  5273  00176C  0008               	tblrd		*
  5274  00176E  50F5               	movf	tablat,w,c
  5275  001770  6E10               	movwf	(??_atoi+2)^0,c
  5276  001772  6A11               	clrf	(??_atoi+3)^0,c
  5277  001774  500E               	movf	??_atoi^0,w,c
  5278  001776  2610               	addwf	(??_atoi+2)^0,f,c
  5279  001778  500F               	movf	(??_atoi+1)^0,w,c
  5280  00177A  2211               	addwfc	(??_atoi+3)^0,f,c
  5281  00177C  5011               	movf	(??_atoi+3)^0,w,c
  5282  00177E  E10A               	bnz	u3830
  5283  001780  0E0A               	movlw	10
  5284  001782  5C10               	subwf	(??_atoi+2)^0,w,c
  5285  001784  A0D8               	btfss	status,0,c
  5286  001786  EFC7  F00B         	goto	u3831
  5287  00178A  EFCA  F00B         	goto	u3830
  5288  00178E                     u3831:
  5289  00178E  0E01               	movlw	1
  5290  001790  EFCB  F00B         	goto	u3840
  5291  001794                     u3830:
  5292  001794  0E00               	movlw	0
  5293  001796                     u3840:
  5294  001796  6E16               	movwf	_atoi$2261^0,c
  5295  001798  6A17               	clrf	(_atoi$2261+1)^0,c
  5296  00179A  5016               	movf	_atoi$2261^0,w,c
  5297  00179C  1017               	iorwf	(_atoi$2261+1)^0,w,c
  5298  00179E  A4D8               	btfss	status,2,c
  5299  0017A0  EFD4  F00B         	goto	u3851
  5300  0017A4  EFD6  F00B         	goto	u3850
  5301  0017A8                     u3851:
  5302  0017A8  EF8F  F00B         	goto	l3191
  5303  0017AC                     u3850:
  5304  0017AC  5012               	movf	atoi@neg^0,w,c
  5305  0017AE  1013               	iorwf	(atoi@neg+1)^0,w,c
  5306  0017B0  A4D8               	btfss	status,2,c
  5307  0017B2  EFDD  F00B         	goto	u3861
  5308  0017B6  EFDF  F00B         	goto	u3860
  5309  0017BA                     u3861:
  5310  0017BA  EFED  F00B         	goto	l1129
  5311  0017BE                     u3860:
  5312  0017BE  C019  F00E         	movff	atoi@n,??_atoi
  5313  0017C2  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  5314  0017C6  1E0E               	comf	??_atoi^0,f,c
  5315  0017C8  1E0F               	comf	(??_atoi+1)^0,f,c
  5316  0017CA  4A0E               	infsnz	??_atoi^0,f,c
  5317  0017CC  2A0F               	incf	(??_atoi+1)^0,f,c
  5318  0017CE  C00E  F00C         	movff	??_atoi,?_atoi
  5319  0017D2  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  5320  0017D6  EFF1  F00B         	goto	l1132
  5321  0017DA                     l1129:
  5322  0017DA  C019  F00C         	movff	atoi@n,?_atoi
  5323  0017DE  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  5324  0017E2                     l1132:
  5325  0017E2  0012               	return		;funcret
  5326  0017E4                     __end_of_atoi:
  5327                           	callstack 0
  5328                           
  5329 ;; *************** function _isspace *****************
  5330 ;; Defined at:
  5331 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  5332 ;; Parameters:    Size  Location     Type
  5333 ;;  c               2    4[COMRAM] int 
  5334 ;; Auto vars:     Size  Location     Type
  5335 ;;		None
  5336 ;; Return value:  Size  Location     Type
  5337 ;;                  2    4[COMRAM] int 
  5338 ;; Registers used:
  5339 ;;		wreg, status,2, status,0
  5340 ;; Tracked objects:
  5341 ;;		On entry : 0/0
  5342 ;;		On exit  : 0/0
  5343 ;;		Unchanged: 0/0
  5344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5345 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5346 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5347 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5348 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5349 ;;Total ram usage:        7 bytes
  5350 ;; Hardware stack levels used: 1
  5351 ;; Hardware stack levels required when called: 2
  5352 ;; This function calls:
  5353 ;;		Nothing
  5354 ;; This function is called by:
  5355 ;;		_atoi
  5356 ;; This function uses a non-reentrant model
  5357 ;;
  5358                           
  5359                           	psect	text29
  5360  00266C                     __ptext29:
  5361                           	callstack 0
  5362  00266C                     _isspace:
  5363                           	callstack 23
  5364  00266C  0E01               	movlw	1
  5365  00266E  6E0B               	movwf	_isspace$2277^0,c
  5366  002670  0E20               	movlw	32
  5367  002672  1805               	xorwf	isspace@c^0,w,c
  5368  002674  1006               	iorwf	(isspace@c+1)^0,w,c
  5369  002676  B4D8               	btfsc	status,2,c
  5370  002678  EF40  F013         	goto	u3631
  5371  00267C  EF42  F013         	goto	u3630
  5372  002680                     u3631:
  5373  002680  EF5B  F013         	goto	l3101
  5374  002684                     u3630:
  5375  002684  0EF7               	movlw	247
  5376  002686  6E07               	movwf	??_isspace^0,c
  5377  002688  0EFF               	movlw	255
  5378  00268A  6E08               	movwf	(??_isspace+1)^0,c
  5379  00268C  C005  F009         	movff	isspace@c,??_isspace+2
  5380  002690  C006  F00A         	movff	isspace@c+1,??_isspace+3
  5381  002694  5007               	movf	??_isspace^0,w,c
  5382  002696  2609               	addwf	(??_isspace+2)^0,f,c
  5383  002698  5008               	movf	(??_isspace+1)^0,w,c
  5384  00269A  220A               	addwfc	(??_isspace+3)^0,f,c
  5385  00269C  500A               	movf	(??_isspace+3)^0,w,c
  5386  00269E  E109               	bnz	u3640
  5387  0026A0  0E05               	movlw	5
  5388  0026A2  5C09               	subwf	(??_isspace+2)^0,w,c
  5389  0026A4  A0D8               	btfss	status,0,c
  5390  0026A6  EF57  F013         	goto	u3641
  5391  0026AA  EF59  F013         	goto	u3640
  5392  0026AE                     u3641:
  5393  0026AE  EF5B  F013         	goto	l3101
  5394  0026B2                     u3640:
  5395  0026B2  0E00               	movlw	0
  5396  0026B4  6E0B               	movwf	_isspace$2277^0,c
  5397  0026B6                     l3101:
  5398  0026B6  C00B  F005         	movff	_isspace$2277,?_isspace
  5399  0026BA  6A06               	clrf	(?_isspace+1)^0,c
  5400  0026BC  0012               	return		;funcret
  5401  0026BE                     __end_of_isspace:
  5402                           	callstack 0
  5403                           
  5404 ;; *************** function _isdigit *****************
  5405 ;; Defined at:
  5406 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  5407 ;; Parameters:    Size  Location     Type
  5408 ;;  c               2    4[COMRAM] int 
  5409 ;; Auto vars:     Size  Location     Type
  5410 ;;		None
  5411 ;; Return value:  Size  Location     Type
  5412 ;;                  2    4[COMRAM] int 
  5413 ;; Registers used:
  5414 ;;		wreg, status,2, status,0
  5415 ;; Tracked objects:
  5416 ;;		On entry : 0/0
  5417 ;;		On exit  : 0/0
  5418 ;;		Unchanged: 0/0
  5419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5420 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5422 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5423 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5424 ;;Total ram usage:        6 bytes
  5425 ;; Hardware stack levels used: 1
  5426 ;; Hardware stack levels required when called: 2
  5427 ;; This function calls:
  5428 ;;		Nothing
  5429 ;; This function is called by:
  5430 ;;		_vfpfcnvrt
  5431 ;;		_atoi
  5432 ;; This function uses a non-reentrant model
  5433 ;;
  5434                           
  5435                           	psect	text30
  5436  002818                     __ptext30:
  5437                           	callstack 0
  5438  002818                     _isdigit:
  5439                           	callstack 24
  5440  002818  0ED0               	movlw	208
  5441  00281A  6E07               	movwf	??_isdigit^0,c
  5442  00281C  0EFF               	movlw	255
  5443  00281E  6E08               	movwf	(??_isdigit+1)^0,c
  5444  002820  C005  F009         	movff	isdigit@c,??_isdigit+2
  5445  002824  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  5446  002828  5007               	movf	??_isdigit^0,w,c
  5447  00282A  2609               	addwf	(??_isdigit+2)^0,f,c
  5448  00282C  5008               	movf	(??_isdigit+1)^0,w,c
  5449  00282E  220A               	addwfc	(??_isdigit+3)^0,f,c
  5450  002830  500A               	movf	(??_isdigit+3)^0,w,c
  5451  002832  E10A               	bnz	u3610
  5452  002834  0E0A               	movlw	10
  5453  002836  5C09               	subwf	(??_isdigit+2)^0,w,c
  5454  002838  A0D8               	btfss	status,0,c
  5455  00283A  EF21  F014         	goto	u3611
  5456  00283E  EF24  F014         	goto	u3610
  5457  002842                     u3611:
  5458  002842  0E01               	movlw	1
  5459  002844  EF25  F014         	goto	u3620
  5460  002848                     u3610:
  5461  002848  0E00               	movlw	0
  5462  00284A                     u3620:
  5463  00284A  6E05               	movwf	?_isdigit^0,c
  5464  00284C  6A06               	clrf	(?_isdigit+1)^0,c
  5465  00284E  0012               	return		;funcret
  5466  002850                     __end_of_isdigit:
  5467                           	callstack 0
  5468                           
  5469 ;; *************** function ___wmul *****************
  5470 ;; Defined at:
  5471 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  5472 ;; Parameters:    Size  Location     Type
  5473 ;;  multiplier      2    4[COMRAM] unsigned int 
  5474 ;;  multiplicand    2    6[COMRAM] unsigned int 
  5475 ;; Auto vars:     Size  Location     Type
  5476 ;;  product         2    8[COMRAM] unsigned int 
  5477 ;; Return value:  Size  Location     Type
  5478 ;;                  2    4[COMRAM] unsigned int 
  5479 ;; Registers used:
  5480 ;;		wreg, status,2, status,0, prodl, prodh
  5481 ;; Tracked objects:
  5482 ;;		On entry : 0/0
  5483 ;;		On exit  : 0/0
  5484 ;;		Unchanged: 0/0
  5485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5486 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5487 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5489 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5490 ;;Total ram usage:        6 bytes
  5491 ;; Hardware stack levels used: 1
  5492 ;; Hardware stack levels required when called: 2
  5493 ;; This function calls:
  5494 ;;		Nothing
  5495 ;; This function is called by:
  5496 ;;		_atoi
  5497 ;; This function uses a non-reentrant model
  5498 ;;
  5499                           
  5500                           	psect	text31
  5501  00293E                     __ptext31:
  5502                           	callstack 0
  5503  00293E                     ___wmul:
  5504                           	callstack 23
  5505  00293E  5005               	movf	___wmul@multiplier^0,w,c
  5506  002940  0207               	mulwf	___wmul@multiplicand^0,c
  5507  002942  CFF3 F009          	movff	prodl,___wmul@product
  5508  002946  CFF4 F00A          	movff	prodh,___wmul@product+1
  5509  00294A  5005               	movf	___wmul@multiplier^0,w,c
  5510  00294C  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  5511  00294E  50F3               	movf	243,w,c
  5512  002950  260A               	addwf	(___wmul@product+1)^0,f,c
  5513  002952  5006               	movf	(___wmul@multiplier+1)^0,w,c
  5514  002954  0207               	mulwf	___wmul@multiplicand^0,c
  5515  002956  50F3               	movf	243,w,c
  5516  002958  260A               	addwf	(___wmul@product+1)^0,f,c
  5517  00295A  C009  F005         	movff	___wmul@product,?___wmul
  5518  00295E  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  5519  002962  0012               	return		;funcret
  5520  002964                     __end_of___wmul:
  5521                           	callstack 0
  5522                           
  5523 ;; *************** function _LCD_setline *****************
  5524 ;; Defined at:
  5525 ;;		line 111 in file "LCD.c"
  5526 ;; Parameters:    Size  Location     Type
  5527 ;;  line            1    wreg     unsigned char 
  5528 ;; Auto vars:     Size  Location     Type
  5529 ;;  line            1    7[COMRAM] unsigned char 
  5530 ;; Return value:  Size  Location     Type
  5531 ;;                  1    wreg      void 
  5532 ;; Registers used:
  5533 ;;		wreg, status,2, status,0, cstack
  5534 ;; Tracked objects:
  5535 ;;		On entry : 0/0
  5536 ;;		On exit  : 0/0
  5537 ;;		Unchanged: 0/0
  5538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5540 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5542 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5543 ;;Total ram usage:        1 bytes
  5544 ;; Hardware stack levels used: 1
  5545 ;; Hardware stack levels required when called: 5
  5546 ;; This function calls:
  5547 ;;		_LCD_sendbyte
  5548 ;; This function is called by:
  5549 ;;		_LCD_init
  5550 ;;		_time_incre
  5551 ;; This function uses a non-reentrant model
  5552 ;;
  5553                           
  5554                           	psect	text32
  5555  002708                     __ptext32:
  5556                           	callstack 0
  5557  002708                     _LCD_setline:
  5558                           	callstack 24
  5559                           
  5560                           ;incstack = 0
  5561                           ;LCD_setline@line stored from wreg
  5562  002708  6E08               	movwf	LCD_setline@line^0,c
  5563  00270A                     
  5564                           ;LCD.c: 113:     if (line==1) {LCD_sendbyte(0x80,0);}
  5565  00270A  0408               	decf	LCD_setline@line^0,w,c
  5566  00270C  A4D8               	btfss	status,2,c
  5567  00270E  EF8B  F013         	goto	u2451
  5568  002712  EF8D  F013         	goto	u2450
  5569  002716                     u2451:
  5570  002716  EF92  F013         	goto	l2529
  5571  00271A                     u2450:
  5572  00271A  0E00               	movlw	0
  5573  00271C  6E06               	movwf	LCD_sendbyte@type^0,c
  5574  00271E  0E80               	movlw	128
  5575  002720  EC5D  F014         	call	_LCD_sendbyte
  5576  002724                     l2529:
  5577                           
  5578                           ;LCD.c: 114:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  5579  002724  0EA0               	movlw	160
  5580  002726                     u4287:
  5581  002726  D000               	nop2	
  5582  002728  2EE8               	decfsz	wreg,f,c
  5583  00272A  D7FD               	bra	u4287
  5584  00272C                     
  5585                           ;LCD.c: 117:     if (line==2) {LCD_sendbyte(0xC0,0);}
  5586  00272C  0E02               	movlw	2
  5587  00272E  1808               	xorwf	LCD_setline@line^0,w,c
  5588  002730  A4D8               	btfss	status,2,c
  5589  002732  EF9D  F013         	goto	u2461
  5590  002736  EF9F  F013         	goto	u2460
  5591  00273A                     u2461:
  5592  00273A  EFA4  F013         	goto	l2535
  5593  00273E                     u2460:
  5594  00273E  0E00               	movlw	0
  5595  002740  6E06               	movwf	LCD_sendbyte@type^0,c
  5596  002742  0EC0               	movlw	192
  5597  002744  EC5D  F014         	call	_LCD_sendbyte
  5598  002748                     l2535:
  5599                           
  5600                           ;LCD.c: 118:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  5601  002748  0EA0               	movlw	160
  5602  00274A                     u4297:
  5603  00274A  D000               	nop2	
  5604  00274C  2EE8               	decfsz	wreg,f,c
  5605  00274E  D7FD               	bra	u4297
  5606  002750  0012               	return		;funcret
  5607  002752                     __end_of_LCD_setline:
  5608                           	callstack 0
  5609                           
  5610 ;; *************** function _LCD_sendstring *****************
  5611 ;; Defined at:
  5612 ;;		line 125 in file "LCD.c"
  5613 ;; Parameters:    Size  Location     Type
  5614 ;;  string          2    7[COMRAM] PTR unsigned char 
  5615 ;;		 -> time_incre@buf2(40), time_incre@buf1(40), LCD_init@buf(40), 
  5616 ;; Auto vars:     Size  Location     Type
  5617 ;;		None
  5618 ;; Return value:  Size  Location     Type
  5619 ;;                  1    wreg      void 
  5620 ;; Registers used:
  5621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5622 ;; Tracked objects:
  5623 ;;		On entry : 0/0
  5624 ;;		On exit  : 0/0
  5625 ;;		Unchanged: 0/0
  5626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5627 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5630 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5631 ;;Total ram usage:        2 bytes
  5632 ;; Hardware stack levels used: 1
  5633 ;; Hardware stack levels required when called: 5
  5634 ;; This function calls:
  5635 ;;		_LCD_sendbyte
  5636 ;; This function is called by:
  5637 ;;		_LCD_init
  5638 ;;		_time_incre
  5639 ;; This function uses a non-reentrant model
  5640 ;;
  5641                           
  5642                           	psect	text33
  5643  002886                     __ptext33:
  5644                           	callstack 0
  5645  002886                     _LCD_sendstring:
  5646                           	callstack 24
  5647  002886                     
  5648                           ;LCD.c: 127:     while (*string != 0) {
  5649  002886  EF50  F014         	goto	l2555
  5650  00288A                     l2551:
  5651                           
  5652                           ;LCD.c: 128:         LCD_sendbyte(*string++,1);
  5653  00288A  0E01               	movlw	1
  5654  00288C  6E06               	movwf	LCD_sendbyte@type^0,c
  5655  00288E  C008  FFD9         	movff	LCD_sendstring@string,fsr2l
  5656  002892  C009  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  5657  002896  50DF               	movf	indf2,w,c
  5658  002898  EC5D  F014         	call	_LCD_sendbyte
  5659  00289C  4A08               	infsnz	LCD_sendstring@string^0,f,c
  5660  00289E  2A09               	incf	(LCD_sendstring@string+1)^0,f,c
  5661  0028A0                     l2555:
  5662                           
  5663                           ;LCD.c: 127:     while (*string != 0) {
  5664  0028A0  C008  FFD9         	movff	LCD_sendstring@string,fsr2l
  5665  0028A4  C009  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  5666  0028A8  50DF               	movf	indf2,w,c
  5667  0028AA  A4D8               	btfss	status,2,c
  5668  0028AC  EF5A  F014         	goto	u2471
  5669  0028B0  EF5C  F014         	goto	u2470
  5670  0028B4                     u2471:
  5671  0028B4  EF45  F014         	goto	l2551
  5672  0028B8                     u2470:
  5673  0028B8  0012               	return		;funcret
  5674  0028BA                     __end_of_LCD_sendstring:
  5675                           	callstack 0
  5676                           
  5677 ;; *************** function _LCD_sendbyte *****************
  5678 ;; Defined at:
  5679 ;;		line 37 in file "LCD.c"
  5680 ;; Parameters:    Size  Location     Type
  5681 ;;  Byte            1    wreg     unsigned char 
  5682 ;;  type            1    5[COMRAM] unsigned char 
  5683 ;; Auto vars:     Size  Location     Type
  5684 ;;  Byte            1    6[COMRAM] unsigned char 
  5685 ;; Return value:  Size  Location     Type
  5686 ;;                  1    wreg      void 
  5687 ;; Registers used:
  5688 ;;		wreg, status,2, status,0, cstack
  5689 ;; Tracked objects:
  5690 ;;		On entry : 0/0
  5691 ;;		On exit  : 0/0
  5692 ;;		Unchanged: 0/0
  5693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5694 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5695 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5697 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5698 ;;Total ram usage:        2 bytes
  5699 ;; Hardware stack levels used: 1
  5700 ;; Hardware stack levels required when called: 4
  5701 ;; This function calls:
  5702 ;;		_LCD_sendnibble
  5703 ;; This function is called by:
  5704 ;;		_LCD_init
  5705 ;;		_LCD_setline
  5706 ;;		_LCD_sendstring
  5707 ;; This function uses a non-reentrant model
  5708 ;;
  5709                           
  5710                           	psect	text34
  5711  0028BA                     __ptext34:
  5712                           	callstack 0
  5713  0028BA                     _LCD_sendbyte:
  5714                           	callstack 24
  5715                           
  5716                           ;incstack = 0
  5717                           ;LCD_sendbyte@Byte stored from wreg
  5718  0028BA  6E07               	movwf	LCD_sendbyte@Byte^0,c
  5719  0028BC                     
  5720                           ;LCD.c: 39:     if (type) {LATCbits.LATC6 = 1;} else {LATCbits.LATC6 = 0;}
  5721  0028BC  5006               	movf	LCD_sendbyte@type^0,w,c
  5722  0028BE  B4D8               	btfsc	status,2,c
  5723  0028C0  EF64  F014         	goto	u2361
  5724  0028C4  EF66  F014         	goto	u2360
  5725  0028C8                     u2361:
  5726  0028C8  EF69  F014         	goto	l208
  5727  0028CC                     u2360:
  5728  0028CC  8C7B               	bsf	123,6,c	;volatile
  5729  0028CE  EF6A  F014         	goto	l2457
  5730  0028D2                     l208:
  5731  0028D2  9C7B               	bcf	123,6,c	;volatile
  5732  0028D4                     l2457:
  5733                           
  5734                           ;LCD.c: 42:     LCD_sendnibble(Byte>>4);
  5735  0028D4  3807               	swapf	LCD_sendbyte@Byte^0,w,c
  5736  0028D6  0B0F               	andlw	15
  5737  0028D8  EC7C  F012         	call	_LCD_sendnibble
  5738                           
  5739                           ;LCD.c: 45:     LCD_sendnibble(Byte&0b00001111);
  5740  0028DC  5007               	movf	LCD_sendbyte@Byte^0,w,c
  5741  0028DE  0B0F               	andlw	15
  5742  0028E0  EC7C  F012         	call	_LCD_sendnibble
  5743  0028E4                     
  5744                           ;LCD.c: 48:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  5745  0028E4  0EA0               	movlw	160
  5746  0028E6                     u4307:
  5747  0028E6  D000               	nop2	
  5748  0028E8  2EE8               	decfsz	wreg,f,c
  5749  0028EA  D7FD               	bra	u4307
  5750  0028EC  0012               	return		;funcret
  5751  0028EE                     __end_of_LCD_sendbyte:
  5752                           	callstack 0
  5753                           
  5754 ;; *************** function _LCD_sendnibble *****************
  5755 ;; Defined at:
  5756 ;;		line 21 in file "LCD.c"
  5757 ;; Parameters:    Size  Location     Type
  5758 ;;  number          1    wreg     unsigned char 
  5759 ;; Auto vars:     Size  Location     Type
  5760 ;;  number          1    4[COMRAM] unsigned char 
  5761 ;; Return value:  Size  Location     Type
  5762 ;;                  1    wreg      void 
  5763 ;; Registers used:
  5764 ;;		wreg, cstack
  5765 ;; Tracked objects:
  5766 ;;		On entry : 0/0
  5767 ;;		On exit  : 0/0
  5768 ;;		Unchanged: 0/0
  5769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5771 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5773 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5774 ;;Total ram usage:        1 bytes
  5775 ;; Hardware stack levels used: 1
  5776 ;; Hardware stack levels required when called: 3
  5777 ;; This function calls:
  5778 ;;		_LCD_E_TOG
  5779 ;; This function is called by:
  5780 ;;		_LCD_sendbyte
  5781 ;;		_LCD_init
  5782 ;; This function uses a non-reentrant model
  5783 ;;
  5784                           
  5785                           	psect	text35
  5786  0024F8                     __ptext35:
  5787                           	callstack 0
  5788  0024F8                     _LCD_sendnibble:
  5789                           	callstack 24
  5790                           
  5791                           ;incstack = 0
  5792                           ;LCD_sendnibble@number stored from wreg
  5793  0024F8  6E05               	movwf	LCD_sendnibble@number^0,c
  5794  0024FA                     
  5795                           ;LCD.c: 23:     if (number & 0b0001) {LATBbits.LATB3 = 1;} else {LATBbits.LATB3 = 0;}
  5796  0024FA  A005               	btfss	LCD_sendnibble@number^0,0,c
  5797  0024FC  EF82  F012         	goto	u2211
  5798  002500  EF84  F012         	goto	u2210
  5799  002504                     u2211:
  5800  002504  EF87  F012         	goto	l197
  5801  002508                     u2210:
  5802  002508  867A               	bsf	122,3,c	;volatile
  5803  00250A  EF88  F012         	goto	l2341
  5804  00250E                     l197:
  5805  00250E  967A               	bcf	122,3,c	;volatile
  5806  002510                     l2341:
  5807                           
  5808                           ;LCD.c: 24:     if (number & 0b0010) {LATBbits.LATB2 = 1;} else {LATBbits.LATB2 = 0;}
  5809  002510  A205               	btfss	LCD_sendnibble@number^0,1,c
  5810  002512  EF8D  F012         	goto	u2221
  5811  002516  EF8F  F012         	goto	u2220
  5812  00251A                     u2221:
  5813  00251A  EF92  F012         	goto	l199
  5814  00251E                     u2220:
  5815  00251E  847A               	bsf	122,2,c	;volatile
  5816  002520  EF93  F012         	goto	l2345
  5817  002524                     l199:
  5818  002524  947A               	bcf	122,2,c	;volatile
  5819  002526                     l2345:
  5820                           
  5821                           ;LCD.c: 25:     if (number & 0b0100) {LATEbits.LATE3 = 1;} else {LATEbits.LATE3 = 0;}
  5822  002526  A405               	btfss	LCD_sendnibble@number^0,2,c
  5823  002528  EF98  F012         	goto	u2231
  5824  00252C  EF9A  F012         	goto	u2230
  5825  002530                     u2231:
  5826  002530  EF9D  F012         	goto	l201
  5827  002534                     u2230:
  5828  002534  867D               	bsf	125,3,c	;volatile
  5829  002536  EF9E  F012         	goto	l2349
  5830  00253A                     l201:
  5831  00253A  967D               	bcf	125,3,c	;volatile
  5832  00253C                     l2349:
  5833                           
  5834                           ;LCD.c: 26:     if (number & 0b1000) {LATEbits.LATE1 = 1;} else {LATEbits.LATE1 = 0;}
  5835  00253C  A605               	btfss	LCD_sendnibble@number^0,3,c
  5836  00253E  EFA3  F012         	goto	u2241
  5837  002542  EFA5  F012         	goto	u2240
  5838  002546                     u2241:
  5839  002546  EFA8  F012         	goto	l203
  5840  00254A                     u2240:
  5841  00254A  827D               	bsf	125,1,c	;volatile
  5842  00254C  EFA9  F012         	goto	l2353
  5843  002550                     l203:
  5844  002550  927D               	bcf	125,1,c	;volatile
  5845  002552                     l2353:
  5846                           
  5847                           ;LCD.c: 28:     LCD_E_TOG();
  5848  002552  EC06  F015         	call	_LCD_E_TOG	;wreg free
  5849  002556                     
  5850                           ;LCD.c: 29:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  5851  002556  0E1A               	movlw	26
  5852  002558                     u4317:
  5853  002558  2EE8               	decfsz	wreg,f,c
  5854  00255A  D7FE               	bra	u4317
  5855  00255C  D000               	nop2	
  5856  00255E  0012               	return		;funcret
  5857  002560                     __end_of_LCD_sendnibble:
  5858                           	callstack 0
  5859                           
  5860 ;; *************** function _LCD_E_TOG *****************
  5861 ;; Defined at:
  5862 ;;		line 11 in file "LCD.c"
  5863 ;; Parameters:    Size  Location     Type
  5864 ;;		None
  5865 ;; Auto vars:     Size  Location     Type
  5866 ;;		None
  5867 ;; Return value:  Size  Location     Type
  5868 ;;                  1    wreg      void 
  5869 ;; Registers used:
  5870 ;;		wreg
  5871 ;; Tracked objects:
  5872 ;;		On entry : 0/0
  5873 ;;		On exit  : 0/0
  5874 ;;		Unchanged: 0/0
  5875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5880 ;;Total ram usage:        0 bytes
  5881 ;; Hardware stack levels used: 1
  5882 ;; Hardware stack levels required when called: 2
  5883 ;; This function calls:
  5884 ;;		Nothing
  5885 ;; This function is called by:
  5886 ;;		_LCD_sendnibble
  5887 ;; This function uses a non-reentrant model
  5888 ;;
  5889                           
  5890                           	psect	text36
  5891  002A0C                     __ptext36:
  5892                           	callstack 0
  5893  002A0C                     _LCD_E_TOG:
  5894                           	callstack 24
  5895  002A0C                     
  5896                           ;LCD.c: 12:  LATCbits.LATC2 = 1;
  5897  002A0C  847B               	bsf	123,2,c	;volatile
  5898  002A0E                     
  5899                           ;LCD.c: 13:  _delay((unsigned long)((2)*(64000000/4000000.0)));
  5900  002A0E  0E0A               	movlw	10
  5901  002A10                     u4327:
  5902  002A10  2EE8               	decfsz	wreg,f,c
  5903  002A12  D7FE               	bra	u4327
  5904  002A14  D000               	nop2	
  5905  002A16                     
  5906                           ;LCD.c: 14:  LATCbits.LATC2 = 0;
  5907  002A16  947B               	bcf	123,2,c	;volatile
  5908  002A18  0012               	return		;funcret
  5909  002A1A                     __end_of_LCD_E_TOG:
  5910                           	callstack 0
  5911                           
  5912 ;; *************** function _Interrupts_init *****************
  5913 ;; Defined at:
  5914 ;;		line 12 in file "interrupts.c"
  5915 ;; Parameters:    Size  Location     Type
  5916 ;;  current        12    4[COMRAM] struct .
  5917 ;; Auto vars:     Size  Location     Type
  5918 ;;		None
  5919 ;; Return value:  Size  Location     Type
  5920 ;;                  1    wreg      void 
  5921 ;; Registers used:
  5922 ;;		wreg, status,2, status,0
  5923 ;; Tracked objects:
  5924 ;;		On entry : 0/0
  5925 ;;		On exit  : 0/0
  5926 ;;		Unchanged: 0/0
  5927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5928 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5931 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5932 ;;Total ram usage:       12 bytes
  5933 ;; Hardware stack levels used: 1
  5934 ;; Hardware stack levels required when called: 2
  5935 ;; This function calls:
  5936 ;;		Nothing
  5937 ;; This function is called by:
  5938 ;;		_main
  5939 ;; This function uses a non-reentrant model
  5940 ;;
  5941                           
  5942                           	psect	text37
  5943  002796                     __ptext37:
  5944                           	callstack 0
  5945  002796                     _Interrupts_init:
  5946                           	callstack 28
  5947  002796                     
  5948                           ;interrupts.c: 13:     if (current.hour<1 || current.hour>=5) {
  5949  002796  500B               	movf	(Interrupts_init@current+6)^0,w,c
  5950  002798  0A80               	xorlw	128
  5951  00279A  0F7F               	addlw	-129
  5952  00279C  A0D8               	btfss	status,0,c
  5953  00279E  EFD3  F013         	goto	u2841
  5954  0027A2  EFD5  F013         	goto	u2840
  5955  0027A6                     u2841:
  5956  0027A6  EFDF  F013         	goto	l138
  5957  0027AA                     u2840:
  5958  0027AA  500B               	movf	(Interrupts_init@current+6)^0,w,c
  5959  0027AC  0A80               	xorlw	128
  5960  0027AE  0F7B               	addlw	-133
  5961  0027B0  A0D8               	btfss	status,0,c
  5962  0027B2  EFDD  F013         	goto	u2851
  5963  0027B6  EFDF  F013         	goto	u2850
  5964  0027BA                     u2851:
  5965  0027BA  EFE3  F013         	goto	l136
  5966  0027BE                     u2850:
  5967  0027BE                     l138:
  5968                           
  5969                           ;interrupts.c: 14:         PIE2bits.C1IE = 1;
  5970  0027BE  010E               	movlb	14	; () banked
  5971  0027C0  812B               	bsf	43,0,b	;volatile
  5972                           
  5973                           ;interrupts.c: 15:     } else {PIE2bits.C1IE = 0;}
  5974  0027C2  EFE5  F013         	goto	l139
  5975  0027C6                     l136:
  5976  0027C6  010E               	movlb	14	; () banked
  5977  0027C8  912B               	bcf	43,0,b	;volatile
  5978  0027CA                     l139:
  5979                           
  5980                           ; BSR set to: 14
  5981                           ;interrupts.c: 16:     PIE0bits.TMR0IE = 1;
  5982  0027CA  8B29               	bsf	41,5,b	;volatile
  5983                           
  5984                           ;interrupts.c: 18:     IPR2bits.C1IP = 1;
  5985  0027CC  8121               	bsf	33,0,b	;volatile
  5986                           
  5987                           ;interrupts.c: 19:     IPR0bits.TMR0IP = 0;
  5988  0027CE  9B1F               	bcf	31,5,b	;volatile
  5989                           
  5990                           ;interrupts.c: 21:     INTCONbits.IPEN = 1;
  5991  0027D0  8AF2               	bsf	242,5,c	;volatile
  5992                           
  5993                           ;interrupts.c: 22:     INTCONbits.PEIE = 1;
  5994  0027D2  8CF2               	bsf	242,6,c	;volatile
  5995                           
  5996                           ;interrupts.c: 23:     INTCONbits.GIE = 1;
  5997  0027D4  8EF2               	bsf	242,7,c	;volatile
  5998  0027D6                     
  5999                           ; BSR set to: 14
  6000  0027D6  0012               	return		;funcret
  6001  0027D8                     __end_of_Interrupts_init:
  6002                           	callstack 0
  6003                           
  6004 ;; *************** function _Comp1_init *****************
  6005 ;; Defined at:
  6006 ;;		line 24 in file "comparator.c"
  6007 ;; Parameters:    Size  Location     Type
  6008 ;;		None
  6009 ;; Auto vars:     Size  Location     Type
  6010 ;;		None
  6011 ;; Return value:  Size  Location     Type
  6012 ;;                  1    wreg      void 
  6013 ;; Registers used:
  6014 ;;		wreg, status,2, cstack
  6015 ;; Tracked objects:
  6016 ;;		On entry : 0/0
  6017 ;;		On exit  : 0/0
  6018 ;;		Unchanged: 0/0
  6019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6024 ;;Total ram usage:        0 bytes
  6025 ;; Hardware stack levels used: 1
  6026 ;; Hardware stack levels required when called: 3
  6027 ;; This function calls:
  6028 ;;		_DAC_init
  6029 ;; This function is called by:
  6030 ;;		_main
  6031 ;; This function uses a non-reentrant model
  6032 ;;
  6033                           
  6034                           	psect	text38
  6035  002964                     __ptext38:
  6036                           	callstack 0
  6037  002964                     _Comp1_init:
  6038                           	callstack 27
  6039  002964                     
  6040                           ;comparator.c: 25:     TRISFbits.TRISF7=1;
  6041  002964  8E86               	bsf	134,7,c	;volatile
  6042  002966                     
  6043                           ;comparator.c: 26:     CM1NCHbits.NCH=0b011;
  6044  002966  010E               	movlb	14	; () banked
  6045  002968  51D2               	movf	210,w,b	;volatile
  6046  00296A  0BF8               	andlw	-8
  6047  00296C  0903               	iorlw	3
  6048  00296E  6FD2               	movwf	210,b	;volatile
  6049                           
  6050                           ;comparator.c: 27:     CM1PCHbits.PCH=0b101;
  6051  002970  51D3               	movf	211,w,b	;volatile
  6052  002972  0BF8               	andlw	-8
  6053  002974  0905               	iorlw	5
  6054  002976  6FD3               	movwf	211,b	;volatile
  6055  002978                     
  6056                           ; BSR set to: 14
  6057                           ;comparator.c: 28:     CM1CON0bits.HYS=1;
  6058  002978  83D0               	bsf	208,1,b	;volatile
  6059  00297A                     
  6060                           ; BSR set to: 14
  6061                           ;comparator.c: 29:     CM1CON0bits.POL=1;
  6062  00297A  89D0               	bsf	208,4,b	;volatile
  6063  00297C                     
  6064                           ; BSR set to: 14
  6065                           ;comparator.c: 30:     CM1CON1bits.INTP=1;
  6066  00297C  83D1               	bsf	209,1,b	;volatile
  6067  00297E                     
  6068                           ; BSR set to: 14
  6069                           ;comparator.c: 31:     CM1CON1bits.INTN=1;
  6070  00297E  81D1               	bsf	209,0,b	;volatile
  6071  002980                     
  6072                           ; BSR set to: 14
  6073                           ;comparator.c: 32:     DAC_init();
  6074  002980  ECFC  F014         	call	_DAC_init	;wreg free
  6075  002984                     
  6076                           ;comparator.c: 33:     CM1CON0bits.EN=1;
  6077  002984  010E               	movlb	14	; () banked
  6078  002986  8FD0               	bsf	208,7,b	;volatile
  6079  002988                     
  6080                           ; BSR set to: 14
  6081  002988  0012               	return		;funcret
  6082  00298A                     __end_of_Comp1_init:
  6083                           	callstack 0
  6084                           
  6085 ;; *************** function _DAC_init *****************
  6086 ;; Defined at:
  6087 ;;		line 8 in file "comparator.c"
  6088 ;; Parameters:    Size  Location     Type
  6089 ;;		None
  6090 ;; Auto vars:     Size  Location     Type
  6091 ;;		None
  6092 ;; Return value:  Size  Location     Type
  6093 ;;                  1    wreg      void 
  6094 ;; Registers used:
  6095 ;;		wreg, status,2
  6096 ;; Tracked objects:
  6097 ;;		On entry : 0/0
  6098 ;;		On exit  : 0/0
  6099 ;;		Unchanged: 0/0
  6100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6105 ;;Total ram usage:        0 bytes
  6106 ;; Hardware stack levels used: 1
  6107 ;; Hardware stack levels required when called: 2
  6108 ;; This function calls:
  6109 ;;		Nothing
  6110 ;; This function is called by:
  6111 ;;		_Comp1_init
  6112 ;; This function uses a non-reentrant model
  6113 ;;
  6114                           
  6115                           	psect	text39
  6116  0029F8                     __ptext39:
  6117                           	callstack 0
  6118  0029F8                     _DAC_init:
  6119                           	callstack 27
  6120  0029F8                     
  6121                           ;comparator.c: 9:     DAC1CON0bits.PSS=0b00;
  6122  0029F8  0EF3               	movlw	-13
  6123  0029FA  010E               	movlb	14	; () banked
  6124  0029FC  17C6               	andwf	198,f,b	;volatile
  6125  0029FE                     
  6126                           ; BSR set to: 14
  6127                           ;comparator.c: 10:     DAC1CON0bits.NSS=0b0;
  6128  0029FE  91C6               	bcf	198,0,b	;volatile
  6129                           
  6130                           ;comparator.c: 15:     DAC1CON1bits.DAC1R=0b11011;
  6131  002A00  51C7               	movf	199,w,b	;volatile
  6132  002A02  0BE0               	andlw	-32
  6133  002A04  091B               	iorlw	27
  6134  002A06  6FC7               	movwf	199,b	;volatile
  6135  002A08                     
  6136                           ; BSR set to: 14
  6137                           ;comparator.c: 16:     DAC1CON0bits.DAC1EN=1;
  6138  002A08  8FC6               	bsf	198,7,b	;volatile
  6139  002A0A                     
  6140                           ; BSR set to: 14
  6141  002A0A  0012               	return		;funcret
  6142  002A0C                     __end_of_DAC_init:
  6143                           	callstack 0
  6144                           
  6145 ;; *************** function _ADC_init *****************
  6146 ;; Defined at:
  6147 ;;		line 8 in file "ADC.c"
  6148 ;; Parameters:    Size  Location     Type
  6149 ;;		None
  6150 ;; Auto vars:     Size  Location     Type
  6151 ;;		None
  6152 ;; Return value:  Size  Location     Type
  6153 ;;                  1    wreg      void 
  6154 ;; Registers used:
  6155 ;;		wreg, status,2
  6156 ;; Tracked objects:
  6157 ;;		On entry : 0/0
  6158 ;;		On exit  : 0/0
  6159 ;;		Unchanged: 0/0
  6160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6165 ;;Total ram usage:        0 bytes
  6166 ;; Hardware stack levels used: 1
  6167 ;; Hardware stack levels required when called: 2
  6168 ;; This function calls:
  6169 ;;		Nothing
  6170 ;; This function is called by:
  6171 ;;		_main
  6172 ;; This function uses a non-reentrant model
  6173 ;;
  6174                           
  6175                           	psect	text40
  6176  0029C6                     __ptext40:
  6177                           	callstack 0
  6178  0029C6                     _ADC_init:
  6179                           	callstack 28
  6180  0029C6                     
  6181                           ;ADC.c: 10:     TRISFbits.TRISF7=1;
  6182  0029C6  8E86               	bsf	134,7,c	;volatile
  6183                           
  6184                           ;ADC.c: 11:     ANSELFbits.ANSELF7=1;
  6185  0029C8  010E               	movlb	14	; () banked
  6186  0029CA  8FB4               	bsf	180,7,b	;volatile
  6187                           
  6188                           ;ADC.c: 14:     ADREFbits.ADNREF = 0;
  6189  0029CC  010F               	movlb	15	; () banked
  6190  0029CE  9958               	bcf	88,4,b	;volatile
  6191  0029D0                     
  6192                           ; BSR set to: 15
  6193                           ;ADC.c: 15:     ADREFbits.ADPREF = 0b00;
  6194  0029D0  0EFC               	movlw	-4
  6195  0029D2  1758               	andwf	88,f,b	;volatile
  6196                           
  6197                           ;ADC.c: 16:     ADPCH=0b101111;
  6198  0029D4  0E2F               	movlw	47
  6199  0029D6  6F5F               	movwf	95,b	;volatile
  6200  0029D8                     
  6201                           ; BSR set to: 15
  6202                           ;ADC.c: 17:     ADCON0bits.ADFM = 0;
  6203  0029D8  9460               	bcf	96,2,c	;volatile
  6204  0029DA                     
  6205                           ; BSR set to: 15
  6206                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
  6207  0029DA  8860               	bsf	96,4,c	;volatile
  6208  0029DC                     
  6209                           ; BSR set to: 15
  6210                           ;ADC.c: 19:     ADCON0bits.ADON = 1;
  6211  0029DC  8E60               	bsf	96,7,c	;volatile
  6212  0029DE                     
  6213                           ; BSR set to: 15
  6214  0029DE  0012               	return		;funcret
  6215  0029E0                     __end_of_ADC_init:
  6216                           	callstack 0
  6217                           
  6218 ;; *************** function _LowISR *****************
  6219 ;; Defined at:
  6220 ;;		line 50 in file "interrupts.c"
  6221 ;; Parameters:    Size  Location     Type
  6222 ;;		None
  6223 ;; Auto vars:     Size  Location     Type
  6224 ;;		None
  6225 ;; Return value:  Size  Location     Type
  6226 ;;                  1    wreg      void 
  6227 ;; Registers used:
  6228 ;;		wreg, status,2
  6229 ;; Tracked objects:
  6230 ;;		On entry : 0/0
  6231 ;;		On exit  : 0/0
  6232 ;;		Unchanged: 0/0
  6233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6236 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6237 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6238 ;;Total ram usage:        3 bytes
  6239 ;; Hardware stack levels used: 1
  6240 ;; Hardware stack levels required when called: 1
  6241 ;; This function calls:
  6242 ;;		Nothing
  6243 ;; This function is called by:
  6244 ;;		Interrupt level 1
  6245 ;; This function uses a non-reentrant model
  6246 ;;
  6247                           
  6248                           	psect	intcodelo
  6249  000018                     __pintcodelo:
  6250                           	callstack 0
  6251  000018                     _LowISR:
  6252                           	callstack 20
  6253                           
  6254                           ; BSR set to: 15
  6255                           ;incstack = 0
  6256  000018  8056               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  6257  00001A  CFD8 F002          	movff	status,??_LowISR
  6258  00001E  CFE8 F003          	movff	wreg,??_LowISR+1
  6259  000022  CFE0 F004          	movff	bsr,??_LowISR+2
  6260  000026                     
  6261                           ;interrupts.c: 51:     if (PIR0bits.TMR0IF) {
  6262  000026  010E               	movlb	14	; () banked
  6263  000028  AB33               	btfss	51,5,b	;volatile
  6264  00002A  EF19  F000         	goto	i1u336_21
  6265  00002E  EF1B  F000         	goto	i1u336_20
  6266  000032                     i1u336_21:
  6267  000032  EF24  F000         	goto	i1l160
  6268  000036                     i1u336_20:
  6269  000036                     
  6270                           ; BSR set to: 14
  6271                           ;interrupts.c: 52:         TMR0H = 0b11101110;
  6272  000036  0EEE               	movlw	238
  6273  000038  6ED4               	movwf	212,c	;volatile
  6274                           
  6275                           ;interrupts.c: 53:         TMR0L = 0b10100011;
  6276  00003A  0EA3               	movlw	163
  6277  00003C  6ED3               	movwf	211,c	;volatile
  6278                           
  6279                           ;interrupts.c: 54:         time_flag = 1;
  6280  00003E  0E01               	movlw	1
  6281  000040  0100               	movlb	0	; () banked
  6282  000042  6FF2               	movwf	_time_flag& (0+255),b	;volatile
  6283  000044                     
  6284                           ; BSR set to: 0
  6285                           ;interrupts.c: 55:         PIR0bits.TMR0IF = 0;
  6286  000044  010E               	movlb	14	; () banked
  6287  000046  9B33               	bcf	51,5,b	;volatile
  6288  000048                     i1l160:
  6289                           
  6290                           ; BSR set to: 14
  6291  000048  C004  FFE0         	movff	??_LowISR+2,bsr
  6292  00004C  C003  FFE8         	movff	??_LowISR+1,wreg
  6293  000050  C002  FFD8         	movff	??_LowISR,status
  6294  000054  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  6295  000056  0010               	retfie	
  6296  000058                     __end_of_LowISR:
  6297                           	callstack 0
  6298                           
  6299 ;; *************** function _HighISR *****************
  6300 ;; Defined at:
  6301 ;;		line 34 in file "interrupts.c"
  6302 ;; Parameters:    Size  Location     Type
  6303 ;;		None
  6304 ;; Auto vars:     Size  Location     Type
  6305 ;;		None
  6306 ;; Return value:  Size  Location     Type
  6307 ;;                  1    wreg      void 
  6308 ;; Registers used:
  6309 ;;		wreg, status,2, status,0
  6310 ;; Tracked objects:
  6311 ;;		On entry : 0/0
  6312 ;;		On exit  : 0/0
  6313 ;;		Unchanged: 0/0
  6314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6317 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6318 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6319 ;;Total ram usage:        1 bytes
  6320 ;; Hardware stack levels used: 1
  6321 ;; This function calls:
  6322 ;;		Nothing
  6323 ;; This function is called by:
  6324 ;;		Interrupt level 2
  6325 ;; This function uses a non-reentrant model
  6326 ;;
  6327                           
  6328                           	psect	intcode
  6329  000008                     __pintcode:
  6330                           	callstack 0
  6331  000008                     _HighISR:
  6332                           	callstack 20
  6333                           
  6334                           ; BSR set to: 14
  6335                           ;incstack = 0
  6336  000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6337  00000A  EFE3  F012         	goto	int_func
  6338                           
  6339                           	psect	intcode_body
  6340  0025C6                     __pintcode_body:
  6341                           	callstack 20
  6342  0025C6                     int_func:
  6343                           	callstack 20
  6344  0025C6                     
  6345                           ;interrupts.c: 35:     if (PIR2bits.C1IF) {
  6346  0025C6  010E               	movlb	14	; () banked
  6347  0025C8  A135               	btfss	53,0,b	;volatile
  6348  0025CA  EFE9  F012         	goto	i2u166_41
  6349  0025CE  EFEB  F012         	goto	i2u166_40
  6350  0025D2                     i2u166_41:
  6351  0025D2  EF0B  F013         	goto	i2l152
  6352  0025D6                     i2u166_40:
  6353  0025D6                     
  6354                           ; BSR set to: 14
  6355                           ;interrupts.c: 36:         LATDbits.LATD7 = !LATDbits.LATD7;
  6356  0025D6  AE7C               	btfss	124,7,c	;volatile
  6357  0025D8  EFF0  F012         	goto	i2u167_41
  6358  0025DC  EFF4  F012         	goto	i2u167_40
  6359  0025E0                     i2u167_41:
  6360  0025E0  6A01               	clrf	??_HighISR^0,c
  6361  0025E2  2A01               	incf	??_HighISR^0,f,c
  6362  0025E4  EFF5  F012         	goto	i2u168_48
  6363  0025E8                     i2u167_40:
  6364  0025E8  6A01               	clrf	??_HighISR^0,c
  6365  0025EA                     i2u168_48:
  6366  0025EA  3201               	rrcf	??_HighISR^0,f,c
  6367  0025EC  3201               	rrcf	??_HighISR^0,f,c
  6368  0025EE  507C               	movf	124,w,c	;volatile
  6369  0025F0  1801               	xorwf	??_HighISR^0,w,c
  6370  0025F2  0B7F               	andlw	-129
  6371  0025F4  1801               	xorwf	??_HighISR^0,w,c
  6372  0025F6  6E7C               	movwf	124,c	;volatile
  6373  0025F8                     
  6374                           ;interrupts.c: 37:         if (LATDbits.LATD7==0) {sunrise_flag=1;}
  6375  0025F8  BE7C               	btfsc	124,7,c	;volatile
  6376  0025FA  EF01  F013         	goto	i2u169_41
  6377  0025FE  EF03  F013         	goto	i2u169_40
  6378  002602                     i2u169_41:
  6379  002602  EF07  F013         	goto	i2l2017
  6380  002606                     i2u169_40:
  6381  002606  0E01               	movlw	1
  6382  002608  6E55               	movwf	_sunrise_flag^0,c	;volatile
  6383  00260A  EF09  F013         	goto	i2l2019
  6384  00260E                     i2l2017:
  6385  00260E  0E01               	movlw	1
  6386  002610  6E54               	movwf	_sunset_flag^0,c	;volatile
  6387  002612                     i2l2019:
  6388                           
  6389                           ;interrupts.c: 39:         PIR2bits.C1IF = 0;
  6390  002612  010E               	movlb	14	; () banked
  6391  002614  9135               	bcf	53,0,b	;volatile
  6392  002616                     i2l152:
  6393                           
  6394                           ; BSR set to: 14
  6395  002616  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6396  002618  0011               	retfie		f
  6397  00261A                     __end_of_HighISR:
  6398                           	callstack 0
  6399                           
  6400                           	psect	rparam
  6401  0000                     
  6402                           	psect	temp
  6403  000056                     btemp:
  6404                           	callstack 0
  6405  000056                     	ds	1
  6406  0000                     int$flags	set	btemp
  6407  0000                     wtemp8	set	btemp+1
  6408  0000                     ttemp5	set	btemp+1
  6409  0000                     ttemp6	set	btemp+4
  6410  0000                     ttemp7	set	btemp+8
  6411                           
  6412                           	psect	idloc
  6413                           
  6414                           ;Config register IDLOC0 @ 0x200000
  6415                           ;	unspecified, using default values
  6416  200000                     	org	2097152
  6417  200000  0FFF               	dw	4095
  6418                           
  6419                           ;Config register IDLOC1 @ 0x200002
  6420                           ;	unspecified, using default values
  6421  200002                     	org	2097154
  6422  200002  0FFF               	dw	4095
  6423                           
  6424                           ;Config register IDLOC2 @ 0x200004
  6425                           ;	unspecified, using default values
  6426  200004                     	org	2097156
  6427  200004  0FFF               	dw	4095
  6428                           
  6429                           ;Config register IDLOC3 @ 0x200006
  6430                           ;	unspecified, using default values
  6431  200006                     	org	2097158
  6432  200006  0FFF               	dw	4095
  6433                           
  6434                           ;Config register IDLOC4 @ 0x200008
  6435                           ;	unspecified, using default values
  6436  200008                     	org	2097160
  6437  200008  0FFF               	dw	4095
  6438                           
  6439                           ;Config register IDLOC5 @ 0x20000A
  6440                           ;	unspecified, using default values
  6441  20000A                     	org	2097162
  6442  20000A  0FFF               	dw	4095
  6443                           
  6444                           ;Config register IDLOC6 @ 0x20000C
  6445                           ;	unspecified, using default values
  6446  20000C                     	org	2097164
  6447  20000C  0FFF               	dw	4095
  6448                           
  6449                           ;Config register IDLOC7 @ 0x20000E
  6450                           ;	unspecified, using default values
  6451  20000E                     	org	2097166
  6452  20000E  0FFF               	dw	4095
  6453                           
  6454                           	psect	config
  6455                           
  6456                           ;Config register CONFIG1L @ 0x300000
  6457                           ;	External Oscillator mode Selection bits
  6458                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  6459                           ;	Power-up default value for COSC bits
  6460                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  6461  300000                     	org	3145728
  6462  300000  AA                 	db	170
  6463                           
  6464                           ;Config register CONFIG1H @ 0x300001
  6465                           ;	unspecified, using default values
  6466                           ;	Clock Out Enable bit
  6467                           ;	CLKOUTEN = 0x1, unprogrammed default
  6468                           ;	Clock Switch Enable bit
  6469                           ;	CSWEN = 0x1, unprogrammed default
  6470                           ;	Fail-Safe Clock Monitor Enable bit
  6471                           ;	FCMEN = 0x1, unprogrammed default
  6472  300001                     	org	3145729
  6473  300001  FF                 	db	255
  6474                           
  6475                           ;Config register CONFIG2L @ 0x300002
  6476                           ;	unspecified, using default values
  6477                           ;	Master Clear Enable bit
  6478                           ;	MCLRE = 0x1, unprogrammed default
  6479                           ;	Power-up Timer Enable bit
  6480                           ;	PWRTE = 0x1, unprogrammed default
  6481                           ;	Low-power BOR enable bit
  6482                           ;	LPBOREN = 0x1, unprogrammed default
  6483                           ;	Brown-out Reset Enable bits
  6484                           ;	BOREN = 0x3, unprogrammed default
  6485  300002                     	org	3145730
  6486  300002  FF                 	db	255
  6487                           
  6488                           ;Config register CONFIG2H @ 0x300003
  6489                           ;	unspecified, using default values
  6490                           ;	Brown Out Reset Voltage selection bits
  6491                           ;	BORV = 0x3, unprogrammed default
  6492                           ;	ZCD Disable bit
  6493                           ;	ZCD = 0x1, unprogrammed default
  6494                           ;	PPSLOCK bit One-Way Set Enable bit
  6495                           ;	PPS1WAY = 0x1, unprogrammed default
  6496                           ;	Stack Full/Underflow Reset Enable bit
  6497                           ;	STVREN = 0x1, unprogrammed default
  6498                           ;	Debugger Enable bit
  6499                           ;	DEBUG = 0x1, unprogrammed default
  6500                           ;	Extended Instruction Set Enable bit
  6501                           ;	XINST = 0x1, unprogrammed default
  6502  300003                     	org	3145731
  6503  300003  FF                 	db	255
  6504                           
  6505                           ;Config register CONFIG3L @ 0x300004
  6506                           ;	WDT Period Select bits
  6507                           ;	WDTCPS = 0x1F, unprogrammed default
  6508                           ;	WDT operating mode
  6509                           ;	WDTE = OFF, WDT Disabled
  6510  300004                     	org	3145732
  6511  300004  9F                 	db	159
  6512                           
  6513                           ;Config register CONFIG3H @ 0x300005
  6514                           ;	unspecified, using default values
  6515                           ;	WDT Window Select bits
  6516                           ;	WDTCWS = 0x7, unprogrammed default
  6517                           ;	WDT input clock selector
  6518                           ;	WDTCCS = 0x7, unprogrammed default
  6519  300005                     	org	3145733
  6520  300005  FF                 	db	255
  6521                           
  6522                           ;Config register CONFIG4L @ 0x300006
  6523                           ;	unspecified, using default values
  6524                           ;	Write Protection Block 0
  6525                           ;	WRT0 = 0x1, unprogrammed default
  6526                           ;	Write Protection Block 1
  6527                           ;	WRT1 = 0x1, unprogrammed default
  6528                           ;	Write Protection Block 2
  6529                           ;	WRT2 = 0x1, unprogrammed default
  6530                           ;	Write Protection Block 3
  6531                           ;	WRT3 = 0x1, unprogrammed default
  6532                           ;	Write Protection Block 3
  6533                           ;	WRT4 = 0x1, unprogrammed default
  6534                           ;	Write Protection Block 3
  6535                           ;	WRT5 = 0x1, unprogrammed default
  6536                           ;	Write Protection Block 3
  6537                           ;	WRT6 = 0x1, unprogrammed default
  6538                           ;	Write Protection Block 3
  6539                           ;	WRT7 = 0x1, unprogrammed default
  6540  300006                     	org	3145734
  6541  300006  FF                 	db	255
  6542                           
  6543                           ;Config register CONFIG4H @ 0x300007
  6544                           ;	unspecified, using default values
  6545                           ;	Configuration Register Write Protection bit
  6546                           ;	WRTC = 0x1, unprogrammed default
  6547                           ;	Boot Block Write Protection bit
  6548                           ;	WRTB = 0x1, unprogrammed default
  6549                           ;	Data EEPROM Write Protection bit
  6550                           ;	WRTD = 0x1, unprogrammed default
  6551                           ;	Scanner Enable bit
  6552                           ;	SCANE = 0x1, unprogrammed default
  6553                           ;	Low Voltage Programming Enable bit
  6554                           ;	LVP = 0x1, unprogrammed default
  6555  300007                     	org	3145735
  6556  300007  FF                 	db	255
  6557                           
  6558                           ;Config register CONFIG5L @ 0x300008
  6559                           ;	unspecified, using default values
  6560                           ;	UserNVM Program Memory Code Protection bit
  6561                           ;	CP = 0x1, unprogrammed default
  6562                           ;	DataNVM Memory Code Protection bit
  6563                           ;	CPD = 0x1, unprogrammed default
  6564  300008                     	org	3145736
  6565  300008  FF                 	db	255
  6566                           
  6567                           ;Config register CONFIG5H @ 0x300009
  6568                           ;	unspecified, using default values
  6569  300009                     	org	3145737
  6570  300009  FF                 	db	255
  6571                           
  6572                           ;Config register CONFIG6L @ 0x30000A
  6573                           ;	unspecified, using default values
  6574                           ;	Table Read Protection Block 0
  6575                           ;	EBTR0 = 0x1, unprogrammed default
  6576                           ;	Table Read Protection Block 1
  6577                           ;	EBTR1 = 0x1, unprogrammed default
  6578                           ;	Table Read Protection Block 2
  6579                           ;	EBTR2 = 0x1, unprogrammed default
  6580                           ;	Table Read Protection Block 3
  6581                           ;	EBTR3 = 0x1, unprogrammed default
  6582                           ;	Table Read Protection Block 4
  6583                           ;	EBTR4 = 0x1, unprogrammed default
  6584                           ;	Table Read Protection Block 5
  6585                           ;	EBTR5 = 0x1, unprogrammed default
  6586                           ;	Table Read Protection Block 6
  6587                           ;	EBTR6 = 0x1, unprogrammed default
  6588                           ;	Table Read Protection Block 7
  6589                           ;	EBTR7 = 0x1, unprogrammed default
  6590  30000A                     	org	3145738
  6591  30000A  FF                 	db	255
  6592                           
  6593                           ;Config register CONFIG6H @ 0x30000B
  6594                           ;	unspecified, using default values
  6595                           ;	Boot Block Table Read Protection bit
  6596                           ;	EBTRB = 0x1, unprogrammed default
  6597  30000B                     	org	3145739
  6598  30000B  FF                 	db	255
  6599                           tosu	equ	0xFFF
  6600                           tosh	equ	0xFFE
  6601                           tosl	equ	0xFFD
  6602                           stkptr	equ	0xFFC
  6603                           pclatu	equ	0xFFB
  6604                           pclath	equ	0xFFA
  6605                           pcl	equ	0xFF9
  6606                           tblptru	equ	0xFF8
  6607                           tblptrh	equ	0xFF7
  6608                           tblptrl	equ	0xFF6
  6609                           tablat	equ	0xFF5
  6610                           prodh	equ	0xFF4
  6611                           prodl	equ	0xFF3
  6612                           indf0	equ	0xFEF
  6613                           postinc0	equ	0xFEE
  6614                           postdec0	equ	0xFED
  6615                           preinc0	equ	0xFEC
  6616                           plusw0	equ	0xFEB
  6617                           fsr0h	equ	0xFEA
  6618                           fsr0l	equ	0xFE9
  6619                           wreg	equ	0xFE8
  6620                           indf1	equ	0xFE7
  6621                           postinc1	equ	0xFE6
  6622                           postdec1	equ	0xFE5
  6623                           preinc1	equ	0xFE4
  6624                           plusw1	equ	0xFE3
  6625                           fsr1h	equ	0xFE2
  6626                           fsr1l	equ	0xFE1
  6627                           bsr	equ	0xFE0
  6628                           indf2	equ	0xFDF
  6629                           postinc2	equ	0xFDE
  6630                           postdec2	equ	0xFDD
  6631                           preinc2	equ	0xFDC
  6632                           plusw2	equ	0xFDB
  6633                           fsr2h	equ	0xFDA
  6634                           fsr2l	equ	0xFD9
  6635                           status	equ	0xFD8

Data Sizes:
    Strings     30
    Constant    0
    Data        0
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     81      85
    BANK0           160    140     147
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> time_incre@buf2(BANK0[40]), time_incre@buf1(BANK0[40]), LCD_init@buf(BANK0[40]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 40
		 -> time_incre@buf2(BANK0[40]), time_incre@buf1(BANK0[40]), LCD_init@buf(BANK0[40]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2141_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 40
		 -> time_incre@buf2(BANK0[40]), time_incre@buf1(BANK0[40]), LCD_init@buf(BANK0[40]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> time_incre@buf2(BANK0[40]), time_incre@buf1(BANK0[40]), LCD_init@buf(BANK0[40]), 

    LCD_sendstring@string	PTR unsigned char  size(2) Largest target is 40
		 -> time_incre@buf2(BANK0[40]), time_incre@buf1(BANK0[40]), LCD_init@buf(BANK0[40]), 


Critical Paths under _main in COMRAM

    _main->_LCD_init
    _sunrise_sunset->_sun_sync
    _sun_sync->___awdiv
    _LED_toggle->_sunrise
    _LED1_init->_ADC_getval
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _LCD_setline->_LCD_sendbyte
    _LCD_sendstring->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_time_incre
    _time_incre->_sprintf
    _LCD_init->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   33499
                                            128 BANK0     12    12      0
                           _ADC_init
                         _Comp1_init
                    _Interrupts_init
                           _LCD_init
                          _LED1_init
                          _LED2_init
                         _LED_toggle
                  _LEDarray_disp_bin
                      _LEDarray_init
                        _Timer0_init
                     _sunrise_sunset
                         _time_incre
 ---------------------------------------------------------------------------------
 (1) _time_incre                                          93    81     12   15539
                                             79 COMRAM     1     1      0
                                             36 BANK0     92    80     12
                     _LCD_sendstring
                        _LCD_setline
                         _date_check
         _daylightsavingstime_toggle
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _daylightsavingstime_toggle                          14     2     12     470
                                              4 COMRAM    14     2     12
 ---------------------------------------------------------------------------------
 (2) _date_check                                          14     2     12     674
                                              4 COMRAM    14     2     12
 ---------------------------------------------------------------------------------
 (1) _sunrise_sunset                                      12     0     12    1895
                                             27 COMRAM    12     0     12
                           _sun_sync
                            _sunrise
 ---------------------------------------------------------------------------------
 (2) _sun_sync                                            15     3     12    1436
                                             12 COMRAM    15     3     12
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     756
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    3     3      0     198
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LED_toggle                                          13     1     12     597
                                             16 COMRAM    13     1     12
                         _ADC_getval
                            _sunrise
 ---------------------------------------------------------------------------------
 (2) _sunrise                                             12     0     12     315
                                              4 COMRAM    12     0     12
 ---------------------------------------------------------------------------------
 (1) _LED2_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED1_init                                           13     1     12     145
                                              5 COMRAM    13     1     12
                         _ADC_getval
 ---------------------------------------------------------------------------------
 (2) _ADC_getval                                           1     1      0      23
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                            54    42     12   14401
                                             79 COMRAM     2     2      0
                                             36 BANK0     52    40     12
                       _LCD_sendbyte
                     _LCD_sendnibble
                     _LCD_sendstring
                        _LCD_setline
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    10     10   11213
                                             18 BANK0     18     8     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   10361
                                             77 COMRAM     2     2      0
                                             12 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6    9831
                                             67 COMRAM    10     4      6
                                              0 BANK0     12    12      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5683
                                             31 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3417
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1615
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     512
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _LCD_setline                                          1     1      0     882
                                              7 COMRAM     1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (2) _LCD_sendstring                                       2     0      2    1111
                                              7 COMRAM     2     0      2
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (3) _LCD_sendbyte                                         2     1      1     838
                                              5 COMRAM     2     1      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (4) _LCD_sendnibble                                       1     1      0      88
                                              4 COMRAM     1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (5) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                     12     0     12     122
                                              4 COMRAM    12     0     12
 ---------------------------------------------------------------------------------
 (1) _Comp1_init                                           0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _LowISR                                              3     3      0       0
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _HighISR                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Comp1_init
     _DAC_init
   _Interrupts_init
   _LCD_init
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
     _LCD_sendnibble
     _LCD_sendstring
       _LCD_sendbyte
     _LCD_setline
       _LCD_sendbyte
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
           _isdigit
   _LED1_init
     _ADC_getval
   _LED2_init
   _LED_toggle
     _ADC_getval
     _sunrise
   _LEDarray_disp_bin
   _LEDarray_init
   _Timer0_init
   _sunrise_sunset
     _sun_sync
       ___awdiv
     _sunrise
   _time_incre
     _LCD_sendstring
     _LCD_setline
     _date_check
     _daylightsavingstime_toggle
     _sprintf

 _LowISR (ROOT)

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8C      93       5       91.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     51      55       1       90.4%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     108       8        0.0%
DATA                 0      0     108       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Nov 09 16:20:42 2021

                                 l50 29E2                                   l52 29F0  
                                 l53 29F6                                   l47 29DE  
                                 l72 293C                                   l81 1CF0  
                                 l91 1D90                                   l83 1D10  
                                 l75 1C90                                   l93 1D92  
                                 l85 1D30                                   l77 1CB0  
                                 l87 1D50                                   l79 1CD0  
                                 l89 1D70                         ___awdiv@sign 000A  
                                 bsr 000FE0                  ___wmul@multiplicand 0007  
                  ??_Interrupts_init 0011                                  l110 2A0A  
                                l113 2988                                  l201 253A  
                                l210 28EC                                  l203 2550  
                                l140 27D6                                  l205 255E  
                                l213 2090                                  l301 1982  
                                l136 27C6                                  l208 28D2  
                                l224 28B8                                  l304 29A8  
                                l241 2702                                  l138 27BE  
                                l218 2750                                  l139 27CA  
                                l171 29C4                                  l307 2122  
                                l315 24F6                                  l244 2704  
                                l308 2140                                  l245 2706  
                                l309 215A                                  l318 2962  
                                l432 1B0A                                  l248 2A1E  
                                l256 23AC                                  l194 2A18  
                                l276 1EA0                                  l197 250E  
                                l445 1C6E                                  l293 163E  
                                l199 2524                                  l298 1924  
                                l549 22E8                                  l996 266A  
                                _abs 27D8                                  _pad 23AE  
                                wreg 000FE8               Interrupts_init@current 0005  
                __size_of_ADC_getval 0018                          ?_LED_toggle 0011  
                 __size_of_LED1_init 004A                   __size_of_LED2_init 0006  
                               l1101 2816                                 l1030 2434  
                               l1032 246E                                 l1040 1254  
                               l1027 23F2                                 ?_abs 0017  
                               l1132 17E2                                 l1038 124C  
                               l1135 284E                                 l1143 26BC  
                               l1072 0F1A                                 l1129 17DA  
                               l3001 1A16                                 l1058 148A  
                               l3011 1A80                                 l3003 1A1E  
                               l3101 26B6                                 l3021 1ACA  
                               l3013 1AA0                                 l3005 1A32  
                               l1093 25BC                                 l1158 2224  
                               l1166 2794                                 l1094 25C4  
                               l2231 2A16                                 l3023 1AEA  
                               l3015 1AA2                                 l3007 1A40  
                               l3031 1B1E                                 l1175 2884  
                               l3111 1214                                 l1087 11AA  
                               l3201 17AC                                 l3017 1AB4  
                               l3009 1A52                                 l3041 1B8E  
                               l3033 1B3E                                 l1169 2A20  
                               l3121 126E                                 l3113 1224  
                               l3105 11AC                                 l1098 280E  
                               l2227 2A0C                                 l3203 17BE  
                               l3019 1ABA                                 l3051 1C06  
                               l3043 1B96                                 l3035 1B42  
                               l3027 1B0C                                 l3131 129A  
                               l3123 127C                                 l3115 1226  
                               l3107 11CC                                 l3211 0E48  
                               l2229 2A0E                                 l2341 2510  
                               l3053 1C18                                 l3045 1BAA  
                               l3037 1B50                                 l3029 1B10  
                               l3141 13A6                                 l3133 131C  
                               l3125 1282                                 l3117 1240  
                               l3109 11F4                                 l3221 0E7A  
                               l3213 0E56                                 l2501 22E0  
                               l2351 254A                                 l2343 251E  
                               l3047 1BB8                                 l3055 1C1E  
                               l3039 1B70                                 l3071 23EA  
                               l3063 23AE                                 l3151 1418  
                               l3143 13C4                                 l3135 1322  
                               l3127 128A                                 l3119 125C  
                               l3231 0E98                                 l3223 0E8C  
                               l3215 0E68                                 l3311 2560  
                               l2521 29FE                                 l2353 2552  
                               l2345 2526                                 l2337 24FA  
                               l3057 1C2E                                 l3049 1BE6  
                               l3081 2456                                 l3073 23FE  
                               l3065 23BC                                 l3161 1452  
                               l3153 1426                                 l3145 13DE  
                               l3137 1328                                 l3129 1294  
                               l3217 0E6C                                 l3209 0E20  
                               l3313 2568                                 l3321 262C  
                               l2513 29E0                                 l2601 14D0  
                               l3401 1902                                 l2523 2A08  
                               l2355 2556                                 l2347 2534  
                               l2339 2508                                 l2531 272C  
                               l3171 1658                                 l3059 1C4E  
                               l3075 2412                                 l3067 23D0  
                               l3155 142C                                 l3163 1462  
                               l3147 13F8                                 l3139 138C  
                               l3251 0F52                                 l3243 0EB0  
                               l3235 0E9E                                 l3227 0E92  
                               l3219 0E78                                 l3315 2576  
                               l3323 2634                                 l3331 1FA6  
                               l2515 29F4                                 l2611 1536  
                               l2603 14EE                                 l3411 195E  
                               l3403 1908                                 l2349 253C  
                               l2453 28BC                                 l2533 273E  
                               l2525 270A                                 l3093 266C  
                               l3173 165C                                 l3085 27D8  
                               l3077 2416                                 l3069 23DE  
                               l3157 143E                                 l3149 1406  
                               l3261 0FD2                                 l3253 0F88  
                               l3245 0F08                                 l3317 259C  
                               l3325 263C                                 l3341 1FEA  
                               l3333 1FBE                                 l2701 26D2  
                               l2461 2226                                 l2613 1548  
                               l2621 1590                                 l2605 1500  
                               l3413 196A                                 l3405 191C  
                               l3421 1ED4                                 l2519 29F8  
                               l2455 28CC                                 l2551 288A  
                               l2535 2748                                 l2527 271A  
                               l3095 2670                                 l3191 171E  
                               l3183 16C0                                 l3175 167C  
                               l3167 1640                                 l3087 27F2  
                               l3079 2442                                 l3159 144A  
                               l3271 1080                                 l3255 0F96  
                               l3247 0F28                                 l3511 0EDA  
                               l3239 0EA4                                 l3327 2658  
                               l3319 261A                                 l3351 2010  
                               l3343 1FF0                                 l3335 1FD4  
                               l2703 26E6                                 l2471 2252  
                               l2463 222A                                 l2631 15EC  
                               l2623 15A4                                 l2615 155A  
                               l2607 1514                                 l3407 1924  
                               l3415 1970                                 l3431 1F14  
                               l3423 1ED8                                 l2457 28D4  
                               l2553 289C                                 l2529 2724  
                               l3089 2818                                 l3097 2684  
                               l3513 1708                                 l3185 16D6  
                               l3177 16B6                                 l3169 1654  
                               l3281 1136                                 l3273 10C8  
                               l3265 101E                                 l3257 0FA4  
                               l3249 0F2A                                 l3361 2044  
                               l3353 201A                                 l3345 1FFA  
                               l3337 1FDA                                 l2705 26FC  
                               l2481 2280                                 l2473 225A  
                               l2465 2238                                 l2641 1628  
                               l2625 15B6                                 l2617 156C  
                               l2609 1524                                 l2633 1600  
                               l3409 192A                                 l3433 1F2A  
                               l3425 1EDC                                 l2459 28E4  
                               l2555 28A0                                 l3099 26B2  
                               l3195 1758                                 l3187 16DE  
                               l3179 16BA                                 l3283 114A  
                               l3259 0FC4                                 l3267 1030  
                               l3363 204C                                 l3355 2028  
                               l3347 2000                                 l3339 1FE0  
                               l2707 2A1A                                 l2491 22BA  
                               l2483 2288                                 l2475 225E  
                               l2467 2240                                 l2651 210A  
                               l2635 1604                                 l2643 162C  
                               l2627 15C8                                 l2619 157E  
                               l2571 1DF6                                 l2563 1D94  
                               l3371 17F6                                 l3435 1F4E  
                               l3427 1EE0                                 l3419 1EA2  
                               l2661 29C6                                 l2549 2886  
                               l3189 16E6                                 l3277 1100  
                               l3269 1058                                 l3293 1170  
                               l3365 2052                                 l3357 2032  
                               l3349 200A                                 l2557 298A  
                               l2821 231A                                 l2709 2918  
                               l2493 22BC                                 l2485 2296  
                               l2477 2266                                 l2469 2244  
                               l2653 2118                                 l2637 1608  
                               l2629 15DA                                 l2581 1E52  
                               l2573 1E06                                 l2565 1DA6  
                               l3381 1850                                 l3373 180E  
                               l3437 1F72                                 l3429 1EF6  
                               l2663 29D0                                 l2671 2964  
                               l3199 179A                                 l3295 1198  
                               l3279 1128                                 l3287 1156  
                               l3367 2084                                 l3359 203A  
                               l2559 2996                                 l2831 235A  
                               l2823 2324                                 l2815 22EA  
                               l2495 22C2                                 l2487 229C  
                               l2479 2278                                 l2655 2136  
                               l2647 2092                                 l2751 2480  
                               l2639 161C                                 l2583 1E64  
                               l2591 1E8E                                 l2575 1E0A  
                               l2567 1DD4                                 l3391 1896  
                               l3383 1854                                 l3375 1832  
                               l3439 1F96                                 l2665 29D8  
                               l2681 297E                                 l2673 2966  
                               l3289 1164                                 l2833 2370  
                               l2825 2336                                 l2817 22FA  
                               l2841 1C72                                 l2489 22B2  
                               l2497 22C8                                 l2657 2148  
                               l2649 2104                                 l2761 24E4  
                               l2753 24A4                                 l2585 1E76  
                               l2569 1DE6                                 l2577 1E12  
                               l3393 189A                                 l3385 1858  
                               l3377 1838                                 l3369 17E4  
                               l2667 29DA                                 l2683 2980  
                               l2675 2978                                 l2835 2376  
                               l2827 2346                                 l2819 230A  
                               l2851 1CCA                                 l2843 1C8A  
                               l2691 29B8                                 l2499 22D8  
                               l2755 24AC                                 l2595 148C  
                               l2587 1E86                                 l2579 1E24  
                               l3395 18BE                                 l3387 187C  
                               l3379 183C                                 l2669 29DC  
                               l2685 2984                                 l2677 297A  
                               l2829 2356                                 l2837 239A  
                               l2861 1D12                                 l2853 1CD2  
                               l2845 1C92                                 l2693 29C2  
                               l2757 24BC                                 l2749 2470  
                               l2597 14AA                                 l2589 1E8A  
                               l3397 18C4                                 l3389 1892  
                               ?_pad 0015                                 l2679 297C  
                               l2695 2796                                 l2951 218A  
                               l2871 1D6A                                 l2863 1D2A  
                               l2855 1CEA                                 l2847 1CAA  
                               l2687 29AA                                 l2759 24E0  
                               l2599 14BC                                 l3399 18F6  
                               l2697 27AA                                 l2953 21A8  
                               l2945 215C                                 l2961 275E  
                               l2873 1D72                                 l2865 1D32  
                               l2857 1CF2                                 l2849 1CB2  
                               l2689 29B2                                 l2955 21DE  
                               l2947 216E                                 l2963 2770  
                               l2971 2860                                 l2699 26BE  
                               l2875 1D8A                                 l2867 1D4A  
                               l2859 1D0A                                 l2949 2180  
                               l2965 2774                                 l2973 2878  
                               l2869 1D52                                 l2991 19BA  
                               l2983 1984                                 l2959 2752  
                               l2967 2850                                 l2977 293E  
                               l2993 19C8                                 l2985 1988  
                               l2969 285C                                 l2979 295A  
                               l2995 19E8                                 l2987 1996  
                               l2997 19EC                                 l2989 19B6  
                               l2999 19F8                                 STR_1 0E10  
                               STR_2 0E10                                 STR_3 0E01  
                               u2210 2508                                 u2211 2504  
                               u2220 251E                                 u3100 231A  
                               u2221 251A                                 u3101 2316  
                               u2230 2534                                 u3110 2336  
                               u2231 2530                                 u3111 2332  
                               u2240 254A                                 u3120 2346  
                               u3200 1CCA                                 u2400 2296  
                               u4000 180E                                 u2241 2546  
                               u3121 2342                                 u3201 1CC6  
                               u2401 2292                                 u4001 180A  
                               u3130 2356                                 u3210 1CEA  
                               u2410 22B2                                 u4010 1820  
                               u3131 2352                                 u3211 1CE6  
                               u2411 22AE                                 u4011 1818  
                               u3140 2370                                 u3220 1D0A  
                               u2420 22D8                                 u2500 1DD4  
                               u3141 236C                                 u3221 1D06  
                               u2421 22D4                                 u2501 1DD0  
                               u4101 197A                                 u3230 1D2A  
                               u2510 1DE6                                 u4030 1850  
                               u3151 2380                                 u3231 1D26  
                               u2511 1DE2                                 u4031 184C  
                               u4111 1EEA                                 u2360 28CC  
                               u3400 21DE                                 u2440 29F0  
                               u3080 22FA                                 u3240 1D4A  
                               u2600 14AA                                 u2520 1DF6  
                               u2361 28C8                                 u3401 21DA  
                               u2441 29EC                                 u3161 2392  
                               u3081 22F6                                 u3241 1D46  
                               u2601 14A6                                 u2521 1DF2  
                               u4041 1862                                 u4121 1F00  
                               u2450 271A                                 u3410 2794  
                               u3090 230A                                 u3250 1D6A  
                               u2370 2238                                 u2610 14BC  
                               u2530 1E06                                 u2451 2716  
                               u3411 2790                                 u3171 23A4  
                               u3091 2306                                 u3251 1D66  
                               u2371 2234                                 u2611 14B8  
                               u2531 1E02                                 u4051 1874  
                               u4131 1F1E                                 u2460 273E  
                               u3500 1B1E                                 u3420 2878  
                               u3260 1D8A                                 u3180 1C8A  
                               u2380 2252                                 u2700 156C  
                               u2620 14D0                                 u2540 1E24  
                               u4060 1892                                 u4028 1822  
                               u2461 273A                                 u3501 1B1A  
                               u3421 2874                                 u3261 1D86  
                               u3181 1C86                                 u2381 224E  
                               u2701 1568                                 u2621 14CC  
                               u2541 1E20                                 u4061 188E  
                               u4141 1F34                                 u2470 28B8  
                               u3430 1996                                 u3510 1B50  
                               u3190 1CAA                                 u2390 2278  
                               u2710 157E                                 u2630 14EE  
                               u2550 1E52                                 u2471 28B4  
                               u3431 1992                                 u3511 1B4C  
                               u4207 1FC8                                 u3191 1CA6  
                               u2391 2274                                 u2711 157A  
                               u2631 14EA                                 u2551 1E4E  
                               u4071 18A4                                 u4151 1F46  
                               u3440 19C8                                 u3520 1B8E  
                               u3600 27F2                                 u2720 1590  
                               u2640 1500                                 u2560 1E64  
                               u3441 19C4                                 u3521 1B8A  
                               u3601 27EE                                 u4217 1FDC  
                               u2481 29A0                                 u2801 1636  
                               u2721 158C                                 u2641 14FC  
                               u2561 1E60                                 u4081 18B6  
                               u4161 1F58                                 u3610 2848  
                               u3530 1BB8                                 u3370 216E  
                               u2810 2118                                 u2730 15A4  
                               u2650 1514                                 u2570 1E76  
                               u2490 1DA6                                 u4090 191C  
                               u4307 28E6                                 u3611 2842  
                               u3451 19F2                                 u3531 1BB4  
                               u3371 216A                                 u4227 1FEC  
                               u2811 2114                                 u2731 15A0  
                               u2651 1510                                 u2571 1E72  
                               u2491 1DA2                                 u4091 1918  
                               u4171 1F6A                                 u3620 284A  
                               u3460 1A16                                 u3540 1BE6  
                               u3380 2180                                 u3700 126E  
                               u2820 2136                                 u2740 15B6  
                               u2660 1524                                 u2580 1E86  
                               u4317 2558                                 u3461 1A12  
                               u3541 1BE2                                 u3381 217C  
                               u3701 126A                                 u4237 1FFC  
                               u2821 2132                                 u2901 248A  
                               u2741 15B2                                 u2661 1520  
                               u2581 1E82                                 u4181 1F7C  
                               u3630 2684                                 u3470 1A40  
                               u3550 1C2E                                 u3390 21A8  
                               u3710 127C                                 u2750 15C8  
                               u2670 1536                                 u4327 2A10  
                               u3631 2680                                 u3471 1A3C  
                               u3551 1C2A                                 u3391 21A4  
                               u3711 1278                                 u4247 200C  
                               u2831 2152                                 u2911 249C  
                               u2751 15C4                                 u2671 1532  
                               u2591 1E98                                 u4191 1F8E  
                               u2840 27AA                                 u3640 26B2  
                               u3800 167C                                 u3480 1A80  
                               u3560 23BC                                 u3720 13A6  
                               u2920 24BC                                 u2760 15DA  
                               u2680 1548                                 u2841 27A6  
                               u3641 26AE                                 u3801 1678  
                               u3481 1A7C                                 u3561 23B8  
                               u3721 13A2                                 u4257 2020  
                               u2921 24B8                                 u2761 15D6  
                               u2681 1544                                 u2850 27BE  
                               u3810 16B6                                 u3490 1ACA  
                               u3570 23DE                                 u3730 13C4  
                               u3650 11DC                                 u2770 15EC  
                               u2690 155A                                 u2851 27BA  
                               u3811 16B2                                 u3491 1AC6  
                               u3571 23DA                                 u3731 13C0  
                               u3651 11D6                                 u4267 2034  
                               u2931 24C6                                 u2771 15E8  
                               u2691 1556                                 u3820 16D2  
                               u3580 2434                                 u3740 13DE  
                               u3660 11DE                                 u3900 0F52  
                               u2860 26D2                                 u2780 1600  
                               u3821 16CE                                 u3581 2430  
                               u3741 13DA                                 u3901 0F4E  
                               u4277 2046                                 u2861 26CE  
                               u2941 24D8                                 u2781 15FC  
                               u3830 1794                                 u3590 2442  
                               u3750 13F8                                 u3670 11F4  
                               u3910 0F96                                 u2870 26E6  
                               u2790 161C                                 u4287 2726  
                               u3831 178E                                 u3591 243E  
                               u3751 13F4                                 u3671 11F0  
                               u3911 0F92                                 u2871 26E2  
                               u2951 24EE                                 u2791 1618  
                               u3840 1796                                 u3760 1406  
                               u3680 1224                                 u3920 1016  
                               u2880 26FC                                 u4297 274A  
                               u3761 1402                                 u3681 1220  
                               u3921 1010                                 u2881 26F8  
                               u3850 17AC                                 u3770 1418  
                               u3690 1240                                 u3930 1018  
                               u2890 2480                                 u3851 17A8  
                               u3771 1414                                 u3691 123C  
                               u2891 247C                                 u3860 17BE  
                               u3780 1426                                 u3940 1030  
                               u3861 17BA                                 u3781 1422  
                               u3941 102C                                 u3790 143E  
                               u3950 1058                                 u3870 0E48  
                               u3791 143A                                 u3951 1054  
                               u3871 0E44                                 u3960 1080  
                               u3880 0F1A                                 u3961 107C  
                               u3881 0F16                                 u3970 1128  
                               u3890 0F28                                 u3971 1124  
                               u3891 0F24                                 u3980 25BC  
                               u3981 25B8                                 u3990 17F6  
                               u3991 17F2                          main@current 00E0  
                 __size_of_LCD_E_TOG 000E                                 abs@a 0017  
                               _dbuf 0100                                 _atoi 1640  
                               _main 1EA2                                 _dtoa 11AC  
                               _prec 00F0                                 _nout 00EC  
                               pad@i 001C                                 pad@p 0019  
                               fsr1h 000FE2                                 fsr2h 000FDA  
                               indf2 000FDF                                 fsr1l 000FE1  
                               pad@w 001E                                 fsr2l 000FD9  
                               btemp 0056                         ?_LCD_setline 0001  
                               prodh 000FF4                                 prodl 000FF3  
                               start 0058                     __end_of_ADC_init 29E0  
                   __end_of_DAC_init 2A0C                      __end_of_HighISR 261A  
                   ??_sunrise_sunset 0028                         ___param_bank 000000  
                         _Comp1_init 2964                                ??_abs 0019  
                              ??_pad 001B                          _sunset_flag 0054  
                   __end_of_LCD_init 2092                      __end_of___aodiv 1B0C  
                              ?_atoi 000C                                ?_main 0001  
                              ?_dtoa 0020                      __end_of___aomod 1C70  
                              _ADPCH 000F5F                      __end_of___awdiv 22EA  
                    ___awdiv@divisor 0007                                i1l160 0048  
                              i2l152 2616                      ___awdiv@counter 0009  
                       vfpfcnvrt@fmt 0046                                _TMR0H 000FD4  
                              _TMR0L 000FD3                                _flags 0052  
                              _fputc 215C                                _fputs 2752  
                    __end_of_isdigit 2850                                atoi@n 0019  
                              pad@fp 0015                                atoi@s 000C  
                              _width 00EE                                _putch 2A20  
                              dtoa@d 0022                                dtoa@i 0042  
                              dtoa@n 003A                                dtoa@p 0034  
                              dtoa@s 0038                                dtoa@w 0036  
                    __end_of_isspace 26BE                        ?_LCD_sendbyte 0006  
                    LCD_init@current 0084                                tablat 000FF5  
                              plusw0 000FEB                                plusw2 000FDB  
                              ttemp5 0057                                ttemp6 005A  
                              ttemp7 005E                                status 000FD8  
                              wtemp8 0057                      __end_of_sprintf 266C  
                    __end_of_sunrise 29AA              __size_of_LCD_sendnibble 0068  
            __size_of_LCD_sendstring 0034                          LCD_init@buf 0090  
                    __initialization 28EE                         __end_of_atoi 17E4  
                       __end_of_main 1FA6                         __end_of_dtoa 148C  
                  __end_of_LED1_init 2708                  __size_of_LED_toggle 00C4  
                  __end_of_LED2_init 2A20                    LED_toggle@current 0011  
                  __end_of_LCD_E_TOG 2A1A                               ??_atoi 000E  
                             ??_main 0052                               ??_dtoa 002A  
                      __activetblptr 000003               __size_of_LEDarray_init 0026  
                       _sunrise_flag 0055                               ?_fputc 0005  
                             ?_fputs 000E                               _ADRESH 000F64  
                     ??_LCD_sendbyte 0007                     ___awdiv@dividend 0005  
                             ?_putch 0001                               i2l2011 25D6  
       ??_daylightsavingstime_toggle 0011                               i2l2013 25F8  
                             i1l2901 0036                               i2l2015 2606  
                             i1l2903 0044                               i2l2017 260E  
                             i2l2009 25C6                               i2l2019 2612  
                             i1l2899 0026                        vfpfcnvrt@done 0068  
                          ??_HighISR 0001                    _LEDarray_disp_bin 1C70  
                             _LowISR 0018                   ?_LEDarray_disp_bin 0001  
                       ??_ADC_getval 0005                        ??_Timer0_init 0005  
                       vfprintf@cfmt 004E                            ??___aodiv 0015  
                          ??___aomod 0015                               ___wmul 293E  
                        ?_Comp1_init 0001                            ??___awdiv 0009  
                ??_LEDarray_disp_bin 0005                               clear_0 28F4  
                             clear_1 2900                     ___awdiv@quotient 000B  
                             isa$std 000001                               pad@buf 0017  
                             dtoa@fp 0020                               _strlen 2850  
                             fputc@c 0005                               fputs@c 0012  
                             fputs@i 0013                               fputs@s 000E  
                          ??_isdigit 0007                         __mediumconst 0000  
                          ??_isspace 0007                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
        ?_daylightsavingstime_toggle 0005                            ?_ADC_init 0001  
                             putch@c 0001                            ?_DAC_init 0001  
                   __end_of_vfprintf 25C6                            ??_sprintf 0050  
                 __end_of_ADC_getval 29F8                            ??_sunrise 0011  
                   __end_of_sun_sync 215C            __end_of_LEDarray_disp_bin 1D94  
                         __accesstop 0060              __end_of__initialization 290E  
                          ?_LCD_init 0084                        ___rparam_used 000001  
                      _LEDarray_init 2918                      _Interrupts_init 2796  
               __size_of_LCD_setline 004A                       __pcstackCOMRAM 0001  
                      __end_of_fputc 2226                        __end_of_fputs 2796  
                      __end_of_putch 2A22                  __end_of_Timer0_init 29C6  
                         ??_ADC_init 0005                           ??_DAC_init 0005  
                       ??_LED_toggle 001D                              ??_fputc 0009  
                            ??_fputs 0012                              ??_putch 0005  
                __size_of_Comp1_init 0026                           __pbssBANK0 00EC  
                         __pbssBANK1 0100                       _LCD_sendnibble 24F8  
                         _date_check 148C                           ??_LCD_init 0050  
                     ?_LEDarray_init 0001                       _LCD_sendstring 2886  
                            ?_LowISR 0001                              ?___wmul 0005  
               __end_of_LCD_sendbyte 28EE                   __end_of_LED_toggle 23AE  
                            ?_strlen 0005                     LED1_init@current 0006  
                 __size_of_vfpfcnvrt 038C               __end_of_LCD_sendnibble 2560  
         __size_of_LEDarray_disp_bin 0124              __end_of_Interrupts_init 27D8  
                            _HighISR 0008               __end_of_LCD_sendstring 28BA  
                          _ADREFbits 000F58                              __Hparam 0000  
                            __Lparam 0000                      __size_of_LowISR 0040  
                  date_check@current 0005                          _Timer0_init 29AA  
                            ___aodiv 1984                              ___aomod 1B0C  
                            ___awdiv 2226                      __size_of___wmul 0026  
                          ?_vfprintf 006C                         __psmallconst 0E00  
                            __pcinit 28EE                            ?_sun_sync 000D  
                            __ramtop 0E00                              __ptext0 1EA2  
                            __ptext1 17E4                              __ptext2 1D94  
                            __ptext3 148C                              __ptext4 2470  
                            __ptext5 2092                              __ptext6 2226  
                            __ptext7 29AA                              __ptext8 2918  
                            __ptext9 1C70                            _LED1_init 26BE  
                    __size_of_strlen 0036                            _LED2_init 2A1A  
                       __size_of_abs 0040                         __size_of_pad 00C2  
                            _isdigit 2818                              _isspace 266C  
                          _LCD_E_TOG 2A0C                      LCD_setline@line 0008  
                            atoi@neg 0012                              _sprintf 261A  
                     __pintcode_body 25C6                              _sunrise 298A  
               end_of_initialization 290E                      ?_LCD_sendnibble 0001  
                   ADC_getval@tmpval 0005                              fputc@fp 0007  
                    ??_LEDarray_init 0005                              int_func 25C6  
                            fputs@fp 0010                          ?_date_check 0005  
                    ?_LCD_sendstring 0008                    __end_of_vfpfcnvrt 11AC  
                            postdec2 000FDD                         ??_Comp1_init 0005  
                            postinc0 000FEE                              postinc1 000FE6  
                            postinc2 000FDE                           ??_vfprintf 004E  
                         _time_incre 17E4                              strlen@a 0007  
                            strlen@s 0005                           ??_sun_sync 0019  
                         ?_LED1_init 0006                           ?_LED2_init 0001  
            __size_of_sunrise_sunset 0088                           ?_LCD_E_TOG 0001  
                          _TRISAbits 000F81                            _TRISBbits 000F82  
                          _TRISCbits 000F83                            _TRISDbits 000F84  
                          _TRISEbits 000F85                            _TRISFbits 000F86  
                          _TRISGbits 000F87                            _TRISHbits 000F88  
                  __size_of_ADC_init 001A                    __size_of_DAC_init 0014  
                 __end_of_Comp1_init 298A                          _CM1CON0bits 000ED0  
                        _CM1CON1bits 000ED1                     ?_Interrupts_init 0005  
              __size_of_LCD_sendbyte 0034                    __size_of_LCD_init 00EC  
                     __end_of_LowISR 0058                          vfpfcnvrt@ap 0048  
                        vfpfcnvrt@fp 0044                          vfpfcnvrt@ll 0060  
                     __end_of___wmul 2964                 LCD_sendnibble@number 0005  
                __size_of_date_check 01B4                       __end_of_strlen 2886  
                start_initialization 28EE                          __end_of_abs 2818  
                        __end_of_pad 2470                         _LCD_sendbyte 28BA  
                      ??_LCD_setline 0008                             ??_LowISR 0002  
                        vfprintf@fmt 006E                 LCD_sendstring@string 0008  
                           ??___wmul 0009                          ?_time_incre 0084  
                  time_incre@current 0084                             ??_strlen 0007  
                        ??_LED1_init 0012                          ??_LED2_init 0005  
              sunrise_sunset@current 001C                          __pbssCOMRAM 0052  
                        ??_LCD_E_TOG 0005                        __pcstackBANK0 0060  
                   ___aodiv@dividend 0005                             ?_HighISR 0001  
                          _atoi$2260 0018                            _atoi$2261 0016  
                          _atoi$2259 0014                            _dtoa$2224 0032  
                       ?_Timer0_init 0001                            __pintcode 0008  
                           ?___aodiv 0005                             ?___aomod 0005  
                           ?___awdiv 0005                     ___aodiv@quotient 0017  
                __end_of_LCD_setline 2752                          __pintcodelo 0018  
                  __size_of_vfprintf 0066                       _sunrise_sunset 2470  
                        __smallconst 0E00                    __size_of_sun_sync 00CA  
                           ?_isdigit 0005                             ?_isspace 0005  
                   ??_LCD_sendnibble 0005               sun_sync@solarnoon_hour 0019  
                           _ADC_init 29C6                             _DAC_init 29F8  
                   ??_LCD_sendstring 000A                             ?_sprintf 0072  
                     __size_of_fputc 00CA                       __size_of_fputs 0044  
                           ?_sunrise 0005                       __size_of_putch 0002  
                   LCD_sendbyte@Byte 0007                  __size_of_time_incre 01A0  
                   LCD_sendbyte@type 0006                         ??_date_check 0011  
                     ___wmul@product 0009                             _LATAbits 000F79  
                           _LATBbits 000F7A                             _LATCbits 000F7B  
                           _LATDbits 000F7C                             _LATEbits 000F7D  
                           _LATFbits 000F7E                             _LATGbits 000F7F  
                           _LATHbits 000F80                             _LCD_init 1FA6  
                           _IPR0bits 000E1F                             _PIE0bits 000E29  
                           _IPR2bits 000E21                             _PIE2bits 000E2B  
                           i1u336_20 0036                             i1u336_21 0032  
                           i2u166_40 25D6                             i2u166_41 25D2  
                           i2u167_40 25E8                             i2u167_41 25E0  
                           _PIR0bits 000E33                             i2u169_40 2606  
                           i2u168_48 25EA                             i2u169_41 2602  
                           _PIR2bits 000E35                            _time_flag 00F2  
                          _vfpfcnvrt 0E20               __end_of_sunrise_sunset 24F8  
                         _ADCON0bits 000F60                    ___wmul@multiplier 0005  
                 __end_of_date_check 1640                         _isspace$2277 000B  
                         _CM1NCHbits 000ED2                           _CM1PCHbits 000ED3  
                   __size_of_HighISR 2612                __end_of_LEDarray_init 293E  
                        _LCD_setline 2708                             __Hrparam 0000  
                         _ADC_getval 29E0             sun_sync@solarnoon_minute 001A  
           sun_sync@solarnoon_second 001B                           vfprintf@ap 0070  
                           __Lrparam 0000                           vfprintf@fp 006C  
                   __size_of___aodiv 0188                     __size_of___aomod 0164  
                   __size_of___awdiv 00C4                           ?_vfpfcnvrt 0044  
                    ?_sunrise_sunset 001C  __size_of_daylightsavingstime_toggle 010E  
                    ___aodiv@divisor 000D                      ___aodiv@counter 0015  
                         _ANSELFbits 000EB4                       time_incre@buf1 0090  
                     time_incre@buf2 00B8                           sprintf@fmt 0074  
                         _T0CON0bits 000FD5                           _T0CON1bits 000FD6  
                   __size_of_isdigit 0038                     __size_of_isspace 0052  
                           __ptext10 22EA                             __ptext11 298A  
                           __ptext20 23AE                             __ptext12 2A1A  
                           __ptext21 2850                             __ptext13 26BE  
                           __ptext30 2818                             __ptext22 2752  
                           __ptext14 29E0                             __ptext31 293E  
                           __ptext23 215C                             __ptext15 1FA6  
                           __ptext40 29C6                             __ptext32 2708  
                           __ptext24 2A20                             __ptext16 261A  
                           __ptext33 2886                             __ptext25 27D8  
                           __ptext17 2560                             __ptext34 28BA  
                           __ptext26 1B0C                             __ptext18 0E20  
                           __ptext35 24F8                             __ptext27 1984  
                           __ptext19 11AC                             __ptext36 2A0C  
                           __ptext28 1640                             __ptext37 2796  
                           __ptext29 266C                             __ptext38 2964  
                           __ptext39 29F8                       sunrise@current 0005  
            LEDarray_disp_bin@number 0007                     __size_of_sprintf 0052  
                   __size_of_sunrise 0020                        __size_of_atoi 01A4  
                      __size_of_main 0104                        __size_of_dtoa 02E0  
                           isa$xinst 000000             __size_of_Interrupts_init 0042  
                           int$flags 0056                 __size_of_Timer0_init 001C  
                       ??_time_incre 0050                             _vfprintf 2560  
                           _sun_sync 2092                     ___aomod@dividend 0005  
                     _vfpfcnvrt$2239 006A                           _INTCONbits 000FF2  
                           isdigit@c 0005                           _LED_toggle 22EA  
                           intlevel1 0000                             intlevel2 0000  
                          sprintf@ap 007C                         _DAC1CON0bits 000EC6  
                       _DAC1CON1bits 000EC7                   __end_of_time_incre 1984  
                           isspace@c 0005    daylightsavingstime_toggle@current 0005  
                        ?_ADC_getval 0001                      ___aomod@divisor 000D  
                        ??_vfpfcnvrt 004A                      ___aomod@counter 0015  
                           sprintf@f 007E                             sprintf@s 0072  
                    sun_sync@current 000D   __end_of_daylightsavingstime_toggle 1EA2  
         _daylightsavingstime_toggle 1D94                         ___aodiv@sign 0016  
                       ___aomod@sign 0016  
