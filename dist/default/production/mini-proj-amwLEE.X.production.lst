

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Nov 09 09:58:02 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    60                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    62  0000                     
    63                           ; Version 2.20
    64                           ; Generated 05/05/2020 GMT
    65                           ; 
    66                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18F67K40 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     _PIR0bits	set	3635
    98  0000                     _PIR2bits	set	3637
    99  0000                     _IPR0bits	set	3615
   100  0000                     _IPR2bits	set	3617
   101  0000                     _PIE0bits	set	3625
   102  0000                     _PIE2bits	set	3627
   103  0000                     _CM1CON1bits	set	3793
   104  0000                     _CM1CON0bits	set	3792
   105  0000                     _CM1PCHbits	set	3795
   106  0000                     _CM1NCHbits	set	3794
   107  0000                     _DAC1CON1bits	set	3783
   108  0000                     _DAC1CON0bits	set	3782
   109  0000                     _ANSELFbits	set	3764
   110  0000                     _ADPCH	set	3935
   111  0000                     _ADREFbits	set	3928
   112  0000                     _TRISHbits	set	3976
   113  0000                     _LATHbits	set	3968
   114  0000                     _TRISDbits	set	3972
   115  0000                     _TRISEbits	set	3973
   116  0000                     _TRISCbits	set	3971
   117  0000                     _LATEbits	set	3965
   118  0000                     _LATCbits	set	3963
   119  0000                     _T0CON0bits	set	4053
   120  0000                     _T0CON1bits	set	4054
   121  0000                     _TMR0L	set	4051
   122  0000                     _TMR0H	set	4052
   123  0000                     _LATDbits	set	3964
   124  0000                     _INTCONbits	set	4082
   125  0000                     _TRISBbits	set	3970
   126  0000                     _TRISAbits	set	3969
   127  0000                     _TRISGbits	set	3975
   128  0000                     _LATBbits	set	3962
   129  0000                     _LATFbits	set	3966
   130  0000                     _LATAbits	set	3961
   131  0000                     _LATGbits	set	3967
   132  0000                     _ADRESH	set	3940
   133  0000                     _ADCON0bits	set	3936
   134  0000                     _TRISFbits	set	3974
   135                           
   136                           	psect	smallconst
   137  000E00                     __psmallconst:
   138                           	callstack 0
   139  000E00  00                 	db	0
   140  000E01                     STR_2:
   141                           
   142                           ; BSR set to: 14
   143  000E01  25                 	db	37
   144  000E02  30                 	db	48	;'0'
   145  000E03  32                 	db	50	;'2'
   146  000E04  64                 	db	100	;'d'
   147  000E05  3A                 	db	58	;':'
   148  000E06  25                 	db	37
   149  000E07  30                 	db	48	;'0'
   150  000E08  32                 	db	50	;'2'
   151  000E09  64                 	db	100	;'d'
   152  000E0A  3A                 	db	58	;':'
   153  000E0B  25                 	db	37
   154  000E0C  30                 	db	48	;'0'
   155  000E0D  32                 	db	50	;'2'
   156  000E0E  64                 	db	100	;'d'
   157  000E0F  00                 	db	0
   158  000E10                     STR_1:
   159                           
   160                           ; BSR set to: 14
   161  000E10  25                 	db	37
   162  000E11  30                 	db	48	;'0'
   163  000E12  34                 	db	52	;'4'
   164  000E13  64                 	db	100	;'d'
   165  000E14  2D                 	db	45
   166  000E15  25                 	db	37
   167  000E16  30                 	db	48	;'0'
   168  000E17  32                 	db	50	;'2'
   169  000E18  64                 	db	100	;'d'
   170  000E19  2D                 	db	45
   171  000E1A  25                 	db	37
   172  000E1B  30                 	db	48	;'0'
   173  000E1C  32                 	db	50	;'2'
   174  000E1D  64                 	db	100	;'d'
   175  000E1E  00                 	db	0
   176  000E1F  00                 	db	0	; dummy byte at the end
   177  0000                     
   178                           ; #config settings
   179                           
   180                           	psect	cinit
   181  0029A2                     __pcinit:
   182                           	callstack 0
   183  0029A2                     start_initialization:
   184                           	callstack 0
   185  0029A2                     __initialization:
   186                           	callstack 0
   187                           
   188                           ; Clear objects allocated to BANK0 (39 bytes)
   189  0029A2  EE00  F0C2         	lfsr	0,__pbssBANK0
   190  0029A6  0E27               	movlw	39
   191  0029A8                     clear_0:
   192  0029A8  6AEE               	clrf	postinc0,c
   193  0029AA  06E8               	decf	wreg,f,c
   194  0029AC  E1FD               	bnz	clear_0
   195                           
   196                           ; Clear objects allocated to COMRAM (4 bytes)
   197  0029AE  6A54               	clrf	(__pbssCOMRAM+3)& (0+255),c
   198  0029B0  6A53               	clrf	(__pbssCOMRAM+2)& (0+255),c
   199  0029B2  6A52               	clrf	(__pbssCOMRAM+1)& (0+255),c
   200  0029B4  6A51               	clrf	__pbssCOMRAM& (0+255),c
   201  0029B6                     end_of_initialization:
   202                           	callstack 0
   203  0029B6                     __end_of__initialization:
   204                           	callstack 0
   205  0029B6  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   206  0029B8  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   207  0029BA  0100               	movlb	0
   208  0029BC  EF35  F00E         	goto	_main	;jump to C main() function
   209                           
   210                           	psect	bssCOMRAM
   211  000051                     __pbssCOMRAM:
   212                           	callstack 0
   213  000051                     _flags:
   214                           	callstack 0
   215  000051                     	ds	2
   216  000053                     _sunset_flag:
   217                           	callstack 0
   218  000053                     	ds	1
   219  000054                     _sunrise_flag:
   220                           	callstack 0
   221  000054                     	ds	1
   222                           
   223                           	psect	bssBANK0
   224  0000C2                     __pbssBANK0:
   225                           	callstack 0
   226  0000C2                     _nout:
   227                           	callstack 0
   228  0000C2                     	ds	2
   229  0000C4                     _width:
   230                           	callstack 0
   231  0000C4                     	ds	2
   232  0000C6                     _prec:
   233                           	callstack 0
   234  0000C6                     	ds	2
   235  0000C8                     _time_flag:
   236                           	callstack 0
   237  0000C8                     	ds	1
   238  0000C9                     _dbuf:
   239                           	callstack 0
   240  0000C9                     	ds	32
   241                           
   242                           	psect	cstackBANK1
   243  000100                     __pcstackBANK1:
   244                           	callstack 0
   245  000100                     time_incre@buf1:
   246                           	callstack 0
   247                           
   248                           ; 40 bytes @ 0x0
   249  000100                     	ds	40
   250  000128                     time_incre@buf2:
   251                           	callstack 0
   252                           
   253                           ; 40 bytes @ 0x28
   254  000128                     	ds	40
   255                           
   256                           	psect	cstackBANK0
   257  000060                     __pcstackBANK0:
   258                           	callstack 0
   259  000060                     vfpfcnvrt@ll:
   260                           	callstack 0
   261                           
   262                           ; 8 bytes @ 0x0
   263  000060                     	ds	8
   264  000068                     vfpfcnvrt@done:
   265                           	callstack 0
   266                           
   267                           ; 2 bytes @ 0x8
   268  000068                     	ds	2
   269  00006A                     _vfpfcnvrt$2205:
   270                           	callstack 0
   271                           
   272                           ; 2 bytes @ 0xA
   273  00006A                     	ds	2
   274  00006C                     ?_vfprintf:
   275                           	callstack 0
   276  00006C                     vfprintf@fp:
   277                           	callstack 0
   278                           
   279                           ; 2 bytes @ 0xC
   280  00006C                     	ds	2
   281  00006E                     vfprintf@fmt:
   282                           	callstack 0
   283                           
   284                           ; 2 bytes @ 0xE
   285  00006E                     	ds	2
   286  000070                     vfprintf@ap:
   287                           	callstack 0
   288                           
   289                           ; 2 bytes @ 0x10
   290  000070                     	ds	2
   291  000072                     ?_sprintf:
   292                           	callstack 0
   293  000072                     sprintf@s:
   294                           	callstack 0
   295                           
   296                           ; 2 bytes @ 0x12
   297  000072                     	ds	2
   298  000074                     sprintf@fmt:
   299                           	callstack 0
   300                           
   301                           ; 2 bytes @ 0x14
   302  000074                     	ds	8
   303  00007C                     sprintf@ap:
   304                           	callstack 0
   305                           
   306                           ; 2 bytes @ 0x1C
   307  00007C                     	ds	2
   308  00007E                     sprintf@f:
   309                           	callstack 0
   310                           
   311                           ; 6 bytes @ 0x1E
   312  00007E                     	ds	6
   313  000084                     ?_time_incre:
   314                           	callstack 0
   315  000084                     time_incre@current:
   316                           	callstack 0
   317                           
   318                           ; 11 bytes @ 0x24
   319  000084                     	ds	11
   320  00008F                     main@buf2:
   321                           	callstack 0
   322                           
   323                           ; 40 bytes @ 0x2F
   324  00008F                     	ds	40
   325  0000B7                     main@current:
   326                           	callstack 0
   327                           
   328                           ; 11 bytes @ 0x57
   329  0000B7                     	ds	11
   330                           
   331                           	psect	cstackCOMRAM
   332  000001                     __pcstackCOMRAM:
   333                           	callstack 0
   334  000001                     ??_HighISR:
   335  000001                     
   336                           ; 1 bytes @ 0x0
   337  000001                     	ds	1
   338  000002                     ??_LowISR:
   339                           
   340                           ; 1 bytes @ 0x1
   341  000002                     	ds	3
   342  000005                     ??_LEDarray_disp_bin:
   343  000005                     ?_strlen:
   344                           	callstack 0
   345  000005                     ?_isdigit:
   346                           	callstack 0
   347  000005                     ?_isspace:
   348                           	callstack 0
   349  000005                     ?___wmul:
   350                           	callstack 0
   351  000005                     ?___awdiv:
   352                           	callstack 0
   353  000005                     ?___aodiv:
   354                           	callstack 0
   355  000005                     ?___aomod:
   356                           	callstack 0
   357  000005                     ?_sunrise:
   358                           	callstack 0
   359  000005                     ?_daylightsavingstime_toggle:
   360                           	callstack 0
   361  000005                     ?_date_check:
   362                           	callstack 0
   363  000005                     ADC_getval@tmpval:
   364                           	callstack 0
   365  000005                     LCD_sendnibble@number:
   366                           	callstack 0
   367  000005                     ___wmul@multiplier:
   368                           	callstack 0
   369  000005                     ___awdiv@dividend:
   370                           	callstack 0
   371  000005                     isdigit@c:
   372                           	callstack 0
   373  000005                     isspace@c:
   374                           	callstack 0
   375  000005                     fputc@c:
   376                           	callstack 0
   377  000005                     strlen@s:
   378                           	callstack 0
   379  000005                     ___aodiv@dividend:
   380                           	callstack 0
   381  000005                     ___aomod@dividend:
   382                           	callstack 0
   383  000005                     Interrupts_init@current:
   384                           	callstack 0
   385  000005                     daylightsavingstime_toggle@current:
   386                           	callstack 0
   387  000005                     date_check@current:
   388                           	callstack 0
   389  000005                     sunrise@current:
   390                           	callstack 0
   391                           
   392                           ; 11 bytes @ 0x4
   393  000005                     	ds	1
   394  000006                     LCD_sendbyte@type:
   395                           	callstack 0
   396  000006                     LED1_init@current:
   397                           	callstack 0
   398                           
   399                           ; 11 bytes @ 0x5
   400  000006                     	ds	1
   401  000007                     ??_isdigit:
   402  000007                     ??_isspace:
   403  000007                     LEDarray_disp_bin@number:
   404                           	callstack 0
   405  000007                     LCD_sendbyte@Byte:
   406                           	callstack 0
   407  000007                     ___wmul@multiplicand:
   408                           	callstack 0
   409  000007                     ___awdiv@divisor:
   410                           	callstack 0
   411  000007                     fputc@fp:
   412                           	callstack 0
   413  000007                     strlen@a:
   414                           	callstack 0
   415                           
   416                           ; 2 bytes @ 0x6
   417  000007                     	ds	1
   418  000008                     ??_LCD_init:
   419  000008                     LCD_setline@line:
   420                           	callstack 0
   421  000008                     LCD_sendstring@string:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x7
   425  000008                     	ds	1
   426  000009                     ??_fputc:
   427  000009                     ___awdiv@counter:
   428                           	callstack 0
   429  000009                     ___wmul@product:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x8
   433  000009                     	ds	1
   434  00000A                     ??_LCD_sendstring:
   435  00000A                     ___awdiv@sign:
   436                           	callstack 0
   437                           
   438                           ; 1 bytes @ 0x9
   439  00000A                     	ds	1
   440  00000B                     _isspace$2243:
   441                           	callstack 0
   442  00000B                     ___awdiv@quotient:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0xA
   446  00000B                     	ds	1
   447  00000C                     ?_atoi:
   448                           	callstack 0
   449  00000C                     atoi@s:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0xB
   453  00000C                     	ds	1
   454  00000D                     ?_sun_sync:
   455                           	callstack 0
   456  00000D                     ___aodiv@divisor:
   457                           	callstack 0
   458  00000D                     ___aomod@divisor:
   459                           	callstack 0
   460  00000D                     sun_sync@current:
   461                           	callstack 0
   462                           
   463                           ; 11 bytes @ 0xC
   464  00000D                     	ds	1
   465  00000E                     ??_atoi:
   466  00000E                     fputs@s:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0xD
   470  00000E                     	ds	2
   471  000010                     ??_daylightsavingstime_toggle:
   472  000010                     ??_date_check:
   473  000010                     ?_LED_toggle:
   474                           	callstack 0
   475  000010                     fputs@fp:
   476                           	callstack 0
   477  000010                     LED_toggle@current:
   478                           	callstack 0
   479                           
   480                           ; 11 bytes @ 0xF
   481  000010                     	ds	1
   482  000011                     ??_LED1_init:
   483  000011                     LCD_sendstring@counter1:
   484                           	callstack 0
   485                           
   486                           ; 1 bytes @ 0x10
   487  000011                     	ds	1
   488  000012                     LCD_sendstring@counter2:
   489                           	callstack 0
   490  000012                     fputs@c:
   491                           	callstack 0
   492  000012                     atoi@neg:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x11
   496  000012                     	ds	1
   497  000013                     fputs@i:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x12
   501  000013                     	ds	1
   502  000014                     _atoi$2225:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x13
   506  000014                     	ds	1
   507  000015                     ?_pad:
   508                           	callstack 0
   509  000015                     ___aodiv@counter:
   510                           	callstack 0
   511  000015                     ___aomod@counter:
   512                           	callstack 0
   513  000015                     pad@fp:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x14
   517  000015                     	ds	1
   518  000016                     ___aodiv@sign:
   519                           	callstack 0
   520  000016                     ___aomod@sign:
   521                           	callstack 0
   522  000016                     _atoi$2227:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x15
   526  000016                     	ds	1
   527  000017                     ?_abs:
   528                           	callstack 0
   529  000017                     pad@buf:
   530                           	callstack 0
   531  000017                     abs@a:
   532                           	callstack 0
   533  000017                     ___aodiv@quotient:
   534                           	callstack 0
   535                           
   536                           ; 8 bytes @ 0x16
   537  000017                     	ds	1
   538  000018                     sun_sync@solarnoon_hour:
   539                           	callstack 0
   540  000018                     _atoi$2226:
   541                           	callstack 0
   542                           
   543                           ; 1 bytes @ 0x17
   544  000018                     	ds	1
   545  000019                     ??_abs:
   546  000019                     sun_sync@solarnoon_minute:
   547                           	callstack 0
   548  000019                     pad@p:
   549                           	callstack 0
   550  000019                     atoi@n:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x18
   554  000019                     	ds	1
   555  00001A                     sun_sync@solarnoon_second:
   556                           	callstack 0
   557                           
   558                           ; 1 bytes @ 0x19
   559  00001A                     	ds	1
   560  00001B                     ??_LED_toggle:
   561  00001B                     ??_pad:
   562  00001B                     ?_sunrise_sunset:
   563                           	callstack 0
   564  00001B                     sunrise_sunset@current:
   565                           	callstack 0
   566                           
   567                           ; 11 bytes @ 0x1A
   568  00001B                     	ds	1
   569  00001C                     pad@i:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x1B
   573  00001C                     	ds	2
   574  00001E                     pad@w:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x1D
   578  00001E                     	ds	2
   579  000020                     ?_dtoa:
   580                           	callstack 0
   581  000020                     dtoa@fp:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x1F
   585  000020                     	ds	2
   586  000022                     dtoa@d:
   587                           	callstack 0
   588                           
   589                           ; 8 bytes @ 0x21
   590  000022                     	ds	4
   591  000026                     
   592                           ; 1 bytes @ 0x25
   593  000026                     	ds	4
   594  00002A                     ??_dtoa:
   595                           
   596                           ; 1 bytes @ 0x29
   597  00002A                     	ds	8
   598  000032                     _dtoa$2190:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x31
   602  000032                     	ds	2
   603  000034                     dtoa@p:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x33
   607  000034                     	ds	2
   608  000036                     dtoa@w:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x35
   612  000036                     	ds	2
   613  000038                     dtoa@s:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x37
   617  000038                     	ds	2
   618  00003A                     dtoa@n:
   619                           	callstack 0
   620                           
   621                           ; 8 bytes @ 0x39
   622  00003A                     	ds	8
   623  000042                     dtoa@i:
   624                           	callstack 0
   625                           
   626                           ; 2 bytes @ 0x41
   627  000042                     	ds	2
   628  000044                     ?_vfpfcnvrt:
   629                           	callstack 0
   630  000044                     vfpfcnvrt@fp:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x43
   634  000044                     	ds	2
   635  000046                     vfpfcnvrt@fmt:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x45
   639  000046                     	ds	2
   640  000048                     vfpfcnvrt@ap:
   641                           	callstack 0
   642                           
   643                           ; 2 bytes @ 0x47
   644  000048                     	ds	2
   645  00004A                     ??_vfpfcnvrt:
   646                           
   647                           ; 1 bytes @ 0x49
   648  00004A                     	ds	4
   649  00004E                     vfprintf@cfmt:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x4D
   653  00004E                     	ds	2
   654  000050                     ??_time_incre:
   655                           
   656                           ; 1 bytes @ 0x4F
   657  000050                     	ds	1
   658  000051                     
   659                           ; 1 bytes @ 0x50
   660 ;;
   661 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   662 ;;
   663 ;; *************** function _main *****************
   664 ;; Defined at:
   665 ;;		line 7 in file "main.c"
   666 ;; Parameters:    Size  Location     Type
   667 ;;		None
   668 ;; Auto vars:     Size  Location     Type
   669 ;;  buf2           40   47[BANK0 ] unsigned char [40]
   670 ;;  current        11   87[BANK0 ] struct .
   671 ;; Return value:  Size  Location     Type
   672 ;;                  1    wreg      void 
   673 ;; Registers used:
   674 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   675 ;; Tracked objects:
   676 ;;		On entry : 0/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   681 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   683 ;;      Totals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   684 ;;Total ram usage:       51 bytes
   685 ;; Hardware stack levels required when called: 11
   686 ;; This function calls:
   687 ;;		_ADC_init
   688 ;;		_Comp1_init
   689 ;;		_Interrupts_init
   690 ;;		_LCD_init
   691 ;;		_LCD_sendstring
   692 ;;		_LCD_setline
   693 ;;		_LED1_init
   694 ;;		_LED2_init
   695 ;;		_LED_toggle
   696 ;;		_LEDarray_disp_bin
   697 ;;		_LEDarray_init
   698 ;;		_Timer0_init
   699 ;;		_sprintf
   700 ;;		_sunrise_sunset
   701 ;;		_time_incre
   702 ;; This function is called by:
   703 ;;		Startup code after reset
   704 ;; This function uses a non-reentrant model
   705 ;;
   706                           
   707                           	psect	text0
   708  001C6A                     __ptext0:
   709                           	callstack 0
   710  001C6A                     _main:
   711                           	callstack 20
   712  001C6A                     
   713                           ;main.c: 12:     dateandtime current;;main.c: 13:     current.year = 2021;
   714  001C6A  0E07               	movlw	7
   715  001C6C  0100               	movlb	0	; () banked
   716  001C6E  6FB8               	movwf	(main@current+1)& (0+255),b
   717  001C70  0EE5               	movlw	229
   718  001C72  6FB7               	movwf	main@current& (0+255),b
   719                           
   720                           ;main.c: 14:     current.month = 11;
   721  001C74  0E0B               	movlw	11
   722  001C76  6FB9               	movwf	(main@current+2)& (0+255),b
   723                           
   724                           ;main.c: 15:     current.date = 9;
   725  001C78  0E09               	movlw	9
   726  001C7A  6FBA               	movwf	(main@current+3)& (0+255),b
   727                           
   728                           ;main.c: 16:     current.day = 2;
   729  001C7C  0E02               	movlw	2
   730  001C7E  6FBB               	movwf	(main@current+4)& (0+255),b
   731                           
   732                           ;main.c: 17:     current.hour = 7;
   733  001C80  0E07               	movlw	7
   734  001C82  6FBC               	movwf	(main@current+5)& (0+255),b
   735                           
   736                           ;main.c: 18:     current.minute = 30;
   737  001C84  0E1E               	movlw	30
   738  001C86  6FBD               	movwf	(main@current+6)& (0+255),b
   739                           
   740                           ;main.c: 19:     current.second = 0;
   741  001C88  0E00               	movlw	0
   742  001C8A  6FBE               	movwf	(main@current+7)& (0+255),b
   743                           
   744                           ;main.c: 20:     current.sunrise_hour = 7;
   745  001C8C  0E07               	movlw	7
   746  001C8E  6FBF               	movwf	(main@current+8)& (0+255),b
   747                           
   748                           ;main.c: 21:     current.sunrise_minute = 0;
   749  001C90  0E00               	movlw	0
   750  001C92  6FC0               	movwf	(main@current+9)& (0+255),b
   751                           
   752                           ;main.c: 22:     current.sunrise_second = 0;
   753  001C94  0E00               	movlw	0
   754  001C96  6FC1               	movwf	(main@current+10)& (0+255),b
   755  001C98                     
   756                           ; BSR set to: 0
   757                           ;main.c: 25:     ADC_init();
   758  001C98  ECEE  F014         	call	_ADC_init	;wreg free
   759  001C9C                     
   760                           ;main.c: 26:     Comp1_init();
   761  001C9C  ECAE  F014         	call	_Comp1_init	;wreg free
   762  001CA0                     
   763                           ;main.c: 27:     Timer0_init();
   764  001CA0  ECE0  F014         	call	_Timer0_init	;wreg free
   765  001CA4                     
   766                           ;main.c: 28:     Interrupts_init(current);
   767  001CA4  EE20  F0B7         	lfsr	2,main@current
   768  001CA8  EE00  F005         	lfsr	0,Interrupts_init@current
   769  001CAC  0E0A               	movlw	10
   770  001CAE                     u4881:
   771  001CAE  CFDB FFEB          	movff	plusw2,plusw0
   772  001CB2  06E8               	decf	wreg,f,c
   773  001CB4  E2FC               	bc	u4881
   774  001CB6  ECF6  F013         	call	_Interrupts_init	;wreg free
   775  001CBA                     
   776                           ;main.c: 29:     LED1_init(current);
   777  001CBA  EE20  F0B7         	lfsr	2,main@current
   778  001CBE  EE00  F006         	lfsr	0,LED1_init@current
   779  001CC2  0E0A               	movlw	10
   780  001CC4                     u4891:
   781  001CC4  CFDB FFEB          	movff	plusw2,plusw0
   782  001CC8  06E8               	decf	wreg,f,c
   783  001CCA  E2FC               	bc	u4891
   784  001CCC  ECAF  F013         	call	_LED1_init	;wreg free
   785                           
   786                           ;main.c: 30:     LED2_init();
   787  001CD0  EC21  F015         	call	_LED2_init	;wreg free
   788                           
   789                           ;main.c: 31:     LEDarray_init();
   790  001CD4  EC9B  F014         	call	_LEDarray_init	;wreg free
   791  001CD8                     
   792                           ;main.c: 32:     LCD_init();
   793  001CD8  ECC2  F011         	call	_LCD_init	;wreg free
   794  001CDC                     
   795                           ;main.c: 35:     char buf2[40];;main.c: 36:     LCD_setline(1);
   796  001CDC  0E01               	movlw	1
   797  001CDE  EC8A  F013         	call	_LCD_setline
   798  001CE2                     
   799                           ;main.c: 37:     sprintf(buf2,"%04d-%02d-%02d",current.year,current.month,current.date);
   800  001CE2  0E8F               	movlw	low main@buf2
   801  001CE4  0100               	movlb	0	; () banked
   802  001CE6  6F72               	movwf	sprintf@s& (0+255),b
   803  001CE8  0E00               	movlw	high main@buf2
   804  001CEA  6F73               	movwf	(sprintf@s+1)& (0+255),b
   805  001CEC  0E10               	movlw	low STR_1
   806  001CEE  6F74               	movwf	sprintf@fmt& (0+255),b
   807  001CF0  0E0E               	movlw	high STR_1
   808  001CF2  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
   809  001CF4  C0B7  F076         	movff	main@current,?_sprintf+4
   810  001CF8  C0B8  F077         	movff	main@current+1,?_sprintf+5
   811  001CFC  51B9               	movf	(main@current+2)& (0+255),w,b
   812  001CFE  6F78               	movwf	(?_sprintf+6)& (0+255),b
   813  001D00  6B79               	clrf	(?_sprintf+7)& (0+255),b
   814  001D02  BF78               	btfsc	(?_sprintf+6)& (0+255),7,b
   815  001D04  0779               	decf	(?_sprintf+7)& (0+255),f,b
   816  001D06  51BA               	movf	(main@current+3)& (0+255),w,b
   817  001D08  6F7A               	movwf	(?_sprintf+8)& (0+255),b
   818  001D0A  6B7B               	clrf	(?_sprintf+9)& (0+255),b
   819  001D0C  BF7A               	btfsc	(?_sprintf+8)& (0+255),7,b
   820  001D0E  077B               	decf	(?_sprintf+9)& (0+255),f,b
   821  001D10  EC38  F013         	call	_sprintf	;wreg free
   822  001D14                     
   823                           ;main.c: 38:     LCD_sendstring(buf2);
   824  001D14  0E8F               	movlw	low main@buf2
   825  001D16  6E08               	movwf	LCD_sendstring@string^0,c
   826  001D18  0E00               	movlw	high main@buf2
   827  001D1A  6E09               	movwf	(LCD_sendstring@string+1)^0,c
   828  001D1C  EC16  F012         	call	_LCD_sendstring	;wreg free
   829  001D20                     l3807:
   830                           
   831                           ;main.c: 42:         current = sunrise_sunset(current);
   832  001D20  EE20  F0B7         	lfsr	2,main@current
   833  001D24  EE00  F01B         	lfsr	0,sunrise_sunset@current
   834  001D28  0E0A               	movlw	10
   835  001D2A                     u4901:
   836  001D2A  CFDB FFEB          	movff	plusw2,plusw0
   837  001D2E  06E8               	decf	wreg,f,c
   838  001D30  E2FC               	bc	u4901
   839  001D32  EC63  F012         	call	_sunrise_sunset	;wreg free
   840  001D36  EE20  F0B7         	lfsr	2,main@current
   841  001D3A  0E0A               	movlw	10
   842  001D3C                     u4911:
   843  001D3C  CFEB FFDB          	movff	plusw0,plusw2
   844  001D40  06E8               	decf	wreg,f,c
   845  001D42  E2FC               	bc	u4911
   846  001D44                     
   847                           ;main.c: 46:         current = time_incre(current);
   848  001D44  EE20  F0B7         	lfsr	2,main@current
   849  001D48  EE00  F084         	lfsr	0,time_incre@current
   850  001D4C  0E0A               	movlw	10
   851  001D4E                     u4921:
   852  001D4E  CFDB FFEB          	movff	plusw2,plusw0
   853  001D52  06E8               	decf	wreg,f,c
   854  001D54  E2FC               	bc	u4921
   855  001D56  ECF1  F00B         	call	_time_incre	;wreg free
   856  001D5A  EE20  F0B7         	lfsr	2,main@current
   857  001D5E  0E0A               	movlw	10
   858  001D60                     u4931:
   859  001D60  CFEB FFDB          	movff	plusw0,plusw2
   860  001D64  06E8               	decf	wreg,f,c
   861  001D66  E2FC               	bc	u4931
   862  001D68                     
   863                           ;main.c: 50:         current = LED_toggle(current);
   864  001D68  EE20  F0B7         	lfsr	2,main@current
   865  001D6C  EE00  F010         	lfsr	0,LED_toggle@current
   866  001D70  0E0A               	movlw	10
   867  001D72                     u4941:
   868  001D72  CFDB FFEB          	movff	plusw2,plusw0
   869  001D76  06E8               	decf	wreg,f,c
   870  001D78  E2FC               	bc	u4941
   871  001D7A  ECFF  F010         	call	_LED_toggle	;wreg free
   872  001D7E  EE20  F0B7         	lfsr	2,main@current
   873  001D82  0E0A               	movlw	10
   874  001D84                     u4951:
   875  001D84  CFEB FFDB          	movff	plusw0,plusw2
   876  001D88  06E8               	decf	wreg,f,c
   877  001D8A  E2FC               	bc	u4951
   878  001D8C                     
   879                           ;main.c: 55:         LEDarray_disp_bin(current.hour);
   880  001D8C  0100               	movlb	0	; () banked
   881  001D8E  51BC               	movf	(main@current+5)& (0+255),w,b
   882  001D90  ECCE  F00E         	call	_LEDarray_disp_bin
   883  001D94  EF90  F00E         	goto	l3807
   884  001D98  EF2C  F000         	goto	start
   885  001D9C                     __end_of_main:
   886                           	callstack 0
   887                           
   888 ;; *************** function _time_incre *****************
   889 ;; Defined at:
   890 ;;		line 47 in file "dateandtime.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;  current        11   36[BANK0 ] struct .
   893 ;; Auto vars:     Size  Location     Type
   894 ;;  buf2           40   40[BANK1 ] unsigned char [40]
   895 ;;  buf1           40    0[BANK1 ] unsigned char [40]
   896 ;; Return value:  Size  Location     Type
   897 ;;                  11   36[BANK0 ] struct .
   898 ;; Registers used:
   899 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   905 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   906 ;;      Locals:         0       0      80       0       0       0       0       0       0       0       0       0       
      +0       0       0
   907 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   908 ;;      Totals:         1      11      80       0       0       0       0       0       0       0       0       0       
      +0       0       0
   909 ;;Total ram usage:       92 bytes
   910 ;; Hardware stack levels used: 1
   911 ;; Hardware stack levels required when called: 10
   912 ;; This function calls:
   913 ;;		_LCD_sendstring
   914 ;;		_LCD_setline
   915 ;;		_date_check
   916 ;;		_daylightsavingstime_toggle
   917 ;;		_sprintf
   918 ;; This function is called by:
   919 ;;		_main
   920 ;; This function uses a non-reentrant model
   921 ;;
   922                           
   923                           	psect	text1
   924  0017E2                     __ptext1:
   925                           	callstack 0
   926  0017E2                     _time_incre:
   927                           	callstack 20
   928  0017E2                     
   929                           ;dateandtime.c: 48:     if (time_flag==1) {
   930  0017E2  0100               	movlb	0	; () banked
   931  0017E4  05C8               	decf	_time_flag& (0+255),w,b	;volatile
   932  0017E6  A4D8               	btfss	status,2,c
   933  0017E8  EFF8  F00B         	goto	u4571
   934  0017EC  EFFA  F00B         	goto	u4570
   935  0017F0                     u4571:
   936  0017F0  EFB5  F00C         	goto	l3721
   937  0017F4                     u4570:
   938  0017F4                     
   939                           ; BSR set to: 0
   940                           ;dateandtime.c: 49:         current.second = current.second+1;
   941  0017F4  298B               	incf	(time_incre@current+7)& (0+255),w,b
   942  0017F6  6F8B               	movwf	(time_incre@current+7)& (0+255),b
   943  0017F8                     
   944                           ; BSR set to: 0
   945                           ;dateandtime.c: 51:         char buf1[40];;dateandtime.c: 52:         LCD_setline(2);
   946  0017F8  0E02               	movlw	2
   947  0017FA  EC8A  F013         	call	_LCD_setline
   948  0017FE                     
   949                           ;dateandtime.c: 53:         sprintf(buf1,"%02d:%02d:%02d",current.hour,current.minute,cu
      +                          rrent.second);
   950  0017FE  0E00               	movlw	low time_incre@buf1
   951  001800  0100               	movlb	0	; () banked
   952  001802  6F72               	movwf	sprintf@s& (0+255),b
   953  001804  0E01               	movlw	high time_incre@buf1
   954  001806  6F73               	movwf	(sprintf@s+1)& (0+255),b
   955  001808  0E01               	movlw	low STR_2
   956  00180A  6F74               	movwf	sprintf@fmt& (0+255),b
   957  00180C  0E0E               	movlw	high STR_2
   958  00180E  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
   959  001810  5189               	movf	(time_incre@current+5)& (0+255),w,b
   960  001812  6F76               	movwf	(?_sprintf+4)& (0+255),b
   961  001814  6B77               	clrf	(?_sprintf+5)& (0+255),b
   962  001816  BF76               	btfsc	(?_sprintf+4)& (0+255),7,b
   963  001818  0777               	decf	(?_sprintf+5)& (0+255),f,b
   964  00181A  518A               	movf	(time_incre@current+6)& (0+255),w,b
   965  00181C  6F78               	movwf	(?_sprintf+6)& (0+255),b
   966  00181E  6B79               	clrf	(?_sprintf+7)& (0+255),b
   967  001820  BF78               	btfsc	(?_sprintf+6)& (0+255),7,b
   968  001822  0779               	decf	(?_sprintf+7)& (0+255),f,b
   969  001824  518B               	movf	(time_incre@current+7)& (0+255),w,b
   970  001826  6F7A               	movwf	(?_sprintf+8)& (0+255),b
   971  001828  6B7B               	clrf	(?_sprintf+9)& (0+255),b
   972  00182A  BF7A               	btfsc	(?_sprintf+8)& (0+255),7,b
   973  00182C  077B               	decf	(?_sprintf+9)& (0+255),f,b
   974  00182E  EC38  F013         	call	_sprintf	;wreg free
   975  001832                     
   976                           ;dateandtime.c: 54:         LCD_sendstring(buf1);
   977  001832  0E00               	movlw	low time_incre@buf1
   978  001834  6E08               	movwf	LCD_sendstring@string^0,c
   979  001836  0E01               	movlw	high time_incre@buf1
   980  001838  6E09               	movwf	(LCD_sendstring@string+1)^0,c
   981  00183A  EC16  F012         	call	_LCD_sendstring	;wreg free
   982  00183E                     
   983                           ;dateandtime.c: 56:         if (current.second>59) {
   984  00183E  0100               	movlb	0	; () banked
   985  001840  518B               	movf	(time_incre@current+7)& (0+255),w,b
   986  001842  0A80               	xorlw	128
   987  001844  0F44               	addlw	-188
   988  001846  A0D8               	btfss	status,0,c
   989  001848  EF28  F00C         	goto	u4581
   990  00184C  EF2A  F00C         	goto	u4580
   991  001850                     u4581:
   992  001850  EFB3  F00C         	goto	l305
   993  001854                     u4580:
   994  001854                     
   995                           ; BSR set to: 0
   996                           ;dateandtime.c: 57:             LATHbits.LATH3 = !LATHbits.LATH3;
   997  001854  A680               	btfss	128,3,c	;volatile
   998  001856  EF2F  F00C         	goto	u4591
   999  00185A  EF33  F00C         	goto	u4590
  1000  00185E                     u4591:
  1001  00185E  6A50               	clrf	??_time_incre^0,c
  1002  001860  2A50               	incf	??_time_incre^0,f,c
  1003  001862  EF34  F00C         	goto	u4608
  1004  001866                     u4590:
  1005  001866  6A50               	clrf	??_time_incre^0,c
  1006  001868                     u4608:
  1007  001868  4650               	rlncf	??_time_incre^0,f,c
  1008  00186A  4650               	rlncf	??_time_incre^0,f,c
  1009  00186C  4650               	rlncf	??_time_incre^0,f,c
  1010  00186E  5080               	movf	128,w,c	;volatile
  1011  001870  1850               	xorwf	??_time_incre^0,w,c
  1012  001872  0BF7               	andlw	-9
  1013  001874  1850               	xorwf	??_time_incre^0,w,c
  1014  001876  6E80               	movwf	128,c	;volatile
  1015  001878                     
  1016                           ;dateandtime.c: 58:             current.second = 0;
  1017  001878  0E00               	movlw	0
  1018  00187A  0100               	movlb	0	; () banked
  1019  00187C  6F8B               	movwf	(time_incre@current+7)& (0+255),b
  1020  00187E                     
  1021                           ; BSR set to: 0
  1022                           ;dateandtime.c: 59:             current.minute = current.minute+1;
  1023  00187E  298A               	incf	(time_incre@current+6)& (0+255),w,b
  1024  001880  6F8A               	movwf	(time_incre@current+6)& (0+255),b
  1025  001882                     
  1026                           ; BSR set to: 0
  1027                           ;dateandtime.c: 60:             if (current.minute>59) {
  1028  001882  518A               	movf	(time_incre@current+6)& (0+255),w,b
  1029  001884  0A80               	xorlw	128
  1030  001886  0F44               	addlw	-188
  1031  001888  A0D8               	btfss	status,0,c
  1032  00188A  EF49  F00C         	goto	u4611
  1033  00188E  EF4B  F00C         	goto	u4610
  1034  001892                     u4611:
  1035  001892  EFB3  F00C         	goto	l305
  1036  001896                     u4610:
  1037  001896                     
  1038                           ; BSR set to: 0
  1039                           ;dateandtime.c: 61:                 current.minute = 0;
  1040  001896  0E00               	movlw	0
  1041  001898  6F8A               	movwf	(time_incre@current+6)& (0+255),b
  1042  00189A                     
  1043                           ; BSR set to: 0
  1044                           ;dateandtime.c: 62:                 current.hour = current.hour+1;
  1045  00189A  2989               	incf	(time_incre@current+5)& (0+255),w,b
  1046  00189C  6F89               	movwf	(time_incre@current+5)& (0+255),b
  1047  00189E                     
  1048                           ; BSR set to: 0
  1049                           ;dateandtime.c: 63:                 current = daylightsavingstime_toggle(current);
  1050  00189E  EE20  F084         	lfsr	2,time_incre@current
  1051  0018A2  EE00  F005         	lfsr	0,daylightsavingstime_toggle@current
  1052  0018A6  0E0A               	movlw	10
  1053  0018A8                     u4621:
  1054  0018A8  CFDB FFEB          	movff	plusw2,plusw0
  1055  0018AC  06E8               	decf	wreg,f,c
  1056  0018AE  E2FC               	bc	u4621
  1057  0018B0  EC60  F00F         	call	_daylightsavingstime_toggle	;wreg free
  1058  0018B4  EE20  F084         	lfsr	2,time_incre@current
  1059  0018B8  0E0A               	movlw	10
  1060  0018BA                     u4631:
  1061  0018BA  CFEB FFDB          	movff	plusw0,plusw2
  1062  0018BE  06E8               	decf	wreg,f,c
  1063  0018C0  E2FC               	bc	u4631
  1064  0018C2                     
  1065                           ;dateandtime.c: 64:                 if (current.hour>23) {
  1066  0018C2  0100               	movlb	0	; () banked
  1067  0018C4  5189               	movf	(time_incre@current+5)& (0+255),w,b
  1068  0018C6  0A80               	xorlw	128
  1069  0018C8  0F68               	addlw	-152
  1070  0018CA  A0D8               	btfss	status,0,c
  1071  0018CC  EF6A  F00C         	goto	u4641
  1072  0018D0  EF6C  F00C         	goto	u4640
  1073  0018D4                     u4641:
  1074  0018D4  EFB3  F00C         	goto	l305
  1075  0018D8                     u4640:
  1076  0018D8                     
  1077                           ; BSR set to: 0
  1078                           ;dateandtime.c: 65:                     current.hour = 0;
  1079  0018D8  0E00               	movlw	0
  1080  0018DA  6F89               	movwf	(time_incre@current+5)& (0+255),b
  1081  0018DC                     
  1082                           ; BSR set to: 0
  1083                           ;dateandtime.c: 66:                     current.date = current.date+1;
  1084  0018DC  2987               	incf	(time_incre@current+3)& (0+255),w,b
  1085  0018DE  6F87               	movwf	(time_incre@current+3)& (0+255),b
  1086  0018E0                     
  1087                           ; BSR set to: 0
  1088                           ;dateandtime.c: 67:                     current = date_check(current);
  1089  0018E0  EE20  F084         	lfsr	2,time_incre@current
  1090  0018E4  EE00  F005         	lfsr	0,date_check@current
  1091  0018E8  0E0A               	movlw	10
  1092  0018EA                     u4651:
  1093  0018EA  CFDB FFEB          	movff	plusw2,plusw0
  1094  0018EE  06E8               	decf	wreg,f,c
  1095  0018F0  E2FC               	bc	u4651
  1096  0018F2  EC45  F00A         	call	_date_check	;wreg free
  1097  0018F6  EE20  F084         	lfsr	2,time_incre@current
  1098  0018FA  0E0A               	movlw	10
  1099  0018FC                     u4661:
  1100  0018FC  CFEB FFDB          	movff	plusw0,plusw2
  1101  001900  06E8               	decf	wreg,f,c
  1102  001902  E2FC               	bc	u4661
  1103  001904                     
  1104                           ;dateandtime.c: 69:                     char buf2[40];;dateandtime.c: 70:               
      +                                LCD_setline(1);
  1105  001904  0E01               	movlw	1
  1106  001906  EC8A  F013         	call	_LCD_setline
  1107  00190A                     
  1108                           ;dateandtime.c: 71:                     sprintf(buf2,"%04d-%02d-%02d",current.year,curre
      +                          nt.month,current.date);
  1109  00190A  0E28               	movlw	low time_incre@buf2
  1110  00190C  0100               	movlb	0	; () banked
  1111  00190E  6F72               	movwf	sprintf@s& (0+255),b
  1112  001910  0E01               	movlw	high time_incre@buf2
  1113  001912  6F73               	movwf	(sprintf@s+1)& (0+255),b
  1114  001914  0E10               	movlw	low STR_1
  1115  001916  6F74               	movwf	sprintf@fmt& (0+255),b
  1116  001918  0E0E               	movlw	high STR_1
  1117  00191A  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  1118  00191C  C084  F076         	movff	time_incre@current,?_sprintf+4
  1119  001920  C085  F077         	movff	time_incre@current+1,?_sprintf+5
  1120  001924  5186               	movf	(time_incre@current+2)& (0+255),w,b
  1121  001926  6F78               	movwf	(?_sprintf+6)& (0+255),b
  1122  001928  6B79               	clrf	(?_sprintf+7)& (0+255),b
  1123  00192A  BF78               	btfsc	(?_sprintf+6)& (0+255),7,b
  1124  00192C  0779               	decf	(?_sprintf+7)& (0+255),f,b
  1125  00192E  5187               	movf	(time_incre@current+3)& (0+255),w,b
  1126  001930  6F7A               	movwf	(?_sprintf+8)& (0+255),b
  1127  001932  6B7B               	clrf	(?_sprintf+9)& (0+255),b
  1128  001934  BF7A               	btfsc	(?_sprintf+8)& (0+255),7,b
  1129  001936  077B               	decf	(?_sprintf+9)& (0+255),f,b
  1130  001938  EC38  F013         	call	_sprintf	;wreg free
  1131  00193C                     
  1132                           ;dateandtime.c: 72:                     LCD_sendstring(buf2);
  1133  00193C  0E28               	movlw	low time_incre@buf2
  1134  00193E  6E08               	movwf	LCD_sendstring@string^0,c
  1135  001940  0E01               	movlw	high time_incre@buf2
  1136  001942  6E09               	movwf	(LCD_sendstring@string+1)^0,c
  1137  001944  EC16  F012         	call	_LCD_sendstring	;wreg free
  1138  001948                     
  1139                           ;dateandtime.c: 74:                     current.day = current.day+1;
  1140  001948  0100               	movlb	0	; () banked
  1141  00194A  2988               	incf	(time_incre@current+4)& (0+255),w,b
  1142  00194C  6F88               	movwf	(time_incre@current+4)& (0+255),b
  1143  00194E                     
  1144                           ; BSR set to: 0
  1145                           ;dateandtime.c: 75:                     if (current.day>7) {
  1146  00194E  5188               	movf	(time_incre@current+4)& (0+255),w,b
  1147  001950  0A80               	xorlw	128
  1148  001952  0F78               	addlw	-136
  1149  001954  A0D8               	btfss	status,0,c
  1150  001956  EFAF  F00C         	goto	u4671
  1151  00195A  EFB1  F00C         	goto	u4670
  1152  00195E                     u4671:
  1153  00195E  EFB3  F00C         	goto	l305
  1154  001962                     u4670:
  1155  001962                     
  1156                           ; BSR set to: 0
  1157                           ;dateandtime.c: 76:                         current.day = 1;
  1158  001962  0E01               	movlw	1
  1159  001964  6F88               	movwf	(time_incre@current+4)& (0+255),b
  1160  001966                     l305:
  1161                           
  1162                           ; BSR set to: 0
  1163                           ;dateandtime.c: 81:         time_flag=0;
  1164  001966  0E00               	movlw	0
  1165  001968  6FC8               	movwf	_time_flag& (0+255),b	;volatile
  1166  00196A                     l3721:
  1167                           
  1168                           ; BSR set to: 0
  1169                           ;dateandtime.c: 83:     return current;
  1170  00196A  EE20  F084         	lfsr	2,time_incre@current
  1171  00196E  EE00  F084         	lfsr	0,?_time_incre
  1172  001972  0E0A               	movlw	10
  1173  001974                     u4681:
  1174  001974  CFDB FFEB          	movff	plusw2,plusw0
  1175  001978  06E8               	decf	wreg,f,c
  1176  00197A  E2FC               	bc	u4681
  1177  00197C                     
  1178                           ; BSR set to: 0
  1179  00197C  0012               	return		;funcret
  1180  00197E                     __end_of_time_incre:
  1181                           	callstack 0
  1182                           
  1183 ;; *************** function _sprintf *****************
  1184 ;; Defined at:
  1185 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;  s               2   18[BANK0 ] PTR unsigned char 
  1188 ;;		 -> time_incre@buf2(40), time_incre@buf1(40), main@buf2(40), 
  1189 ;;  fmt             2   20[BANK0 ] PTR const unsigned char 
  1190 ;;		 -> STR_3(15), STR_2(15), STR_1(15), 
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;  f               6   30[BANK0 ] struct _IO_FILE
  1193 ;;  ap              2   28[BANK0 ] PTR void [1]
  1194 ;;		 -> ?_sprintf(2), 
  1195 ;;  ret             2    0        int 
  1196 ;; Return value:  Size  Location     Type
  1197 ;;                  2   18[BANK0 ] int 
  1198 ;; Registers used:
  1199 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1200 ;; Tracked objects:
  1201 ;;		On entry : 0/0
  1202 ;;		On exit  : 0/0
  1203 ;;		Unchanged: 0/0
  1204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1205 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1206 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1208 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1209 ;;Total ram usage:       18 bytes
  1210 ;; Hardware stack levels used: 1
  1211 ;; Hardware stack levels required when called: 9
  1212 ;; This function calls:
  1213 ;;		_vfprintf
  1214 ;; This function is called by:
  1215 ;;		_main
  1216 ;;		_time_incre
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           	psect	text2
  1221  002670                     __ptext2:
  1222                           	callstack 0
  1223  002670                     _sprintf:
  1224                           	callstack 20
  1225  002670  0E76               	movlw	low (?_sprintf+4)
  1226  002672  0100               	movlb	0	; () banked
  1227  002674  6F7C               	movwf	sprintf@ap& (0+255),b
  1228  002676  0E00               	movlw	high (?_sprintf+4)
  1229  002678  6F7D               	movwf	(sprintf@ap+1)& (0+255),b
  1230  00267A  C072  F07E         	movff	sprintf@s,sprintf@f
  1231  00267E  C073  F07F         	movff	sprintf@s+1,sprintf@f+1
  1232  002682                     
  1233                           ; BSR set to: 0
  1234  002682  0E00               	movlw	0
  1235  002684  6F81               	movwf	(sprintf@f+3)& (0+255),b
  1236  002686  0E00               	movlw	0
  1237  002688  6F80               	movwf	(sprintf@f+2)& (0+255),b
  1238  00268A                     
  1239                           ; BSR set to: 0
  1240  00268A  0E00               	movlw	0
  1241  00268C  6F83               	movwf	(sprintf@f+5)& (0+255),b
  1242  00268E  0E00               	movlw	0
  1243  002690  6F82               	movwf	(sprintf@f+4)& (0+255),b
  1244  002692                     
  1245                           ; BSR set to: 0
  1246  002692  0E7E               	movlw	low sprintf@f
  1247  002694  6F6C               	movwf	vfprintf@fp& (0+255),b
  1248  002696  0E00               	movlw	high sprintf@f
  1249  002698  6F6D               	movwf	(vfprintf@fp+1)& (0+255),b
  1250  00269A  C074  F06E         	movff	sprintf@fmt,vfprintf@fmt
  1251  00269E  C075  F06F         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1252  0026A2  0E7C               	movlw	low sprintf@ap
  1253  0026A4  6F70               	movwf	vfprintf@ap& (0+255),b
  1254  0026A6  0E00               	movlw	high sprintf@ap
  1255  0026A8  6F71               	movwf	(vfprintf@ap+1)& (0+255),b
  1256  0026AA  ECDB  F012         	call	_vfprintf	;wreg free
  1257  0026AE  0100               	movlb	0	; () banked
  1258  0026B0  5180               	movf	(sprintf@f+2)& (0+255),w,b
  1259  0026B2  2572               	addwf	sprintf@s& (0+255),w,b
  1260  0026B4  6ED9               	movwf	fsr2l,c
  1261  0026B6  5181               	movf	(sprintf@f+3)& (0+255),w,b
  1262  0026B8  2173               	addwfc	(sprintf@s+1)& (0+255),w,b
  1263  0026BA  6EDA               	movwf	fsr2h,c
  1264  0026BC  0E00               	movlw	0
  1265  0026BE  6EDF               	movwf	indf2,c
  1266  0026C0                     
  1267                           ; BSR set to: 0
  1268  0026C0  0012               	return		;funcret
  1269  0026C2                     __end_of_sprintf:
  1270                           	callstack 0
  1271                           
  1272 ;; *************** function _vfprintf *****************
  1273 ;; Defined at:
  1274 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
  1277 ;;		 -> sprintf@f(6), 
  1278 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  1279 ;;		 -> STR_3(15), STR_2(15), STR_1(15), 
  1280 ;;  ap              2   16[BANK0 ] PTR PTR void 
  1281 ;;		 -> sprintf@ap(2), 
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;  cfmt            2   77[COMRAM] PTR unsigned char 
  1284 ;;		 -> STR_3(15), STR_2(15), STR_1(15), 
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  2   12[BANK0 ] int 
  1287 ;; Registers used:
  1288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1294 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1295 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1297 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1298 ;;Total ram usage:        8 bytes
  1299 ;; Hardware stack levels used: 1
  1300 ;; Hardware stack levels required when called: 8
  1301 ;; This function calls:
  1302 ;;		_vfpfcnvrt
  1303 ;; This function is called by:
  1304 ;;		_sprintf
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           	psect	text3
  1309  0025B6                     __ptext3:
  1310                           	callstack 0
  1311  0025B6                     _vfprintf:
  1312                           	callstack 20
  1313  0025B6                     
  1314                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1315  0025B6  C06E  F04E         	movff	vfprintf@fmt,vfprintf@cfmt
  1316  0025BA  C06F  F04F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1317  0025BE                     
  1318                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1319  0025BE  0E00               	movlw	0
  1320  0025C0  0100               	movlb	0	; () banked
  1321  0025C2  6FC3               	movwf	(_nout+1)& (0+255),b
  1322  0025C4  0E00               	movlw	0
  1323  0025C6  6FC2               	movwf	_nout& (0+255),b
  1324                           
  1325                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1326  0025C8  EFF9  F012         	goto	l3423
  1327  0025CC                     l3421:
  1328                           
  1329                           ; BSR set to: 0
  1330                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1331  0025CC  C06C  F044         	movff	vfprintf@fp,vfpfcnvrt@fp
  1332  0025D0  C06D  F045         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1333  0025D4  0E4E               	movlw	low vfprintf@cfmt
  1334  0025D6  6E46               	movwf	vfpfcnvrt@fmt^0,c
  1335  0025D8  0E00               	movlw	high vfprintf@cfmt
  1336  0025DA  6E47               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1337  0025DC  C070  F048         	movff	vfprintf@ap,vfpfcnvrt@ap
  1338  0025E0  C071  F049         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1339  0025E4  EC10  F007         	call	_vfpfcnvrt	;wreg free
  1340  0025E8  5044               	movf	?_vfpfcnvrt^0,w,c
  1341  0025EA  0100               	movlb	0	; () banked
  1342  0025EC  27C2               	addwf	_nout& (0+255),f,b
  1343  0025EE  5045               	movf	(?_vfpfcnvrt+1)^0,w,c
  1344  0025F0  23C3               	addwfc	(_nout+1)& (0+255),f,b
  1345  0025F2                     l3423:
  1346                           
  1347                           ; BSR set to: 0
  1348                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1349  0025F2  C04E  FFF6         	movff	vfprintf@cfmt,tblptrl
  1350  0025F6  C04F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1351  0025FA                     	if	0	;tblptru may be non-zero
  1352  0025FA                     	endif
  1353  0025FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1354  0025FA  0E00               	movlw	low (__mediumconst shr (0+16))
  1355  0025FC  6EF8               	movwf	tblptru,c
  1356  0025FE                     	endif
  1357  0025FE  0008               	tblrd		*
  1358  002600  50F5               	movf	tablat,w,c
  1359  002602  0900               	iorlw	0
  1360  002604  A4D8               	btfss	status,2,c
  1361  002606  EF07  F013         	goto	u4051
  1362  00260A  EF09  F013         	goto	u4050
  1363  00260E                     u4051:
  1364  00260E  EFE6  F012         	goto	l3421
  1365  002612                     u4050:
  1366  002612                     
  1367                           ; BSR set to: 0
  1368                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1369  002612  C0C2  F06C         	movff	_nout,?_vfprintf
  1370  002616  C0C3  F06D         	movff	_nout+1,?_vfprintf+1
  1371  00261A                     
  1372                           ; BSR set to: 0
  1373  00261A  0012               	return		;funcret
  1374  00261C                     __end_of_vfprintf:
  1375                           	callstack 0
  1376                           
  1377 ;; *************** function _vfpfcnvrt *****************
  1378 ;; Defined at:
  1379 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;  fp              2   67[COMRAM] PTR struct _IO_FILE
  1382 ;;		 -> sprintf@f(6), 
  1383 ;;  fmt             2   69[COMRAM] PTR PTR unsigned char 
  1384 ;;		 -> vfprintf@cfmt(2), 
  1385 ;;  ap              2   71[COMRAM] PTR PTR void 
  1386 ;;		 -> sprintf@ap(2), 
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;  ll              8    0[BANK0 ] long long 
  1389 ;;  llu             8    0        unsigned long long 
  1390 ;;  f               4    0        unsigned long long 
  1391 ;;  vp              3    0        PTR void 
  1392 ;;  ct              3    0        unsigned char [3]
  1393 ;;  cp              3    0        PTR unsigned char 
  1394 ;;  done            2    8[BANK0 ] int 
  1395 ;;  i               2    0        int 
  1396 ;;  c               1    0        unsigned char 
  1397 ;; Return value:  Size  Location     Type
  1398 ;;                  2   67[COMRAM] int 
  1399 ;; Registers used:
  1400 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1401 ;; Tracked objects:
  1402 ;;		On entry : 0/0
  1403 ;;		On exit  : 0/0
  1404 ;;		Unchanged: 0/0
  1405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1406 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1407 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1408 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1409 ;;      Totals:        10      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1410 ;;Total ram usage:       22 bytes
  1411 ;; Hardware stack levels used: 1
  1412 ;; Hardware stack levels required when called: 7
  1413 ;; This function calls:
  1414 ;;		_atoi
  1415 ;;		_dtoa
  1416 ;;		_fputc
  1417 ;;		_isdigit
  1418 ;; This function is called by:
  1419 ;;		_vfprintf
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423                           	psect	text4
  1424  000E20                     __ptext4:
  1425                           	callstack 0
  1426  000E20                     _vfpfcnvrt:
  1427                           	callstack 20
  1428  000E20                     
  1429                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1430  000E20  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1431  000E24  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1432  000E28  CFDE FFF6          	movff	postinc2,tblptrl
  1433  000E2C  CFDD FFF7          	movff	postdec2,tblptrh
  1434  000E30                     	if	0	;tblptru may be non-zero
  1435  000E30                     	endif
  1436  000E30                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1437  000E30  0E00               	movlw	low (__mediumconst shr (0+16))
  1438  000E32  6EF8               	movwf	tblptru,c
  1439  000E34                     	endif
  1440  000E34  0008               	tblrd		*
  1441  000E36  50F5               	movf	tablat,w,c
  1442  000E38  0A25               	xorlw	37
  1443  000E3A  A4D8               	btfss	status,2,c
  1444  000E3C  EF22  F007         	goto	u3881
  1445  000E40  EF24  F007         	goto	u3880
  1446  000E44                     u3881:
  1447  000E44  EFB8  F008         	goto	l3351
  1448  000E48                     u3880:
  1449  000E48                     
  1450                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1451  000E48  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1452  000E4C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1453  000E50  2ADE               	incf	postinc2,f,c
  1454  000E52  0E00               	movlw	0
  1455  000E54  22DD               	addwfc	postdec2,f,c
  1456  000E56                     
  1457                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1458  000E56  0E00               	movlw	0
  1459  000E58  0100               	movlb	0	; () banked
  1460  000E5A  6FC5               	movwf	(_width+1)& (0+255),b
  1461  000E5C  0E00               	movlw	0
  1462  000E5E  6FC4               	movwf	_width& (0+255),b
  1463  000E60  C0C4  F051         	movff	_width,_flags
  1464  000E64  C0C5  F052         	movff	_width+1,_flags+1
  1465  000E68                     
  1466                           ; BSR set to: 0
  1467                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1468  000E68  69C6               	setf	_prec& (0+255),b
  1469  000E6A  69C7               	setf	(_prec+1)& (0+255),b
  1470  000E6C                     
  1471                           ; BSR set to: 0
  1472                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  1473  000E6C  0E00               	movlw	0
  1474  000E6E  6F69               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1475  000E70  0E00               	movlw	0
  1476  000E72  6F68               	movwf	vfpfcnvrt@done& (0+255),b
  1477                           
  1478                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1479  000E74  EF84  F007         	goto	l3303
  1480  000E78                     l3277:
  1481                           
  1482                           ; BSR set to: 0
  1483                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  1484  000E78  8051               	bsf	_flags^0,0,c
  1485  000E7A                     l3279:
  1486                           
  1487                           ; BSR set to: 0
  1488                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  1489  000E7A  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1490  000E7E  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1491  000E82  2ADE               	incf	postinc2,f,c
  1492  000E84  0E00               	movlw	0
  1493  000E86  22DD               	addwfc	postdec2,f,c
  1494                           
  1495                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  1496  000E88  EF84  F007         	goto	l3303
  1497  000E8C                     l3281:
  1498                           
  1499                           ; BSR set to: 0
  1500                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  1501  000E8C  8251               	bsf	_flags^0,1,c
  1502  000E8E  EF3D  F007         	goto	l3279
  1503  000E92                     l3285:
  1504                           
  1505                           ; BSR set to: 0
  1506                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  1507  000E92  8451               	bsf	_flags^0,2,c
  1508  000E94  EF3D  F007         	goto	l3279
  1509  000E98                     l3289:
  1510                           
  1511                           ; BSR set to: 0
  1512                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  1513  000E98  8651               	bsf	_flags^0,3,c
  1514  000E9A  EF3D  F007         	goto	l3279
  1515  000E9E                     l3293:
  1516                           
  1517                           ; BSR set to: 0
  1518                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  1519  000E9E  8851               	bsf	_flags^0,4,c
  1520  000EA0  EF3D  F007         	goto	l3279
  1521  000EA4                     l3297:
  1522                           
  1523                           ; BSR set to: 0
  1524                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  1525  000EA4  0E00               	movlw	0
  1526  000EA6  6F69               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1527  000EA8  0E01               	movlw	1
  1528  000EAA  6F68               	movwf	vfpfcnvrt@done& (0+255),b
  1529                           
  1530                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  1531  000EAC  EF84  F007         	goto	l3303
  1532  000EB0                     l3301:
  1533                           
  1534                           ; BSR set to: 0
  1535  000EB0  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1536  000EB4  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1537  000EB8  CFDE FFF6          	movff	postinc2,tblptrl
  1538  000EBC  CFDD FFF7          	movff	postdec2,tblptrh
  1539  000EC0                     	if	0	;tblptru may be non-zero
  1540  000EC0                     	endif
  1541  000EC0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1542  000EC0  0E00               	movlw	low (__mediumconst shr (0+16))
  1543  000EC2  6EF8               	movwf	tblptru,c
  1544  000EC4                     	endif
  1545  000EC4  0008               	tblrd		*
  1546  000EC6  50F5               	movf	tablat,w,c
  1547  000EC8  6E4A               	movwf	??_vfpfcnvrt^0,c
  1548  000ECA  6A4B               	clrf	(??_vfpfcnvrt+1)^0,c
  1549                           
  1550                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1551                           ; Switch size 1, requested type "simple"
  1552                           ; Number of cases is 1, Range of values is 0 to 0
  1553                           ; switch strategies available:
  1554                           ; Name         Instructions Cycles
  1555                           ; simple_byte            4     3 (average)
  1556                           ;	Chosen strategy is simple_byte
  1557  000ECC  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
  1558  000ECE  0A00               	xorlw	0	; case 0
  1559  000ED0  B4D8               	btfsc	status,2,c
  1560  000ED2  EF6D  F007         	goto	l3885
  1561  000ED6  EF52  F007         	goto	l3297
  1562  000EDA                     l3885:
  1563                           
  1564                           ; BSR set to: 0
  1565                           ; Switch size 1, requested type "simple"
  1566                           ; Number of cases is 5, Range of values is 32 to 48
  1567                           ; switch strategies available:
  1568                           ; Name         Instructions Cycles
  1569                           ; simple_byte           16     9 (average)
  1570                           ;	Chosen strategy is simple_byte
  1571  000EDA  504A               	movf	??_vfpfcnvrt^0,w,c
  1572  000EDC  0A20               	xorlw	32	; case 32
  1573  000EDE  B4D8               	btfsc	status,2,c
  1574  000EE0  EF4C  F007         	goto	l3289
  1575  000EE4  0A03               	xorlw	3	; case 35
  1576  000EE6  B4D8               	btfsc	status,2,c
  1577  000EE8  EF4F  F007         	goto	l3293
  1578  000EEC  0A08               	xorlw	8	; case 43
  1579  000EEE  B4D8               	btfsc	status,2,c
  1580  000EF0  EF49  F007         	goto	l3285
  1581  000EF4  0A06               	xorlw	6	; case 45
  1582  000EF6  B4D8               	btfsc	status,2,c
  1583  000EF8  EF3C  F007         	goto	l3277
  1584  000EFC  0A1D               	xorlw	29	; case 48
  1585  000EFE  B4D8               	btfsc	status,2,c
  1586  000F00  EF46  F007         	goto	l3281
  1587  000F04  EF52  F007         	goto	l3297
  1588  000F08                     l3303:
  1589                           
  1590                           ; BSR set to: 0
  1591                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1592  000F08  5168               	movf	vfpfcnvrt@done& (0+255),w,b
  1593  000F0A  1169               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1594  000F0C  B4D8               	btfsc	status,2,c
  1595  000F0E  EF8B  F007         	goto	u3891
  1596  000F12  EF8D  F007         	goto	u3890
  1597  000F16                     u3891:
  1598  000F16  EF58  F007         	goto	l3301
  1599  000F1A                     u3890:
  1600  000F1A                     
  1601                           ; BSR set to: 0
  1602                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  1603  000F1A  A051               	btfss	_flags^0,0,c
  1604  000F1C  EF92  F007         	goto	u3901
  1605  000F20  EF94  F007         	goto	u3900
  1606  000F24                     u3901:
  1607  000F24  EF95  F007         	goto	l3307
  1608  000F28                     u3900:
  1609  000F28                     
  1610                           ; BSR set to: 0
  1611                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  1612  000F28  9251               	bcf	_flags^0,1,c
  1613  000F2A                     l3307:
  1614                           
  1615                           ; BSR set to: 0
  1616                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  1617  000F2A  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1618  000F2E  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1619  000F32  CFDE FFF6          	movff	postinc2,tblptrl
  1620  000F36  CFDD FFF7          	movff	postdec2,tblptrh
  1621  000F3A                     	if	0	;tblptru may be non-zero
  1622  000F3A                     	endif
  1623  000F3A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1624  000F3A  0E00               	movlw	low (__mediumconst shr (0+16))
  1625  000F3C  6EF8               	movwf	tblptru,c
  1626  000F3E                     	endif
  1627  000F3E  0008               	tblrd		*
  1628  000F40  50F5               	movf	tablat,w,c
  1629  000F42  0A2A               	xorlw	42
  1630  000F44  A4D8               	btfss	status,2,c
  1631  000F46  EFA7  F007         	goto	u3911
  1632  000F4A  EFA9  F007         	goto	u3910
  1633  000F4E                     u3911:
  1634  000F4E  EFD2  F007         	goto	l3315
  1635  000F52                     u3910:
  1636  000F52                     
  1637                           ; BSR set to: 0
  1638                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  1639  000F52  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1640  000F56  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1641  000F5A  2ADE               	incf	postinc2,f,c
  1642  000F5C  0E00               	movlw	0
  1643  000F5E  22DD               	addwfc	postdec2,f,c
  1644                           
  1645                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1646  000F60  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1647  000F64  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1648  000F68  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  1649  000F6C  0E02               	movlw	2
  1650  000F6E  26DE               	addwf	postinc2,f,c
  1651  000F70  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  1652  000F74  0E00               	movlw	0
  1653  000F76  22DD               	addwfc	postdec2,f,c
  1654  000F78  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1655  000F7C  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1656  000F80  CFDE F0C4          	movff	postinc2,_width
  1657  000F84  CFDD F0C5          	movff	postdec2,_width+1
  1658  000F88                     
  1659                           ; BSR set to: 0
  1660                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  1661  000F88  BFC5               	btfsc	(_width+1)& (0+255),7,b
  1662  000F8A  EFCB  F007         	goto	u3920
  1663  000F8E  EFC9  F007         	goto	u3921
  1664  000F92                     u3921:
  1665  000F92  EF18  F008         	goto	l3325
  1666  000F96                     u3920:
  1667  000F96                     
  1668                           ; BSR set to: 0
  1669                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  1670  000F96  8051               	bsf	_flags^0,0,c
  1671                           
  1672                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  1673  000F98  6DC4               	negf	_width& (0+255),b
  1674  000F9A  1FC5               	comf	(_width+1)& (0+255),f,b
  1675  000F9C  B0D8               	btfsc	status,0,c
  1676  000F9E  2BC5               	incf	(_width+1)& (0+255),f,b
  1677  000FA0  EF18  F008         	goto	l3325
  1678  000FA4                     l3315:
  1679                           
  1680                           ; BSR set to: 0
  1681                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  1682  000FA4  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1683  000FA8  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1684  000FAC  CFDE F00C          	movff	postinc2,atoi@s
  1685  000FB0  CFDD F00D          	movff	postdec2,atoi@s+1
  1686  000FB4  EC1F  F00B         	call	_atoi	;wreg free
  1687  000FB8  C00C  F0C4         	movff	?_atoi,_width
  1688  000FBC  C00D  F0C5         	movff	?_atoi+1,_width+1
  1689                           
  1690                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1691  000FC0  EFE9  F007         	goto	l3319
  1692  000FC4                     l3317:
  1693                           
  1694                           ; BSR set to: 0
  1695                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  1696  000FC4  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1697  000FC8  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1698  000FCC  2ADE               	incf	postinc2,f,c
  1699  000FCE  0E00               	movlw	0
  1700  000FD0  22DD               	addwfc	postdec2,f,c
  1701  000FD2                     l3319:
  1702  000FD2  0ED0               	movlw	208
  1703  000FD4  6E4A               	movwf	??_vfpfcnvrt^0,c
  1704  000FD6  0EFF               	movlw	255
  1705  000FD8  6E4B               	movwf	(??_vfpfcnvrt+1)^0,c
  1706  000FDA  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1707  000FDE  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1708  000FE2  CFDE FFF6          	movff	postinc2,tblptrl
  1709  000FE6  CFDD FFF7          	movff	postdec2,tblptrh
  1710  000FEA                     	if	0	;tblptru may be non-zero
  1711  000FEA                     	endif
  1712  000FEA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1713  000FEA  0E00               	movlw	low (__mediumconst shr (0+16))
  1714  000FEC  6EF8               	movwf	tblptru,c
  1715  000FEE                     	endif
  1716  000FEE  0008               	tblrd		*
  1717  000FF0  50F5               	movf	tablat,w,c
  1718  000FF2  6E4C               	movwf	(??_vfpfcnvrt+2)^0,c
  1719  000FF4  6A4D               	clrf	(??_vfpfcnvrt+3)^0,c
  1720  000FF6  504A               	movf	??_vfpfcnvrt^0,w,c
  1721  000FF8  264C               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1722  000FFA  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
  1723  000FFC  224D               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1724  000FFE  504D               	movf	(??_vfpfcnvrt+3)^0,w,c
  1725  001000  E10A               	bnz	u3930
  1726  001002  0E0A               	movlw	10
  1727  001004  5C4C               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1728  001006  A0D8               	btfss	status,0,c
  1729  001008  EF08  F008         	goto	u3931
  1730  00100C  EF0B  F008         	goto	u3930
  1731  001010                     u3931:
  1732  001010  0E01               	movlw	1
  1733  001012  EF0C  F008         	goto	u3940
  1734  001016                     u3930:
  1735  001016  0E00               	movlw	0
  1736  001018                     u3940:
  1737  001018  0100               	movlb	0	; () banked
  1738  00101A  6F6A               	movwf	_vfpfcnvrt$2205& (0+255),b
  1739  00101C  6B6B               	clrf	(_vfpfcnvrt$2205+1)& (0+255),b
  1740  00101E                     
  1741                           ; BSR set to: 0
  1742  00101E  516A               	movf	_vfpfcnvrt$2205& (0+255),w,b
  1743  001020  116B               	iorwf	(_vfpfcnvrt$2205+1)& (0+255),w,b
  1744  001022  A4D8               	btfss	status,2,c
  1745  001024  EF16  F008         	goto	u3951
  1746  001028  EF18  F008         	goto	u3950
  1747  00102C                     u3951:
  1748  00102C  EFE2  F007         	goto	l3317
  1749  001030                     u3950:
  1750  001030                     l3325:
  1751                           
  1752                           ; BSR set to: 0
  1753                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1754  001030  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1755  001034  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1756  001038  CFDE FFF6          	movff	postinc2,tblptrl
  1757  00103C  CFDD FFF7          	movff	postdec2,tblptrh
  1758  001040                     	if	0	;tblptru may be non-zero
  1759  001040                     	endif
  1760  001040                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1761  001040  0E00               	movlw	low (__mediumconst shr (0+16))
  1762  001042  6EF8               	movwf	tblptru,c
  1763  001044                     	endif
  1764  001044  0008               	tblrd		*
  1765  001046  50F5               	movf	tablat,w,c
  1766  001048  0A64               	xorlw	100
  1767  00104A  B4D8               	btfsc	status,2,c
  1768  00104C  EF2A  F008         	goto	u3961
  1769  001050  EF2C  F008         	goto	u3960
  1770  001054                     u3961:
  1771  001054  EF40  F008         	goto	l3329
  1772  001058                     u3960:
  1773  001058                     
  1774                           ; BSR set to: 0
  1775  001058  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1776  00105C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1777  001060  CFDE FFF6          	movff	postinc2,tblptrl
  1778  001064  CFDD FFF7          	movff	postdec2,tblptrh
  1779  001068                     	if	0	;tblptru may be non-zero
  1780  001068                     	endif
  1781  001068                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1782  001068  0E00               	movlw	low (__mediumconst shr (0+16))
  1783  00106A  6EF8               	movwf	tblptru,c
  1784  00106C                     	endif
  1785  00106C  0008               	tblrd		*
  1786  00106E  50F5               	movf	tablat,w,c
  1787  001070  0A69               	xorlw	105
  1788  001072  A4D8               	btfss	status,2,c
  1789  001074  EF3E  F008         	goto	u3971
  1790  001078  EF40  F008         	goto	u3970
  1791  00107C                     u3971:
  1792  00107C  EF80  F008         	goto	l3335
  1793  001080                     u3970:
  1794  001080                     l3329:
  1795                           
  1796                           ; BSR set to: 0
  1797                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1798  001080  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1799  001084  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1800  001088  2ADE               	incf	postinc2,f,c
  1801  00108A  0E00               	movlw	0
  1802  00108C  22DD               	addwfc	postdec2,f,c
  1803                           
  1804                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1805  00108E  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1806  001092  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1807  001096  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  1808  00109A  0E02               	movlw	2
  1809  00109C  26DE               	addwf	postinc2,f,c
  1810  00109E  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  1811  0010A2  0E00               	movlw	0
  1812  0010A4  22DD               	addwfc	postdec2,f,c
  1813  0010A6  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1814  0010AA  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1815  0010AE  CFDE F060          	movff	postinc2,vfpfcnvrt@ll
  1816  0010B2  CFDD F061          	movff	postdec2,vfpfcnvrt@ll+1
  1817  0010B6  0E00               	movlw	0
  1818  0010B8  BF61               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  1819  0010BA  0EFF               	movlw	-1
  1820  0010BC  6F62               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  1821  0010BE  6F63               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  1822  0010C0  6F64               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  1823  0010C2  6F65               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  1824  0010C4  6F66               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  1825  0010C6  6F67               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  1826  0010C8                     
  1827                           ; BSR set to: 0
  1828                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1829  0010C8  C044  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  1830  0010CC  C045  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1831  0010D0  C060  F022         	movff	vfpfcnvrt@ll,dtoa@d
  1832  0010D4  C061  F023         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1833  0010D8  C062  F024         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1834  0010DC  C063  F025         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1835  0010E0  C064  F026         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1836  0010E4  C065  F027         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1837  0010E8  C066  F028         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1838  0010EC  C067  F029         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1839  0010F0  ECD6  F008         	call	_dtoa	;wreg free
  1840  0010F4  C020  F044         	movff	?_dtoa,?_vfpfcnvrt
  1841  0010F8  C021  F045         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1842  0010FC  EFD5  F008         	goto	l1095
  1843  001100                     l3335:
  1844                           
  1845                           ; BSR set to: 0
  1846                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1847  001100  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1848  001104  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1849  001108  CFDE FFF6          	movff	postinc2,tblptrl
  1850  00110C  CFDD FFF7          	movff	postdec2,tblptrh
  1851  001110                     	if	0	;tblptru may be non-zero
  1852  001110                     	endif
  1853  001110                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1854  001110  0E00               	movlw	low (__mediumconst shr (0+16))
  1855  001112  6EF8               	movwf	tblptru,c
  1856  001114                     	endif
  1857  001114  0008               	tblrd		*
  1858  001116  50F5               	movf	tablat,w,c
  1859  001118  0A25               	xorlw	37
  1860  00111A  A4D8               	btfss	status,2,c
  1861  00111C  EF92  F008         	goto	u3981
  1862  001120  EF94  F008         	goto	u3980
  1863  001124                     u3981:
  1864  001124  EFAB  F008         	goto	l3345
  1865  001128                     u3980:
  1866  001128                     
  1867                           ; BSR set to: 0
  1868                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1869  001128  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1870  00112C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1871  001130  2ADE               	incf	postinc2,f,c
  1872  001132  0E00               	movlw	0
  1873  001134  22DD               	addwfc	postdec2,f,c
  1874  001136                     
  1875                           ; BSR set to: 0
  1876                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1877  001136  0E00               	movlw	0
  1878  001138  6E06               	movwf	(fputc@c+1)^0,c
  1879  00113A  0E25               	movlw	37
  1880  00113C  6E05               	movwf	fputc@c^0,c
  1881  00113E  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1882  001142  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1883  001146  ECD3  F00F         	call	_fputc	;wreg free
  1884  00114A                     l3341:
  1885                           
  1886                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1887  00114A  0E00               	movlw	0
  1888  00114C  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  1889  00114E  0E01               	movlw	1
  1890  001150  6E44               	movwf	?_vfpfcnvrt^0,c
  1891  001152  EFD5  F008         	goto	l1095
  1892  001156                     l3345:
  1893                           
  1894                           ; BSR set to: 0
  1895                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1896  001156  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1897  00115A  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1898  00115E  2ADE               	incf	postinc2,f,c
  1899  001160  0E00               	movlw	0
  1900  001162  22DD               	addwfc	postdec2,f,c
  1901  001164                     
  1902                           ; BSR set to: 0
  1903                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1904  001164  0E00               	movlw	0
  1905  001166  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  1906  001168  0E00               	movlw	0
  1907  00116A  6E44               	movwf	?_vfpfcnvrt^0,c
  1908  00116C  EFD5  F008         	goto	l1095
  1909  001170                     l3351:
  1910                           
  1911                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1912  001170  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1913  001174  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1914  001178  CFDE FFF6          	movff	postinc2,tblptrl
  1915  00117C  CFDD FFF7          	movff	postdec2,tblptrh
  1916  001180                     	if	0	;tblptru may be non-zero
  1917  001180                     	endif
  1918  001180                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1919  001180  0E00               	movlw	low (__mediumconst shr (0+16))
  1920  001182  6EF8               	movwf	tblptru,c
  1921  001184                     	endif
  1922  001184  0008               	tblrd		*
  1923  001186  50F5               	movf	tablat,w,c
  1924  001188  6E05               	movwf	fputc@c^0,c
  1925  00118A  6A06               	clrf	(fputc@c+1)^0,c
  1926  00118C  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1927  001190  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1928  001194  ECD3  F00F         	call	_fputc	;wreg free
  1929  001198                     
  1930                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1931  001198  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1932  00119C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1933  0011A0  2ADE               	incf	postinc2,f,c
  1934  0011A2  0E00               	movlw	0
  1935  0011A4  22DD               	addwfc	postdec2,f,c
  1936  0011A6  EFA5  F008         	goto	l3341
  1937  0011AA                     l1095:
  1938  0011AA  0012               	return		;funcret
  1939  0011AC                     __end_of_vfpfcnvrt:
  1940                           	callstack 0
  1941                           
  1942 ;; *************** function _dtoa *****************
  1943 ;; Defined at:
  1944 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  1947 ;;		 -> sprintf@f(6), 
  1948 ;;  d               8   33[COMRAM] long long 
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;  n               8   57[COMRAM] long long 
  1951 ;;  i               2   65[COMRAM] int 
  1952 ;;  s               2   55[COMRAM] int 
  1953 ;;  w               2   53[COMRAM] int 
  1954 ;;  p               2   51[COMRAM] int 
  1955 ;; Return value:  Size  Location     Type
  1956 ;;                  2   31[COMRAM] int 
  1957 ;; Registers used:
  1958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1964 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1965 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1966 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1967 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1968 ;;Total ram usage:       36 bytes
  1969 ;; Hardware stack levels used: 1
  1970 ;; Hardware stack levels required when called: 6
  1971 ;; This function calls:
  1972 ;;		___aodiv
  1973 ;;		___aomod
  1974 ;;		_abs
  1975 ;;		_pad
  1976 ;; This function is called by:
  1977 ;;		_vfpfcnvrt
  1978 ;; This function uses a non-reentrant model
  1979 ;;
  1980                           
  1981                           	psect	text5
  1982  0011AC                     __ptext5:
  1983                           	callstack 0
  1984  0011AC                     _dtoa:
  1985                           	callstack 20
  1986  0011AC                     
  1987                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1988  0011AC  C022  F03A         	movff	dtoa@d,dtoa@n
  1989  0011B0  C023  F03B         	movff	dtoa@d+1,dtoa@n+1
  1990  0011B4  C024  F03C         	movff	dtoa@d+2,dtoa@n+2
  1991  0011B8  C025  F03D         	movff	dtoa@d+3,dtoa@n+3
  1992  0011BC  C026  F03E         	movff	dtoa@d+4,dtoa@n+4
  1993  0011C0  C027  F03F         	movff	dtoa@d+5,dtoa@n+5
  1994  0011C4  C028  F040         	movff	dtoa@d+6,dtoa@n+6
  1995  0011C8  C029  F041         	movff	dtoa@d+7,dtoa@n+7
  1996  0011CC                     
  1997                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1998  0011CC  BE41               	btfsc	(dtoa@n+7)^0,7,c
  1999  0011CE  EFEB  F008         	goto	u3651
  2000  0011D2  EFEE  F008         	goto	u3650
  2001  0011D6                     u3651:
  2002  0011D6  0E01               	movlw	1
  2003  0011D8  EFEF  F008         	goto	u3660
  2004  0011DC                     u3650:
  2005  0011DC  0E00               	movlw	0
  2006  0011DE                     u3660:
  2007  0011DE  6E38               	movwf	dtoa@s^0,c
  2008  0011E0  6A39               	clrf	(dtoa@s+1)^0,c
  2009                           
  2010                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2011  0011E2  5038               	movf	dtoa@s^0,w,c
  2012  0011E4  1039               	iorwf	(dtoa@s+1)^0,w,c
  2013  0011E6  B4D8               	btfsc	status,2,c
  2014  0011E8  EFF8  F008         	goto	u3671
  2015  0011EC  EFFA  F008         	goto	u3670
  2016  0011F0                     u3671:
  2017  0011F0  EF0A  F009         	goto	l3161
  2018  0011F4                     u3670:
  2019  0011F4                     
  2020                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2021  0011F4  1E41               	comf	(dtoa@n+7)^0,f,c
  2022  0011F6  1E40               	comf	(dtoa@n+6)^0,f,c
  2023  0011F8  1E3F               	comf	(dtoa@n+5)^0,f,c
  2024  0011FA  1E3E               	comf	(dtoa@n+4)^0,f,c
  2025  0011FC  1E3D               	comf	(dtoa@n+3)^0,f,c
  2026  0011FE  1E3C               	comf	(dtoa@n+2)^0,f,c
  2027  001200  1E3B               	comf	(dtoa@n+1)^0,f,c
  2028  001202  6C3A               	negf	dtoa@n^0,c
  2029  001204  0E00               	movlw	0
  2030  001206  223B               	addwfc	(dtoa@n+1)^0,f,c
  2031  001208  223C               	addwfc	(dtoa@n+2)^0,f,c
  2032  00120A  223D               	addwfc	(dtoa@n+3)^0,f,c
  2033  00120C  223E               	addwfc	(dtoa@n+4)^0,f,c
  2034  00120E  223F               	addwfc	(dtoa@n+5)^0,f,c
  2035  001210  2240               	addwfc	(dtoa@n+6)^0,f,c
  2036  001212  2241               	addwfc	(dtoa@n+7)^0,f,c
  2037  001214                     l3161:
  2038                           
  2039                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2040  001214  0100               	movlb	0	; () banked
  2041  001216  BFC7               	btfsc	(_prec+1)& (0+255),7,b
  2042  001218  EF10  F009         	goto	u3681
  2043  00121C  EF12  F009         	goto	u3680
  2044  001220                     u3681:
  2045  001220  EF13  F009         	goto	l3165
  2046  001224                     u3680:
  2047  001224                     
  2048                           ; BSR set to: 0
  2049                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2050  001224  9251               	bcf	_flags^0,1,c
  2051  001226                     l3165:
  2052                           
  2053                           ; BSR set to: 0
  2054                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2055  001226  BFC7               	btfsc	(_prec+1)& (0+255),7,b
  2056  001228  EF20  F009         	goto	u3690
  2057  00122C  51C7               	movf	(_prec+1)& (0+255),w,b
  2058  00122E  E106               	bnz	u3691
  2059  001230  05C6               	decf	_prec& (0+255),w,b
  2060  001232  B0D8               	btfsc	status,0,c
  2061  001234  EF1E  F009         	goto	u3691
  2062  001238  EF20  F009         	goto	u3690
  2063  00123C                     u3691:
  2064  00123C  EF26  F009         	goto	l1046
  2065  001240                     u3690:
  2066  001240                     
  2067                           ; BSR set to: 0
  2068  001240  0E00               	movlw	0
  2069  001242  6E35               	movwf	(dtoa@p+1)^0,c
  2070  001244  0E01               	movlw	1
  2071  001246  6E34               	movwf	dtoa@p^0,c
  2072  001248  EF2A  F009         	goto	l1048
  2073  00124C                     l1046:
  2074                           
  2075                           ; BSR set to: 0
  2076  00124C  C0C6  F034         	movff	_prec,dtoa@p
  2077  001250  C0C7  F035         	movff	_prec+1,dtoa@p+1
  2078  001254                     l1048:
  2079                           
  2080                           ; BSR set to: 0
  2081                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2082  001254  C0C4  F036         	movff	_width,dtoa@w
  2083  001258  C0C5  F037         	movff	_width+1,dtoa@w+1
  2084  00125C                     
  2085                           ; BSR set to: 0
  2086                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2087  00125C  5038               	movf	dtoa@s^0,w,c
  2088  00125E  1039               	iorwf	(dtoa@s+1)^0,w,c
  2089  001260  A4D8               	btfss	status,2,c
  2090  001262  EF35  F009         	goto	u3701
  2091  001266  EF37  F009         	goto	u3700
  2092  00126A                     u3701:
  2093  00126A  EF3E  F009         	goto	l3173
  2094  00126E                     u3700:
  2095  00126E                     
  2096                           ; BSR set to: 0
  2097  00126E  A451               	btfss	_flags^0,2,c
  2098  001270  EF3C  F009         	goto	u3711
  2099  001274  EF3E  F009         	goto	u3710
  2100  001278                     u3711:
  2101  001278  EF41  F009         	goto	l3175
  2102  00127C                     u3710:
  2103  00127C                     l3173:
  2104                           
  2105                           ; BSR set to: 0
  2106                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  2107  00127C  0636               	decf	dtoa@w^0,f,c
  2108  00127E  A0D8               	btfss	status,0,c
  2109  001280  0637               	decf	(dtoa@w+1)^0,f,c
  2110  001282                     l3175:
  2111                           
  2112                           ; BSR set to: 0
  2113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2114  001282  0E00               	movlw	0
  2115  001284  6E43               	movwf	(dtoa@i+1)^0,c
  2116  001286  0E1F               	movlw	31
  2117  001288  6E42               	movwf	dtoa@i^0,c
  2118  00128A                     
  2119                           ; BSR set to: 0
  2120                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2121  00128A  0E00               	movlw	0
  2122  00128C  6FE8               	movwf	(_dbuf+31)& (0+255),b
  2123                           
  2124                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2125  00128E  EFC5  F009         	goto	l3189
  2126  001292                     l3179:
  2127                           
  2128                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  2129  001292  0642               	decf	dtoa@i^0,f,c
  2130  001294  A0D8               	btfss	status,0,c
  2131  001296  0643               	decf	(dtoa@i+1)^0,f,c
  2132  001298                     
  2133                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2134  001298  0EC9               	movlw	low _dbuf
  2135  00129A  2442               	addwf	dtoa@i^0,w,c
  2136  00129C  6ED9               	movwf	fsr2l,c
  2137  00129E  0E00               	movlw	high _dbuf
  2138  0012A0  2043               	addwfc	(dtoa@i+1)^0,w,c
  2139  0012A2  6EDA               	movwf	fsr2h,c
  2140  0012A4  C03A  F005         	movff	dtoa@n,___aomod@dividend
  2141  0012A8  C03B  F006         	movff	dtoa@n+1,___aomod@dividend+1
  2142  0012AC  C03C  F007         	movff	dtoa@n+2,___aomod@dividend+2
  2143  0012B0  C03D  F008         	movff	dtoa@n+3,___aomod@dividend+3
  2144  0012B4  C03E  F009         	movff	dtoa@n+4,___aomod@dividend+4
  2145  0012B8  C03F  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  2146  0012BC  C040  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  2147  0012C0  C041  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  2148  0012C4  0E0A               	movlw	10
  2149  0012C6  6E0D               	movwf	___aomod@divisor^0,c
  2150  0012C8  0E00               	movlw	0
  2151  0012CA  6E0E               	movwf	(___aomod@divisor+1)^0,c
  2152  0012CC  0E00               	movlw	0
  2153  0012CE  6E0F               	movwf	(___aomod@divisor+2)^0,c
  2154  0012D0  0E00               	movlw	0
  2155  0012D2  6E10               	movwf	(___aomod@divisor+3)^0,c
  2156  0012D4  0E00               	movlw	0
  2157  0012D6  6E11               	movwf	(___aomod@divisor+4)^0,c
  2158  0012D8  0E00               	movlw	0
  2159  0012DA  6E12               	movwf	(___aomod@divisor+5)^0,c
  2160  0012DC  0E00               	movlw	0
  2161  0012DE  6E13               	movwf	(___aomod@divisor+6)^0,c
  2162  0012E0  0E00               	movlw	0
  2163  0012E2  6E14               	movwf	(___aomod@divisor+7)^0,c
  2164  0012E4  EC83  F00D         	call	___aomod	;wreg free
  2165  0012E8  C005  F02A         	movff	?___aomod,??_dtoa
  2166  0012EC  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  2167  0012F0  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  2168  0012F4  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  2169  0012F8  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  2170  0012FC  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  2171  001300  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  2172  001304  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  2173  001308  C02A  F017         	movff	??_dtoa,abs@a
  2174  00130C  C02C  F018         	movff	??_dtoa+2,abs@a+1
  2175  001310  EC17  F014         	call	_abs	;wreg free
  2176  001314  5017               	movf	?_abs^0,w,c
  2177  001316  0F30               	addlw	48
  2178  001318  6EDF               	movwf	indf2,c
  2179  00131A                     
  2180                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  2181  00131A  0634               	decf	dtoa@p^0,f,c
  2182  00131C  A0D8               	btfss	status,0,c
  2183  00131E  0635               	decf	(dtoa@p+1)^0,f,c
  2184  001320                     
  2185                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  2186  001320  0636               	decf	dtoa@w^0,f,c
  2187  001322  A0D8               	btfss	status,0,c
  2188  001324  0637               	decf	(dtoa@w+1)^0,f,c
  2189  001326                     
  2190                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2191  001326  C03A  F005         	movff	dtoa@n,___aodiv@dividend
  2192  00132A  C03B  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  2193  00132E  C03C  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  2194  001332  C03D  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  2195  001336  C03E  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  2196  00133A  C03F  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  2197  00133E  C040  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  2198  001342  C041  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  2199  001346  0E0A               	movlw	10
  2200  001348  6E0D               	movwf	___aodiv@divisor^0,c
  2201  00134A  0E00               	movlw	0
  2202  00134C  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  2203  00134E  0E00               	movlw	0
  2204  001350  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  2205  001352  0E00               	movlw	0
  2206  001354  6E10               	movwf	(___aodiv@divisor+3)^0,c
  2207  001356  0E00               	movlw	0
  2208  001358  6E11               	movwf	(___aodiv@divisor+4)^0,c
  2209  00135A  0E00               	movlw	0
  2210  00135C  6E12               	movwf	(___aodiv@divisor+5)^0,c
  2211  00135E  0E00               	movlw	0
  2212  001360  6E13               	movwf	(___aodiv@divisor+6)^0,c
  2213  001362  0E00               	movlw	0
  2214  001364  6E14               	movwf	(___aodiv@divisor+7)^0,c
  2215  001366  ECBF  F00C         	call	___aodiv	;wreg free
  2216  00136A  C005  F03A         	movff	?___aodiv,dtoa@n
  2217  00136E  C006  F03B         	movff	?___aodiv+1,dtoa@n+1
  2218  001372  C007  F03C         	movff	?___aodiv+2,dtoa@n+2
  2219  001376  C008  F03D         	movff	?___aodiv+3,dtoa@n+3
  2220  00137A  C009  F03E         	movff	?___aodiv+4,dtoa@n+4
  2221  00137E  C00A  F03F         	movff	?___aodiv+5,dtoa@n+5
  2222  001382  C00B  F040         	movff	?___aodiv+6,dtoa@n+6
  2223  001386  C00C  F041         	movff	?___aodiv+7,dtoa@n+7
  2224  00138A                     l3189:
  2225                           
  2226                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2227  00138A  BE43               	btfsc	(dtoa@i+1)^0,7,c
  2228  00138C  EFD0  F009         	goto	u3721
  2229  001390  5043               	movf	(dtoa@i+1)^0,w,c
  2230  001392  E108               	bnz	u3720
  2231  001394  0442               	decf	dtoa@i^0,w,c
  2232  001396  A0D8               	btfss	status,0,c
  2233  001398  EFD0  F009         	goto	u3721
  2234  00139C  EFD2  F009         	goto	u3720
  2235  0013A0                     u3721:
  2236  0013A0  EF02  F00A         	goto	l3199
  2237  0013A4                     u3720:
  2238  0013A4  503A               	movf	dtoa@n^0,w,c
  2239  0013A6  103B               	iorwf	(dtoa@n+1)^0,w,c
  2240  0013A8  103C               	iorwf	(dtoa@n+2)^0,w,c
  2241  0013AA  103D               	iorwf	(dtoa@n+3)^0,w,c
  2242  0013AC  103E               	iorwf	(dtoa@n+4)^0,w,c
  2243  0013AE  103F               	iorwf	(dtoa@n+5)^0,w,c
  2244  0013B0  1040               	iorwf	(dtoa@n+6)^0,w,c
  2245  0013B2  1041               	iorwf	(dtoa@n+7)^0,w,c
  2246  0013B4  A4D8               	btfss	status,2,c
  2247  0013B6  EFDF  F009         	goto	u3731
  2248  0013BA  EFE1  F009         	goto	u3730
  2249  0013BE                     u3731:
  2250  0013BE  EF49  F009         	goto	l3179
  2251  0013C2                     u3730:
  2252  0013C2  BE35               	btfsc	(dtoa@p+1)^0,7,c
  2253  0013C4  EFEE  F009         	goto	u3740
  2254  0013C8  5035               	movf	(dtoa@p+1)^0,w,c
  2255  0013CA  E106               	bnz	u3741
  2256  0013CC  0434               	decf	dtoa@p^0,w,c
  2257  0013CE  B0D8               	btfsc	status,0,c
  2258  0013D0  EFEC  F009         	goto	u3741
  2259  0013D4  EFEE  F009         	goto	u3740
  2260  0013D8                     u3741:
  2261  0013D8  EF49  F009         	goto	l3179
  2262  0013DC                     u3740:
  2263  0013DC  BE37               	btfsc	(dtoa@w+1)^0,7,c
  2264  0013DE  EFF9  F009         	goto	u3751
  2265  0013E2  5037               	movf	(dtoa@w+1)^0,w,c
  2266  0013E4  E108               	bnz	u3750
  2267  0013E6  0436               	decf	dtoa@w^0,w,c
  2268  0013E8  A0D8               	btfss	status,0,c
  2269  0013EA  EFF9  F009         	goto	u3751
  2270  0013EE  EFFB  F009         	goto	u3750
  2271  0013F2                     u3751:
  2272  0013F2  EF02  F00A         	goto	l3199
  2273  0013F6                     u3750:
  2274  0013F6  B251               	btfsc	_flags^0,1,c
  2275  0013F8  EF00  F00A         	goto	u3761
  2276  0013FC  EF02  F00A         	goto	u3760
  2277  001400                     u3761:
  2278  001400  EF49  F009         	goto	l3179
  2279  001404                     u3760:
  2280  001404                     l3199:
  2281                           
  2282                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2283  001404  5038               	movf	dtoa@s^0,w,c
  2284  001406  1039               	iorwf	(dtoa@s+1)^0,w,c
  2285  001408  A4D8               	btfss	status,2,c
  2286  00140A  EF09  F00A         	goto	u3771
  2287  00140E  EF0B  F00A         	goto	u3770
  2288  001412                     u3771:
  2289  001412  EF12  F00A         	goto	l3203
  2290  001416                     u3770:
  2291  001416  A451               	btfss	_flags^0,2,c
  2292  001418  EF10  F00A         	goto	u3781
  2293  00141C  EF12  F00A         	goto	u3780
  2294  001420                     u3781:
  2295  001420  EF30  F00A         	goto	l3213
  2296  001424                     u3780:
  2297  001424                     l3203:
  2298                           
  2299                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  2300  001424  0642               	decf	dtoa@i^0,f,c
  2301  001426  A0D8               	btfss	status,0,c
  2302  001428  0643               	decf	(dtoa@i+1)^0,f,c
  2303  00142A                     
  2304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2305  00142A  5038               	movf	dtoa@s^0,w,c
  2306  00142C  1039               	iorwf	(dtoa@s+1)^0,w,c
  2307  00142E  A4D8               	btfss	status,2,c
  2308  001430  EF1C  F00A         	goto	u3791
  2309  001434  EF1E  F00A         	goto	u3790
  2310  001438                     u3791:
  2311  001438  EF24  F00A         	goto	l3209
  2312  00143C                     u3790:
  2313  00143C  0E00               	movlw	0
  2314  00143E  6E33               	movwf	(_dtoa$2190+1)^0,c
  2315  001440  0E2B               	movlw	43
  2316  001442  6E32               	movwf	_dtoa$2190^0,c
  2317  001444  EF28  F00A         	goto	l3211
  2318  001448                     l3209:
  2319  001448  0E00               	movlw	0
  2320  00144A  6E33               	movwf	(_dtoa$2190+1)^0,c
  2321  00144C  0E2D               	movlw	45
  2322  00144E  6E32               	movwf	_dtoa$2190^0,c
  2323  001450                     l3211:
  2324  001450  0EC9               	movlw	low _dbuf
  2325  001452  2442               	addwf	dtoa@i^0,w,c
  2326  001454  6ED9               	movwf	fsr2l,c
  2327  001456  0E00               	movlw	high _dbuf
  2328  001458  2043               	addwfc	(dtoa@i+1)^0,w,c
  2329  00145A  6EDA               	movwf	fsr2h,c
  2330  00145C  C032  FFDF         	movff	_dtoa$2190,indf2
  2331  001460                     l3213:
  2332                           
  2333                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2334  001460  C020  F015         	movff	dtoa@fp,pad@fp
  2335  001464  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  2336  001468  0EC9               	movlw	low _dbuf
  2337  00146A  2442               	addwf	dtoa@i^0,w,c
  2338  00146C  6E17               	movwf	pad@buf^0,c
  2339  00146E  0E00               	movlw	high _dbuf
  2340  001470  2043               	addwfc	(dtoa@i+1)^0,w,c
  2341  001472  6E18               	movwf	(pad@buf+1)^0,c
  2342  001474  C036  F019         	movff	dtoa@w,pad@p
  2343  001478  C037  F01A         	movff	dtoa@w+1,pad@p+1
  2344  00147C  EC61  F011         	call	_pad	;wreg free
  2345  001480  C015  F020         	movff	?_pad,?_dtoa
  2346  001484  C016  F021         	movff	?_pad+1,?_dtoa+1
  2347  001488  0012               	return		;funcret
  2348  00148A                     __end_of_dtoa:
  2349                           	callstack 0
  2350                           
  2351 ;; *************** function _pad *****************
  2352 ;; Defined at:
  2353 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  2356 ;;		 -> sprintf@f(6), 
  2357 ;;  buf             2   22[COMRAM] PTR unsigned char 
  2358 ;;		 -> dbuf(32), 
  2359 ;;  p               2   24[COMRAM] int 
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;  w               2   29[COMRAM] int 
  2362 ;;  i               2   27[COMRAM] int 
  2363 ;; Return value:  Size  Location     Type
  2364 ;;                  2   20[COMRAM] int 
  2365 ;; Registers used:
  2366 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2367 ;; Tracked objects:
  2368 ;;		On entry : 0/0
  2369 ;;		On exit  : 0/0
  2370 ;;		Unchanged: 0/0
  2371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2372 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2373 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2374 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2375 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2376 ;;Total ram usage:       11 bytes
  2377 ;; Hardware stack levels used: 1
  2378 ;; Hardware stack levels required when called: 5
  2379 ;; This function calls:
  2380 ;;		_fputc
  2381 ;;		_fputs
  2382 ;;		_strlen
  2383 ;; This function is called by:
  2384 ;;		_dtoa
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           	psect	text6
  2389  0022C2                     __ptext6:
  2390                           	callstack 0
  2391  0022C2                     _pad:
  2392                           	callstack 20
  2393  0022C2                     
  2394                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2395  0022C2  A051               	btfss	_flags^0,0,c
  2396  0022C4  EF66  F011         	goto	u3521
  2397  0022C8  EF68  F011         	goto	u3520
  2398  0022CC                     u3521:
  2399  0022CC  EF72  F011         	goto	l3097
  2400  0022D0                     u3520:
  2401  0022D0                     
  2402                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2403  0022D0  C017  F00E         	movff	pad@buf,fputs@s
  2404  0022D4  C018  F00F         	movff	pad@buf+1,fputs@s+1
  2405  0022D8  C015  F010         	movff	pad@fp,fputs@fp
  2406  0022DC  C016  F011         	movff	pad@fp+1,fputs@fp+1
  2407  0022E0  ECD4  F013         	call	_fputs	;wreg free
  2408  0022E4                     l3097:
  2409                           
  2410                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2411  0022E4  BE1A               	btfsc	(pad@p+1)^0,7,c
  2412  0022E6  EF77  F011         	goto	u3531
  2413  0022EA  EF79  F011         	goto	u3530
  2414  0022EE                     u3531:
  2415  0022EE  EF7F  F011         	goto	l3101
  2416  0022F2                     u3530:
  2417  0022F2  C019  F01E         	movff	pad@p,pad@w
  2418  0022F6  C01A  F01F         	movff	pad@p+1,pad@w+1
  2419  0022FA  EF83  F011         	goto	l1035
  2420  0022FE                     l3101:
  2421  0022FE  0E00               	movlw	0
  2422  002300  6E1F               	movwf	(pad@w+1)^0,c
  2423  002302  0E00               	movlw	0
  2424  002304  6E1E               	movwf	pad@w^0,c
  2425  002306                     l1035:
  2426                           
  2427                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2428  002306  0E00               	movlw	0
  2429  002308  6E1D               	movwf	(pad@i+1)^0,c
  2430  00230A  0E00               	movlw	0
  2431  00230C  6E1C               	movwf	pad@i^0,c
  2432                           
  2433                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2434  00230E  EF95  F011         	goto	l3107
  2435  002312                     l3103:
  2436                           
  2437                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2438  002312  0E00               	movlw	0
  2439  002314  6E06               	movwf	(fputc@c+1)^0,c
  2440  002316  0E20               	movlw	32
  2441  002318  6E05               	movwf	fputc@c^0,c
  2442  00231A  C015  F007         	movff	pad@fp,fputc@fp
  2443  00231E  C016  F008         	movff	pad@fp+1,fputc@fp+1
  2444  002322  ECD3  F00F         	call	_fputc	;wreg free
  2445  002326                     
  2446                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2447  002326  4A1C               	infsnz	pad@i^0,f,c
  2448  002328  2A1D               	incf	(pad@i+1)^0,f,c
  2449  00232A                     l3107:
  2450                           
  2451                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2452  00232A  501E               	movf	pad@w^0,w,c
  2453  00232C  5C1C               	subwf	pad@i^0,w,c
  2454  00232E  501D               	movf	(pad@i+1)^0,w,c
  2455  002330  0A80               	xorlw	128
  2456  002332  6E1B               	movwf	??_pad^0,c
  2457  002334  501F               	movf	(pad@w+1)^0,w,c
  2458  002336  0A80               	xorlw	128
  2459  002338  581B               	subwfb	??_pad^0,w,c
  2460  00233A  A0D8               	btfss	status,0,c
  2461  00233C  EFA2  F011         	goto	u3541
  2462  002340  EFA4  F011         	goto	u3540
  2463  002344                     u3541:
  2464  002344  EF89  F011         	goto	l3103
  2465  002348                     u3540:
  2466  002348                     
  2467                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2468  002348  B051               	btfsc	_flags^0,0,c
  2469  00234A  EFA9  F011         	goto	u3551
  2470  00234E  EFAB  F011         	goto	u3550
  2471  002352                     u3551:
  2472  002352  EFB5  F011         	goto	l3111
  2473  002356                     u3550:
  2474  002356                     
  2475                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2476  002356  C017  F00E         	movff	pad@buf,fputs@s
  2477  00235A  C018  F00F         	movff	pad@buf+1,fputs@s+1
  2478  00235E  C015  F010         	movff	pad@fp,fputs@fp
  2479  002362  C016  F011         	movff	pad@fp+1,fputs@fp+1
  2480  002366  ECD4  F013         	call	_fputs	;wreg free
  2481  00236A                     l3111:
  2482                           
  2483                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2484  00236A  C017  F005         	movff	pad@buf,strlen@s
  2485  00236E  C018  F006         	movff	pad@buf+1,strlen@s+1
  2486  002372  EC53  F014         	call	_strlen	;wreg free
  2487  002376  501E               	movf	pad@w^0,w,c
  2488  002378  2405               	addwf	?_strlen^0,w,c
  2489  00237A  6E15               	movwf	?_pad^0,c
  2490  00237C  501F               	movf	(pad@w+1)^0,w,c
  2491  00237E  2006               	addwfc	(?_strlen+1)^0,w,c
  2492  002380  6E16               	movwf	(?_pad+1)^0,c
  2493  002382  0012               	return		;funcret
  2494  002384                     __end_of_pad:
  2495                           	callstack 0
  2496                           
  2497 ;; *************** function _strlen *****************
  2498 ;; Defined at:
  2499 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  2500 ;; Parameters:    Size  Location     Type
  2501 ;;  s               2    4[COMRAM] PTR const unsigned char 
  2502 ;;		 -> dbuf(32), 
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;  a               2    6[COMRAM] PTR const unsigned char 
  2505 ;;		 -> dbuf(32), 
  2506 ;; Return value:  Size  Location     Type
  2507 ;;                  2    4[COMRAM] unsigned int 
  2508 ;; Registers used:
  2509 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2515 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2516 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2518 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2519 ;;Total ram usage:        4 bytes
  2520 ;; Hardware stack levels used: 1
  2521 ;; Hardware stack levels required when called: 2
  2522 ;; This function calls:
  2523 ;;		Nothing
  2524 ;; This function is called by:
  2525 ;;		_pad
  2526 ;; This function uses a non-reentrant model
  2527 ;;
  2528                           
  2529                           	psect	text7
  2530  0028A6                     __ptext7:
  2531                           	callstack 0
  2532  0028A6                     _strlen:
  2533                           	callstack 22
  2534  0028A6  C005  F007         	movff	strlen@s,strlen@a
  2535  0028AA  C006  F008         	movff	strlen@s+1,strlen@a+1
  2536  0028AE  EF5B  F014         	goto	l2995
  2537  0028B2                     l2993:
  2538  0028B2  4A05               	infsnz	strlen@s^0,f,c
  2539  0028B4  2A06               	incf	(strlen@s+1)^0,f,c
  2540  0028B6                     l2995:
  2541  0028B6  C005  FFD9         	movff	strlen@s,fsr2l
  2542  0028BA  C006  FFDA         	movff	strlen@s+1,fsr2h
  2543  0028BE  50DF               	movf	indf2,w,c
  2544  0028C0  A4D8               	btfss	status,2,c
  2545  0028C2  EF65  F014         	goto	u3381
  2546  0028C6  EF67  F014         	goto	u3380
  2547  0028CA                     u3381:
  2548  0028CA  EF59  F014         	goto	l2993
  2549  0028CE                     u3380:
  2550  0028CE  5007               	movf	strlen@a^0,w,c
  2551  0028D0  5C05               	subwf	strlen@s^0,w,c
  2552  0028D2  6E05               	movwf	?_strlen^0,c
  2553  0028D4  5008               	movf	(strlen@a+1)^0,w,c
  2554  0028D6  5806               	subwfb	(strlen@s+1)^0,w,c
  2555  0028D8  6E06               	movwf	(?_strlen+1)^0,c
  2556  0028DA  0012               	return		;funcret
  2557  0028DC                     __end_of_strlen:
  2558                           	callstack 0
  2559                           
  2560 ;; *************** function _fputs *****************
  2561 ;; Defined at:
  2562 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;  s               2   13[COMRAM] PTR const unsigned char 
  2565 ;;		 -> dbuf(32), 
  2566 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  2567 ;;		 -> sprintf@f(6), 
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;  i               2   18[COMRAM] int 
  2570 ;;  c               1   17[COMRAM] unsigned char 
  2571 ;; Return value:  Size  Location     Type
  2572 ;;                  2   13[COMRAM] int 
  2573 ;; Registers used:
  2574 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2580 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2581 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2583 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2584 ;;Total ram usage:        7 bytes
  2585 ;; Hardware stack levels used: 1
  2586 ;; Hardware stack levels required when called: 4
  2587 ;; This function calls:
  2588 ;;		_fputc
  2589 ;; This function is called by:
  2590 ;;		_pad
  2591 ;; This function uses a non-reentrant model
  2592 ;;
  2593                           
  2594                           	psect	text8
  2595  0027A8                     __ptext8:
  2596                           	callstack 0
  2597  0027A8                     _fputs:
  2598                           	callstack 20
  2599  0027A8  0E00               	movlw	0
  2600  0027AA  6E14               	movwf	(fputs@i+1)^0,c
  2601  0027AC  0E00               	movlw	0
  2602  0027AE  6E13               	movwf	fputs@i^0,c
  2603  0027B0  EFE5  F013         	goto	l2989
  2604  0027B4                     l2985:
  2605  0027B4  C012  F005         	movff	fputs@c,fputc@c
  2606  0027B8  6A06               	clrf	(fputc@c+1)^0,c
  2607  0027BA  C010  F007         	movff	fputs@fp,fputc@fp
  2608  0027BE  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  2609  0027C2  ECD3  F00F         	call	_fputc	;wreg free
  2610  0027C6  4A13               	infsnz	fputs@i^0,f,c
  2611  0027C8  2A14               	incf	(fputs@i+1)^0,f,c
  2612  0027CA                     l2989:
  2613  0027CA  5013               	movf	fputs@i^0,w,c
  2614  0027CC  240E               	addwf	fputs@s^0,w,c
  2615  0027CE  6ED9               	movwf	fsr2l,c
  2616  0027D0  5014               	movf	(fputs@i+1)^0,w,c
  2617  0027D2  200F               	addwfc	(fputs@s+1)^0,w,c
  2618  0027D4  6EDA               	movwf	fsr2h,c
  2619  0027D6  50DF               	movf	indf2,w,c
  2620  0027D8  6E12               	movwf	fputs@c^0,c
  2621  0027DA  5012               	movf	fputs@c^0,w,c
  2622  0027DC  A4D8               	btfss	status,2,c
  2623  0027DE  EFF3  F013         	goto	u3371
  2624  0027E2  EFF5  F013         	goto	u3370
  2625  0027E6                     u3371:
  2626  0027E6  EFDA  F013         	goto	l2985
  2627  0027EA                     u3370:
  2628  0027EA  0012               	return		;funcret
  2629  0027EC                     __end_of_fputs:
  2630                           	callstack 0
  2631                           
  2632 ;; *************** function _fputc *****************
  2633 ;; Defined at:
  2634 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;  c               2    4[COMRAM] int 
  2637 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  2638 ;;		 -> sprintf@f(6), 
  2639 ;; Auto vars:     Size  Location     Type
  2640 ;;		None
  2641 ;; Return value:  Size  Location     Type
  2642 ;;                  2    4[COMRAM] int 
  2643 ;; Registers used:
  2644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2645 ;; Tracked objects:
  2646 ;;		On entry : 0/0
  2647 ;;		On exit  : 0/0
  2648 ;;		Unchanged: 0/0
  2649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2650 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2652 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2653 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2654 ;;Total ram usage:        9 bytes
  2655 ;; Hardware stack levels used: 1
  2656 ;; Hardware stack levels required when called: 3
  2657 ;; This function calls:
  2658 ;;		_putch
  2659 ;; This function is called by:
  2660 ;;		_pad
  2661 ;;		_vfpfcnvrt
  2662 ;;		_fputs
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           	psect	text9
  2667  001FA6                     __ptext9:
  2668                           	callstack 0
  2669  001FA6                     _fputc:
  2670                           	callstack 23
  2671  001FA6  5007               	movf	fputc@fp^0,w,c
  2672  001FA8  1008               	iorwf	(fputc@fp+1)^0,w,c
  2673  001FAA  B4D8               	btfsc	status,2,c
  2674  001FAC  EFDA  F00F         	goto	u3331
  2675  001FB0  EFDC  F00F         	goto	u3330
  2676  001FB4                     u3331:
  2677  001FB4  EFE5  F00F         	goto	l2973
  2678  001FB8                     u3330:
  2679  001FB8  5007               	movf	fputc@fp^0,w,c
  2680  001FBA  1008               	iorwf	(fputc@fp+1)^0,w,c
  2681  001FBC  A4D8               	btfss	status,2,c
  2682  001FBE  EFE3  F00F         	goto	u3341
  2683  001FC2  EFE5  F00F         	goto	u3340
  2684  001FC6                     u3341:
  2685  001FC6  EFEA  F00F         	goto	l2975
  2686  001FCA                     u3340:
  2687  001FCA                     l2973:
  2688  001FCA  5005               	movf	fputc@c^0,w,c
  2689  001FCC  EC24  F015         	call	_putch
  2690  001FD0  EF37  F010         	goto	l1166
  2691  001FD4                     l2975:
  2692  001FD4  EE20 F004          	lfsr	2,4
  2693  001FD8  5007               	movf	fputc@fp^0,w,c
  2694  001FDA  26D9               	addwf	fsr2l,f,c
  2695  001FDC  5008               	movf	(fputc@fp+1)^0,w,c
  2696  001FDE  22DA               	addwfc	fsr2h,f,c
  2697  001FE0  50DE               	movf	postinc2,w,c
  2698  001FE2  10DE               	iorwf	postinc2,w,c
  2699  001FE4  B4D8               	btfsc	status,2,c
  2700  001FE6  EFF7  F00F         	goto	u3351
  2701  001FEA  EFF9  F00F         	goto	u3350
  2702  001FEE                     u3351:
  2703  001FEE  EF14  F010         	goto	l2979
  2704  001FF2                     u3350:
  2705  001FF2  EE20 F004          	lfsr	2,4
  2706  001FF6  5007               	movf	fputc@fp^0,w,c
  2707  001FF8  26D9               	addwf	fsr2l,f,c
  2708  001FFA  5008               	movf	(fputc@fp+1)^0,w,c
  2709  001FFC  22DA               	addwfc	fsr2h,f,c
  2710  001FFE  EE10 F002          	lfsr	1,2
  2711  002002  5007               	movf	fputc@fp^0,w,c
  2712  002004  26E1               	addwf	fsr1l,f,c
  2713  002006  5008               	movf	(fputc@fp+1)^0,w,c
  2714  002008  22E2               	addwfc	fsr1h,f,c
  2715  00200A  50DE               	movf	postinc2,w,c
  2716  00200C  5CE6               	subwf	postinc1,w,c
  2717  00200E  50E6               	movf	postinc1,w,c
  2718  002010  0A80               	xorlw	128
  2719  002012  6E0D               	movwf	(??_fputc+4)^0,c
  2720  002014  50DE               	movf	postinc2,w,c
  2721  002016  0A80               	xorlw	128
  2722  002018  580D               	subwfb	(??_fputc+4)^0,w,c
  2723  00201A  B0D8               	btfsc	status,0,c
  2724  00201C  EF12  F010         	goto	u3361
  2725  002020  EF14  F010         	goto	u3360
  2726  002024                     u3361:
  2727  002024  EF37  F010         	goto	l1166
  2728  002028                     u3360:
  2729  002028                     l2979:
  2730  002028  EE20 F002          	lfsr	2,2
  2731  00202C  5007               	movf	fputc@fp^0,w,c
  2732  00202E  26D9               	addwf	fsr2l,f,c
  2733  002030  5008               	movf	(fputc@fp+1)^0,w,c
  2734  002032  22DA               	addwfc	fsr2h,f,c
  2735  002034  CFDE F009          	movff	postinc2,??_fputc
  2736  002038  CFDD F00A          	movff	postdec2,??_fputc+1
  2737  00203C  C007  FFD9         	movff	fputc@fp,fsr2l
  2738  002040  C008  FFDA         	movff	fputc@fp+1,fsr2h
  2739  002044  CFDE F00B          	movff	postinc2,??_fputc+2
  2740  002048  CFDD F00C          	movff	postdec2,??_fputc+3
  2741  00204C  5009               	movf	??_fputc^0,w,c
  2742  00204E  240B               	addwf	(??_fputc+2)^0,w,c
  2743  002050  6ED9               	movwf	fsr2l,c
  2744  002052  500A               	movf	(??_fputc+1)^0,w,c
  2745  002054  200C               	addwfc	(??_fputc+3)^0,w,c
  2746  002056  6EDA               	movwf	fsr2h,c
  2747  002058  C005  FFDF         	movff	fputc@c,indf2
  2748  00205C  EE20 F002          	lfsr	2,2
  2749  002060  5007               	movf	fputc@fp^0,w,c
  2750  002062  26D9               	addwf	fsr2l,f,c
  2751  002064  5008               	movf	(fputc@fp+1)^0,w,c
  2752  002066  22DA               	addwfc	fsr2h,f,c
  2753  002068  2ADE               	incf	postinc2,f,c
  2754  00206A  0E00               	movlw	0
  2755  00206C  22DD               	addwfc	postdec2,f,c
  2756  00206E                     l1166:
  2757  00206E  0012               	return		;funcret
  2758  002070                     __end_of_fputc:
  2759                           	callstack 0
  2760                           
  2761 ;; *************** function _putch *****************
  2762 ;; Defined at:
  2763 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;  c               1    wreg     unsigned char 
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;  c               1    0[COMRAM] unsigned char 
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  1    wreg      void 
  2770 ;; Registers used:
  2771 ;;		wreg
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2781 ;;Total ram usage:        0 bytes
  2782 ;; Hardware stack levels used: 1
  2783 ;; Hardware stack levels required when called: 2
  2784 ;; This function calls:
  2785 ;;		Nothing
  2786 ;; This function is called by:
  2787 ;;		_fputc
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791                           	psect	text10
  2792  002A48                     __ptext10:
  2793                           	callstack 0
  2794  002A48                     _putch:
  2795                           	callstack 23
  2796  002A48  0012               	return		;funcret
  2797  002A4A                     __end_of_putch:
  2798                           	callstack 0
  2799                           
  2800 ;; *************** function _abs *****************
  2801 ;; Defined at:
  2802 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  2803 ;; Parameters:    Size  Location     Type
  2804 ;;  a               2   22[COMRAM] int 
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;		None
  2807 ;; Return value:  Size  Location     Type
  2808 ;;                  2   22[COMRAM] int 
  2809 ;; Registers used:
  2810 ;;		wreg, status,2, status,0
  2811 ;; Tracked objects:
  2812 ;;		On entry : 0/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2816 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2818 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2819 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2820 ;;Total ram usage:        4 bytes
  2821 ;; Hardware stack levels used: 1
  2822 ;; Hardware stack levels required when called: 2
  2823 ;; This function calls:
  2824 ;;		Nothing
  2825 ;; This function is called by:
  2826 ;;		_dtoa
  2827 ;; This function uses a non-reentrant model
  2828 ;;
  2829                           
  2830                           	psect	text11
  2831  00282E                     __ptext11:
  2832                           	callstack 0
  2833  00282E                     _abs:
  2834                           	callstack 23
  2835  00282E  BE18               	btfsc	(abs@a+1)^0,7,c
  2836  002830  EF24  F014         	goto	u3560
  2837  002834  5018               	movf	(abs@a+1)^0,w,c
  2838  002836  E106               	bnz	u3561
  2839  002838  0417               	decf	abs@a^0,w,c
  2840  00283A  B0D8               	btfsc	status,0,c
  2841  00283C  EF22  F014         	goto	u3561
  2842  002840  EF24  F014         	goto	u3560
  2843  002844                     u3561:
  2844  002844  EF32  F014         	goto	l1106
  2845  002848                     u3560:
  2846  002848  C017  F019         	movff	abs@a,??_abs
  2847  00284C  C018  F01A         	movff	abs@a+1,??_abs+1
  2848  002850  1E19               	comf	??_abs^0,f,c
  2849  002852  1E1A               	comf	(??_abs+1)^0,f,c
  2850  002854  4A19               	infsnz	??_abs^0,f,c
  2851  002856  2A1A               	incf	(??_abs+1)^0,f,c
  2852  002858  C019  F017         	movff	??_abs,?_abs
  2853  00285C  C01A  F018         	movff	??_abs+1,?_abs+1
  2854  002860  EF36  F014         	goto	l1109
  2855  002864                     l1106:
  2856  002864  C017  F017         	movff	abs@a,?_abs
  2857  002868  C018  F018         	movff	abs@a+1,?_abs+1
  2858  00286C                     l1109:
  2859  00286C  0012               	return		;funcret
  2860  00286E                     __end_of_abs:
  2861                           	callstack 0
  2862                           
  2863 ;; *************** function ___aomod *****************
  2864 ;; Defined at:
  2865 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;  dividend        8    4[COMRAM] long long 
  2868 ;;  divisor         8   12[COMRAM] long long 
  2869 ;; Auto vars:     Size  Location     Type
  2870 ;;  sign            1   21[COMRAM] unsigned char 
  2871 ;;  counter         1   20[COMRAM] unsigned char 
  2872 ;; Return value:  Size  Location     Type
  2873 ;;                  8    4[COMRAM] long long 
  2874 ;; Registers used:
  2875 ;;		wreg, status,2, status,0
  2876 ;; Tracked objects:
  2877 ;;		On entry : 0/0
  2878 ;;		On exit  : 0/0
  2879 ;;		Unchanged: 0/0
  2880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2881 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2882 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2884 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2885 ;;Total ram usage:       18 bytes
  2886 ;; Hardware stack levels used: 1
  2887 ;; Hardware stack levels required when called: 2
  2888 ;; This function calls:
  2889 ;;		Nothing
  2890 ;; This function is called by:
  2891 ;;		_dtoa
  2892 ;; This function uses a non-reentrant model
  2893 ;;
  2894                           
  2895                           	psect	text12
  2896  001B06                     __ptext12:
  2897                           	callstack 0
  2898  001B06                     ___aomod:
  2899                           	callstack 23
  2900  001B06  0E00               	movlw	0
  2901  001B08  6E16               	movwf	___aomod@sign^0,c
  2902  001B0A  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  2903  001B0C  EF8C  F00D         	goto	u3460
  2904  001B10  EF8A  F00D         	goto	u3461
  2905  001B14                     u3461:
  2906  001B14  EF9E  F00D         	goto	l3065
  2907  001B18                     u3460:
  2908  001B18  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2909  001B1A  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2910  001B1C  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2911  001B1E  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2912  001B20  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2913  001B22  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2914  001B24  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2915  001B26  6C05               	negf	___aomod@dividend^0,c
  2916  001B28  0E00               	movlw	0
  2917  001B2A  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2918  001B2C  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2919  001B2E  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2920  001B30  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2921  001B32  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2922  001B34  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2923  001B36  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2924  001B38  0E01               	movlw	1
  2925  001B3A  6E16               	movwf	___aomod@sign^0,c
  2926  001B3C                     l3065:
  2927  001B3C  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  2928  001B3E  EFA5  F00D         	goto	u3470
  2929  001B42  EFA3  F00D         	goto	u3471
  2930  001B46                     u3471:
  2931  001B46  EFB5  F00D         	goto	l3069
  2932  001B4A                     u3470:
  2933  001B4A  1E14               	comf	(___aomod@divisor+7)^0,f,c
  2934  001B4C  1E13               	comf	(___aomod@divisor+6)^0,f,c
  2935  001B4E  1E12               	comf	(___aomod@divisor+5)^0,f,c
  2936  001B50  1E11               	comf	(___aomod@divisor+4)^0,f,c
  2937  001B52  1E10               	comf	(___aomod@divisor+3)^0,f,c
  2938  001B54  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  2939  001B56  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  2940  001B58  6C0D               	negf	___aomod@divisor^0,c
  2941  001B5A  0E00               	movlw	0
  2942  001B5C  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  2943  001B5E  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  2944  001B60  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  2945  001B62  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  2946  001B64  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  2947  001B66  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  2948  001B68  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  2949  001B6A                     l3069:
  2950  001B6A  500D               	movf	___aomod@divisor^0,w,c
  2951  001B6C  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  2952  001B6E  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  2953  001B70  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  2954  001B72  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  2955  001B74  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  2956  001B76  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  2957  001B78  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  2958  001B7A  B4D8               	btfsc	status,2,c
  2959  001B7C  EFC2  F00D         	goto	u3481
  2960  001B80  EFC4  F00D         	goto	u3480
  2961  001B84                     u3481:
  2962  001B84  EF0C  F00E         	goto	l3085
  2963  001B88                     u3480:
  2964  001B88  0E01               	movlw	1
  2965  001B8A  6E15               	movwf	___aomod@counter^0,c
  2966  001B8C  EFD2  F00D         	goto	l3075
  2967  001B90                     l3073:
  2968  001B90  90D8               	bcf	status,0,c
  2969  001B92  360D               	rlcf	___aomod@divisor^0,f,c
  2970  001B94  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  2971  001B96  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  2972  001B98  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  2973  001B9A  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  2974  001B9C  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  2975  001B9E  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  2976  001BA0  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  2977  001BA2  2A15               	incf	___aomod@counter^0,f,c
  2978  001BA4                     l3075:
  2979  001BA4  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  2980  001BA6  EFD7  F00D         	goto	u3491
  2981  001BAA  EFD9  F00D         	goto	u3490
  2982  001BAE                     u3491:
  2983  001BAE  EFC8  F00D         	goto	l3073
  2984  001BB2                     u3490:
  2985  001BB2                     l3077:
  2986  001BB2  500D               	movf	___aomod@divisor^0,w,c
  2987  001BB4  5C05               	subwf	___aomod@dividend^0,w,c
  2988  001BB6  500E               	movf	(___aomod@divisor+1)^0,w,c
  2989  001BB8  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  2990  001BBA  500F               	movf	(___aomod@divisor+2)^0,w,c
  2991  001BBC  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  2992  001BBE  5010               	movf	(___aomod@divisor+3)^0,w,c
  2993  001BC0  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  2994  001BC2  5011               	movf	(___aomod@divisor+4)^0,w,c
  2995  001BC4  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  2996  001BC6  5012               	movf	(___aomod@divisor+5)^0,w,c
  2997  001BC8  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  2998  001BCA  5013               	movf	(___aomod@divisor+6)^0,w,c
  2999  001BCC  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  3000  001BCE  5014               	movf	(___aomod@divisor+7)^0,w,c
  3001  001BD0  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  3002  001BD2  A0D8               	btfss	status,0,c
  3003  001BD4  EFEE  F00D         	goto	u3501
  3004  001BD8  EFF0  F00D         	goto	u3500
  3005  001BDC                     u3501:
  3006  001BDC  EF00  F00E         	goto	l3081
  3007  001BE0                     u3500:
  3008  001BE0  500D               	movf	___aomod@divisor^0,w,c
  3009  001BE2  5E05               	subwf	___aomod@dividend^0,f,c
  3010  001BE4  500E               	movf	(___aomod@divisor+1)^0,w,c
  3011  001BE6  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  3012  001BE8  500F               	movf	(___aomod@divisor+2)^0,w,c
  3013  001BEA  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  3014  001BEC  5010               	movf	(___aomod@divisor+3)^0,w,c
  3015  001BEE  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  3016  001BF0  5011               	movf	(___aomod@divisor+4)^0,w,c
  3017  001BF2  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  3018  001BF4  5012               	movf	(___aomod@divisor+5)^0,w,c
  3019  001BF6  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  3020  001BF8  5013               	movf	(___aomod@divisor+6)^0,w,c
  3021  001BFA  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  3022  001BFC  5014               	movf	(___aomod@divisor+7)^0,w,c
  3023  001BFE  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  3024  001C00                     l3081:
  3025  001C00  90D8               	bcf	status,0,c
  3026  001C02  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  3027  001C04  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  3028  001C06  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  3029  001C08  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  3030  001C0A  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  3031  001C0C  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  3032  001C0E  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  3033  001C10  320D               	rrcf	___aomod@divisor^0,f,c
  3034  001C12  2E15               	decfsz	___aomod@counter^0,f,c
  3035  001C14  EFD9  F00D         	goto	l3077
  3036  001C18                     l3085:
  3037  001C18  5016               	movf	___aomod@sign^0,w,c
  3038  001C1A  B4D8               	btfsc	status,2,c
  3039  001C1C  EF12  F00E         	goto	u3511
  3040  001C20  EF14  F00E         	goto	u3510
  3041  001C24                     u3511:
  3042  001C24  EF24  F00E         	goto	l3089
  3043  001C28                     u3510:
  3044  001C28  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  3045  001C2A  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  3046  001C2C  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  3047  001C2E  1E09               	comf	(___aomod@dividend+4)^0,f,c
  3048  001C30  1E08               	comf	(___aomod@dividend+3)^0,f,c
  3049  001C32  1E07               	comf	(___aomod@dividend+2)^0,f,c
  3050  001C34  1E06               	comf	(___aomod@dividend+1)^0,f,c
  3051  001C36  6C05               	negf	___aomod@dividend^0,c
  3052  001C38  0E00               	movlw	0
  3053  001C3A  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  3054  001C3C  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  3055  001C3E  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  3056  001C40  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  3057  001C42  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  3058  001C44  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  3059  001C46  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  3060  001C48                     l3089:
  3061  001C48  C005  F005         	movff	___aomod@dividend,?___aomod
  3062  001C4C  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  3063  001C50  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  3064  001C54  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  3065  001C58  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  3066  001C5C  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  3067  001C60  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  3068  001C64  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  3069  001C68  0012               	return		;funcret
  3070  001C6A                     __end_of___aomod:
  3071                           	callstack 0
  3072                           
  3073 ;; *************** function ___aodiv *****************
  3074 ;; Defined at:
  3075 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  3076 ;; Parameters:    Size  Location     Type
  3077 ;;  dividend        8    4[COMRAM] long long 
  3078 ;;  divisor         8   12[COMRAM] long long 
  3079 ;; Auto vars:     Size  Location     Type
  3080 ;;  quotient        8   22[COMRAM] long long 
  3081 ;;  sign            1   21[COMRAM] unsigned char 
  3082 ;;  counter         1   20[COMRAM] unsigned char 
  3083 ;; Return value:  Size  Location     Type
  3084 ;;                  8    4[COMRAM] long long 
  3085 ;; Registers used:
  3086 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3087 ;; Tracked objects:
  3088 ;;		On entry : 0/0
  3089 ;;		On exit  : 0/0
  3090 ;;		Unchanged: 0/0
  3091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3092 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3093 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3095 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3096 ;;Total ram usage:       26 bytes
  3097 ;; Hardware stack levels used: 1
  3098 ;; Hardware stack levels required when called: 2
  3099 ;; This function calls:
  3100 ;;		Nothing
  3101 ;; This function is called by:
  3102 ;;		_dtoa
  3103 ;; This function uses a non-reentrant model
  3104 ;;
  3105                           
  3106                           	psect	text13
  3107  00197E                     __ptext13:
  3108                           	callstack 0
  3109  00197E                     ___aodiv:
  3110                           	callstack 23
  3111  00197E  0E00               	movlw	0
  3112  001980  6E16               	movwf	___aodiv@sign^0,c
  3113  001982  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  3114  001984  EFC8  F00C         	goto	u3390
  3115  001988  EFC6  F00C         	goto	u3391
  3116  00198C                     u3391:
  3117  00198C  EFDA  F00C         	goto	l3021
  3118  001990                     u3390:
  3119  001990  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  3120  001992  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  3121  001994  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  3122  001996  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  3123  001998  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  3124  00199A  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  3125  00199C  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  3126  00199E  6C0D               	negf	___aodiv@divisor^0,c
  3127  0019A0  0E00               	movlw	0
  3128  0019A2  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  3129  0019A4  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  3130  0019A6  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  3131  0019A8  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  3132  0019AA  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  3133  0019AC  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  3134  0019AE  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  3135  0019B0  0E01               	movlw	1
  3136  0019B2  6E16               	movwf	___aodiv@sign^0,c
  3137  0019B4                     l3021:
  3138  0019B4  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  3139  0019B6  EFE1  F00C         	goto	u3400
  3140  0019BA  EFDF  F00C         	goto	u3401
  3141  0019BE                     u3401:
  3142  0019BE  EFF3  F00C         	goto	l3027
  3143  0019C2                     u3400:
  3144  0019C2  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  3145  0019C4  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  3146  0019C6  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  3147  0019C8  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  3148  0019CA  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  3149  0019CC  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  3150  0019CE  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  3151  0019D0  6C05               	negf	___aodiv@dividend^0,c
  3152  0019D2  0E00               	movlw	0
  3153  0019D4  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  3154  0019D6  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  3155  0019D8  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  3156  0019DA  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  3157  0019DC  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  3158  0019DE  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  3159  0019E0  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  3160  0019E2  0E01               	movlw	1
  3161  0019E4  1A16               	xorwf	___aodiv@sign^0,f,c
  3162  0019E6                     l3027:
  3163  0019E6  EE20  F017         	lfsr	2,___aodiv@quotient
  3164  0019EA  0E07               	movlw	7
  3165  0019EC                     u3411:
  3166  0019EC  6ADE               	clrf	postinc2,c
  3167  0019EE  06E8               	decf	wreg,f,c
  3168  0019F0  E2FD               	bc	u3411
  3169  0019F2  500D               	movf	___aodiv@divisor^0,w,c
  3170  0019F4  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  3171  0019F6  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  3172  0019F8  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  3173  0019FA  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  3174  0019FC  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  3175  0019FE  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  3176  001A00  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  3177  001A02  B4D8               	btfsc	status,2,c
  3178  001A04  EF06  F00D         	goto	u3421
  3179  001A08  EF08  F00D         	goto	u3420
  3180  001A0C                     u3421:
  3181  001A0C  EF5A  F00D         	goto	l3049
  3182  001A10                     u3420:
  3183  001A10  0E01               	movlw	1
  3184  001A12  6E15               	movwf	___aodiv@counter^0,c
  3185  001A14  EF16  F00D         	goto	l3035
  3186  001A18                     l3033:
  3187  001A18  90D8               	bcf	status,0,c
  3188  001A1A  360D               	rlcf	___aodiv@divisor^0,f,c
  3189  001A1C  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  3190  001A1E  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  3191  001A20  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  3192  001A22  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  3193  001A24  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  3194  001A26  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  3195  001A28  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  3196  001A2A  2A15               	incf	___aodiv@counter^0,f,c
  3197  001A2C                     l3035:
  3198  001A2C  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  3199  001A2E  EF1B  F00D         	goto	u3431
  3200  001A32  EF1D  F00D         	goto	u3430
  3201  001A36                     u3431:
  3202  001A36  EF0C  F00D         	goto	l3033
  3203  001A3A                     u3430:
  3204  001A3A                     l3037:
  3205  001A3A  90D8               	bcf	status,0,c
  3206  001A3C  3617               	rlcf	___aodiv@quotient^0,f,c
  3207  001A3E  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  3208  001A40  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  3209  001A42  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  3210  001A44  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  3211  001A46  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  3212  001A48  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  3213  001A4A  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  3214  001A4C  500D               	movf	___aodiv@divisor^0,w,c
  3215  001A4E  5C05               	subwf	___aodiv@dividend^0,w,c
  3216  001A50  500E               	movf	(___aodiv@divisor+1)^0,w,c
  3217  001A52  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  3218  001A54  500F               	movf	(___aodiv@divisor+2)^0,w,c
  3219  001A56  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  3220  001A58  5010               	movf	(___aodiv@divisor+3)^0,w,c
  3221  001A5A  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  3222  001A5C  5011               	movf	(___aodiv@divisor+4)^0,w,c
  3223  001A5E  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  3224  001A60  5012               	movf	(___aodiv@divisor+5)^0,w,c
  3225  001A62  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  3226  001A64  5013               	movf	(___aodiv@divisor+6)^0,w,c
  3227  001A66  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  3228  001A68  5014               	movf	(___aodiv@divisor+7)^0,w,c
  3229  001A6A  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  3230  001A6C  A0D8               	btfss	status,0,c
  3231  001A6E  EF3B  F00D         	goto	u3441
  3232  001A72  EF3D  F00D         	goto	u3440
  3233  001A76                     u3441:
  3234  001A76  EF4E  F00D         	goto	l3045
  3235  001A7A                     u3440:
  3236  001A7A  500D               	movf	___aodiv@divisor^0,w,c
  3237  001A7C  5E05               	subwf	___aodiv@dividend^0,f,c
  3238  001A7E  500E               	movf	(___aodiv@divisor+1)^0,w,c
  3239  001A80  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  3240  001A82  500F               	movf	(___aodiv@divisor+2)^0,w,c
  3241  001A84  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  3242  001A86  5010               	movf	(___aodiv@divisor+3)^0,w,c
  3243  001A88  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  3244  001A8A  5011               	movf	(___aodiv@divisor+4)^0,w,c
  3245  001A8C  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  3246  001A8E  5012               	movf	(___aodiv@divisor+5)^0,w,c
  3247  001A90  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  3248  001A92  5013               	movf	(___aodiv@divisor+6)^0,w,c
  3249  001A94  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  3250  001A96  5014               	movf	(___aodiv@divisor+7)^0,w,c
  3251  001A98  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  3252  001A9A  8017               	bsf	___aodiv@quotient^0,0,c
  3253  001A9C                     l3045:
  3254  001A9C  90D8               	bcf	status,0,c
  3255  001A9E  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  3256  001AA0  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  3257  001AA2  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  3258  001AA4  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  3259  001AA6  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  3260  001AA8  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  3261  001AAA  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  3262  001AAC  320D               	rrcf	___aodiv@divisor^0,f,c
  3263  001AAE  2E15               	decfsz	___aodiv@counter^0,f,c
  3264  001AB0  EF1D  F00D         	goto	l3037
  3265  001AB4                     l3049:
  3266  001AB4  5016               	movf	___aodiv@sign^0,w,c
  3267  001AB6  B4D8               	btfsc	status,2,c
  3268  001AB8  EF60  F00D         	goto	u3451
  3269  001ABC  EF62  F00D         	goto	u3450
  3270  001AC0                     u3451:
  3271  001AC0  EF72  F00D         	goto	l3053
  3272  001AC4                     u3450:
  3273  001AC4  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  3274  001AC6  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  3275  001AC8  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  3276  001ACA  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  3277  001ACC  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  3278  001ACE  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  3279  001AD0  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  3280  001AD2  6C17               	negf	___aodiv@quotient^0,c
  3281  001AD4  0E00               	movlw	0
  3282  001AD6  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  3283  001AD8  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  3284  001ADA  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  3285  001ADC  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  3286  001ADE  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  3287  001AE0  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  3288  001AE2  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  3289  001AE4                     l3053:
  3290  001AE4  C017  F005         	movff	___aodiv@quotient,?___aodiv
  3291  001AE8  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  3292  001AEC  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  3293  001AF0  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  3294  001AF4  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  3295  001AF8  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  3296  001AFC  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  3297  001B00  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  3298  001B04  0012               	return		;funcret
  3299  001B06                     __end_of___aodiv:
  3300                           	callstack 0
  3301                           
  3302 ;; *************** function _atoi *****************
  3303 ;; Defined at:
  3304 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  3305 ;; Parameters:    Size  Location     Type
  3306 ;;  s               2   11[COMRAM] PTR const unsigned char 
  3307 ;;		 -> STR_3(15), STR_2(15), STR_1(15), 
  3308 ;; Auto vars:     Size  Location     Type
  3309 ;;  n               2   24[COMRAM] int 
  3310 ;;  neg             2   17[COMRAM] int 
  3311 ;; Return value:  Size  Location     Type
  3312 ;;                  2   11[COMRAM] int 
  3313 ;; Registers used:
  3314 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3315 ;; Tracked objects:
  3316 ;;		On entry : 0/0
  3317 ;;		On exit  : 0/0
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3320 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3321 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3322 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3323 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3324 ;;Total ram usage:       15 bytes
  3325 ;; Hardware stack levels used: 1
  3326 ;; Hardware stack levels required when called: 3
  3327 ;; This function calls:
  3328 ;;		___wmul
  3329 ;;		_isdigit
  3330 ;;		_isspace
  3331 ;; This function is called by:
  3332 ;;		_vfpfcnvrt
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           	psect	text14
  3337  00163E                     __ptext14:
  3338                           	callstack 0
  3339  00163E                     _atoi:
  3340                           	callstack 23
  3341  00163E  0E00               	movlw	0
  3342  001640  6E1A               	movwf	(atoi@n+1)^0,c
  3343  001642  0E00               	movlw	0
  3344  001644  6E19               	movwf	atoi@n^0,c
  3345  001646  0E00               	movlw	0
  3346  001648  6E13               	movwf	(atoi@neg+1)^0,c
  3347  00164A  0E00               	movlw	0
  3348  00164C  6E12               	movwf	atoi@neg^0,c
  3349  00164E  EF2B  F00B         	goto	l3221
  3350  001652                     l3219:
  3351  001652  4A0C               	infsnz	atoi@s^0,f,c
  3352  001654  2A0D               	incf	(atoi@s+1)^0,f,c
  3353  001656                     l3221:
  3354  001656  0E01               	movlw	1
  3355  001658  6E18               	movwf	_atoi$2226^0,c
  3356  00165A  C00C  FFF6         	movff	atoi@s,tblptrl
  3357  00165E  C00D  FFF7         	movff	atoi@s+1,tblptrh
  3358  001662                     	if	0	;tblptru may be non-zero
  3359  001662                     	endif
  3360  001662                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3361  001662  0E00               	movlw	low (__mediumconst shr (0+16))
  3362  001664  6EF8               	movwf	tblptru,c
  3363  001666                     	endif
  3364  001666  0008               	tblrd		*
  3365  001668  50F5               	movf	tablat,w,c
  3366  00166A  0A20               	xorlw	32
  3367  00166C  B4D8               	btfsc	status,2,c
  3368  00166E  EF3B  F00B         	goto	u3801
  3369  001672  EF3D  F00B         	goto	u3800
  3370  001676                     u3801:
  3371  001676  EF5C  F00B         	goto	l3229
  3372  00167A                     u3800:
  3373  00167A  0EF7               	movlw	247
  3374  00167C  6E0E               	movwf	??_atoi^0,c
  3375  00167E  0EFF               	movlw	255
  3376  001680  6E0F               	movwf	(??_atoi+1)^0,c
  3377  001682  C00C  FFF6         	movff	atoi@s,tblptrl
  3378  001686  C00D  FFF7         	movff	atoi@s+1,tblptrh
  3379  00168A                     	if	0	;tblptru may be non-zero
  3380  00168A                     	endif
  3381  00168A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3382  00168A  0E00               	movlw	low (__mediumconst shr (0+16))
  3383  00168C  6EF8               	movwf	tblptru,c
  3384  00168E                     	endif
  3385  00168E  0008               	tblrd		*
  3386  001690  50F5               	movf	tablat,w,c
  3387  001692  6E10               	movwf	(??_atoi+2)^0,c
  3388  001694  6A11               	clrf	(??_atoi+3)^0,c
  3389  001696  500E               	movf	??_atoi^0,w,c
  3390  001698  2610               	addwf	(??_atoi+2)^0,f,c
  3391  00169A  500F               	movf	(??_atoi+1)^0,w,c
  3392  00169C  2211               	addwfc	(??_atoi+3)^0,f,c
  3393  00169E  5011               	movf	(??_atoi+3)^0,w,c
  3394  0016A0  E109               	bnz	u3810
  3395  0016A2  0E05               	movlw	5
  3396  0016A4  5C10               	subwf	(??_atoi+2)^0,w,c
  3397  0016A6  A0D8               	btfss	status,0,c
  3398  0016A8  EF58  F00B         	goto	u3811
  3399  0016AC  EF5A  F00B         	goto	u3810
  3400  0016B0                     u3811:
  3401  0016B0  EF5C  F00B         	goto	l3229
  3402  0016B4                     u3810:
  3403  0016B4  0E00               	movlw	0
  3404  0016B6  6E18               	movwf	_atoi$2226^0,c
  3405  0016B8                     l3229:
  3406  0016B8  C018  F014         	movff	_atoi$2226,_atoi$2225
  3407  0016BC  6A15               	clrf	(_atoi$2225+1)^0,c
  3408  0016BE  5014               	movf	_atoi$2225^0,w,c
  3409  0016C0  1015               	iorwf	(_atoi$2225+1)^0,w,c
  3410  0016C2  A4D8               	btfss	status,2,c
  3411  0016C4  EF66  F00B         	goto	u3821
  3412  0016C8  EF68  F00B         	goto	u3820
  3413  0016CC                     u3821:
  3414  0016CC  EF29  F00B         	goto	l3219
  3415  0016D0                     u3820:
  3416  0016D0  EF72  F00B         	goto	l3239
  3417  0016D4                     l3235:
  3418  0016D4  0E00               	movlw	0
  3419  0016D6  6E13               	movwf	(atoi@neg+1)^0,c
  3420  0016D8  0E01               	movlw	1
  3421  0016DA  6E12               	movwf	atoi@neg^0,c
  3422  0016DC                     l3237:
  3423  0016DC  4A0C               	infsnz	atoi@s^0,f,c
  3424  0016DE  2A0D               	incf	(atoi@s+1)^0,f,c
  3425  0016E0  EFAB  F00B         	goto	l3245
  3426  0016E4                     l3239:
  3427  0016E4  C00C  FFF6         	movff	atoi@s,tblptrl
  3428  0016E8  C00D  FFF7         	movff	atoi@s+1,tblptrh
  3429  0016EC                     	if	0	;tblptru may be non-zero
  3430  0016EC                     	endif
  3431  0016EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3432  0016EC  0E00               	movlw	low (__mediumconst shr (0+16))
  3433  0016EE  6EF8               	movwf	tblptru,c
  3434  0016F0                     	endif
  3435  0016F0  0008               	tblrd		*
  3436  0016F2  50F5               	movf	tablat,w,c
  3437  0016F4  6E0E               	movwf	??_atoi^0,c
  3438  0016F6  6A0F               	clrf	(??_atoi+1)^0,c
  3439                           
  3440                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3441                           ; Switch size 1, requested type "simple"
  3442                           ; Number of cases is 1, Range of values is 0 to 0
  3443                           ; switch strategies available:
  3444                           ; Name         Instructions Cycles
  3445                           ; simple_byte            4     3 (average)
  3446                           ;	Chosen strategy is simple_byte
  3447  0016F8  500F               	movf	(??_atoi+1)^0,w,c
  3448  0016FA  0A00               	xorlw	0	; case 0
  3449  0016FC  B4D8               	btfsc	status,2,c
  3450  0016FE  EF83  F00B         	goto	l3887
  3451  001702  EFAB  F00B         	goto	l3245
  3452  001706                     l3887:
  3453                           
  3454                           ; Switch size 1, requested type "simple"
  3455                           ; Number of cases is 2, Range of values is 43 to 45
  3456                           ; switch strategies available:
  3457                           ; Name         Instructions Cycles
  3458                           ; simple_byte            7     4 (average)
  3459                           ;	Chosen strategy is simple_byte
  3460  001706  500E               	movf	??_atoi^0,w,c
  3461  001708  0A2B               	xorlw	43	; case 43
  3462  00170A  B4D8               	btfsc	status,2,c
  3463  00170C  EF6E  F00B         	goto	l3237
  3464  001710  0A06               	xorlw	6	; case 45
  3465  001712  B4D8               	btfsc	status,2,c
  3466  001714  EF6A  F00B         	goto	l3235
  3467  001718  EFAB  F00B         	goto	l3245
  3468  00171C                     l3241:
  3469  00171C  C019  F005         	movff	atoi@n,___wmul@multiplier
  3470  001720  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  3471  001724  0E00               	movlw	0
  3472  001726  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  3473  001728  0E0A               	movlw	10
  3474  00172A  6E07               	movwf	___wmul@multiplicand^0,c
  3475  00172C  EC88  F014         	call	___wmul	;wreg free
  3476  001730  C00C  FFF6         	movff	atoi@s,tblptrl
  3477  001734  C00D  FFF7         	movff	atoi@s+1,tblptrh
  3478  001738                     	if	0	;tblptru may be non-zero
  3479  001738                     	endif
  3480  001738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3481  001738  0E00               	movlw	low (__mediumconst shr (0+16))
  3482  00173A  6EF8               	movwf	tblptru,c
  3483  00173C                     	endif
  3484  00173C  0008               	tblrd		*
  3485  00173E  50F5               	movf	tablat,w,c
  3486  001740  5E05               	subwf	?___wmul^0,f,c
  3487  001742  0E00               	movlw	0
  3488  001744  5A06               	subwfb	(?___wmul+1)^0,f,c
  3489  001746  0E30               	movlw	48
  3490  001748  2405               	addwf	?___wmul^0,w,c
  3491  00174A  6E19               	movwf	atoi@n^0,c
  3492  00174C  0E00               	movlw	0
  3493  00174E  2006               	addwfc	(?___wmul+1)^0,w,c
  3494  001750  6E1A               	movwf	(atoi@n+1)^0,c
  3495  001752  EF6E  F00B         	goto	l3237
  3496  001756                     l3245:
  3497  001756  0ED0               	movlw	208
  3498  001758  6E0E               	movwf	??_atoi^0,c
  3499  00175A  0EFF               	movlw	255
  3500  00175C  6E0F               	movwf	(??_atoi+1)^0,c
  3501  00175E  C00C  FFF6         	movff	atoi@s,tblptrl
  3502  001762  C00D  FFF7         	movff	atoi@s+1,tblptrh
  3503  001766                     	if	0	;tblptru may be non-zero
  3504  001766                     	endif
  3505  001766                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3506  001766  0E00               	movlw	low (__mediumconst shr (0+16))
  3507  001768  6EF8               	movwf	tblptru,c
  3508  00176A                     	endif
  3509  00176A  0008               	tblrd		*
  3510  00176C  50F5               	movf	tablat,w,c
  3511  00176E  6E10               	movwf	(??_atoi+2)^0,c
  3512  001770  6A11               	clrf	(??_atoi+3)^0,c
  3513  001772  500E               	movf	??_atoi^0,w,c
  3514  001774  2610               	addwf	(??_atoi+2)^0,f,c
  3515  001776  500F               	movf	(??_atoi+1)^0,w,c
  3516  001778  2211               	addwfc	(??_atoi+3)^0,f,c
  3517  00177A  5011               	movf	(??_atoi+3)^0,w,c
  3518  00177C  E10A               	bnz	u3830
  3519  00177E  0E0A               	movlw	10
  3520  001780  5C10               	subwf	(??_atoi+2)^0,w,c
  3521  001782  A0D8               	btfss	status,0,c
  3522  001784  EFC6  F00B         	goto	u3831
  3523  001788  EFC9  F00B         	goto	u3830
  3524  00178C                     u3831:
  3525  00178C  0E01               	movlw	1
  3526  00178E  EFCA  F00B         	goto	u3840
  3527  001792                     u3830:
  3528  001792  0E00               	movlw	0
  3529  001794                     u3840:
  3530  001794  6E16               	movwf	_atoi$2227^0,c
  3531  001796  6A17               	clrf	(_atoi$2227+1)^0,c
  3532  001798  5016               	movf	_atoi$2227^0,w,c
  3533  00179A  1017               	iorwf	(_atoi$2227+1)^0,w,c
  3534  00179C  A4D8               	btfss	status,2,c
  3535  00179E  EFD3  F00B         	goto	u3851
  3536  0017A2  EFD5  F00B         	goto	u3850
  3537  0017A6                     u3851:
  3538  0017A6  EF8E  F00B         	goto	l3241
  3539  0017AA                     u3850:
  3540  0017AA  5012               	movf	atoi@neg^0,w,c
  3541  0017AC  1013               	iorwf	(atoi@neg+1)^0,w,c
  3542  0017AE  A4D8               	btfss	status,2,c
  3543  0017B0  EFDC  F00B         	goto	u3861
  3544  0017B4  EFDE  F00B         	goto	u3860
  3545  0017B8                     u3861:
  3546  0017B8  EFEC  F00B         	goto	l1137
  3547  0017BC                     u3860:
  3548  0017BC  C019  F00E         	movff	atoi@n,??_atoi
  3549  0017C0  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  3550  0017C4  1E0E               	comf	??_atoi^0,f,c
  3551  0017C6  1E0F               	comf	(??_atoi+1)^0,f,c
  3552  0017C8  4A0E               	infsnz	??_atoi^0,f,c
  3553  0017CA  2A0F               	incf	(??_atoi+1)^0,f,c
  3554  0017CC  C00E  F00C         	movff	??_atoi,?_atoi
  3555  0017D0  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  3556  0017D4  EFF0  F00B         	goto	l1140
  3557  0017D8                     l1137:
  3558  0017D8  C019  F00C         	movff	atoi@n,?_atoi
  3559  0017DC  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  3560  0017E0                     l1140:
  3561  0017E0  0012               	return		;funcret
  3562  0017E2                     __end_of_atoi:
  3563                           	callstack 0
  3564                           
  3565 ;; *************** function _isspace *****************
  3566 ;; Defined at:
  3567 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;  c               2    4[COMRAM] int 
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;		None
  3572 ;; Return value:  Size  Location     Type
  3573 ;;                  2    4[COMRAM] int 
  3574 ;; Registers used:
  3575 ;;		wreg, status,2, status,0
  3576 ;; Tracked objects:
  3577 ;;		On entry : 0/0
  3578 ;;		On exit  : 0/0
  3579 ;;		Unchanged: 0/0
  3580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3581 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3582 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3583 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3584 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3585 ;;Total ram usage:        7 bytes
  3586 ;; Hardware stack levels used: 1
  3587 ;; Hardware stack levels required when called: 2
  3588 ;; This function calls:
  3589 ;;		Nothing
  3590 ;; This function is called by:
  3591 ;;		_atoi
  3592 ;; This function uses a non-reentrant model
  3593 ;;
  3594                           
  3595                           	psect	text15
  3596  0026C2                     __ptext15:
  3597                           	callstack 0
  3598  0026C2                     _isspace:
  3599                           	callstack 23
  3600  0026C2  0E01               	movlw	1
  3601  0026C4  6E0B               	movwf	_isspace$2243^0,c
  3602  0026C6  0E20               	movlw	32
  3603  0026C8  1805               	xorwf	isspace@c^0,w,c
  3604  0026CA  1006               	iorwf	(isspace@c+1)^0,w,c
  3605  0026CC  B4D8               	btfsc	status,2,c
  3606  0026CE  EF6B  F013         	goto	u3591
  3607  0026D2  EF6D  F013         	goto	u3590
  3608  0026D6                     u3591:
  3609  0026D6  EF86  F013         	goto	l3131
  3610  0026DA                     u3590:
  3611  0026DA  0EF7               	movlw	247
  3612  0026DC  6E07               	movwf	??_isspace^0,c
  3613  0026DE  0EFF               	movlw	255
  3614  0026E0  6E08               	movwf	(??_isspace+1)^0,c
  3615  0026E2  C005  F009         	movff	isspace@c,??_isspace+2
  3616  0026E6  C006  F00A         	movff	isspace@c+1,??_isspace+3
  3617  0026EA  5007               	movf	??_isspace^0,w,c
  3618  0026EC  2609               	addwf	(??_isspace+2)^0,f,c
  3619  0026EE  5008               	movf	(??_isspace+1)^0,w,c
  3620  0026F0  220A               	addwfc	(??_isspace+3)^0,f,c
  3621  0026F2  500A               	movf	(??_isspace+3)^0,w,c
  3622  0026F4  E109               	bnz	u3600
  3623  0026F6  0E05               	movlw	5
  3624  0026F8  5C09               	subwf	(??_isspace+2)^0,w,c
  3625  0026FA  A0D8               	btfss	status,0,c
  3626  0026FC  EF82  F013         	goto	u3601
  3627  002700  EF84  F013         	goto	u3600
  3628  002704                     u3601:
  3629  002704  EF86  F013         	goto	l3131
  3630  002708                     u3600:
  3631  002708  0E00               	movlw	0
  3632  00270A  6E0B               	movwf	_isspace$2243^0,c
  3633  00270C                     l3131:
  3634  00270C  C00B  F005         	movff	_isspace$2243,?_isspace
  3635  002710  6A06               	clrf	(?_isspace+1)^0,c
  3636  002712  0012               	return		;funcret
  3637  002714                     __end_of_isspace:
  3638                           	callstack 0
  3639                           
  3640 ;; *************** function _isdigit *****************
  3641 ;; Defined at:
  3642 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;  c               2    4[COMRAM] int 
  3645 ;; Auto vars:     Size  Location     Type
  3646 ;;		None
  3647 ;; Return value:  Size  Location     Type
  3648 ;;                  2    4[COMRAM] int 
  3649 ;; Registers used:
  3650 ;;		wreg, status,2, status,0
  3651 ;; Tracked objects:
  3652 ;;		On entry : 0/0
  3653 ;;		On exit  : 0/0
  3654 ;;		Unchanged: 0/0
  3655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3656 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3658 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3659 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3660 ;;Total ram usage:        6 bytes
  3661 ;; Hardware stack levels used: 1
  3662 ;; Hardware stack levels required when called: 2
  3663 ;; This function calls:
  3664 ;;		Nothing
  3665 ;; This function is called by:
  3666 ;;		_vfpfcnvrt
  3667 ;;		_atoi
  3668 ;; This function uses a non-reentrant model
  3669 ;;
  3670                           
  3671                           	psect	text16
  3672  00286E                     __ptext16:
  3673                           	callstack 0
  3674  00286E                     _isdigit:
  3675                           	callstack 24
  3676  00286E  0ED0               	movlw	208
  3677  002870  6E07               	movwf	??_isdigit^0,c
  3678  002872  0EFF               	movlw	255
  3679  002874  6E08               	movwf	(??_isdigit+1)^0,c
  3680  002876  C005  F009         	movff	isdigit@c,??_isdigit+2
  3681  00287A  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  3682  00287E  5007               	movf	??_isdigit^0,w,c
  3683  002880  2609               	addwf	(??_isdigit+2)^0,f,c
  3684  002882  5008               	movf	(??_isdigit+1)^0,w,c
  3685  002884  220A               	addwfc	(??_isdigit+3)^0,f,c
  3686  002886  500A               	movf	(??_isdigit+3)^0,w,c
  3687  002888  E10A               	bnz	u3570
  3688  00288A  0E0A               	movlw	10
  3689  00288C  5C09               	subwf	(??_isdigit+2)^0,w,c
  3690  00288E  A0D8               	btfss	status,0,c
  3691  002890  EF4C  F014         	goto	u3571
  3692  002894  EF4F  F014         	goto	u3570
  3693  002898                     u3571:
  3694  002898  0E01               	movlw	1
  3695  00289A  EF50  F014         	goto	u3580
  3696  00289E                     u3570:
  3697  00289E  0E00               	movlw	0
  3698  0028A0                     u3580:
  3699  0028A0  6E05               	movwf	?_isdigit^0,c
  3700  0028A2  6A06               	clrf	(?_isdigit+1)^0,c
  3701  0028A4  0012               	return		;funcret
  3702  0028A6                     __end_of_isdigit:
  3703                           	callstack 0
  3704                           
  3705 ;; *************** function ___wmul *****************
  3706 ;; Defined at:
  3707 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;  multiplier      2    4[COMRAM] unsigned int 
  3710 ;;  multiplicand    2    6[COMRAM] unsigned int 
  3711 ;; Auto vars:     Size  Location     Type
  3712 ;;  product         2    8[COMRAM] unsigned int 
  3713 ;; Return value:  Size  Location     Type
  3714 ;;                  2    4[COMRAM] unsigned int 
  3715 ;; Registers used:
  3716 ;;		wreg, status,2, status,0, prodl, prodh
  3717 ;; Tracked objects:
  3718 ;;		On entry : 0/0
  3719 ;;		On exit  : 0/0
  3720 ;;		Unchanged: 0/0
  3721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3722 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3723 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3725 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3726 ;;Total ram usage:        6 bytes
  3727 ;; Hardware stack levels used: 1
  3728 ;; Hardware stack levels required when called: 2
  3729 ;; This function calls:
  3730 ;;		Nothing
  3731 ;; This function is called by:
  3732 ;;		_atoi
  3733 ;; This function uses a non-reentrant model
  3734 ;;
  3735                           
  3736                           	psect	text17
  3737  002910                     __ptext17:
  3738                           	callstack 0
  3739  002910                     ___wmul:
  3740                           	callstack 23
  3741  002910  5005               	movf	___wmul@multiplier^0,w,c
  3742  002912  0207               	mulwf	___wmul@multiplicand^0,c
  3743  002914  CFF3 F009          	movff	prodl,___wmul@product
  3744  002918  CFF4 F00A          	movff	prodh,___wmul@product+1
  3745  00291C  5005               	movf	___wmul@multiplier^0,w,c
  3746  00291E  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  3747  002920  50F3               	movf	243,w,c
  3748  002922  260A               	addwf	(___wmul@product+1)^0,f,c
  3749  002924  5006               	movf	(___wmul@multiplier+1)^0,w,c
  3750  002926  0207               	mulwf	___wmul@multiplicand^0,c
  3751  002928  50F3               	movf	243,w,c
  3752  00292A  260A               	addwf	(___wmul@product+1)^0,f,c
  3753  00292C  C009  F005         	movff	___wmul@product,?___wmul
  3754  002930  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  3755  002934  0012               	return		;funcret
  3756  002936                     __end_of___wmul:
  3757                           	callstack 0
  3758                           
  3759 ;; *************** function _daylightsavingstime_toggle *****************
  3760 ;; Defined at:
  3761 ;;		line 10 in file "dateandtime.c"
  3762 ;; Parameters:    Size  Location     Type
  3763 ;;  current        11    4[COMRAM] struct .
  3764 ;; Auto vars:     Size  Location     Type
  3765 ;;		None
  3766 ;; Return value:  Size  Location     Type
  3767 ;;                  11    4[COMRAM] struct .
  3768 ;; Registers used:
  3769 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  3770 ;; Tracked objects:
  3771 ;;		On entry : 0/0
  3772 ;;		On exit  : 0/0
  3773 ;;		Unchanged: 0/0
  3774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3775 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3777 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3778 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3779 ;;Total ram usage:       13 bytes
  3780 ;; Hardware stack levels used: 1
  3781 ;; Hardware stack levels required when called: 2
  3782 ;; This function calls:
  3783 ;;		Nothing
  3784 ;; This function is called by:
  3785 ;;		_time_incre
  3786 ;; This function uses a non-reentrant model
  3787 ;;
  3788                           
  3789                           	psect	text18
  3790  001EC0                     __ptext18:
  3791                           	callstack 0
  3792  001EC0                     _daylightsavingstime_toggle:
  3793                           	callstack 27
  3794  001EC0                     
  3795                           ;dateandtime.c: 12:     if (current.month==3 && (current.date+7)>31 && current.day==7 &&
      +                           current.hour==1) {
  3796  001EC0  0E03               	movlw	3
  3797  001EC2  1807               	xorwf	(daylightsavingstime_toggle@current+2)^0,w,c
  3798  001EC4  A4D8               	btfss	status,2,c
  3799  001EC6  EF67  F00F         	goto	u4121
  3800  001ECA  EF69  F00F         	goto	u4120
  3801  001ECE                     u4121:
  3802  001ECE  EF95  F00F         	goto	l3497
  3803  001ED2                     u4120:
  3804  001ED2  C008  F010         	movff	daylightsavingstime_toggle@current+3,??_daylightsavingstime_toggle
  3805  001ED6  6A11               	clrf	(??_daylightsavingstime_toggle+1)^0,c
  3806  001ED8  BE10               	btfsc	??_daylightsavingstime_toggle^0,7,c
  3807  001EDA  0611               	decf	(??_daylightsavingstime_toggle+1)^0,f,c
  3808  001EDC  0E07               	movlw	7
  3809  001EDE  2610               	addwf	??_daylightsavingstime_toggle^0,f,c
  3810  001EE0  0E00               	movlw	0
  3811  001EE2  2211               	addwfc	(??_daylightsavingstime_toggle+1)^0,f,c
  3812  001EE4  BE11               	btfsc	(??_daylightsavingstime_toggle+1)^0,7,c
  3813  001EE6  EF7E  F00F         	goto	u4131
  3814  001EEA  5011               	movf	(??_daylightsavingstime_toggle+1)^0,w,c
  3815  001EEC  E109               	bnz	u4130
  3816  001EEE  0E20               	movlw	32
  3817  001EF0  5C10               	subwf	??_daylightsavingstime_toggle^0,w,c
  3818  001EF2  A0D8               	btfss	status,0,c
  3819  001EF4  EF7E  F00F         	goto	u4131
  3820  001EF8  EF80  F00F         	goto	u4130
  3821  001EFC                     u4131:
  3822  001EFC  EF95  F00F         	goto	l3497
  3823  001F00                     u4130:
  3824  001F00  0E07               	movlw	7
  3825  001F02  1809               	xorwf	(daylightsavingstime_toggle@current+4)^0,w,c
  3826  001F04  A4D8               	btfss	status,2,c
  3827  001F06  EF87  F00F         	goto	u4141
  3828  001F0A  EF89  F00F         	goto	u4140
  3829  001F0E                     u4141:
  3830  001F0E  EF95  F00F         	goto	l3497
  3831  001F12                     u4140:
  3832  001F12  040A               	decf	(daylightsavingstime_toggle@current+5)^0,w,c
  3833  001F14  A4D8               	btfss	status,2,c
  3834  001F16  EF8F  F00F         	goto	u4151
  3835  001F1A  EF91  F00F         	goto	u4150
  3836  001F1E                     u4151:
  3837  001F1E  EF95  F00F         	goto	l3497
  3838  001F22                     u4150:
  3839  001F22                     
  3840                           ;dateandtime.c: 13:         current.hour = current.hour+1;
  3841  001F22  280A               	incf	(daylightsavingstime_toggle@current+5)^0,w,c
  3842  001F24  6E0A               	movwf	(daylightsavingstime_toggle@current+5)^0,c
  3843                           
  3844                           ;dateandtime.c: 14:     } else if (current.month==10 && (current.date+7)>31 && current.d
      +                          ay==7 && current.hour==2) {
  3845  001F26  EFC9  F00F         	goto	l3507
  3846  001F2A                     l3497:
  3847  001F2A  0E0A               	movlw	10
  3848  001F2C  1807               	xorwf	(daylightsavingstime_toggle@current+2)^0,w,c
  3849  001F2E  A4D8               	btfss	status,2,c
  3850  001F30  EF9C  F00F         	goto	u4161
  3851  001F34  EF9E  F00F         	goto	u4160
  3852  001F38                     u4161:
  3853  001F38  EFC9  F00F         	goto	l3507
  3854  001F3C                     u4160:
  3855  001F3C  C008  F010         	movff	daylightsavingstime_toggle@current+3,??_daylightsavingstime_toggle
  3856  001F40  6A11               	clrf	(??_daylightsavingstime_toggle+1)^0,c
  3857  001F42  BE10               	btfsc	??_daylightsavingstime_toggle^0,7,c
  3858  001F44  0611               	decf	(??_daylightsavingstime_toggle+1)^0,f,c
  3859  001F46  0E07               	movlw	7
  3860  001F48  2610               	addwf	??_daylightsavingstime_toggle^0,f,c
  3861  001F4A  0E00               	movlw	0
  3862  001F4C  2211               	addwfc	(??_daylightsavingstime_toggle+1)^0,f,c
  3863  001F4E  BE11               	btfsc	(??_daylightsavingstime_toggle+1)^0,7,c
  3864  001F50  EFB3  F00F         	goto	u4171
  3865  001F54  5011               	movf	(??_daylightsavingstime_toggle+1)^0,w,c
  3866  001F56  E109               	bnz	u4170
  3867  001F58  0E20               	movlw	32
  3868  001F5A  5C10               	subwf	??_daylightsavingstime_toggle^0,w,c
  3869  001F5C  A0D8               	btfss	status,0,c
  3870  001F5E  EFB3  F00F         	goto	u4171
  3871  001F62  EFB5  F00F         	goto	u4170
  3872  001F66                     u4171:
  3873  001F66  EFC9  F00F         	goto	l3507
  3874  001F6A                     u4170:
  3875  001F6A  0E07               	movlw	7
  3876  001F6C  1809               	xorwf	(daylightsavingstime_toggle@current+4)^0,w,c
  3877  001F6E  A4D8               	btfss	status,2,c
  3878  001F70  EFBC  F00F         	goto	u4181
  3879  001F74  EFBE  F00F         	goto	u4180
  3880  001F78                     u4181:
  3881  001F78  EFC9  F00F         	goto	l3507
  3882  001F7C                     u4180:
  3883  001F7C  0E02               	movlw	2
  3884  001F7E  180A               	xorwf	(daylightsavingstime_toggle@current+5)^0,w,c
  3885  001F80  A4D8               	btfss	status,2,c
  3886  001F82  EFC5  F00F         	goto	u4191
  3887  001F86  EFC7  F00F         	goto	u4190
  3888  001F8A                     u4191:
  3889  001F8A  EFC9  F00F         	goto	l3507
  3890  001F8E                     u4190:
  3891  001F8E                     
  3892                           ;dateandtime.c: 15:         current.hour = current.hour-1;
  3893  001F8E  040A               	decf	(daylightsavingstime_toggle@current+5)^0,w,c
  3894  001F90  6E0A               	movwf	(daylightsavingstime_toggle@current+5)^0,c
  3895  001F92                     l3507:
  3896                           
  3897                           ;dateandtime.c: 18:     return current;
  3898  001F92  EE20  F005         	lfsr	2,daylightsavingstime_toggle@current
  3899  001F96  EE00  F005         	lfsr	0,?_daylightsavingstime_toggle
  3900  001F9A  0E0A               	movlw	10
  3901  001F9C                     u4201:
  3902  001F9C  CFDB FFEB          	movff	plusw2,plusw0
  3903  001FA0  06E8               	decf	wreg,f,c
  3904  001FA2  E2FC               	bc	u4201
  3905  001FA4  0012               	return		;funcret
  3906  001FA6                     __end_of_daylightsavingstime_toggle:
  3907                           	callstack 0
  3908                           
  3909 ;; *************** function _date_check *****************
  3910 ;; Defined at:
  3911 ;;		line 25 in file "dateandtime.c"
  3912 ;; Parameters:    Size  Location     Type
  3913 ;;  current        11    4[COMRAM] struct .
  3914 ;; Auto vars:     Size  Location     Type
  3915 ;;		None
  3916 ;; Return value:  Size  Location     Type
  3917 ;;                  11    4[COMRAM] struct .
  3918 ;; Registers used:
  3919 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  3920 ;; Tracked objects:
  3921 ;;		On entry : 0/0
  3922 ;;		On exit  : 0/0
  3923 ;;		Unchanged: 0/0
  3924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3925 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3927 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3928 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3929 ;;Total ram usage:       13 bytes
  3930 ;; Hardware stack levels used: 1
  3931 ;; Hardware stack levels required when called: 2
  3932 ;; This function calls:
  3933 ;;		Nothing
  3934 ;; This function is called by:
  3935 ;;		_time_incre
  3936 ;; This function uses a non-reentrant model
  3937 ;;
  3938                           
  3939                           	psect	text19
  3940  00148A                     __ptext19:
  3941                           	callstack 0
  3942  00148A                     _date_check:
  3943                           	callstack 27
  3944  00148A                     
  3945                           ;dateandtime.c: 27:     if ((current.year%4==0 && current.month==2 && current.date>29) |
      +                          | (current.year%4!=0 && current.month==2 && current.date>28) || ((current.month==1 || cu
      +                          rrent.month==3 || current.month==5 || current.month==7 || current.month==8 || current.mo
      +                          nth==10 || current.month==12) && current.date>31) || ((current.month==4 || current.month
      +                          ==6 || current.month==9 || current.month==11) && current.date>30)) {
  3946  00148A  0E03               	movlw	3
  3947  00148C  1405               	andwf	date_check@current^0,w,c
  3948  00148E  6E10               	movwf	??_date_check^0,c
  3949  001490  0E00               	movlw	0
  3950  001492  1406               	andwf	(date_check@current+1)^0,w,c
  3951  001494  6E11               	movwf	(??_date_check+1)^0,c
  3952  001496  5010               	movf	??_date_check^0,w,c
  3953  001498  1011               	iorwf	(??_date_check+1)^0,w,c
  3954  00149A  A4D8               	btfss	status,2,c
  3955  00149C  EF52  F00A         	goto	u4211
  3956  0014A0  EF54  F00A         	goto	u4210
  3957  0014A4                     u4211:
  3958  0014A4  EF67  F00A         	goto	l3517
  3959  0014A8                     u4210:
  3960  0014A8  0E02               	movlw	2
  3961  0014AA  1807               	xorwf	(date_check@current+2)^0,w,c
  3962  0014AC  A4D8               	btfss	status,2,c
  3963  0014AE  EF5B  F00A         	goto	u4221
  3964  0014B2  EF5D  F00A         	goto	u4220
  3965  0014B6                     u4221:
  3966  0014B6  EF67  F00A         	goto	l3517
  3967  0014BA                     u4220:
  3968  0014BA  5008               	movf	(date_check@current+3)^0,w,c
  3969  0014BC  0A80               	xorlw	128
  3970  0014BE  0F62               	addlw	-158
  3971  0014C0  B0D8               	btfsc	status,0,c
  3972  0014C2  EF65  F00A         	goto	u4231
  3973  0014C6  EF67  F00A         	goto	u4230
  3974  0014CA                     u4231:
  3975  0014CA  EFFF  F00A         	goto	l3549
  3976  0014CE                     u4230:
  3977  0014CE                     l3517:
  3978  0014CE  0E03               	movlw	3
  3979  0014D0  1405               	andwf	date_check@current^0,w,c
  3980  0014D2  6E10               	movwf	??_date_check^0,c
  3981  0014D4  0E00               	movlw	0
  3982  0014D6  1406               	andwf	(date_check@current+1)^0,w,c
  3983  0014D8  6E11               	movwf	(??_date_check+1)^0,c
  3984  0014DA  5010               	movf	??_date_check^0,w,c
  3985  0014DC  1011               	iorwf	(??_date_check+1)^0,w,c
  3986  0014DE  B4D8               	btfsc	status,2,c
  3987  0014E0  EF74  F00A         	goto	u4241
  3988  0014E4  EF76  F00A         	goto	u4240
  3989  0014E8                     u4241:
  3990  0014E8  EF89  F00A         	goto	l3523
  3991  0014EC                     u4240:
  3992  0014EC  0E02               	movlw	2
  3993  0014EE  1807               	xorwf	(date_check@current+2)^0,w,c
  3994  0014F0  A4D8               	btfss	status,2,c
  3995  0014F2  EF7D  F00A         	goto	u4251
  3996  0014F6  EF7F  F00A         	goto	u4250
  3997  0014FA                     u4251:
  3998  0014FA  EF89  F00A         	goto	l3523
  3999  0014FE                     u4250:
  4000  0014FE  5008               	movf	(date_check@current+3)^0,w,c
  4001  001500  0A80               	xorlw	128
  4002  001502  0F63               	addlw	-157
  4003  001504  B0D8               	btfsc	status,0,c
  4004  001506  EF87  F00A         	goto	u4261
  4005  00150A  EF89  F00A         	goto	u4260
  4006  00150E                     u4261:
  4007  00150E  EFFF  F00A         	goto	l3549
  4008  001512                     u4260:
  4009  001512                     l3523:
  4010  001512  0407               	decf	(date_check@current+2)^0,w,c
  4011  001514  B4D8               	btfsc	status,2,c
  4012  001516  EF8F  F00A         	goto	u4271
  4013  00151A  EF91  F00A         	goto	u4270
  4014  00151E                     u4271:
  4015  00151E  EFC7  F00A         	goto	l3537
  4016  001522                     u4270:
  4017  001522  0E03               	movlw	3
  4018  001524  1807               	xorwf	(date_check@current+2)^0,w,c
  4019  001526  B4D8               	btfsc	status,2,c
  4020  001528  EF98  F00A         	goto	u4281
  4021  00152C  EF9A  F00A         	goto	u4280
  4022  001530                     u4281:
  4023  001530  EFC7  F00A         	goto	l3537
  4024  001534                     u4280:
  4025  001534  0E05               	movlw	5
  4026  001536  1807               	xorwf	(date_check@current+2)^0,w,c
  4027  001538  B4D8               	btfsc	status,2,c
  4028  00153A  EFA1  F00A         	goto	u4291
  4029  00153E  EFA3  F00A         	goto	u4290
  4030  001542                     u4291:
  4031  001542  EFC7  F00A         	goto	l3537
  4032  001546                     u4290:
  4033  001546  0E07               	movlw	7
  4034  001548  1807               	xorwf	(date_check@current+2)^0,w,c
  4035  00154A  B4D8               	btfsc	status,2,c
  4036  00154C  EFAA  F00A         	goto	u4301
  4037  001550  EFAC  F00A         	goto	u4300
  4038  001554                     u4301:
  4039  001554  EFC7  F00A         	goto	l3537
  4040  001558                     u4300:
  4041  001558  0E08               	movlw	8
  4042  00155A  1807               	xorwf	(date_check@current+2)^0,w,c
  4043  00155C  B4D8               	btfsc	status,2,c
  4044  00155E  EFB3  F00A         	goto	u4311
  4045  001562  EFB5  F00A         	goto	u4310
  4046  001566                     u4311:
  4047  001566  EFC7  F00A         	goto	l3537
  4048  00156A                     u4310:
  4049  00156A  0E0A               	movlw	10
  4050  00156C  1807               	xorwf	(date_check@current+2)^0,w,c
  4051  00156E  B4D8               	btfsc	status,2,c
  4052  001570  EFBC  F00A         	goto	u4321
  4053  001574  EFBE  F00A         	goto	u4320
  4054  001578                     u4321:
  4055  001578  EFC7  F00A         	goto	l3537
  4056  00157C                     u4320:
  4057  00157C  0E0C               	movlw	12
  4058  00157E  1807               	xorwf	(date_check@current+2)^0,w,c
  4059  001580  A4D8               	btfss	status,2,c
  4060  001582  EFC5  F00A         	goto	u4331
  4061  001586  EFC7  F00A         	goto	u4330
  4062  00158A                     u4331:
  4063  00158A  EFD1  F00A         	goto	l3539
  4064  00158E                     u4330:
  4065  00158E                     l3537:
  4066  00158E  5008               	movf	(date_check@current+3)^0,w,c
  4067  001590  0A80               	xorlw	128
  4068  001592  0F60               	addlw	-160
  4069  001594  B0D8               	btfsc	status,0,c
  4070  001596  EFCF  F00A         	goto	u4341
  4071  00159A  EFD1  F00A         	goto	u4340
  4072  00159E                     u4341:
  4073  00159E  EFFF  F00A         	goto	l3549
  4074  0015A2                     u4340:
  4075  0015A2                     l3539:
  4076  0015A2  0E04               	movlw	4
  4077  0015A4  1807               	xorwf	(date_check@current+2)^0,w,c
  4078  0015A6  B4D8               	btfsc	status,2,c
  4079  0015A8  EFD8  F00A         	goto	u4351
  4080  0015AC  EFDA  F00A         	goto	u4350
  4081  0015B0                     u4351:
  4082  0015B0  EFF5  F00A         	goto	l3547
  4083  0015B4                     u4350:
  4084  0015B4  0E06               	movlw	6
  4085  0015B6  1807               	xorwf	(date_check@current+2)^0,w,c
  4086  0015B8  B4D8               	btfsc	status,2,c
  4087  0015BA  EFE1  F00A         	goto	u4361
  4088  0015BE  EFE3  F00A         	goto	u4360
  4089  0015C2                     u4361:
  4090  0015C2  EFF5  F00A         	goto	l3547
  4091  0015C6                     u4360:
  4092  0015C6  0E09               	movlw	9
  4093  0015C8  1807               	xorwf	(date_check@current+2)^0,w,c
  4094  0015CA  B4D8               	btfsc	status,2,c
  4095  0015CC  EFEA  F00A         	goto	u4371
  4096  0015D0  EFEC  F00A         	goto	u4370
  4097  0015D4                     u4371:
  4098  0015D4  EFF5  F00A         	goto	l3547
  4099  0015D8                     u4370:
  4100  0015D8  0E0B               	movlw	11
  4101  0015DA  1807               	xorwf	(date_check@current+2)^0,w,c
  4102  0015DC  A4D8               	btfss	status,2,c
  4103  0015DE  EFF3  F00A         	goto	u4381
  4104  0015E2  EFF5  F00A         	goto	u4380
  4105  0015E6                     u4381:
  4106  0015E6  EF15  F00B         	goto	l3559
  4107  0015EA                     u4380:
  4108  0015EA                     l3547:
  4109  0015EA  5008               	movf	(date_check@current+3)^0,w,c
  4110  0015EC  0A80               	xorlw	128
  4111  0015EE  0F61               	addlw	-159
  4112  0015F0  A0D8               	btfss	status,0,c
  4113  0015F2  EFFD  F00A         	goto	u4391
  4114  0015F6  EFFF  F00A         	goto	u4390
  4115  0015FA                     u4391:
  4116  0015FA  EF15  F00B         	goto	l3559
  4117  0015FE                     u4390:
  4118  0015FE                     l3549:
  4119                           
  4120                           ;dateandtime.c: 30: ;dateandtime.c: 31:         current.month = current.month+1;
  4121  0015FE  2807               	incf	(date_check@current+2)^0,w,c
  4122  001600  6E07               	movwf	(date_check@current+2)^0,c
  4123  001602                     
  4124                           ;dateandtime.c: 32:         current.date = 1;
  4125  001602  0E01               	movlw	1
  4126  001604  6E08               	movwf	(date_check@current+3)^0,c
  4127  001606                     
  4128                           ;dateandtime.c: 34:         if (current.month>12) {
  4129  001606  5007               	movf	(date_check@current+2)^0,w,c
  4130  001608  0A80               	xorlw	128
  4131  00160A  0F73               	addlw	-141
  4132  00160C  A0D8               	btfss	status,0,c
  4133  00160E  EF0B  F00B         	goto	u4401
  4134  001612  EF0D  F00B         	goto	u4400
  4135  001616                     u4401:
  4136  001616  EF15  F00B         	goto	l3559
  4137  00161A                     u4400:
  4138  00161A                     
  4139                           ;dateandtime.c: 35:             current.year = current.year+1;
  4140  00161A  0E01               	movlw	1
  4141  00161C  2405               	addwf	date_check@current^0,w,c
  4142  00161E  6E05               	movwf	date_check@current^0,c
  4143  001620  0E00               	movlw	0
  4144  001622  2006               	addwfc	(date_check@current+1)^0,w,c
  4145  001624  6E06               	movwf	(date_check@current+1)^0,c
  4146  001626                     
  4147                           ;dateandtime.c: 36:             current.month = 1;
  4148  001626  0E01               	movlw	1
  4149  001628  6E07               	movwf	(date_check@current+2)^0,c
  4150  00162A                     l3559:
  4151                           
  4152                           ;dateandtime.c: 40:     return current;
  4153  00162A  EE20  F005         	lfsr	2,date_check@current
  4154  00162E  EE00  F005         	lfsr	0,?_date_check
  4155  001632  0E0A               	movlw	10
  4156  001634                     u4411:
  4157  001634  CFDB FFEB          	movff	plusw2,plusw0
  4158  001638  06E8               	decf	wreg,f,c
  4159  00163A  E2FC               	bc	u4411
  4160  00163C  0012               	return		;funcret
  4161  00163E                     __end_of_date_check:
  4162                           	callstack 0
  4163                           
  4164 ;; *************** function _LCD_setline *****************
  4165 ;; Defined at:
  4166 ;;		line 101 in file "LCD.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;  line            1    wreg     unsigned char 
  4169 ;; Auto vars:     Size  Location     Type
  4170 ;;  line            1    7[COMRAM] unsigned char 
  4171 ;; Return value:  Size  Location     Type
  4172 ;;                  1    wreg      void 
  4173 ;; Registers used:
  4174 ;;		wreg, status,2, status,0, cstack
  4175 ;; Tracked objects:
  4176 ;;		On entry : 0/0
  4177 ;;		On exit  : 0/0
  4178 ;;		Unchanged: 0/0
  4179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4181 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4183 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4184 ;;Total ram usage:        1 bytes
  4185 ;; Hardware stack levels used: 1
  4186 ;; Hardware stack levels required when called: 5
  4187 ;; This function calls:
  4188 ;;		_LCD_sendbyte
  4189 ;; This function is called by:
  4190 ;;		_main
  4191 ;;		_time_incre
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           
  4195                           	psect	text20
  4196  002714                     __ptext20:
  4197                           	callstack 0
  4198  002714                     _LCD_setline:
  4199                           	callstack 24
  4200                           
  4201                           ;incstack = 0
  4202                           ;LCD_setline@line stored from wreg
  4203  002714  6E08               	movwf	LCD_setline@line^0,c
  4204  002716                     
  4205                           ;LCD.c: 101: void LCD_setline (char line);LCD.c: 102: {;LCD.c: 104:     if (line==1) {LC
      +                          D_sendbyte(0x80,0);}
  4206  002716  0408               	decf	LCD_setline@line^0,w,c
  4207  002718  A4D8               	btfss	status,2,c
  4208  00271A  EF91  F013         	goto	u4061
  4209  00271E  EF93  F013         	goto	u4060
  4210  002722                     u4061:
  4211  002722  EF98  F013         	goto	l3429
  4212  002726                     u4060:
  4213  002726  0E00               	movlw	0
  4214  002728  6E06               	movwf	LCD_sendbyte@type^0,c
  4215  00272A  0E80               	movlw	128
  4216  00272C  EC6E  F014         	call	_LCD_sendbyte
  4217  002730                     l3429:
  4218                           
  4219                           ;LCD.c: 105:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  4220  002730  0EA0               	movlw	160
  4221  002732                     u4967:
  4222  002732  D000               	nop2	
  4223  002734  2EE8               	decfsz	wreg,f,c
  4224  002736  D7FD               	bra	u4967
  4225  002738                     
  4226                           ;LCD.c: 108:     if (line==2) {LCD_sendbyte(0xC0,0);}
  4227  002738  0E02               	movlw	2
  4228  00273A  1808               	xorwf	LCD_setline@line^0,w,c
  4229  00273C  A4D8               	btfss	status,2,c
  4230  00273E  EFA3  F013         	goto	u4071
  4231  002742  EFA5  F013         	goto	u4070
  4232  002746                     u4071:
  4233  002746  EFAA  F013         	goto	l3435
  4234  00274A                     u4070:
  4235  00274A  0E00               	movlw	0
  4236  00274C  6E06               	movwf	LCD_sendbyte@type^0,c
  4237  00274E  0EC0               	movlw	192
  4238  002750  EC6E  F014         	call	_LCD_sendbyte
  4239  002754                     l3435:
  4240                           
  4241                           ;LCD.c: 109:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  4242  002754  0EA0               	movlw	160
  4243  002756                     u4977:
  4244  002756  D000               	nop2	
  4245  002758  2EE8               	decfsz	wreg,f,c
  4246  00275A  D7FD               	bra	u4977
  4247  00275C  0012               	return		;funcret
  4248  00275E                     __end_of_LCD_setline:
  4249                           	callstack 0
  4250                           
  4251 ;; *************** function _LCD_sendstring *****************
  4252 ;; Defined at:
  4253 ;;		line 115 in file "LCD.c"
  4254 ;; Parameters:    Size  Location     Type
  4255 ;;  string          2    7[COMRAM] PTR unsigned char 
  4256 ;;		 -> time_incre@buf2(40), time_incre@buf1(40), main@buf2(40), 
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;  counter2        1   17[COMRAM] unsigned char 
  4259 ;;  counter1        1   16[COMRAM] unsigned char 
  4260 ;; Return value:  Size  Location     Type
  4261 ;;                  1    wreg      void 
  4262 ;; Registers used:
  4263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4264 ;; Tracked objects:
  4265 ;;		On entry : 0/0
  4266 ;;		On exit  : 0/0
  4267 ;;		Unchanged: 0/0
  4268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4269 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4270 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4271 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4272 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4273 ;;Total ram usage:       11 bytes
  4274 ;; Hardware stack levels used: 1
  4275 ;; Hardware stack levels required when called: 6
  4276 ;; This function calls:
  4277 ;;		_LCD_scroll
  4278 ;;		_LCD_sendbyte
  4279 ;; This function is called by:
  4280 ;;		_main
  4281 ;;		_time_incre
  4282 ;; This function uses a non-reentrant model
  4283 ;;
  4284                           
  4285                           	psect	text21
  4286  00242C                     __ptext21:
  4287                           	callstack 0
  4288  00242C                     _LCD_sendstring:
  4289                           	callstack 23
  4290  00242C                     
  4291                           ;LCD.c: 115: void LCD_sendstring(char *string);LCD.c: 116: {;LCD.c: 118:     char counte
      +                          r1=0, counter2;
  4292  00242C  0E00               	movlw	0
  4293  00242E  6E11               	movwf	LCD_sendstring@counter1^0,c
  4294                           
  4295                           ;LCD.c: 119:     while (*string != 0) {
  4296  002430  EF26  F012         	goto	l3457
  4297  002434                     l3451:
  4298                           
  4299                           ;LCD.c: 120:         LCD_sendbyte(*string++,1);
  4300  002434  0E01               	movlw	1
  4301  002436  6E06               	movwf	LCD_sendbyte@type^0,c
  4302  002438  C008  FFD9         	movff	LCD_sendstring@string,fsr2l
  4303  00243C  C009  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  4304  002440  50DF               	movf	indf2,w,c
  4305  002442  EC6E  F014         	call	_LCD_sendbyte
  4306  002446  4A08               	infsnz	LCD_sendstring@string^0,f,c
  4307  002448  2A09               	incf	(LCD_sendstring@string+1)^0,f,c
  4308  00244A                     
  4309                           ;LCD.c: 121:         counter1++;
  4310  00244A  2A11               	incf	LCD_sendstring@counter1^0,f,c
  4311  00244C                     l3457:
  4312                           
  4313                           ;LCD.c: 119:     while (*string != 0) {
  4314  00244C  C008  FFD9         	movff	LCD_sendstring@string,fsr2l
  4315  002450  C009  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  4316  002454  50DF               	movf	indf2,w,c
  4317  002456  A4D8               	btfss	status,2,c
  4318  002458  EF30  F012         	goto	u4081
  4319  00245C  EF32  F012         	goto	u4080
  4320  002460                     u4081:
  4321  002460  EF1A  F012         	goto	l3451
  4322  002464                     u4080:
  4323  002464                     
  4324                           ;LCD.c: 124:     for (counter2=0; counter2<(counter1-16); counter2++) {
  4325  002464  0E00               	movlw	0
  4326  002466  6E12               	movwf	LCD_sendstring@counter2^0,c
  4327  002468  EF45  F012         	goto	l3467
  4328  00246C                     l3461:
  4329                           
  4330                           ;LCD.c: 125:         _delay((unsigned long)((500)*(64000000/4000.0)));
  4331  00246C  0E29               	movlw	41
  4332  00246E  6E0B               	movwf	(??_LCD_sendstring+1)^0,c
  4333  002470  0E96               	movlw	150
  4334  002472  6E0A               	movwf	??_LCD_sendstring^0,c
  4335  002474  0E7F               	movlw	127
  4336  002476                     u4987:
  4337  002476  2EE8               	decfsz	wreg,f,c
  4338  002478  D7FE               	bra	u4987
  4339  00247A  2E0A               	decfsz	??_LCD_sendstring^0,f,c
  4340  00247C  D7FC               	bra	u4987
  4341  00247E  2E0B               	decfsz	(??_LCD_sendstring+1)^0,f,c
  4342  002480  D7FA               	bra	u4987
  4343  002482  F000               	nop	
  4344  002484                     
  4345                           ;LCD.c: 126:         LCD_scroll();
  4346  002484  EC11  F015         	call	_LCD_scroll	;wreg free
  4347  002488                     
  4348                           ;LCD.c: 127:     }
  4349  002488  2A12               	incf	LCD_sendstring@counter2^0,f,c
  4350  00248A                     l3467:
  4351  00248A  0EF0               	movlw	240
  4352  00248C  6E0A               	movwf	??_LCD_sendstring^0,c
  4353  00248E  0EFF               	movlw	255
  4354  002490  6E0B               	movwf	(??_LCD_sendstring+1)^0,c
  4355  002492  5011               	movf	LCD_sendstring@counter1^0,w,c
  4356  002494  6E0C               	movwf	(??_LCD_sendstring+2)^0,c
  4357  002496  6A0D               	clrf	(??_LCD_sendstring+3)^0,c
  4358  002498  500A               	movf	??_LCD_sendstring^0,w,c
  4359  00249A  260C               	addwf	(??_LCD_sendstring+2)^0,f,c
  4360  00249C  500B               	movf	(??_LCD_sendstring+1)^0,w,c
  4361  00249E  220D               	addwfc	(??_LCD_sendstring+3)^0,f,c
  4362  0024A0  5012               	movf	LCD_sendstring@counter2^0,w,c
  4363  0024A2  6E0E               	movwf	(??_LCD_sendstring+4)^0,c
  4364  0024A4  6A0F               	clrf	(??_LCD_sendstring+5)^0,c
  4365  0024A6  500C               	movf	(??_LCD_sendstring+2)^0,w,c
  4366  0024A8  5C0E               	subwf	(??_LCD_sendstring+4)^0,w,c
  4367  0024AA  500F               	movf	(??_LCD_sendstring+5)^0,w,c
  4368  0024AC  0A80               	xorlw	128
  4369  0024AE  6E10               	movwf	(??_LCD_sendstring+6)^0,c
  4370  0024B0  500D               	movf	(??_LCD_sendstring+3)^0,w,c
  4371  0024B2  0A80               	xorlw	128
  4372  0024B4  5810               	subwfb	(??_LCD_sendstring+6)^0,w,c
  4373  0024B6  A0D8               	btfss	status,0,c
  4374  0024B8  EF60  F012         	goto	u4091
  4375  0024BC  EF62  F012         	goto	u4090
  4376  0024C0                     u4091:
  4377  0024C0  EF36  F012         	goto	l3461
  4378  0024C4                     u4090:
  4379  0024C4  0012               	return		;funcret
  4380  0024C6                     __end_of_LCD_sendstring:
  4381                           	callstack 0
  4382                           
  4383 ;; *************** function _LCD_scroll *****************
  4384 ;; Defined at:
  4385 ;;		line 133 in file "LCD.c"
  4386 ;; Parameters:    Size  Location     Type
  4387 ;;		None
  4388 ;; Auto vars:     Size  Location     Type
  4389 ;;		None
  4390 ;; Return value:  Size  Location     Type
  4391 ;;                  1    wreg      void 
  4392 ;; Registers used:
  4393 ;;		wreg, status,2, status,0, cstack
  4394 ;; Tracked objects:
  4395 ;;		On entry : 0/0
  4396 ;;		On exit  : 0/0
  4397 ;;		Unchanged: 0/0
  4398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4403 ;;Total ram usage:        0 bytes
  4404 ;; Hardware stack levels used: 1
  4405 ;; Hardware stack levels required when called: 5
  4406 ;; This function calls:
  4407 ;;		_LCD_sendbyte
  4408 ;; This function is called by:
  4409 ;;		_LCD_sendstring
  4410 ;; This function uses a non-reentrant model
  4411 ;;
  4412                           
  4413                           	psect	text22
  4414  002A22                     __ptext22:
  4415                           	callstack 0
  4416  002A22                     _LCD_scroll:
  4417                           	callstack 23
  4418  002A22                     
  4419                           ;LCD.c: 136:     LCD_sendbyte(0b00011000,0);
  4420  002A22  0E00               	movlw	0
  4421  002A24  6E06               	movwf	LCD_sendbyte@type^0,c
  4422  002A26  0E18               	movlw	24
  4423  002A28  EC6E  F014         	call	_LCD_sendbyte
  4424  002A2C                     
  4425                           ;LCD.c: 137:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  4426  002A2C  0EF0               	movlw	240
  4427  002A2E                     u4997:
  4428  002A2E  2EE8               	decfsz	wreg,f,c
  4429  002A30  D7FE               	bra	u4997
  4430  002A32  0012               	return		;funcret
  4431  002A34                     __end_of_LCD_scroll:
  4432                           	callstack 0
  4433                           
  4434 ;; *************** function _sunrise_sunset *****************
  4435 ;; Defined at:
  4436 ;;		line 126 in file "dateandtime.c"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;  current        11   26[COMRAM] struct .
  4439 ;; Auto vars:     Size  Location     Type
  4440 ;;		None
  4441 ;; Return value:  Size  Location     Type
  4442 ;;                  11   26[COMRAM] struct .
  4443 ;; Registers used:
  4444 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  4445 ;; Tracked objects:
  4446 ;;		On entry : 0/0
  4447 ;;		On exit  : 0/0
  4448 ;;		Unchanged: 0/0
  4449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4450 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4453 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4454 ;;Total ram usage:       11 bytes
  4455 ;; Hardware stack levels used: 1
  4456 ;; Hardware stack levels required when called: 4
  4457 ;; This function calls:
  4458 ;;		_sun_sync
  4459 ;;		_sunrise
  4460 ;; This function is called by:
  4461 ;;		_main
  4462 ;; This function uses a non-reentrant model
  4463 ;;
  4464                           
  4465                           	psect	text23
  4466  0024C6                     __ptext23:
  4467                           	callstack 0
  4468  0024C6                     _sunrise_sunset:
  4469                           	callstack 26
  4470  0024C6                     
  4471                           ;dateandtime.c: 127:     if (sunrise_flag==1) {
  4472  0024C6  0454               	decf	_sunrise_flag^0,w,c	;volatile
  4473  0024C8  A4D8               	btfss	status,2,c
  4474  0024CA  EF69  F012         	goto	u4501
  4475  0024CE  EF6B  F012         	goto	u4500
  4476  0024D2                     u4501:
  4477  0024D2  EF81  F012         	goto	l3665
  4478  0024D6                     u4500:
  4479  0024D6                     
  4480                           ;dateandtime.c: 128:     current=sunrise(current);
  4481  0024D6  EE20  F01B         	lfsr	2,sunrise_sunset@current
  4482  0024DA  EE00  F005         	lfsr	0,sunrise@current
  4483  0024DE  0E0A               	movlw	10
  4484  0024E0                     u4511:
  4485  0024E0  CFDB FFEB          	movff	plusw2,plusw0
  4486  0024E4  06E8               	decf	wreg,f,c
  4487  0024E6  E2FC               	bc	u4511
  4488  0024E8  ECC1  F014         	call	_sunrise	;wreg free
  4489  0024EC  EE20  F01B         	lfsr	2,sunrise_sunset@current
  4490  0024F0  0E0A               	movlw	10
  4491  0024F2                     u4521:
  4492  0024F2  CFEB FFDB          	movff	plusw0,plusw2
  4493  0024F6  06E8               	decf	wreg,f,c
  4494  0024F8  E2FC               	bc	u4521
  4495  0024FA                     
  4496                           ;dateandtime.c: 129:     sunrise_flag=0;
  4497  0024FA  0E00               	movlw	0
  4498  0024FC  6E54               	movwf	_sunrise_flag^0,c	;volatile
  4499                           
  4500                           ;dateandtime.c: 130:     } else if (sunset_flag==1) {
  4501  0024FE  EF9D  F012         	goto	l3671
  4502  002502                     l3665:
  4503  002502  0453               	decf	_sunset_flag^0,w,c	;volatile
  4504  002504  A4D8               	btfss	status,2,c
  4505  002506  EF87  F012         	goto	u4531
  4506  00250A  EF89  F012         	goto	u4530
  4507  00250E                     u4531:
  4508  00250E  EF9D  F012         	goto	l3671
  4509  002512                     u4530:
  4510  002512                     
  4511                           ;dateandtime.c: 131:         current=sun_sync(current);
  4512  002512  EE20  F01B         	lfsr	2,sunrise_sunset@current
  4513  002516  EE00  F00D         	lfsr	0,sun_sync@current
  4514  00251A  0E0A               	movlw	10
  4515  00251C                     u4541:
  4516  00251C  CFDB FFEB          	movff	plusw2,plusw0
  4517  002520  06E8               	decf	wreg,f,c
  4518  002522  E2FC               	bc	u4541
  4519  002524  EC38  F010         	call	_sun_sync	;wreg free
  4520  002528  EE20  F01B         	lfsr	2,sunrise_sunset@current
  4521  00252C  0E0A               	movlw	10
  4522  00252E                     u4551:
  4523  00252E  CFEB FFDB          	movff	plusw0,plusw2
  4524  002532  06E8               	decf	wreg,f,c
  4525  002534  E2FC               	bc	u4551
  4526  002536                     
  4527                           ;dateandtime.c: 132:         sunset_flag=0;
  4528  002536  0E00               	movlw	0
  4529  002538  6E53               	movwf	_sunset_flag^0,c	;volatile
  4530  00253A                     l3671:
  4531                           
  4532                           ;dateandtime.c: 134:     return current;
  4533  00253A  EE20  F01B         	lfsr	2,sunrise_sunset@current
  4534  00253E  EE00  F01B         	lfsr	0,?_sunrise_sunset
  4535  002542  0E0A               	movlw	10
  4536  002544                     u4561:
  4537  002544  CFDB FFEB          	movff	plusw2,plusw0
  4538  002548  06E8               	decf	wreg,f,c
  4539  00254A  E2FC               	bc	u4561
  4540  00254C  0012               	return		;funcret
  4541  00254E                     __end_of_sunrise_sunset:
  4542                           	callstack 0
  4543                           
  4544 ;; *************** function _sun_sync *****************
  4545 ;; Defined at:
  4546 ;;		line 102 in file "dateandtime.c"
  4547 ;; Parameters:    Size  Location     Type
  4548 ;;  current        11   12[COMRAM] struct .
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;  solarnoon_se    1   25[COMRAM] char 
  4551 ;;  solarnoon_mi    1   24[COMRAM] char 
  4552 ;;  solarnoon_ho    1   23[COMRAM] char 
  4553 ;; Return value:  Size  Location     Type
  4554 ;;                  11   12[COMRAM] struct .
  4555 ;; Registers used:
  4556 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  4557 ;; Tracked objects:
  4558 ;;		On entry : 0/0
  4559 ;;		On exit  : 0/0
  4560 ;;		Unchanged: 0/0
  4561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4562 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4563 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4565 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4566 ;;Total ram usage:       14 bytes
  4567 ;; Hardware stack levels used: 1
  4568 ;; Hardware stack levels required when called: 3
  4569 ;; This function calls:
  4570 ;;		___awdiv
  4571 ;; This function is called by:
  4572 ;;		_sunrise_sunset
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576                           	psect	text24
  4577  002070                     __ptext24:
  4578                           	callstack 0
  4579  002070                     _sun_sync:
  4580                           	callstack 26
  4581  002070                     
  4582                           ;dateandtime.c: 104:     signed char solarnoon_hour = (current.sunrise_hour + current.ho
      +                          ur)/2;
  4583  002070  5015               	movf	(sun_sync@current+8)^0,w,c
  4584  002072  2412               	addwf	(sun_sync@current+5)^0,w,c
  4585  002074  6E05               	movwf	___awdiv@dividend^0,c
  4586  002076  6AE8               	clrf	wreg,c
  4587  002078  B0D8               	btfsc	status,0,c
  4588  00207A  2AE8               	incf	wreg,f,c
  4589  00207C  BE15               	btfsc	(sun_sync@current+8)^0,7,c
  4590  00207E  06E8               	decf	wreg,f,c
  4591  002080  BE12               	btfsc	(sun_sync@current+5)^0,7,c
  4592  002082  06E8               	decf	wreg,f,c
  4593  002084  6E06               	movwf	(___awdiv@dividend+1)^0,c
  4594  002086  0E00               	movlw	0
  4595  002088  6E08               	movwf	(___awdiv@divisor+1)^0,c
  4596  00208A  0E02               	movlw	2
  4597  00208C  6E07               	movwf	___awdiv@divisor^0,c
  4598  00208E  EC9D  F010         	call	___awdiv	;wreg free
  4599  002092  5005               	movf	?___awdiv^0,w,c
  4600  002094  6E18               	movwf	sun_sync@solarnoon_hour^0,c
  4601                           
  4602                           ;dateandtime.c: 105:     signed char solarnoon_minute = (current.sunrise_minute + curren
      +                          t.minute)/2;
  4603  002096  5016               	movf	(sun_sync@current+9)^0,w,c
  4604  002098  2413               	addwf	(sun_sync@current+6)^0,w,c
  4605  00209A  6E05               	movwf	___awdiv@dividend^0,c
  4606  00209C  6AE8               	clrf	wreg,c
  4607  00209E  B0D8               	btfsc	status,0,c
  4608  0020A0  2AE8               	incf	wreg,f,c
  4609  0020A2  BE16               	btfsc	(sun_sync@current+9)^0,7,c
  4610  0020A4  06E8               	decf	wreg,f,c
  4611  0020A6  BE13               	btfsc	(sun_sync@current+6)^0,7,c
  4612  0020A8  06E8               	decf	wreg,f,c
  4613  0020AA  6E06               	movwf	(___awdiv@dividend+1)^0,c
  4614  0020AC  0E00               	movlw	0
  4615  0020AE  6E08               	movwf	(___awdiv@divisor+1)^0,c
  4616  0020B0  0E02               	movlw	2
  4617  0020B2  6E07               	movwf	___awdiv@divisor^0,c
  4618  0020B4  EC9D  F010         	call	___awdiv	;wreg free
  4619  0020B8  5005               	movf	?___awdiv^0,w,c
  4620  0020BA  6E19               	movwf	sun_sync@solarnoon_minute^0,c
  4621                           
  4622                           ;dateandtime.c: 106:     signed char solarnoon_second = (current.sunrise_second + curren
      +                          t.second)/2;
  4623  0020BC  5017               	movf	(sun_sync@current+10)^0,w,c
  4624  0020BE  2414               	addwf	(sun_sync@current+7)^0,w,c
  4625  0020C0  6E05               	movwf	___awdiv@dividend^0,c
  4626  0020C2  6AE8               	clrf	wreg,c
  4627  0020C4  B0D8               	btfsc	status,0,c
  4628  0020C6  2AE8               	incf	wreg,f,c
  4629  0020C8  BE17               	btfsc	(sun_sync@current+10)^0,7,c
  4630  0020CA  06E8               	decf	wreg,f,c
  4631  0020CC  BE14               	btfsc	(sun_sync@current+7)^0,7,c
  4632  0020CE  06E8               	decf	wreg,f,c
  4633  0020D0  6E06               	movwf	(___awdiv@dividend+1)^0,c
  4634  0020D2  0E00               	movlw	0
  4635  0020D4  6E08               	movwf	(___awdiv@divisor+1)^0,c
  4636  0020D6  0E02               	movlw	2
  4637  0020D8  6E07               	movwf	___awdiv@divisor^0,c
  4638  0020DA  EC9D  F010         	call	___awdiv	;wreg free
  4639  0020DE  5005               	movf	?___awdiv^0,w,c
  4640  0020E0  6E1A               	movwf	sun_sync@solarnoon_second^0,c
  4641  0020E2                     
  4642                           ;dateandtime.c: 108:     current.second = current.second - (solarnoon_second-0);
  4643  0020E2  501A               	movf	sun_sync@solarnoon_second^0,w,c
  4644  0020E4  5C14               	subwf	(sun_sync@current+7)^0,w,c
  4645  0020E6  6E14               	movwf	(sun_sync@current+7)^0,c
  4646  0020E8                     
  4647                           ;dateandtime.c: 109:     if (current.second<0) {
  4648  0020E8  BE14               	btfsc	(sun_sync@current+7)^0,7,c
  4649  0020EA  EF7B  F010         	goto	u4420
  4650  0020EE  EF79  F010         	goto	u4421
  4651  0020F2                     u4421:
  4652  0020F2  EF80  F010         	goto	l315
  4653  0020F6                     u4420:
  4654  0020F6                     
  4655                           ;dateandtime.c: 110:         current.second = current.second+60;
  4656  0020F6  5014               	movf	(sun_sync@current+7)^0,w,c
  4657  0020F8  0F3C               	addlw	60
  4658  0020FA  6E14               	movwf	(sun_sync@current+7)^0,c
  4659                           
  4660                           ;dateandtime.c: 111:         current.minute = current.minute-1;
  4661  0020FC  0413               	decf	(sun_sync@current+6)^0,w,c
  4662  0020FE  6E13               	movwf	(sun_sync@current+6)^0,c
  4663  002100                     l315:
  4664                           
  4665                           ;dateandtime.c: 113:     current.minute = current.minute - (solarnoon_minute-0);
  4666  002100  5019               	movf	sun_sync@solarnoon_minute^0,w,c
  4667  002102  5C13               	subwf	(sun_sync@current+6)^0,w,c
  4668  002104  6E13               	movwf	(sun_sync@current+6)^0,c
  4669                           
  4670                           ;dateandtime.c: 114:     if (current.minute<0) {
  4671  002106  BE13               	btfsc	(sun_sync@current+6)^0,7,c
  4672  002108  EF8A  F010         	goto	u4430
  4673  00210C  EF88  F010         	goto	u4431
  4674  002110                     u4431:
  4675  002110  EF8F  F010         	goto	l316
  4676  002114                     u4430:
  4677  002114                     
  4678                           ;dateandtime.c: 115:         current.minute = current.minute+60;
  4679  002114  5013               	movf	(sun_sync@current+6)^0,w,c
  4680  002116  0F3C               	addlw	60
  4681  002118  6E13               	movwf	(sun_sync@current+6)^0,c
  4682                           
  4683                           ;dateandtime.c: 116:         current.hour = current.hour-1;
  4684  00211A  0412               	decf	(sun_sync@current+5)^0,w,c
  4685  00211C  6E12               	movwf	(sun_sync@current+5)^0,c
  4686  00211E                     l316:
  4687                           
  4688                           ;dateandtime.c: 118:     current.hour = current.hour - (solarnoon_hour-12);
  4689  00211E  5018               	movf	sun_sync@solarnoon_hour^0,w,c
  4690  002120  5C12               	subwf	(sun_sync@current+5)^0,w,c
  4691  002122  0F0C               	addlw	12
  4692  002124  6E12               	movwf	(sun_sync@current+5)^0,c
  4693  002126                     
  4694                           ;dateandtime.c: 120:     return current;
  4695  002126  EE20  F00D         	lfsr	2,sun_sync@current
  4696  00212A  EE00  F00D         	lfsr	0,?_sun_sync
  4697  00212E  0E0A               	movlw	10
  4698  002130                     u4441:
  4699  002130  CFDB FFEB          	movff	plusw2,plusw0
  4700  002134  06E8               	decf	wreg,f,c
  4701  002136  E2FC               	bc	u4441
  4702  002138  0012               	return		;funcret
  4703  00213A                     __end_of_sun_sync:
  4704                           	callstack 0
  4705                           
  4706 ;; *************** function ___awdiv *****************
  4707 ;; Defined at:
  4708 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  4709 ;; Parameters:    Size  Location     Type
  4710 ;;  dividend        2    4[COMRAM] int 
  4711 ;;  divisor         2    6[COMRAM] int 
  4712 ;; Auto vars:     Size  Location     Type
  4713 ;;  quotient        2   10[COMRAM] int 
  4714 ;;  sign            1    9[COMRAM] unsigned char 
  4715 ;;  counter         1    8[COMRAM] unsigned char 
  4716 ;; Return value:  Size  Location     Type
  4717 ;;                  2    4[COMRAM] int 
  4718 ;; Registers used:
  4719 ;;		wreg, status,2, status,0
  4720 ;; Tracked objects:
  4721 ;;		On entry : 0/0
  4722 ;;		On exit  : 0/0
  4723 ;;		Unchanged: 0/0
  4724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4725 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4726 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4728 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4729 ;;Total ram usage:        8 bytes
  4730 ;; Hardware stack levels used: 1
  4731 ;; Hardware stack levels required when called: 2
  4732 ;; This function calls:
  4733 ;;		Nothing
  4734 ;; This function is called by:
  4735 ;;		_sun_sync
  4736 ;; This function uses a non-reentrant model
  4737 ;;
  4738                           
  4739                           	psect	text25
  4740  00213A                     __ptext25:
  4741                           	callstack 0
  4742  00213A                     ___awdiv:
  4743                           	callstack 26
  4744  00213A  0E00               	movlw	0
  4745  00213C  6E0A               	movwf	___awdiv@sign^0,c
  4746  00213E  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  4747  002140  EFA6  F010         	goto	u3990
  4748  002144  EFA4  F010         	goto	u3991
  4749  002148                     u3991:
  4750  002148  EFAC  F010         	goto	l3381
  4751  00214C                     u3990:
  4752  00214C  6C07               	negf	___awdiv@divisor^0,c
  4753  00214E  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  4754  002150  B0D8               	btfsc	status,0,c
  4755  002152  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  4756  002154  0E01               	movlw	1
  4757  002156  6E0A               	movwf	___awdiv@sign^0,c
  4758  002158                     l3381:
  4759  002158  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  4760  00215A  EFB3  F010         	goto	u4000
  4761  00215E  EFB1  F010         	goto	u4001
  4762  002162                     u4001:
  4763  002162  EFB9  F010         	goto	l3387
  4764  002166                     u4000:
  4765  002166  6C05               	negf	___awdiv@dividend^0,c
  4766  002168  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  4767  00216A  B0D8               	btfsc	status,0,c
  4768  00216C  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  4769  00216E  0E01               	movlw	1
  4770  002170  1A0A               	xorwf	___awdiv@sign^0,f,c
  4771  002172                     l3387:
  4772  002172  0E00               	movlw	0
  4773  002174  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  4774  002176  0E00               	movlw	0
  4775  002178  6E0B               	movwf	___awdiv@quotient^0,c
  4776  00217A  5007               	movf	___awdiv@divisor^0,w,c
  4777  00217C  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  4778  00217E  B4D8               	btfsc	status,2,c
  4779  002180  EFC4  F010         	goto	u4011
  4780  002184  EFC6  F010         	goto	u4010
  4781  002188                     u4011:
  4782  002188  EFEE  F010         	goto	l3409
  4783  00218C                     u4010:
  4784  00218C  0E01               	movlw	1
  4785  00218E  6E09               	movwf	___awdiv@counter^0,c
  4786  002190  EFCE  F010         	goto	l3395
  4787  002194                     l3393:
  4788  002194  90D8               	bcf	status,0,c
  4789  002196  3607               	rlcf	___awdiv@divisor^0,f,c
  4790  002198  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  4791  00219A  2A09               	incf	___awdiv@counter^0,f,c
  4792  00219C                     l3395:
  4793  00219C  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  4794  00219E  EFD3  F010         	goto	u4021
  4795  0021A2  EFD5  F010         	goto	u4020
  4796  0021A6                     u4021:
  4797  0021A6  EFCA  F010         	goto	l3393
  4798  0021AA                     u4020:
  4799  0021AA                     l3397:
  4800  0021AA  90D8               	bcf	status,0,c
  4801  0021AC  360B               	rlcf	___awdiv@quotient^0,f,c
  4802  0021AE  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  4803  0021B0  5007               	movf	___awdiv@divisor^0,w,c
  4804  0021B2  5C05               	subwf	___awdiv@dividend^0,w,c
  4805  0021B4  5008               	movf	(___awdiv@divisor+1)^0,w,c
  4806  0021B6  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  4807  0021B8  A0D8               	btfss	status,0,c
  4808  0021BA  EFE1  F010         	goto	u4031
  4809  0021BE  EFE3  F010         	goto	u4030
  4810  0021C2                     u4031:
  4811  0021C2  EFE8  F010         	goto	l3405
  4812  0021C6                     u4030:
  4813  0021C6  5007               	movf	___awdiv@divisor^0,w,c
  4814  0021C8  5E05               	subwf	___awdiv@dividend^0,f,c
  4815  0021CA  5008               	movf	(___awdiv@divisor+1)^0,w,c
  4816  0021CC  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  4817  0021CE  800B               	bsf	___awdiv@quotient^0,0,c
  4818  0021D0                     l3405:
  4819  0021D0  90D8               	bcf	status,0,c
  4820  0021D2  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  4821  0021D4  3207               	rrcf	___awdiv@divisor^0,f,c
  4822  0021D6  2E09               	decfsz	___awdiv@counter^0,f,c
  4823  0021D8  EFD5  F010         	goto	l3397
  4824  0021DC                     l3409:
  4825  0021DC  500A               	movf	___awdiv@sign^0,w,c
  4826  0021DE  B4D8               	btfsc	status,2,c
  4827  0021E0  EFF4  F010         	goto	u4041
  4828  0021E4  EFF6  F010         	goto	u4040
  4829  0021E8                     u4041:
  4830  0021E8  EFFA  F010         	goto	l3413
  4831  0021EC                     u4040:
  4832  0021EC  6C0B               	negf	___awdiv@quotient^0,c
  4833  0021EE  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  4834  0021F0  B0D8               	btfsc	status,0,c
  4835  0021F2  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  4836  0021F4                     l3413:
  4837  0021F4  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  4838  0021F8  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  4839  0021FC  0012               	return		;funcret
  4840  0021FE                     __end_of___awdiv:
  4841                           	callstack 0
  4842                           
  4843 ;; *************** function _Timer0_init *****************
  4844 ;; Defined at:
  4845 ;;		line 9 in file "timers.c"
  4846 ;; Parameters:    Size  Location     Type
  4847 ;;		None
  4848 ;; Auto vars:     Size  Location     Type
  4849 ;;		None
  4850 ;; Return value:  Size  Location     Type
  4851 ;;                  1    wreg      void 
  4852 ;; Registers used:
  4853 ;;		wreg, status,2
  4854 ;; Tracked objects:
  4855 ;;		On entry : 0/0
  4856 ;;		On exit  : 0/0
  4857 ;;		Unchanged: 0/0
  4858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4863 ;;Total ram usage:        0 bytes
  4864 ;; Hardware stack levels used: 1
  4865 ;; Hardware stack levels required when called: 2
  4866 ;; This function calls:
  4867 ;;		Nothing
  4868 ;; This function is called by:
  4869 ;;		_main
  4870 ;; This function uses a non-reentrant model
  4871 ;;
  4872                           
  4873                           	psect	text26
  4874  0029C0                     __ptext26:
  4875                           	callstack 0
  4876  0029C0                     _Timer0_init:
  4877                           	callstack 28
  4878  0029C0                     
  4879                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
  4880  0029C0  50D6               	movf	214,w,c	;volatile
  4881  0029C2  0B1F               	andlw	-225
  4882  0029C4  0940               	iorlw	64
  4883  0029C6  6ED6               	movwf	214,c	;volatile
  4884  0029C8                     
  4885                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
  4886  0029C8  88D6               	bsf	214,4,c	;volatile
  4887                           
  4888                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b0000;
  4889  0029CA  0EF0               	movlw	-16
  4890  0029CC  16D6               	andwf	214,f,c	;volatile
  4891  0029CE                     
  4892                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
  4893  0029CE  88D5               	bsf	213,4,c	;volatile
  4894                           
  4895                           ;timers.c: 15:     TMR0H=0b11101110;
  4896  0029D0  0EEE               	movlw	238
  4897  0029D2  6ED4               	movwf	212,c	;volatile
  4898                           
  4899                           ;timers.c: 16:     TMR0L=0b10100011;
  4900  0029D4  0EA3               	movlw	163
  4901  0029D6  6ED3               	movwf	211,c	;volatile
  4902  0029D8                     
  4903                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  4904  0029D8  8ED5               	bsf	213,7,c	;volatile
  4905  0029DA  0012               	return		;funcret
  4906  0029DC                     __end_of_Timer0_init:
  4907                           	callstack 0
  4908                           
  4909 ;; *************** function _LEDarray_init *****************
  4910 ;; Defined at:
  4911 ;;		line 9 in file "LEDarray.c"
  4912 ;; Parameters:    Size  Location     Type
  4913 ;;		None
  4914 ;; Auto vars:     Size  Location     Type
  4915 ;;		None
  4916 ;; Return value:  Size  Location     Type
  4917 ;;                  1    wreg      void 
  4918 ;; Registers used:
  4919 ;;		None
  4920 ;; Tracked objects:
  4921 ;;		On entry : 0/0
  4922 ;;		On exit  : 0/0
  4923 ;;		Unchanged: 0/0
  4924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4929 ;;Total ram usage:        0 bytes
  4930 ;; Hardware stack levels used: 1
  4931 ;; Hardware stack levels required when called: 2
  4932 ;; This function calls:
  4933 ;;		Nothing
  4934 ;; This function is called by:
  4935 ;;		_main
  4936 ;; This function uses a non-reentrant model
  4937 ;;
  4938                           
  4939                           	psect	text27
  4940  002936                     __ptext27:
  4941                           	callstack 0
  4942  002936                     _LEDarray_init:
  4943                           	callstack 28
  4944  002936                     
  4945                           ;LEDarray.c: 11:     LATGbits.LATG0 = 0;
  4946  002936  907F               	bcf	127,0,c	;volatile
  4947                           
  4948                           ;LEDarray.c: 12:     LATGbits.LATG1 = 0;
  4949  002938  927F               	bcf	127,1,c	;volatile
  4950                           
  4951                           ;LEDarray.c: 13:     LATAbits.LATA2 = 0;
  4952  00293A  9479               	bcf	121,2,c	;volatile
  4953                           
  4954                           ;LEDarray.c: 14:     LATFbits.LATF6 = 0;
  4955  00293C  9C7E               	bcf	126,6,c	;volatile
  4956                           
  4957                           ;LEDarray.c: 15:     LATAbits.LATA4 = 0;
  4958  00293E  9879               	bcf	121,4,c	;volatile
  4959                           
  4960                           ;LEDarray.c: 16:     LATAbits.LATA5 = 0;
  4961  002940  9A79               	bcf	121,5,c	;volatile
  4962                           
  4963                           ;LEDarray.c: 17:     LATFbits.LATF0 = 0;
  4964  002942  907E               	bcf	126,0,c	;volatile
  4965                           
  4966                           ;LEDarray.c: 18:     LATBbits.LATB0 = 0;
  4967  002944  907A               	bcf	122,0,c	;volatile
  4968                           
  4969                           ;LEDarray.c: 19:     LATBbits.LATB1 = 0;
  4970  002946  927A               	bcf	122,1,c	;volatile
  4971                           
  4972                           ;LEDarray.c: 22:     TRISGbits.TRISG0 = 0;
  4973  002948  9087               	bcf	135,0,c	;volatile
  4974                           
  4975                           ;LEDarray.c: 23:     TRISGbits.TRISG1 = 0;
  4976  00294A  9287               	bcf	135,1,c	;volatile
  4977                           
  4978                           ;LEDarray.c: 24:     TRISAbits.TRISA2 = 0;
  4979  00294C  9481               	bcf	129,2,c	;volatile
  4980                           
  4981                           ;LEDarray.c: 25:     TRISFbits.TRISF6 = 0;
  4982  00294E  9C86               	bcf	134,6,c	;volatile
  4983                           
  4984                           ;LEDarray.c: 26:     TRISAbits.TRISA4 = 0;
  4985  002950  9881               	bcf	129,4,c	;volatile
  4986                           
  4987                           ;LEDarray.c: 27:     TRISAbits.TRISA5 = 0;
  4988  002952  9A81               	bcf	129,5,c	;volatile
  4989                           
  4990                           ;LEDarray.c: 28:     TRISFbits.TRISF0 = 0;
  4991  002954  9086               	bcf	134,0,c	;volatile
  4992                           
  4993                           ;LEDarray.c: 29:     TRISBbits.TRISB0 = 0;
  4994  002956  9082               	bcf	130,0,c	;volatile
  4995                           
  4996                           ;LEDarray.c: 30:     TRISBbits.TRISB1 = 0;
  4997  002958  9282               	bcf	130,1,c	;volatile
  4998  00295A  0012               	return		;funcret
  4999  00295C                     __end_of_LEDarray_init:
  5000                           	callstack 0
  5001                           
  5002 ;; *************** function _LEDarray_disp_bin *****************
  5003 ;; Defined at:
  5004 ;;		line 37 in file "LEDarray.c"
  5005 ;; Parameters:    Size  Location     Type
  5006 ;;  number          1    wreg     char 
  5007 ;; Auto vars:     Size  Location     Type
  5008 ;;  number          1    6[COMRAM] char 
  5009 ;; Return value:  Size  Location     Type
  5010 ;;                  1    wreg      void 
  5011 ;; Registers used:
  5012 ;;		wreg, status,2
  5013 ;; Tracked objects:
  5014 ;;		On entry : 0/0
  5015 ;;		On exit  : 0/0
  5016 ;;		Unchanged: 0/0
  5017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5019 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5020 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5021 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5022 ;;Total ram usage:        3 bytes
  5023 ;; Hardware stack levels used: 1
  5024 ;; Hardware stack levels required when called: 2
  5025 ;; This function calls:
  5026 ;;		Nothing
  5027 ;; This function is called by:
  5028 ;;		_main
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031                           
  5032                           	psect	text28
  5033  001D9C                     __ptext28:
  5034                           	callstack 0
  5035  001D9C                     _LEDarray_disp_bin:
  5036                           	callstack 28
  5037                           
  5038                           ;incstack = 0
  5039                           ;LEDarray_disp_bin@number stored from wreg
  5040  001D9C  6E07               	movwf	LEDarray_disp_bin@number^0,c
  5041  001D9E                     
  5042                           ;LEDarray.c: 40:     if (number & 0b000000001) {LATGbits.LATG0 = 1;} else {LATGbits.LATG
      +                          0 = 0;}
  5043  001D9E  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  5044  001DA2  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  5045  001DA4  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  5046  001DA6  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  5047  001DA8  A005               	btfss	??_LEDarray_disp_bin^0,0,c
  5048  001DAA  EFD9  F00E         	goto	u4791
  5049  001DAE  EFDB  F00E         	goto	u4790
  5050  001DB2                     u4791:
  5051  001DB2  EFDE  F00E         	goto	l81
  5052  001DB6                     u4790:
  5053  001DB6  807F               	bsf	127,0,c	;volatile
  5054  001DB8  EFDF  F00E         	goto	l3755
  5055  001DBC                     l81:
  5056  001DBC  907F               	bcf	127,0,c	;volatile
  5057  001DBE                     l3755:
  5058                           
  5059                           ;LEDarray.c: 41:     if (number & 0b000000010) {LATGbits.LATG1 = 1;} else {LATGbits.LATG
      +                          1 = 0;}
  5060  001DBE  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  5061  001DC2  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  5062  001DC4  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  5063  001DC6  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  5064  001DC8  A205               	btfss	??_LEDarray_disp_bin^0,1,c
  5065  001DCA  EFE9  F00E         	goto	u4801
  5066  001DCE  EFEB  F00E         	goto	u4800
  5067  001DD2                     u4801:
  5068  001DD2  EFEE  F00E         	goto	l83
  5069  001DD6                     u4800:
  5070  001DD6  827F               	bsf	127,1,c	;volatile
  5071  001DD8  EFEF  F00E         	goto	l3759
  5072  001DDC                     l83:
  5073  001DDC  927F               	bcf	127,1,c	;volatile
  5074  001DDE                     l3759:
  5075                           
  5076                           ;LEDarray.c: 42:     if (number & 0b000000100) {LATAbits.LATA2 = 1;} else {LATAbits.LATA
      +                          2 = 0;}
  5077  001DDE  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  5078  001DE2  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  5079  001DE4  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  5080  001DE6  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  5081  001DE8  A405               	btfss	??_LEDarray_disp_bin^0,2,c
  5082  001DEA  EFF9  F00E         	goto	u4811
  5083  001DEE  EFFB  F00E         	goto	u4810
  5084  001DF2                     u4811:
  5085  001DF2  EFFE  F00E         	goto	l85
  5086  001DF6                     u4810:
  5087  001DF6  8479               	bsf	121,2,c	;volatile
  5088  001DF8  EFFF  F00E         	goto	l3763
  5089  001DFC                     l85:
  5090  001DFC  9479               	bcf	121,2,c	;volatile
  5091  001DFE                     l3763:
  5092                           
  5093                           ;LEDarray.c: 43:     if (number & 0b000001000) {LATFbits.LATF6 = 1;} else {LATFbits.LATF
      +                          6 = 0;}
  5094  001DFE  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  5095  001E02  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  5096  001E04  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  5097  001E06  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  5098  001E08  A605               	btfss	??_LEDarray_disp_bin^0,3,c
  5099  001E0A  EF09  F00F         	goto	u4821
  5100  001E0E  EF0B  F00F         	goto	u4820
  5101  001E12                     u4821:
  5102  001E12  EF0E  F00F         	goto	l87
  5103  001E16                     u4820:
  5104  001E16  8C7E               	bsf	126,6,c	;volatile
  5105  001E18  EF0F  F00F         	goto	l3767
  5106  001E1C                     l87:
  5107  001E1C  9C7E               	bcf	126,6,c	;volatile
  5108  001E1E                     l3767:
  5109                           
  5110                           ;LEDarray.c: 44:     if (number & 0b000010000) {LATAbits.LATA4 = 1;} else {LATAbits.LATA
      +                          4 = 0;}
  5111  001E1E  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  5112  001E22  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  5113  001E24  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  5114  001E26  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  5115  001E28  A805               	btfss	??_LEDarray_disp_bin^0,4,c
  5116  001E2A  EF19  F00F         	goto	u4831
  5117  001E2E  EF1B  F00F         	goto	u4830
  5118  001E32                     u4831:
  5119  001E32  EF1E  F00F         	goto	l89
  5120  001E36                     u4830:
  5121  001E36  8879               	bsf	121,4,c	;volatile
  5122  001E38  EF1F  F00F         	goto	l3771
  5123  001E3C                     l89:
  5124  001E3C  9879               	bcf	121,4,c	;volatile
  5125  001E3E                     l3771:
  5126                           
  5127                           ;LEDarray.c: 45:     if (number & 0b000100000) {LATAbits.LATA5 = 1;} else {LATAbits.LATA
      +                          5 = 0;}
  5128  001E3E  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  5129  001E42  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  5130  001E44  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  5131  001E46  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  5132  001E48  AA05               	btfss	??_LEDarray_disp_bin^0,5,c
  5133  001E4A  EF29  F00F         	goto	u4841
  5134  001E4E  EF2B  F00F         	goto	u4840
  5135  001E52                     u4841:
  5136  001E52  EF2E  F00F         	goto	l91
  5137  001E56                     u4840:
  5138  001E56  8A79               	bsf	121,5,c	;volatile
  5139  001E58  EF2F  F00F         	goto	l3775
  5140  001E5C                     l91:
  5141  001E5C  9A79               	bcf	121,5,c	;volatile
  5142  001E5E                     l3775:
  5143                           
  5144                           ;LEDarray.c: 46:     if (number & 0b001000000) {LATFbits.LATF0 = 1;} else {LATFbits.LATF
      +                          0 = 0;}
  5145  001E5E  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  5146  001E62  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  5147  001E64  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  5148  001E66  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  5149  001E68  AC05               	btfss	??_LEDarray_disp_bin^0,6,c
  5150  001E6A  EF39  F00F         	goto	u4851
  5151  001E6E  EF3B  F00F         	goto	u4850
  5152  001E72                     u4851:
  5153  001E72  EF3E  F00F         	goto	l93
  5154  001E76                     u4850:
  5155  001E76  807E               	bsf	126,0,c	;volatile
  5156  001E78  EF3F  F00F         	goto	l3779
  5157  001E7C                     l93:
  5158  001E7C  907E               	bcf	126,0,c	;volatile
  5159  001E7E                     l3779:
  5160                           
  5161                           ;LEDarray.c: 47:     if (number & 0b010000000) {LATBbits.LATB0 = 1;} else {LATBbits.LATB
      +                          0 = 0;}
  5162  001E7E  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  5163  001E82  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  5164  001E84  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  5165  001E86  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  5166  001E88  AE05               	btfss	??_LEDarray_disp_bin^0,7,c
  5167  001E8A  EF49  F00F         	goto	u4861
  5168  001E8E  EF4B  F00F         	goto	u4860
  5169  001E92                     u4861:
  5170  001E92  EF4E  F00F         	goto	l95
  5171  001E96                     u4860:
  5172  001E96  807A               	bsf	122,0,c	;volatile
  5173  001E98  EF4F  F00F         	goto	l3783
  5174  001E9C                     l95:
  5175  001E9C  907A               	bcf	122,0,c	;volatile
  5176  001E9E                     l3783:
  5177                           
  5178                           ;LEDarray.c: 48:     if (number & 0b100000000) {LATBbits.LATB1 = 1;} else {LATBbits.LATB
      +                          1 = 0;}
  5179  001E9E  C007  F005         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  5180  001EA2  6A06               	clrf	(??_LEDarray_disp_bin+1)^0,c
  5181  001EA4  BE05               	btfsc	??_LEDarray_disp_bin^0,7,c
  5182  001EA6  0606               	decf	(??_LEDarray_disp_bin+1)^0,f,c
  5183  001EA8  A006               	btfss	(??_LEDarray_disp_bin+1)^0,0,c
  5184  001EAA  EF59  F00F         	goto	u4871
  5185  001EAE  EF5B  F00F         	goto	u4870
  5186  001EB2                     u4871:
  5187  001EB2  EF5E  F00F         	goto	l97
  5188  001EB6                     u4870:
  5189  001EB6  827A               	bsf	122,1,c	;volatile
  5190  001EB8  EF5F  F00F         	goto	l99
  5191  001EBC                     l97:
  5192  001EBC  927A               	bcf	122,1,c	;volatile
  5193  001EBE                     l99:
  5194  001EBE  0012               	return		;funcret
  5195  001EC0                     __end_of_LEDarray_disp_bin:
  5196                           	callstack 0
  5197                           
  5198 ;; *************** function _LED_toggle *****************
  5199 ;; Defined at:
  5200 ;;		line 40 in file "LED.c"
  5201 ;; Parameters:    Size  Location     Type
  5202 ;;  current        11   15[COMRAM] struct .
  5203 ;; Auto vars:     Size  Location     Type
  5204 ;;		None
  5205 ;; Return value:  Size  Location     Type
  5206 ;;                  11   15[COMRAM] struct .
  5207 ;; Registers used:
  5208 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  5209 ;; Tracked objects:
  5210 ;;		On entry : 0/0
  5211 ;;		On exit  : 0/0
  5212 ;;		Unchanged: 0/0
  5213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5214 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5216 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5217 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5218 ;;Total ram usage:       12 bytes
  5219 ;; Hardware stack levels used: 1
  5220 ;; Hardware stack levels required when called: 3
  5221 ;; This function calls:
  5222 ;;		_ADC_getval
  5223 ;;		_sunrise
  5224 ;; This function is called by:
  5225 ;;		_main
  5226 ;; This function uses a non-reentrant model
  5227 ;;
  5228                           
  5229                           	psect	text29
  5230  0021FE                     __ptext29:
  5231                           	callstack 0
  5232  0021FE                     _LED_toggle:
  5233                           	callstack 27
  5234  0021FE                     
  5235                           ;LED.c: 41:     if (current.hour==1 && current.minute==0 && current.second==0) {
  5236  0021FE  0415               	decf	(LED_toggle@current+5)^0,w,c
  5237  002200  A4D8               	btfss	status,2,c
  5238  002202  EF05  F011         	goto	u4691
  5239  002206  EF07  F011         	goto	u4690
  5240  00220A                     u4691:
  5241  00220A  EF1C  F011         	goto	l3733
  5242  00220E                     u4690:
  5243  00220E  5016               	movf	(LED_toggle@current+6)^0,w,c
  5244  002210  A4D8               	btfss	status,2,c
  5245  002212  EF0D  F011         	goto	u4701
  5246  002216  EF0F  F011         	goto	u4700
  5247  00221A                     u4701:
  5248  00221A  EF1C  F011         	goto	l3733
  5249  00221E                     u4700:
  5250  00221E  5017               	movf	(LED_toggle@current+7)^0,w,c
  5251  002220  A4D8               	btfss	status,2,c
  5252  002222  EF15  F011         	goto	u4711
  5253  002226  EF17  F011         	goto	u4710
  5254  00222A                     u4711:
  5255  00222A  EF1C  F011         	goto	l3733
  5256  00222E                     u4710:
  5257  00222E                     
  5258                           ;LED.c: 42:         PIE2bits.C1IE = 0;
  5259  00222E  010E               	movlb	14	; () banked
  5260  002230  912B               	bcf	43,0,b	;volatile
  5261                           
  5262                           ;LED.c: 43:         LATDbits.LATD7 = 0;
  5263  002232  9E7C               	bcf	124,7,c	;volatile
  5264                           
  5265                           ;LED.c: 44:     } else if (current.hour==5 && current.minute==0 && current.second==0) {
  5266  002234  EF57  F011         	goto	l3747
  5267  002238                     l3733:
  5268  002238  0E05               	movlw	5
  5269  00223A  1815               	xorwf	(LED_toggle@current+5)^0,w,c
  5270  00223C  A4D8               	btfss	status,2,c
  5271  00223E  EF23  F011         	goto	u4721
  5272  002242  EF25  F011         	goto	u4720
  5273  002246                     u4721:
  5274  002246  EF57  F011         	goto	l3747
  5275  00224A                     u4720:
  5276  00224A  5016               	movf	(LED_toggle@current+6)^0,w,c
  5277  00224C  A4D8               	btfss	status,2,c
  5278  00224E  EF2B  F011         	goto	u4731
  5279  002252  EF2D  F011         	goto	u4730
  5280  002256                     u4731:
  5281  002256  EF57  F011         	goto	l3747
  5282  00225A                     u4730:
  5283  00225A  5017               	movf	(LED_toggle@current+7)^0,w,c
  5284  00225C  A4D8               	btfss	status,2,c
  5285  00225E  EF33  F011         	goto	u4741
  5286  002262  EF35  F011         	goto	u4740
  5287  002266                     u4741:
  5288  002266  EF57  F011         	goto	l3747
  5289  00226A                     u4740:
  5290  00226A                     
  5291                           ;LED.c: 45:         PIE2bits.C1IE = 1;
  5292  00226A  010E               	movlb	14	; () banked
  5293  00226C  812B               	bsf	43,0,b	;volatile
  5294  00226E                     
  5295                           ; BSR set to: 14
  5296                           ;LED.c: 46:         if (ADC_getval()>=0b11011110) {LATDbits.LATD7 = 1;}
  5297  00226E  ECFB  F014         	call	_ADC_getval	;wreg free
  5298  002272  6E1B               	movwf	??_LED_toggle^0,c
  5299  002274  0EDD               	movlw	221
  5300  002276  641B               	cpfsgt	??_LED_toggle^0,c
  5301  002278  EF40  F011         	goto	u4751
  5302  00227C  EF42  F011         	goto	u4750
  5303  002280                     u4751:
  5304  002280  EF45  F011         	goto	l3745
  5305  002284                     u4750:
  5306  002284  8E7C               	bsf	124,7,c	;volatile
  5307  002286  EF57  F011         	goto	l3747
  5308  00228A                     l3745:
  5309  00228A  EE20  F010         	lfsr	2,LED_toggle@current
  5310  00228E  EE00  F005         	lfsr	0,sunrise@current
  5311  002292  0E0A               	movlw	10
  5312  002294                     u4761:
  5313  002294  CFDB FFEB          	movff	plusw2,plusw0
  5314  002298  06E8               	decf	wreg,f,c
  5315  00229A  E2FC               	bc	u4761
  5316  00229C  ECC1  F014         	call	_sunrise	;wreg free
  5317  0022A0  EE20  F010         	lfsr	2,LED_toggle@current
  5318  0022A4  0E0A               	movlw	10
  5319  0022A6                     u4771:
  5320  0022A6  CFEB FFDB          	movff	plusw0,plusw2
  5321  0022AA  06E8               	decf	wreg,f,c
  5322  0022AC  E2FC               	bc	u4771
  5323  0022AE                     l3747:
  5324                           
  5325                           ;LED.c: 50:     return current;
  5326  0022AE  EE20  F010         	lfsr	2,LED_toggle@current
  5327  0022B2  EE00  F010         	lfsr	0,?_LED_toggle
  5328  0022B6  0E0A               	movlw	10
  5329  0022B8                     u4781:
  5330  0022B8  CFDB FFEB          	movff	plusw2,plusw0
  5331  0022BC  06E8               	decf	wreg,f,c
  5332  0022BE  E2FC               	bc	u4781
  5333  0022C0  0012               	return		;funcret
  5334  0022C2                     __end_of_LED_toggle:
  5335                           	callstack 0
  5336                           
  5337 ;; *************** function _sunrise *****************
  5338 ;; Defined at:
  5339 ;;		line 90 in file "dateandtime.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;  current        11    4[COMRAM] struct .
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;		None
  5344 ;; Return value:  Size  Location     Type
  5345 ;;                  11    4[COMRAM] struct .
  5346 ;; Registers used:
  5347 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  5348 ;; Tracked objects:
  5349 ;;		On entry : 0/0
  5350 ;;		On exit  : 0/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5353 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5356 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5357 ;;Total ram usage:       11 bytes
  5358 ;; Hardware stack levels used: 1
  5359 ;; Hardware stack levels required when called: 2
  5360 ;; This function calls:
  5361 ;;		Nothing
  5362 ;; This function is called by:
  5363 ;;		_LED_toggle
  5364 ;;		_sunrise_sunset
  5365 ;; This function uses a non-reentrant model
  5366 ;;
  5367                           
  5368                           	psect	text30
  5369  002982                     __ptext30:
  5370                           	callstack 0
  5371  002982                     _sunrise:
  5372                           	callstack 27
  5373  002982                     
  5374                           ;dateandtime.c: 91:     current.sunrise_hour = current.hour;
  5375  002982  C00A  F00D         	movff	sunrise@current+5,sunrise@current+8
  5376                           
  5377                           ;dateandtime.c: 92:     current.sunrise_minute = current.minute;
  5378  002986  C00B  F00E         	movff	sunrise@current+6,sunrise@current+9
  5379                           
  5380                           ;dateandtime.c: 93:     current.sunrise_second = current.second;
  5381  00298A  C00C  F00F         	movff	sunrise@current+7,sunrise@current+10
  5382  00298E                     
  5383                           ;dateandtime.c: 95:     return current;
  5384  00298E  EE20  F005         	lfsr	2,sunrise@current
  5385  002992  EE00  F005         	lfsr	0,?_sunrise
  5386  002996  0E0A               	movlw	10
  5387  002998                     u4111:
  5388  002998  CFDB FFEB          	movff	plusw2,plusw0
  5389  00299C  06E8               	decf	wreg,f,c
  5390  00299E  E2FC               	bc	u4111
  5391  0029A0  0012               	return		;funcret
  5392  0029A2                     __end_of_sunrise:
  5393                           	callstack 0
  5394                           
  5395 ;; *************** function _LED2_init *****************
  5396 ;; Defined at:
  5397 ;;		line 29 in file "LED.c"
  5398 ;; Parameters:    Size  Location     Type
  5399 ;;		None
  5400 ;; Auto vars:     Size  Location     Type
  5401 ;;		None
  5402 ;; Return value:  Size  Location     Type
  5403 ;;                  1    wreg      void 
  5404 ;; Registers used:
  5405 ;;		None
  5406 ;; Tracked objects:
  5407 ;;		On entry : 0/0
  5408 ;;		On exit  : 0/0
  5409 ;;		Unchanged: 0/0
  5410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5415 ;;Total ram usage:        0 bytes
  5416 ;; Hardware stack levels used: 1
  5417 ;; Hardware stack levels required when called: 2
  5418 ;; This function calls:
  5419 ;;		Nothing
  5420 ;; This function is called by:
  5421 ;;		_main
  5422 ;; This function uses a non-reentrant model
  5423 ;;
  5424                           
  5425                           	psect	text31
  5426  002A42                     __ptext31:
  5427                           	callstack 0
  5428  002A42                     _LED2_init:
  5429                           	callstack 28
  5430  002A42                     
  5431                           ;LED.c: 30:     LATHbits.LATH3 = 1;
  5432  002A42  8680               	bsf	128,3,c	;volatile
  5433                           
  5434                           ;LED.c: 31:     TRISHbits.TRISH3 = 0;
  5435  002A44  9688               	bcf	136,3,c	;volatile
  5436  002A46  0012               	return		;funcret
  5437  002A48                     __end_of_LED2_init:
  5438                           	callstack 0
  5439                           
  5440 ;; *************** function _LED1_init *****************
  5441 ;; Defined at:
  5442 ;;		line 10 in file "LED.c"
  5443 ;; Parameters:    Size  Location     Type
  5444 ;;  current        11    5[COMRAM] struct .
  5445 ;; Auto vars:     Size  Location     Type
  5446 ;;		None
  5447 ;; Return value:  Size  Location     Type
  5448 ;;                  1    wreg      void 
  5449 ;; Registers used:
  5450 ;;		wreg, status,2, status,0, cstack
  5451 ;; Tracked objects:
  5452 ;;		On entry : 0/0
  5453 ;;		On exit  : 0/0
  5454 ;;		Unchanged: 0/0
  5455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5456 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5458 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5459 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5460 ;;Total ram usage:       12 bytes
  5461 ;; Hardware stack levels used: 1
  5462 ;; Hardware stack levels required when called: 3
  5463 ;; This function calls:
  5464 ;;		_ADC_getval
  5465 ;; This function is called by:
  5466 ;;		_main
  5467 ;; This function uses a non-reentrant model
  5468 ;;
  5469                           
  5470                           	psect	text32
  5471  00275E                     __ptext32:
  5472                           	callstack 0
  5473  00275E                     _LED1_init:
  5474                           	callstack 27
  5475  00275E                     
  5476                           ;LED.c: 18:     if ((current.hour<1||current.hour>=5) && (ADC_getval()>=0b11011110)) {
  5477  00275E  500B               	movf	(LED1_init@current+5)^0,w,c
  5478  002760  0A80               	xorlw	128
  5479  002762  0F7F               	addlw	-129
  5480  002764  A0D8               	btfss	status,0,c
  5481  002766  EFB7  F013         	goto	u4471
  5482  00276A  EFB9  F013         	goto	u4470
  5483  00276E                     u4471:
  5484  00276E  EFC3  F013         	goto	l3619
  5485  002772                     u4470:
  5486  002772  500B               	movf	(LED1_init@current+5)^0,w,c
  5487  002774  0A80               	xorlw	128
  5488  002776  0F7B               	addlw	-133
  5489  002778  A0D8               	btfss	status,0,c
  5490  00277A  EFC1  F013         	goto	u4481
  5491  00277E  EFC3  F013         	goto	u4480
  5492  002782                     u4481:
  5493  002782  EFD1  F013         	goto	l249
  5494  002786                     u4480:
  5495  002786                     l3619:
  5496  002786  ECFB  F014         	call	_ADC_getval	;wreg free
  5497  00278A  6E11               	movwf	??_LED1_init^0,c
  5498  00278C  0EDD               	movlw	221
  5499  00278E  6411               	cpfsgt	??_LED1_init^0,c
  5500  002790  EFCC  F013         	goto	u4491
  5501  002794  EFCE  F013         	goto	u4490
  5502  002798                     u4491:
  5503  002798  EFD1  F013         	goto	l249
  5504  00279C                     u4490:
  5505  00279C                     
  5506                           ;LED.c: 19:         LATDbits.LATD7 = 1;
  5507  00279C  8E7C               	bsf	124,7,c	;volatile
  5508                           
  5509                           ;LED.c: 20:     } else {LATDbits.LATD7 = 0;}
  5510  00279E  EFD2  F013         	goto	l252
  5511  0027A2                     l249:
  5512  0027A2  9E7C               	bcf	124,7,c	;volatile
  5513  0027A4                     l252:
  5514                           
  5515                           ;LED.c: 22:     TRISDbits.TRISD7 = 0;
  5516  0027A4  9E84               	bcf	132,7,c	;volatile
  5517  0027A6  0012               	return		;funcret
  5518  0027A8                     __end_of_LED1_init:
  5519                           	callstack 0
  5520                           
  5521 ;; *************** function _ADC_getval *****************
  5522 ;; Defined at:
  5523 ;;		line 26 in file "ADC.c"
  5524 ;; Parameters:    Size  Location     Type
  5525 ;;		None
  5526 ;; Auto vars:     Size  Location     Type
  5527 ;;  tmpval          1    4[COMRAM] unsigned char 
  5528 ;; Return value:  Size  Location     Type
  5529 ;;                  1    wreg      unsigned char 
  5530 ;; Registers used:
  5531 ;;		wreg, status,2
  5532 ;; Tracked objects:
  5533 ;;		On entry : 0/0
  5534 ;;		On exit  : 0/0
  5535 ;;		Unchanged: 0/0
  5536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5538 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5540 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5541 ;;Total ram usage:        1 bytes
  5542 ;; Hardware stack levels used: 1
  5543 ;; Hardware stack levels required when called: 2
  5544 ;; This function calls:
  5545 ;;		Nothing
  5546 ;; This function is called by:
  5547 ;;		_LED1_init
  5548 ;;		_LED_toggle
  5549 ;; This function uses a non-reentrant model
  5550 ;;
  5551                           
  5552                           	psect	text33
  5553  0029F6                     __ptext33:
  5554                           	callstack 0
  5555  0029F6                     _ADC_getval:
  5556                           	callstack 27
  5557  0029F6                     
  5558                           ;ADC.c: 27:     unsigned char tmpval;;ADC.c: 29:     ADCON0bits.GO = 1;
  5559  0029F6  8060               	bsf	96,0,c	;volatile
  5560  0029F8                     l56:
  5561  0029F8  B060               	btfsc	96,0,c	;volatile
  5562  0029FA  EF01  F015         	goto	u4101
  5563  0029FE  EF03  F015         	goto	u4100
  5564  002A02                     u4101:
  5565  002A02  EFFC  F014         	goto	l56
  5566  002A06                     u4100:
  5567  002A06                     
  5568                           ;ADC.c: 31:     tmpval = ADRESH;
  5569  002A06  CF64 F005          	movff	3940,ADC_getval@tmpval	;volatile
  5570  002A0A                     
  5571                           ;ADC.c: 34:     return tmpval;
  5572  002A0A  5005               	movf	ADC_getval@tmpval^0,w,c
  5573  002A0C  0012               	return		;funcret
  5574  002A0E                     __end_of_ADC_getval:
  5575                           	callstack 0
  5576                           
  5577 ;; *************** function _LCD_init *****************
  5578 ;; Defined at:
  5579 ;;		line 52 in file "LCD.c"
  5580 ;; Parameters:    Size  Location     Type
  5581 ;;		None
  5582 ;; Auto vars:     Size  Location     Type
  5583 ;;		None
  5584 ;; Return value:  Size  Location     Type
  5585 ;;                  1    wreg      void 
  5586 ;; Registers used:
  5587 ;;		wreg, status,2, status,0, cstack
  5588 ;; Tracked objects:
  5589 ;;		On entry : 0/0
  5590 ;;		On exit  : 0/0
  5591 ;;		Unchanged: 0/0
  5592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5595 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5596 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5597 ;;Total ram usage:        2 bytes
  5598 ;; Hardware stack levels used: 1
  5599 ;; Hardware stack levels required when called: 5
  5600 ;; This function calls:
  5601 ;;		_LCD_sendbyte
  5602 ;;		_LCD_sendnibble
  5603 ;; This function is called by:
  5604 ;;		_main
  5605 ;; This function uses a non-reentrant model
  5606 ;;
  5607                           
  5608                           	psect	text34
  5609  002384                     __ptext34:
  5610                           	callstack 0
  5611  002384                     _LCD_init:
  5612                           	callstack 25
  5613  002384                     
  5614                           ;LCD.c: 55:     TRISCbits.TRISC6 =0;
  5615  002384  9C83               	bcf	131,6,c	;volatile
  5616                           
  5617                           ;LCD.c: 56:     TRISCbits.TRISC2=0;
  5618  002386  9483               	bcf	131,2,c	;volatile
  5619                           
  5620                           ;LCD.c: 57:     TRISBbits.TRISB3=0;
  5621  002388  9682               	bcf	130,3,c	;volatile
  5622                           
  5623                           ;LCD.c: 58:     TRISBbits.TRISB2=0;
  5624  00238A  9482               	bcf	130,2,c	;volatile
  5625                           
  5626                           ;LCD.c: 59:     TRISEbits.TRISE3=0;
  5627  00238C  9685               	bcf	133,3,c	;volatile
  5628                           
  5629                           ;LCD.c: 60:     TRISEbits.TRISE1=0;
  5630  00238E  9285               	bcf	133,1,c	;volatile
  5631                           
  5632                           ;LCD.c: 63:     LATCbits.LATC6 = 0;
  5633  002390  9C7B               	bcf	123,6,c	;volatile
  5634                           
  5635                           ;LCD.c: 64:     LATCbits.LATC2 = 0;
  5636  002392  947B               	bcf	123,2,c	;volatile
  5637                           
  5638                           ;LCD.c: 65:     LATBbits.LATB3 = 0;
  5639  002394  967A               	bcf	122,3,c	;volatile
  5640                           
  5641                           ;LCD.c: 66:     LATBbits.LATB2 = 0;
  5642  002396  947A               	bcf	122,2,c	;volatile
  5643                           
  5644                           ;LCD.c: 67:     LATEbits.LATE3 = 0;
  5645  002398  967D               	bcf	125,3,c	;volatile
  5646                           
  5647                           ;LCD.c: 68:     LATEbits.LATE1 = 0;
  5648  00239A  927D               	bcf	125,1,c	;volatile
  5649  00239C                     
  5650                           ;LCD.c: 74:     _delay((unsigned long)((45)*(64000000/4000.0)));
  5651  00239C  0E04               	movlw	4
  5652  00239E  6E09               	movwf	(??_LCD_init+1)^0,c
  5653  0023A0  0EA8               	movlw	168
  5654  0023A2  6E08               	movwf	??_LCD_init^0,c
  5655  0023A4  0E0C               	movlw	12
  5656  0023A6                     u5007:
  5657  0023A6  2EE8               	decfsz	wreg,f,c
  5658  0023A8  D7FE               	bra	u5007
  5659  0023AA  2E08               	decfsz	??_LCD_init^0,f,c
  5660  0023AC  D7FC               	bra	u5007
  5661  0023AE  2E09               	decfsz	(??_LCD_init+1)^0,f,c
  5662  0023B0  D7FA               	bra	u5007
  5663  0023B2                     
  5664                           ;LCD.c: 75:     LCD_sendnibble(0b0010);
  5665  0023B2  0E02               	movlw	2
  5666  0023B4  ECA7  F012         	call	_LCD_sendnibble
  5667  0023B8                     
  5668                           ;LCD.c: 76:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  5669  0023B8  0EF0               	movlw	240
  5670  0023BA                     u5017:
  5671  0023BA  2EE8               	decfsz	wreg,f,c
  5672  0023BC  D7FE               	bra	u5017
  5673  0023BE                     
  5674                           ;LCD.c: 77:     LCD_sendbyte(0b00101000,0);
  5675  0023BE  0E00               	movlw	0
  5676  0023C0  6E06               	movwf	LCD_sendbyte@type^0,c
  5677  0023C2  0E28               	movlw	40
  5678  0023C4  EC6E  F014         	call	_LCD_sendbyte
  5679  0023C8                     
  5680                           ;LCD.c: 78:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  5681  0023C8  0EF0               	movlw	240
  5682  0023CA                     u5027:
  5683  0023CA  2EE8               	decfsz	wreg,f,c
  5684  0023CC  D7FE               	bra	u5027
  5685  0023CE                     
  5686                           ;LCD.c: 79:     LCD_sendbyte(0b00101000,0);
  5687  0023CE  0E00               	movlw	0
  5688  0023D0  6E06               	movwf	LCD_sendbyte@type^0,c
  5689  0023D2  0E28               	movlw	40
  5690  0023D4  EC6E  F014         	call	_LCD_sendbyte
  5691  0023D8                     
  5692                           ;LCD.c: 80:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  5693  0023D8  0EF0               	movlw	240
  5694  0023DA                     u5037:
  5695  0023DA  2EE8               	decfsz	wreg,f,c
  5696  0023DC  D7FE               	bra	u5037
  5697  0023DE                     
  5698                           ;LCD.c: 83:     LCD_sendbyte(0b00001000,0);
  5699  0023DE  0E00               	movlw	0
  5700  0023E0  6E06               	movwf	LCD_sendbyte@type^0,c
  5701  0023E2  0E08               	movlw	8
  5702  0023E4  EC6E  F014         	call	_LCD_sendbyte
  5703  0023E8                     
  5704                           ;LCD.c: 84:     _delay((unsigned long)((45)*(64000000/4000000.0)));
  5705  0023E8  0EF0               	movlw	240
  5706  0023EA                     u5047:
  5707  0023EA  2EE8               	decfsz	wreg,f,c
  5708  0023EC  D7FE               	bra	u5047
  5709  0023EE                     
  5710                           ;LCD.c: 85:     LCD_sendbyte(0b00000001,0);
  5711  0023EE  0E00               	movlw	0
  5712  0023F0  6E06               	movwf	LCD_sendbyte@type^0,c
  5713  0023F2  0E01               	movlw	1
  5714  0023F4  EC6E  F014         	call	_LCD_sendbyte
  5715  0023F8                     
  5716                           ;LCD.c: 86:     _delay((unsigned long)((2)*(64000000/4000.0)));
  5717  0023F8  0E2A               	movlw	42
  5718  0023FA  6E08               	movwf	??_LCD_init^0,c
  5719  0023FC  0E8E               	movlw	142
  5720  0023FE                     u5057:
  5721  0023FE  2EE8               	decfsz	wreg,f,c
  5722  002400  D7FE               	bra	u5057
  5723  002402  2E08               	decfsz	??_LCD_init^0,f,c
  5724  002404  D7FC               	bra	u5057
  5725  002406                     
  5726                           ;LCD.c: 87:     LCD_sendbyte(0b00000110,0);
  5727  002406  0E00               	movlw	0
  5728  002408  6E06               	movwf	LCD_sendbyte@type^0,c
  5729  00240A  0E06               	movlw	6
  5730  00240C  EC6E  F014         	call	_LCD_sendbyte
  5731  002410                     
  5732                           ;LCD.c: 88:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  5733  002410  0EA0               	movlw	160
  5734  002412                     u5067:
  5735  002412  D000               	nop2	
  5736  002414  2EE8               	decfsz	wreg,f,c
  5737  002416  D7FD               	bra	u5067
  5738  002418                     
  5739                           ;LCD.c: 91:     LCD_sendbyte(0b00001100,0);
  5740  002418  0E00               	movlw	0
  5741  00241A  6E06               	movwf	LCD_sendbyte@type^0,c
  5742  00241C  0E0C               	movlw	12
  5743  00241E  EC6E  F014         	call	_LCD_sendbyte
  5744  002422                     
  5745                           ;LCD.c: 92:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  5746  002422  0EA0               	movlw	160
  5747  002424                     u5077:
  5748  002424  D000               	nop2	
  5749  002426  2EE8               	decfsz	wreg,f,c
  5750  002428  D7FD               	bra	u5077
  5751  00242A  0012               	return		;funcret
  5752  00242C                     __end_of_LCD_init:
  5753                           	callstack 0
  5754                           
  5755 ;; *************** function _LCD_sendbyte *****************
  5756 ;; Defined at:
  5757 ;;		line 34 in file "LCD.c"
  5758 ;; Parameters:    Size  Location     Type
  5759 ;;  Byte            1    wreg     unsigned char 
  5760 ;;  type            1    5[COMRAM] unsigned char 
  5761 ;; Auto vars:     Size  Location     Type
  5762 ;;  Byte            1    6[COMRAM] unsigned char 
  5763 ;; Return value:  Size  Location     Type
  5764 ;;                  1    wreg      void 
  5765 ;; Registers used:
  5766 ;;		wreg, status,2, status,0, cstack
  5767 ;; Tracked objects:
  5768 ;;		On entry : 0/0
  5769 ;;		On exit  : 0/0
  5770 ;;		Unchanged: 0/0
  5771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5772 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5773 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5775 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5776 ;;Total ram usage:        2 bytes
  5777 ;; Hardware stack levels used: 1
  5778 ;; Hardware stack levels required when called: 4
  5779 ;; This function calls:
  5780 ;;		_LCD_sendnibble
  5781 ;; This function is called by:
  5782 ;;		_LCD_init
  5783 ;;		_LCD_setline
  5784 ;;		_LCD_sendstring
  5785 ;;		_LCD_scroll
  5786 ;; This function uses a non-reentrant model
  5787 ;;
  5788                           
  5789                           	psect	text35
  5790  0028DC                     __ptext35:
  5791                           	callstack 0
  5792  0028DC                     _LCD_sendbyte:
  5793                           	callstack 24
  5794                           
  5795                           ;incstack = 0
  5796                           ;LCD_sendbyte@Byte stored from wreg
  5797  0028DC  6E07               	movwf	LCD_sendbyte@Byte^0,c
  5798  0028DE                     
  5799                           ;LCD.c: 34: void LCD_sendbyte(unsigned char Byte, char type);LCD.c: 35: {;LCD.c: 37:    
      +                           if (type) {LATCbits.LATC6 = 1;} else {LATCbits.LATC6 = 0;}
  5800  0028DE  5006               	movf	LCD_sendbyte@type^0,w,c
  5801  0028E0  B4D8               	btfsc	status,2,c
  5802  0028E2  EF75  F014         	goto	u3871
  5803  0028E6  EF77  F014         	goto	u3870
  5804  0028EA                     u3871:
  5805  0028EA  EF7A  F014         	goto	l210
  5806  0028EE                     u3870:
  5807  0028EE  8C7B               	bsf	123,6,c	;volatile
  5808  0028F0  EF7B  F014         	goto	l3263
  5809  0028F4                     l210:
  5810  0028F4  9C7B               	bcf	123,6,c	;volatile
  5811  0028F6                     l3263:
  5812                           
  5813                           ;LCD.c: 40:     LCD_sendnibble(Byte>>4);
  5814  0028F6  3807               	swapf	LCD_sendbyte@Byte^0,w,c
  5815  0028F8  0B0F               	andlw	15
  5816  0028FA  ECA7  F012         	call	_LCD_sendnibble
  5817                           
  5818                           ;LCD.c: 43:     LCD_sendnibble(Byte&0b00001111);
  5819  0028FE  5007               	movf	LCD_sendbyte@Byte^0,w,c
  5820  002900  0B0F               	andlw	15
  5821  002902  ECA7  F012         	call	_LCD_sendnibble
  5822  002906                     
  5823                           ;LCD.c: 46:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  5824  002906  0EA0               	movlw	160
  5825  002908                     u5087:
  5826  002908  D000               	nop2	
  5827  00290A  2EE8               	decfsz	wreg,f,c
  5828  00290C  D7FD               	bra	u5087
  5829  00290E  0012               	return		;funcret
  5830  002910                     __end_of_LCD_sendbyte:
  5831                           	callstack 0
  5832                           
  5833 ;; *************** function _LCD_sendnibble *****************
  5834 ;; Defined at:
  5835 ;;		line 18 in file "LCD.c"
  5836 ;; Parameters:    Size  Location     Type
  5837 ;;  number          1    wreg     unsigned char 
  5838 ;; Auto vars:     Size  Location     Type
  5839 ;;  number          1    4[COMRAM] unsigned char 
  5840 ;; Return value:  Size  Location     Type
  5841 ;;                  1    wreg      void 
  5842 ;; Registers used:
  5843 ;;		wreg, cstack
  5844 ;; Tracked objects:
  5845 ;;		On entry : 0/0
  5846 ;;		On exit  : 0/0
  5847 ;;		Unchanged: 0/0
  5848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5850 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5852 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5853 ;;Total ram usage:        1 bytes
  5854 ;; Hardware stack levels used: 1
  5855 ;; Hardware stack levels required when called: 3
  5856 ;; This function calls:
  5857 ;;		_LCD_E_TOG
  5858 ;; This function is called by:
  5859 ;;		_LCD_sendbyte
  5860 ;;		_LCD_init
  5861 ;; This function uses a non-reentrant model
  5862 ;;
  5863                           
  5864                           	psect	text36
  5865  00254E                     __ptext36:
  5866                           	callstack 0
  5867  00254E                     _LCD_sendnibble:
  5868                           	callstack 24
  5869                           
  5870                           ;incstack = 0
  5871                           ;LCD_sendnibble@number stored from wreg
  5872  00254E  6E05               	movwf	LCD_sendnibble@number^0,c
  5873  002550                     
  5874                           ;LCD.c: 18: void LCD_sendnibble(unsigned char number);LCD.c: 19: {;LCD.c: 21:     if (nu
      +                          mber & 0b0001) {LATBbits.LATB3 = 1;} else {LATBbits.LATB3 = 0;}
  5875  002550  A005               	btfss	LCD_sendnibble@number^0,0,c
  5876  002552  EFAD  F012         	goto	u3611
  5877  002556  EFAF  F012         	goto	u3610
  5878  00255A                     u3611:
  5879  00255A  EFB2  F012         	goto	l199
  5880  00255E                     u3610:
  5881  00255E  867A               	bsf	122,3,c	;volatile
  5882  002560  EFB3  F012         	goto	l3139
  5883  002564                     l199:
  5884  002564  967A               	bcf	122,3,c	;volatile
  5885  002566                     l3139:
  5886                           
  5887                           ;LCD.c: 22:     if (number & 0b0010) {LATBbits.LATB2 = 1;} else {LATBbits.LATB2 = 0;}
  5888  002566  A205               	btfss	LCD_sendnibble@number^0,1,c
  5889  002568  EFB8  F012         	goto	u3621
  5890  00256C  EFBA  F012         	goto	u3620
  5891  002570                     u3621:
  5892  002570  EFBD  F012         	goto	l201
  5893  002574                     u3620:
  5894  002574  847A               	bsf	122,2,c	;volatile
  5895  002576  EFBE  F012         	goto	l3143
  5896  00257A                     l201:
  5897  00257A  947A               	bcf	122,2,c	;volatile
  5898  00257C                     l3143:
  5899                           
  5900                           ;LCD.c: 23:     if (number & 0b0100) {LATEbits.LATE3 = 1;} else {LATEbits.LATE3 = 0;}
  5901  00257C  A405               	btfss	LCD_sendnibble@number^0,2,c
  5902  00257E  EFC3  F012         	goto	u3631
  5903  002582  EFC5  F012         	goto	u3630
  5904  002586                     u3631:
  5905  002586  EFC8  F012         	goto	l203
  5906  00258A                     u3630:
  5907  00258A  867D               	bsf	125,3,c	;volatile
  5908  00258C  EFC9  F012         	goto	l3147
  5909  002590                     l203:
  5910  002590  967D               	bcf	125,3,c	;volatile
  5911  002592                     l3147:
  5912                           
  5913                           ;LCD.c: 24:     if (number & 0b1000) {LATEbits.LATE1 = 1;} else {LATEbits.LATE1 = 0;}
  5914  002592  A605               	btfss	LCD_sendnibble@number^0,3,c
  5915  002594  EFCE  F012         	goto	u3641
  5916  002598  EFD0  F012         	goto	u3640
  5917  00259C                     u3641:
  5918  00259C  EFD3  F012         	goto	l205
  5919  0025A0                     u3640:
  5920  0025A0  827D               	bsf	125,1,c	;volatile
  5921  0025A2  EFD4  F012         	goto	l3151
  5922  0025A6                     l205:
  5923  0025A6  927D               	bcf	125,1,c	;volatile
  5924  0025A8                     l3151:
  5925                           
  5926                           ;LCD.c: 26:     LCD_E_TOG();
  5927  0025A8  EC1A  F015         	call	_LCD_E_TOG	;wreg free
  5928  0025AC                     
  5929                           ;LCD.c: 27:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  5930  0025AC  0E1A               	movlw	26
  5931  0025AE                     u5097:
  5932  0025AE  2EE8               	decfsz	wreg,f,c
  5933  0025B0  D7FE               	bra	u5097
  5934  0025B2  D000               	nop2	
  5935  0025B4  0012               	return		;funcret
  5936  0025B6                     __end_of_LCD_sendnibble:
  5937                           	callstack 0
  5938                           
  5939 ;; *************** function _LCD_E_TOG *****************
  5940 ;; Defined at:
  5941 ;;		line 8 in file "LCD.c"
  5942 ;; Parameters:    Size  Location     Type
  5943 ;;		None
  5944 ;; Auto vars:     Size  Location     Type
  5945 ;;		None
  5946 ;; Return value:  Size  Location     Type
  5947 ;;                  1    wreg      void 
  5948 ;; Registers used:
  5949 ;;		wreg
  5950 ;; Tracked objects:
  5951 ;;		On entry : 0/0
  5952 ;;		On exit  : 0/0
  5953 ;;		Unchanged: 0/0
  5954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5959 ;;Total ram usage:        0 bytes
  5960 ;; Hardware stack levels used: 1
  5961 ;; Hardware stack levels required when called: 2
  5962 ;; This function calls:
  5963 ;;		Nothing
  5964 ;; This function is called by:
  5965 ;;		_LCD_sendnibble
  5966 ;; This function uses a non-reentrant model
  5967 ;;
  5968                           
  5969                           	psect	text37
  5970  002A34                     __ptext37:
  5971                           	callstack 0
  5972  002A34                     _LCD_E_TOG:
  5973                           	callstack 24
  5974  002A34                     
  5975                           ;LCD.c: 10:  LATCbits.LATC2 = 1;
  5976  002A34  847B               	bsf	123,2,c	;volatile
  5977  002A36                     
  5978                           ;LCD.c: 11:  _delay((unsigned long)((2)*(64000000/4000000.0)));
  5979  002A36  0E0A               	movlw	10
  5980  002A38                     u5107:
  5981  002A38  2EE8               	decfsz	wreg,f,c
  5982  002A3A  D7FE               	bra	u5107
  5983  002A3C  D000               	nop2	
  5984  002A3E                     
  5985                           ;LCD.c: 12:  LATCbits.LATC2 = 0;
  5986  002A3E  947B               	bcf	123,2,c	;volatile
  5987  002A40  0012               	return		;funcret
  5988  002A42                     __end_of_LCD_E_TOG:
  5989                           	callstack 0
  5990                           
  5991 ;; *************** function _Interrupts_init *****************
  5992 ;; Defined at:
  5993 ;;		line 12 in file "interrupts.c"
  5994 ;; Parameters:    Size  Location     Type
  5995 ;;  current        11    4[COMRAM] struct .
  5996 ;; Auto vars:     Size  Location     Type
  5997 ;;		None
  5998 ;; Return value:  Size  Location     Type
  5999 ;;                  1    wreg      void 
  6000 ;; Registers used:
  6001 ;;		wreg, status,2, status,0
  6002 ;; Tracked objects:
  6003 ;;		On entry : 0/0
  6004 ;;		On exit  : 0/0
  6005 ;;		Unchanged: 0/0
  6006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6007 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6010 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6011 ;;Total ram usage:       11 bytes
  6012 ;; Hardware stack levels used: 1
  6013 ;; Hardware stack levels required when called: 2
  6014 ;; This function calls:
  6015 ;;		Nothing
  6016 ;; This function is called by:
  6017 ;;		_main
  6018 ;; This function uses a non-reentrant model
  6019 ;;
  6020                           
  6021                           	psect	text38
  6022  0027EC                     __ptext38:
  6023                           	callstack 0
  6024  0027EC                     _Interrupts_init:
  6025                           	callstack 28
  6026  0027EC                     
  6027                           ;interrupts.c: 13:     if (current.hour<1 || current.hour>=5) {
  6028  0027EC  500A               	movf	(Interrupts_init@current+5)^0,w,c
  6029  0027EE  0A80               	xorlw	128
  6030  0027F0  0F7F               	addlw	-129
  6031  0027F2  A0D8               	btfss	status,0,c
  6032  0027F4  EFFE  F013         	goto	u4451
  6033  0027F8  EF00  F014         	goto	u4450
  6034  0027FC                     u4451:
  6035  0027FC  EF0A  F014         	goto	l144
  6036  002800                     u4450:
  6037  002800  500A               	movf	(Interrupts_init@current+5)^0,w,c
  6038  002802  0A80               	xorlw	128
  6039  002804  0F7B               	addlw	-133
  6040  002806  A0D8               	btfss	status,0,c
  6041  002808  EF08  F014         	goto	u4461
  6042  00280C  EF0A  F014         	goto	u4460
  6043  002810                     u4461:
  6044  002810  EF0E  F014         	goto	l142
  6045  002814                     u4460:
  6046  002814                     l144:
  6047                           
  6048                           ;interrupts.c: 14:         PIE2bits.C1IE = 1;
  6049  002814  010E               	movlb	14	; () banked
  6050  002816  812B               	bsf	43,0,b	;volatile
  6051                           
  6052                           ;interrupts.c: 15:     } else {PIE2bits.C1IE = 0;}
  6053  002818  EF10  F014         	goto	l145
  6054  00281C                     l142:
  6055  00281C  010E               	movlb	14	; () banked
  6056  00281E  912B               	bcf	43,0,b	;volatile
  6057  002820                     l145:
  6058                           
  6059                           ; BSR set to: 14
  6060                           ;interrupts.c: 16:     PIE0bits.TMR0IE = 1;
  6061  002820  8B29               	bsf	41,5,b	;volatile
  6062                           
  6063                           ;interrupts.c: 18:     IPR2bits.C1IP = 1;
  6064  002822  8121               	bsf	33,0,b	;volatile
  6065                           
  6066                           ;interrupts.c: 19:     IPR0bits.TMR0IP = 0;
  6067  002824  9B1F               	bcf	31,5,b	;volatile
  6068                           
  6069                           ;interrupts.c: 21:     INTCONbits.IPEN = 1;
  6070  002826  8AF2               	bsf	242,5,c	;volatile
  6071                           
  6072                           ;interrupts.c: 22:     INTCONbits.PEIE = 1;
  6073  002828  8CF2               	bsf	242,6,c	;volatile
  6074                           
  6075                           ;interrupts.c: 23:     INTCONbits.GIE = 1;
  6076  00282A  8EF2               	bsf	242,7,c	;volatile
  6077  00282C                     
  6078                           ; BSR set to: 14
  6079  00282C  0012               	return		;funcret
  6080  00282E                     __end_of_Interrupts_init:
  6081                           	callstack 0
  6082                           
  6083 ;; *************** function _Comp1_init *****************
  6084 ;; Defined at:
  6085 ;;		line 24 in file "comparator.c"
  6086 ;; Parameters:    Size  Location     Type
  6087 ;;		None
  6088 ;; Auto vars:     Size  Location     Type
  6089 ;;		None
  6090 ;; Return value:  Size  Location     Type
  6091 ;;                  1    wreg      void 
  6092 ;; Registers used:
  6093 ;;		wreg, status,2, cstack
  6094 ;; Tracked objects:
  6095 ;;		On entry : 0/0
  6096 ;;		On exit  : 0/0
  6097 ;;		Unchanged: 0/0
  6098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6103 ;;Total ram usage:        0 bytes
  6104 ;; Hardware stack levels used: 1
  6105 ;; Hardware stack levels required when called: 3
  6106 ;; This function calls:
  6107 ;;		_DAC_init
  6108 ;; This function is called by:
  6109 ;;		_main
  6110 ;; This function uses a non-reentrant model
  6111 ;;
  6112                           
  6113                           	psect	text39
  6114  00295C                     __ptext39:
  6115                           	callstack 0
  6116  00295C                     _Comp1_init:
  6117                           	callstack 27
  6118  00295C                     
  6119                           ;comparator.c: 25:     TRISFbits.TRISF7=1;
  6120  00295C  8E86               	bsf	134,7,c	;volatile
  6121  00295E                     
  6122                           ;comparator.c: 26:     CM1NCHbits.NCH=0b011;
  6123  00295E  010E               	movlb	14	; () banked
  6124  002960  51D2               	movf	210,w,b	;volatile
  6125  002962  0BF8               	andlw	-8
  6126  002964  0903               	iorlw	3
  6127  002966  6FD2               	movwf	210,b	;volatile
  6128                           
  6129                           ;comparator.c: 27:     CM1PCHbits.PCH=0b101;
  6130  002968  51D3               	movf	211,w,b	;volatile
  6131  00296A  0BF8               	andlw	-8
  6132  00296C  0905               	iorlw	5
  6133  00296E  6FD3               	movwf	211,b	;volatile
  6134  002970                     
  6135                           ; BSR set to: 14
  6136                           ;comparator.c: 28:     CM1CON0bits.HYS=1;
  6137  002970  83D0               	bsf	208,1,b	;volatile
  6138  002972                     
  6139                           ; BSR set to: 14
  6140                           ;comparator.c: 29:     CM1CON0bits.POL=1;
  6141  002972  89D0               	bsf	208,4,b	;volatile
  6142  002974                     
  6143                           ; BSR set to: 14
  6144                           ;comparator.c: 30:     CM1CON1bits.INTP=1;
  6145  002974  83D1               	bsf	209,1,b	;volatile
  6146  002976                     
  6147                           ; BSR set to: 14
  6148                           ;comparator.c: 31:     CM1CON1bits.INTN=1;
  6149  002976  81D1               	bsf	209,0,b	;volatile
  6150  002978                     
  6151                           ; BSR set to: 14
  6152                           ;comparator.c: 32:     DAC_init();
  6153  002978  EC07  F015         	call	_DAC_init	;wreg free
  6154  00297C                     
  6155                           ;comparator.c: 33:     CM1CON0bits.EN=1;
  6156  00297C  010E               	movlb	14	; () banked
  6157  00297E  8FD0               	bsf	208,7,b	;volatile
  6158  002980                     
  6159                           ; BSR set to: 14
  6160  002980  0012               	return		;funcret
  6161  002982                     __end_of_Comp1_init:
  6162                           	callstack 0
  6163                           
  6164 ;; *************** function _DAC_init *****************
  6165 ;; Defined at:
  6166 ;;		line 8 in file "comparator.c"
  6167 ;; Parameters:    Size  Location     Type
  6168 ;;		None
  6169 ;; Auto vars:     Size  Location     Type
  6170 ;;		None
  6171 ;; Return value:  Size  Location     Type
  6172 ;;                  1    wreg      void 
  6173 ;; Registers used:
  6174 ;;		wreg, status,2
  6175 ;; Tracked objects:
  6176 ;;		On entry : 0/0
  6177 ;;		On exit  : 0/0
  6178 ;;		Unchanged: 0/0
  6179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6184 ;;Total ram usage:        0 bytes
  6185 ;; Hardware stack levels used: 1
  6186 ;; Hardware stack levels required when called: 2
  6187 ;; This function calls:
  6188 ;;		Nothing
  6189 ;; This function is called by:
  6190 ;;		_Comp1_init
  6191 ;; This function uses a non-reentrant model
  6192 ;;
  6193                           
  6194                           	psect	text40
  6195  002A0E                     __ptext40:
  6196                           	callstack 0
  6197  002A0E                     _DAC_init:
  6198                           	callstack 27
  6199  002A0E                     
  6200                           ;comparator.c: 9:     DAC1CON0bits.PSS=0b00;
  6201  002A0E  0EF3               	movlw	-13
  6202  002A10  010E               	movlb	14	; () banked
  6203  002A12  17C6               	andwf	198,f,b	;volatile
  6204  002A14                     
  6205                           ; BSR set to: 14
  6206                           ;comparator.c: 10:     DAC1CON0bits.NSS=0b0;
  6207  002A14  91C6               	bcf	198,0,b	;volatile
  6208                           
  6209                           ;comparator.c: 15:     DAC1CON1bits.DAC1R=0b11011;
  6210  002A16  51C7               	movf	199,w,b	;volatile
  6211  002A18  0BE0               	andlw	-32
  6212  002A1A  091B               	iorlw	27
  6213  002A1C  6FC7               	movwf	199,b	;volatile
  6214  002A1E                     
  6215                           ; BSR set to: 14
  6216                           ;comparator.c: 16:     DAC1CON0bits.DAC1EN=1;
  6217  002A1E  8FC6               	bsf	198,7,b	;volatile
  6218  002A20                     
  6219                           ; BSR set to: 14
  6220  002A20  0012               	return		;funcret
  6221  002A22                     __end_of_DAC_init:
  6222                           	callstack 0
  6223                           
  6224 ;; *************** function _ADC_init *****************
  6225 ;; Defined at:
  6226 ;;		line 8 in file "ADC.c"
  6227 ;; Parameters:    Size  Location     Type
  6228 ;;		None
  6229 ;; Auto vars:     Size  Location     Type
  6230 ;;		None
  6231 ;; Return value:  Size  Location     Type
  6232 ;;                  1    wreg      void 
  6233 ;; Registers used:
  6234 ;;		wreg, status,2
  6235 ;; Tracked objects:
  6236 ;;		On entry : 0/0
  6237 ;;		On exit  : 0/0
  6238 ;;		Unchanged: 0/0
  6239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6244 ;;Total ram usage:        0 bytes
  6245 ;; Hardware stack levels used: 1
  6246 ;; Hardware stack levels required when called: 2
  6247 ;; This function calls:
  6248 ;;		Nothing
  6249 ;; This function is called by:
  6250 ;;		_main
  6251 ;; This function uses a non-reentrant model
  6252 ;;
  6253                           
  6254                           	psect	text41
  6255  0029DC                     __ptext41:
  6256                           	callstack 0
  6257  0029DC                     _ADC_init:
  6258                           	callstack 28
  6259  0029DC                     
  6260                           ;ADC.c: 10:     TRISFbits.TRISF7=1;
  6261  0029DC  8E86               	bsf	134,7,c	;volatile
  6262                           
  6263                           ;ADC.c: 11:     ANSELFbits.ANSELF7=1;
  6264  0029DE  010E               	movlb	14	; () banked
  6265  0029E0  8FB4               	bsf	180,7,b	;volatile
  6266                           
  6267                           ;ADC.c: 14:     ADREFbits.ADNREF = 0;
  6268  0029E2  010F               	movlb	15	; () banked
  6269  0029E4  9958               	bcf	88,4,b	;volatile
  6270  0029E6                     
  6271                           ; BSR set to: 15
  6272                           ;ADC.c: 15:     ADREFbits.ADPREF = 0b00;
  6273  0029E6  0EFC               	movlw	-4
  6274  0029E8  1758               	andwf	88,f,b	;volatile
  6275                           
  6276                           ;ADC.c: 16:     ADPCH=0b101111;
  6277  0029EA  0E2F               	movlw	47
  6278  0029EC  6F5F               	movwf	95,b	;volatile
  6279  0029EE                     
  6280                           ; BSR set to: 15
  6281                           ;ADC.c: 17:     ADCON0bits.ADFM = 0;
  6282  0029EE  9460               	bcf	96,2,c	;volatile
  6283  0029F0                     
  6284                           ; BSR set to: 15
  6285                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
  6286  0029F0  8860               	bsf	96,4,c	;volatile
  6287  0029F2                     
  6288                           ; BSR set to: 15
  6289                           ;ADC.c: 19:     ADCON0bits.ADON = 1;
  6290  0029F2  8E60               	bsf	96,7,c	;volatile
  6291  0029F4                     
  6292                           ; BSR set to: 15
  6293  0029F4  0012               	return		;funcret
  6294  0029F6                     __end_of_ADC_init:
  6295                           	callstack 0
  6296                           
  6297 ;; *************** function _LowISR *****************
  6298 ;; Defined at:
  6299 ;;		line 52 in file "interrupts.c"
  6300 ;; Parameters:    Size  Location     Type
  6301 ;;		None
  6302 ;; Auto vars:     Size  Location     Type
  6303 ;;		None
  6304 ;; Return value:  Size  Location     Type
  6305 ;;                  1    wreg      void 
  6306 ;; Registers used:
  6307 ;;		wreg, status,2
  6308 ;; Tracked objects:
  6309 ;;		On entry : 0/0
  6310 ;;		On exit  : 0/0
  6311 ;;		Unchanged: 0/0
  6312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6315 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6316 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6317 ;;Total ram usage:        3 bytes
  6318 ;; Hardware stack levels used: 1
  6319 ;; Hardware stack levels required when called: 1
  6320 ;; This function calls:
  6321 ;;		Nothing
  6322 ;; This function is called by:
  6323 ;;		Interrupt level 1
  6324 ;; This function uses a non-reentrant model
  6325 ;;
  6326                           
  6327                           	psect	intcodelo
  6328  000018                     __pintcodelo:
  6329                           	callstack 0
  6330  000018                     _LowISR:
  6331                           	callstack 20
  6332                           
  6333                           ; BSR set to: 15
  6334                           ;incstack = 0
  6335  000018  8055               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  6336  00001A  CFD8 F002          	movff	status,??_LowISR
  6337  00001E  CFE8 F003          	movff	wreg,??_LowISR+1
  6338  000022  CFE0 F004          	movff	bsr,??_LowISR+2
  6339  000026                     
  6340                           ;interrupts.c: 53:     if (PIR0bits.TMR0IF) {
  6341  000026  010E               	movlb	14	; () banked
  6342  000028  AB33               	btfss	51,5,b	;volatile
  6343  00002A  EF19  F000         	goto	i1u332_21
  6344  00002E  EF1B  F000         	goto	i1u332_20
  6345  000032                     i1u332_21:
  6346  000032  EF24  F000         	goto	i1l166
  6347  000036                     i1u332_20:
  6348  000036                     
  6349                           ; BSR set to: 14
  6350                           ;interrupts.c: 54:         TMR0H = 0b11101110;
  6351  000036  0EEE               	movlw	238
  6352  000038  6ED4               	movwf	212,c	;volatile
  6353                           
  6354                           ;interrupts.c: 55:         TMR0L = 0b10100011;
  6355  00003A  0EA3               	movlw	163
  6356  00003C  6ED3               	movwf	211,c	;volatile
  6357                           
  6358                           ;interrupts.c: 56:         time_flag = 1;
  6359  00003E  0E01               	movlw	1
  6360  000040  0100               	movlb	0	; () banked
  6361  000042  6FC8               	movwf	_time_flag& (0+255),b	;volatile
  6362  000044                     
  6363                           ; BSR set to: 0
  6364                           ;interrupts.c: 57:         PIR0bits.TMR0IF = 0;
  6365  000044  010E               	movlb	14	; () banked
  6366  000046  9B33               	bcf	51,5,b	;volatile
  6367  000048                     i1l166:
  6368                           
  6369                           ; BSR set to: 14
  6370  000048  C004  FFE0         	movff	??_LowISR+2,bsr
  6371  00004C  C003  FFE8         	movff	??_LowISR+1,wreg
  6372  000050  C002  FFD8         	movff	??_LowISR,status
  6373  000054  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  6374  000056  0010               	retfie	
  6375  000058                     __end_of_LowISR:
  6376                           	callstack 0
  6377                           
  6378 ;; *************** function _HighISR *****************
  6379 ;; Defined at:
  6380 ;;		line 35 in file "interrupts.c"
  6381 ;; Parameters:    Size  Location     Type
  6382 ;;		None
  6383 ;; Auto vars:     Size  Location     Type
  6384 ;;		None
  6385 ;; Return value:  Size  Location     Type
  6386 ;;                  1    wreg      void 
  6387 ;; Registers used:
  6388 ;;		wreg, status,2, status,0
  6389 ;; Tracked objects:
  6390 ;;		On entry : 0/0
  6391 ;;		On exit  : 0/0
  6392 ;;		Unchanged: 0/0
  6393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6396 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6397 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6398 ;;Total ram usage:        1 bytes
  6399 ;; Hardware stack levels used: 1
  6400 ;; This function calls:
  6401 ;;		Nothing
  6402 ;; This function is called by:
  6403 ;;		Interrupt level 2
  6404 ;; This function uses a non-reentrant model
  6405 ;;
  6406                           
  6407                           	psect	intcode
  6408  000008                     __pintcode:
  6409                           	callstack 0
  6410  000008                     _HighISR:
  6411                           	callstack 20
  6412                           
  6413                           ; BSR set to: 14
  6414                           ;incstack = 0
  6415  000008  8255               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6416  00000A  EF0E  F013         	goto	int_func
  6417                           
  6418                           	psect	intcode_body
  6419  00261C                     __pintcode_body:
  6420                           	callstack 20
  6421  00261C                     int_func:
  6422                           	callstack 20
  6423  00261C                     
  6424                           ;interrupts.c: 36:     if (PIR2bits.C1IF) {
  6425  00261C  010E               	movlb	14	; () banked
  6426  00261E  A135               	btfss	53,0,b	;volatile
  6427  002620  EF14  F013         	goto	i2u164_41
  6428  002624  EF16  F013         	goto	i2u164_40
  6429  002628                     i2u164_41:
  6430  002628  EF36  F013         	goto	i2l158
  6431  00262C                     i2u164_40:
  6432  00262C                     
  6433                           ; BSR set to: 14
  6434                           ;interrupts.c: 37:         LATDbits.LATD7 = !LATDbits.LATD7;
  6435  00262C  AE7C               	btfss	124,7,c	;volatile
  6436  00262E  EF1B  F013         	goto	i2u165_41
  6437  002632  EF1F  F013         	goto	i2u165_40
  6438  002636                     i2u165_41:
  6439  002636  6A01               	clrf	??_HighISR^0,c
  6440  002638  2A01               	incf	??_HighISR^0,f,c
  6441  00263A  EF20  F013         	goto	i2u166_48
  6442  00263E                     i2u165_40:
  6443  00263E  6A01               	clrf	??_HighISR^0,c
  6444  002640                     i2u166_48:
  6445  002640  3201               	rrcf	??_HighISR^0,f,c
  6446  002642  3201               	rrcf	??_HighISR^0,f,c
  6447  002644  507C               	movf	124,w,c	;volatile
  6448  002646  1801               	xorwf	??_HighISR^0,w,c
  6449  002648  0B7F               	andlw	-129
  6450  00264A  1801               	xorwf	??_HighISR^0,w,c
  6451  00264C  6E7C               	movwf	124,c	;volatile
  6452  00264E                     
  6453                           ;interrupts.c: 38:         if (LATDbits.LATD7==0) {sunrise_flag=1;}
  6454  00264E  BE7C               	btfsc	124,7,c	;volatile
  6455  002650  EF2C  F013         	goto	i2u167_41
  6456  002654  EF2E  F013         	goto	i2u167_40
  6457  002658                     i2u167_41:
  6458  002658  EF32  F013         	goto	i2l2033
  6459  00265C                     i2u167_40:
  6460  00265C  0E01               	movlw	1
  6461  00265E  6E54               	movwf	_sunrise_flag^0,c	;volatile
  6462  002660  EF34  F013         	goto	i2l2035
  6463  002664                     i2l2033:
  6464  002664  0E01               	movlw	1
  6465  002666  6E53               	movwf	_sunset_flag^0,c	;volatile
  6466  002668                     i2l2035:
  6467                           
  6468                           ;interrupts.c: 40:         PIR2bits.C1IF = 0;
  6469  002668  010E               	movlb	14	; () banked
  6470  00266A  9135               	bcf	53,0,b	;volatile
  6471  00266C                     i2l158:
  6472                           
  6473                           ; BSR set to: 14
  6474  00266C  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6475  00266E  0011               	retfie		f
  6476  002670                     __end_of_HighISR:
  6477                           	callstack 0
  6478                           
  6479                           	psect	rparam
  6480  0000                     
  6481                           	psect	temp
  6482  000055                     btemp:
  6483                           	callstack 0
  6484  000055                     	ds	1
  6485  0000                     int$flags	set	btemp
  6486  0000                     wtemp8	set	btemp+1
  6487  0000                     ttemp5	set	btemp+1
  6488  0000                     ttemp6	set	btemp+4
  6489  0000                     ttemp7	set	btemp+8
  6490                           
  6491                           	psect	idloc
  6492                           
  6493                           ;Config register IDLOC0 @ 0x200000
  6494                           ;	unspecified, using default values
  6495  200000                     	org	2097152
  6496  200000  0FFF               	dw	4095
  6497                           
  6498                           ;Config register IDLOC1 @ 0x200002
  6499                           ;	unspecified, using default values
  6500  200002                     	org	2097154
  6501  200002  0FFF               	dw	4095
  6502                           
  6503                           ;Config register IDLOC2 @ 0x200004
  6504                           ;	unspecified, using default values
  6505  200004                     	org	2097156
  6506  200004  0FFF               	dw	4095
  6507                           
  6508                           ;Config register IDLOC3 @ 0x200006
  6509                           ;	unspecified, using default values
  6510  200006                     	org	2097158
  6511  200006  0FFF               	dw	4095
  6512                           
  6513                           ;Config register IDLOC4 @ 0x200008
  6514                           ;	unspecified, using default values
  6515  200008                     	org	2097160
  6516  200008  0FFF               	dw	4095
  6517                           
  6518                           ;Config register IDLOC5 @ 0x20000A
  6519                           ;	unspecified, using default values
  6520  20000A                     	org	2097162
  6521  20000A  0FFF               	dw	4095
  6522                           
  6523                           ;Config register IDLOC6 @ 0x20000C
  6524                           ;	unspecified, using default values
  6525  20000C                     	org	2097164
  6526  20000C  0FFF               	dw	4095
  6527                           
  6528                           ;Config register IDLOC7 @ 0x20000E
  6529                           ;	unspecified, using default values
  6530  20000E                     	org	2097166
  6531  20000E  0FFF               	dw	4095
  6532                           
  6533                           	psect	config
  6534                           
  6535                           ;Config register CONFIG1L @ 0x300000
  6536                           ;	External Oscillator mode Selection bits
  6537                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  6538                           ;	Power-up default value for COSC bits
  6539                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  6540  300000                     	org	3145728
  6541  300000  AA                 	db	170
  6542                           
  6543                           ;Config register CONFIG1H @ 0x300001
  6544                           ;	unspecified, using default values
  6545                           ;	Clock Out Enable bit
  6546                           ;	CLKOUTEN = 0x1, unprogrammed default
  6547                           ;	Clock Switch Enable bit
  6548                           ;	CSWEN = 0x1, unprogrammed default
  6549                           ;	Fail-Safe Clock Monitor Enable bit
  6550                           ;	FCMEN = 0x1, unprogrammed default
  6551  300001                     	org	3145729
  6552  300001  FF                 	db	255
  6553                           
  6554                           ;Config register CONFIG2L @ 0x300002
  6555                           ;	unspecified, using default values
  6556                           ;	Master Clear Enable bit
  6557                           ;	MCLRE = 0x1, unprogrammed default
  6558                           ;	Power-up Timer Enable bit
  6559                           ;	PWRTE = 0x1, unprogrammed default
  6560                           ;	Low-power BOR enable bit
  6561                           ;	LPBOREN = 0x1, unprogrammed default
  6562                           ;	Brown-out Reset Enable bits
  6563                           ;	BOREN = 0x3, unprogrammed default
  6564  300002                     	org	3145730
  6565  300002  FF                 	db	255
  6566                           
  6567                           ;Config register CONFIG2H @ 0x300003
  6568                           ;	unspecified, using default values
  6569                           ;	Brown Out Reset Voltage selection bits
  6570                           ;	BORV = 0x3, unprogrammed default
  6571                           ;	ZCD Disable bit
  6572                           ;	ZCD = 0x1, unprogrammed default
  6573                           ;	PPSLOCK bit One-Way Set Enable bit
  6574                           ;	PPS1WAY = 0x1, unprogrammed default
  6575                           ;	Stack Full/Underflow Reset Enable bit
  6576                           ;	STVREN = 0x1, unprogrammed default
  6577                           ;	Debugger Enable bit
  6578                           ;	DEBUG = 0x1, unprogrammed default
  6579                           ;	Extended Instruction Set Enable bit
  6580                           ;	XINST = 0x1, unprogrammed default
  6581  300003                     	org	3145731
  6582  300003  FF                 	db	255
  6583                           
  6584                           ;Config register CONFIG3L @ 0x300004
  6585                           ;	WDT Period Select bits
  6586                           ;	WDTCPS = 0x1F, unprogrammed default
  6587                           ;	WDT operating mode
  6588                           ;	WDTE = OFF, WDT Disabled
  6589  300004                     	org	3145732
  6590  300004  9F                 	db	159
  6591                           
  6592                           ;Config register CONFIG3H @ 0x300005
  6593                           ;	unspecified, using default values
  6594                           ;	WDT Window Select bits
  6595                           ;	WDTCWS = 0x7, unprogrammed default
  6596                           ;	WDT input clock selector
  6597                           ;	WDTCCS = 0x7, unprogrammed default
  6598  300005                     	org	3145733
  6599  300005  FF                 	db	255
  6600                           
  6601                           ;Config register CONFIG4L @ 0x300006
  6602                           ;	unspecified, using default values
  6603                           ;	Write Protection Block 0
  6604                           ;	WRT0 = 0x1, unprogrammed default
  6605                           ;	Write Protection Block 1
  6606                           ;	WRT1 = 0x1, unprogrammed default
  6607                           ;	Write Protection Block 2
  6608                           ;	WRT2 = 0x1, unprogrammed default
  6609                           ;	Write Protection Block 3
  6610                           ;	WRT3 = 0x1, unprogrammed default
  6611                           ;	Write Protection Block 3
  6612                           ;	WRT4 = 0x1, unprogrammed default
  6613                           ;	Write Protection Block 3
  6614                           ;	WRT5 = 0x1, unprogrammed default
  6615                           ;	Write Protection Block 3
  6616                           ;	WRT6 = 0x1, unprogrammed default
  6617                           ;	Write Protection Block 3
  6618                           ;	WRT7 = 0x1, unprogrammed default
  6619  300006                     	org	3145734
  6620  300006  FF                 	db	255
  6621                           
  6622                           ;Config register CONFIG4H @ 0x300007
  6623                           ;	unspecified, using default values
  6624                           ;	Configuration Register Write Protection bit
  6625                           ;	WRTC = 0x1, unprogrammed default
  6626                           ;	Boot Block Write Protection bit
  6627                           ;	WRTB = 0x1, unprogrammed default
  6628                           ;	Data EEPROM Write Protection bit
  6629                           ;	WRTD = 0x1, unprogrammed default
  6630                           ;	Scanner Enable bit
  6631                           ;	SCANE = 0x1, unprogrammed default
  6632                           ;	Low Voltage Programming Enable bit
  6633                           ;	LVP = 0x1, unprogrammed default
  6634  300007                     	org	3145735
  6635  300007  FF                 	db	255
  6636                           
  6637                           ;Config register CONFIG5L @ 0x300008
  6638                           ;	unspecified, using default values
  6639                           ;	UserNVM Program Memory Code Protection bit
  6640                           ;	CP = 0x1, unprogrammed default
  6641                           ;	DataNVM Memory Code Protection bit
  6642                           ;	CPD = 0x1, unprogrammed default
  6643  300008                     	org	3145736
  6644  300008  FF                 	db	255
  6645                           
  6646                           ;Config register CONFIG5H @ 0x300009
  6647                           ;	unspecified, using default values
  6648  300009                     	org	3145737
  6649  300009  FF                 	db	255
  6650                           
  6651                           ;Config register CONFIG6L @ 0x30000A
  6652                           ;	unspecified, using default values
  6653                           ;	Table Read Protection Block 0
  6654                           ;	EBTR0 = 0x1, unprogrammed default
  6655                           ;	Table Read Protection Block 1
  6656                           ;	EBTR1 = 0x1, unprogrammed default
  6657                           ;	Table Read Protection Block 2
  6658                           ;	EBTR2 = 0x1, unprogrammed default
  6659                           ;	Table Read Protection Block 3
  6660                           ;	EBTR3 = 0x1, unprogrammed default
  6661                           ;	Table Read Protection Block 4
  6662                           ;	EBTR4 = 0x1, unprogrammed default
  6663                           ;	Table Read Protection Block 5
  6664                           ;	EBTR5 = 0x1, unprogrammed default
  6665                           ;	Table Read Protection Block 6
  6666                           ;	EBTR6 = 0x1, unprogrammed default
  6667                           ;	Table Read Protection Block 7
  6668                           ;	EBTR7 = 0x1, unprogrammed default
  6669  30000A                     	org	3145738
  6670  30000A  FF                 	db	255
  6671                           
  6672                           ;Config register CONFIG6H @ 0x30000B
  6673                           ;	unspecified, using default values
  6674                           ;	Boot Block Table Read Protection bit
  6675                           ;	EBTRB = 0x1, unprogrammed default
  6676  30000B                     	org	3145739
  6677  30000B  FF                 	db	255
  6678                           tosu	equ	0xFFF
  6679                           tosh	equ	0xFFE
  6680                           tosl	equ	0xFFD
  6681                           stkptr	equ	0xFFC
  6682                           pclatu	equ	0xFFB
  6683                           pclath	equ	0xFFA
  6684                           pcl	equ	0xFF9
  6685                           tblptru	equ	0xFF8
  6686                           tblptrh	equ	0xFF7
  6687                           tblptrl	equ	0xFF6
  6688                           tablat	equ	0xFF5
  6689                           prodh	equ	0xFF4
  6690                           prodl	equ	0xFF3
  6691                           indf0	equ	0xFEF
  6692                           postinc0	equ	0xFEE
  6693                           postdec0	equ	0xFED
  6694                           preinc0	equ	0xFEC
  6695                           plusw0	equ	0xFEB
  6696                           fsr0h	equ	0xFEA
  6697                           fsr0l	equ	0xFE9
  6698                           wreg	equ	0xFE8
  6699                           indf1	equ	0xFE7
  6700                           postinc1	equ	0xFE6
  6701                           postdec1	equ	0xFE5
  6702                           preinc1	equ	0xFE4
  6703                           plusw1	equ	0xFE3
  6704                           fsr1h	equ	0xFE2
  6705                           fsr1l	equ	0xFE1
  6706                           bsr	equ	0xFE0
  6707                           indf2	equ	0xFDF
  6708                           postinc2	equ	0xFDE
  6709                           postdec2	equ	0xFDD
  6710                           preinc2	equ	0xFDC
  6711                           plusw2	equ	0xFDB
  6712                           fsr2h	equ	0xFDA
  6713                           fsr2l	equ	0xFD9
  6714                           status	equ	0xFD8

Data Sizes:
    Strings     30
    Constant    0
    Data        0
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     80      84
    BANK0           160     98     137
    BANK1           256     80      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> time_incre@buf2(BANK1[40]), time_incre@buf1(BANK1[40]), main@buf2(BANK0[40]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 40
		 -> time_incre@buf2(BANK1[40]), time_incre@buf1(BANK1[40]), main@buf2(BANK0[40]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2107_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 40
		 -> time_incre@buf2(BANK1[40]), time_incre@buf1(BANK1[40]), main@buf2(BANK0[40]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> time_incre@buf2(BANK1[40]), time_incre@buf1(BANK1[40]), main@buf2(BANK0[40]), 

    LCD_sendstring@string	PTR unsigned char  size(2) Largest target is 40
		 -> time_incre@buf2(BANK1[40]), time_incre@buf1(BANK1[40]), main@buf2(BANK0[40]), 


Critical Paths under _main in COMRAM

    _main->_time_incre
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _LCD_setline->_LCD_sendbyte
    _LCD_sendstring->_LCD_sendbyte
    _LCD_scroll->_LCD_sendbyte
    _sunrise_sunset->_sun_sync
    _sun_sync->___awdiv
    _LED_toggle->_sunrise
    _LED1_init->_ADC_getval
    _LCD_init->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_time_incre
    _time_incre->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_time_incre

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                51    51      0   38758
                                             47 BANK0     51    51      0
                           _ADC_init
                         _Comp1_init
                    _Interrupts_init
                           _LCD_init
                     _LCD_sendstring
                        _LCD_setline
                          _LED1_init
                          _LED2_init
                         _LED_toggle
                  _LEDarray_disp_bin
                      _LEDarray_init
                        _Timer0_init
                            _sprintf
                     _sunrise_sunset
                         _time_incre
 ---------------------------------------------------------------------------------
 (1) _time_incre                                          92    81     11   17733
                                             79 COMRAM     1     1      0
                                             36 BANK0     11     0     11
                                              0 BANK1     80    80      0
                     _LCD_sendstring
                        _LCD_setline
                         _date_check
         _daylightsavingstime_toggle
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    10     10   11213
                                             18 BANK0     18     8     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   10361
                                             77 COMRAM     2     2      0
                                             12 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6    9831
                                             67 COMRAM    10     4      6
                                              0 BANK0     12    12      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5683
                                             31 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3417
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1615
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     512
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _daylightsavingstime_toggle                          13     2     11     535
                                              4 COMRAM    13     2     11
 ---------------------------------------------------------------------------------
 (2) _date_check                                          13     2     11     974
                                              4 COMRAM    13     2     11
 ---------------------------------------------------------------------------------
 (2) _LCD_setline                                          1     1      0    1179
                                              7 COMRAM     1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (2) _LCD_sendstring                                      11     9      2    2643
                                              7 COMRAM    11     9      2
                         _LCD_scroll
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (3) _LCD_scroll                                           0     0      0    1117
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _sunrise_sunset                                      11     0     11    2590
                                             26 COMRAM    11     0     11
                           _sun_sync
                            _sunrise
 ---------------------------------------------------------------------------------
 (2) _sun_sync                                            14     3     11    1977
                                             12 COMRAM    14     3     11
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     985
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    3     3      0     279
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LED_toggle                                          12     1     11     817
                                             15 COMRAM    12     1     11
                         _ADC_getval
                            _sunrise
 ---------------------------------------------------------------------------------
 (2) _sunrise                                             11     0     11     424
                                              4 COMRAM    11     0     11
 ---------------------------------------------------------------------------------
 (1) _LED2_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED1_init                                           12     1     11     192
                                              5 COMRAM    12     1     11
                         _ADC_getval
 ---------------------------------------------------------------------------------
 (2) _ADC_getval                                           1     1      0      34
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0    1241
                                              7 COMRAM     2     2      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (3) _LCD_sendbyte                                         2     1      1    1117
                                              5 COMRAM     2     1      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (4) _LCD_sendnibble                                       1     1      0     124
                                              4 COMRAM     1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (5) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                     11     0     11     158
                                              4 COMRAM    11     0     11
 ---------------------------------------------------------------------------------
 (1) _Comp1_init                                           0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _LowISR                                              3     3      0       0
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _HighISR                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Comp1_init
     _DAC_init
   _Interrupts_init
   _LCD_init
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
     _LCD_sendnibble
   _LCD_sendstring
     _LCD_scroll
       _LCD_sendbyte
     _LCD_sendbyte
   _LCD_setline
     _LCD_sendbyte
   _LED1_init
     _ADC_getval
   _LED2_init
   _LED_toggle
     _ADC_getval
     _sunrise
   _LEDarray_disp_bin
   _LEDarray_init
   _Timer0_init
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc
         _isdigit
   _sunrise_sunset
     _sun_sync
       ___awdiv
     _sunrise
   _time_incre
     _LCD_sendstring
     _LCD_setline
     _date_check
     _daylightsavingstime_toggle
     _sprintf

 _LowISR (ROOT)

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     50      50       7       31.2%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     62      89       5       85.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     50      54       1       89.4%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12D       8        0.0%
DATA                 0      0     12D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Nov 09 09:58:02 2021

                                 l53 29F4                                   l56 29F8  
                                 l81 1DBC                                   l58 2A06  
                                 l59 2A0C                                   l91 1E5C  
                                 l83 1DDC                                   l93 1E7C  
                                 l85 1DFC                                   l78 295A  
                                 l95 1E9C                                   l87 1E1C  
                                 l97 1EBC                                   l89 1E3C  
                                 l99 1EBE                         ___awdiv@sign 000A  
                                 bsr 000FE0                  ___wmul@multiplicand 0007  
                  ??_Interrupts_init 0010                                  l201 257A  
                                l210 28F4                                  l203 2590  
                                l116 2A20                                  l212 290E  
                                l220 275C                                  l205 25A6  
                                l301 163C                                  l142 281C  
                                l119 2980                                  l207 25B4  
                                l215 242A                                  l144 2814  
                                l312 29A0                                  l232 2A32  
                                l145 2820                                  l305 1966  
                                l146 282C                                  l315 2100  
                                l323 254C                                  l252 27A4  
                                l316 211E                                  l253 27A6  
                                l317 2138                                  l229 24C4  
                                l309 197C                                  l326 2934  
                                l256 2A46                                  l264 22C0  
                                l440 1B04                                  l249 27A2  
                                l177 29DA                                  l196 2A40  
                                l284 1FA4                                  l453 1C68  
                                l199 2564                                  l557 21FC  
                                _abs 282E                                  _pad 22C2  
                        ?_LCD_scroll 0001                                  wreg 000FE8  
             Interrupts_init@current 0005                  __size_of_ADC_getval 0018  
                        ?_LED_toggle 0010                   __size_of_LED1_init 004A  
                 __size_of_LED2_init 0006                                 l1004 26C0  
                               l1101 2612                                 l1102 261A  
                               l1040 2382                                 l1106 2864  
                               l1035 2306                                 ?_abs 0017  
                               l1140 17E0                                 l1109 286C  
                               l1038 2348                                 l1046 124C  
                               l1143 28A4                                 l1151 2712  
                               l1048 1254                                 l1080 0F1A  
                               l3001 2A34                                 l1137 17D8  
                               l1066 1488                                 l3003 2A36  
                               l3005 2A3E                                 l3021 19B4  
                               l3013 197E                                 l3101 22FE  
                               l1166 206E                                 l1174 27EA  
                               l3007 2910                                 l3031 1A10  
                               l3023 19C2                                 l3015 1982  
                               l1183 28DA                                 l3111 236A  
                               l3103 2312                                 l1095 11AA  
                               l3009 292C                                 l3041 1A7A  
                               l3033 1A18                                 l3025 19E2  
                               l3017 1990                                 l1177 2A48  
                               l3105 2326                                 l3201 1416  
                               l3131 270C                                 l3123 26C2  
                               l3051 1AC4                                 l3043 1A9A  
                               l3035 1A2C                                 l3027 19E6  
                               l3019 19B0                                 l3115 282E  
                               l3107 232A                                 l3211 1450  
                               l3203 1424                                 l3141 2574  
                               l3125 26C6                                 l3221 1656  
                               l3053 1AE4                                 l3045 1A9C  
                               l3037 1A3A                                 l3029 19F2  
                               l3061 1B18                                 l3117 2848  
                               l3109 2356                                 l3205 142A  
                               l3213 1460                                 l3301 0EB0  
                               l3151 25A8                                 l3143 257C  
                               l3135 2550                                 l3119 286E  
                               l3127 26DA                                 l3223 165A  
                               l3047 1AAE                                 l3039 1A4C  
                               l3071 1B88                                 l3063 1B38  
                               l3207 143C                                 l3311 0F88  
                               l3303 0F08                                 l3153 25AC  
                               l3145 258A                                 l3137 255E  
                               l3401 21C6                                 l3129 2708  
                               l3241 171C                                 l3233 16BE  
                               l3225 167A                                 l3217 163E  
                               l3049 1AB4                                 l3081 1C00  
                               l3073 1B90                                 l3065 1B3C  
                               l3057 1B06                                 l3209 1448  
                               l3161 1214                                 l3313 0F96  
                               l3305 0F28                                 l3147 2592  
                               l3139 2566                                 l3411 21EC  
                               l3403 21CE                                 l3251 17AA  
                               l3235 16D4                                 l3227 16B4  
                               l3219 1652                                 l3083 1C12  
                               l3075 1BA4                                 l3067 1B4A  
                               l3059 1B0A                                 l3171 126E  
                               l3163 1224                                 l3155 11AC  
                               l3331 10C8                                 l3323 101E  
                               l3315 0FA4                                 l3307 0F2A  
                               l3149 25A0                                 l3261 28EE  
                               l3413 21F4                                 l3405 21D0  
                               l3501 1F6A                                 l3253 17BC  
                               l3245 1756                                 l3237 16DC  
                               l3229 16B8                                 l3077 1BB2  
                               l3085 1C18                                 l3069 1B6A  
                               l3093 22C2                                 l3181 1298  
                               l3173 127C                                 l3165 1226  
                               l3157 11CC                                 l3341 114A  
                               l3317 0FC4                                 l3325 1030  
                               l3309 0F52                                 l3421 25CC  
                               l3263 28F6                                 l3407 21D6  
                               l3431 2738                                 l3511 148A  
                               l3503 1F7C                                 l3239 16E4  
                               l3087 1C28                                 l3079 1BE0  
                               l3095 22D0                                 l3191 13A4  
                               l3183 131A                                 l3175 1282  
                               l3167 1240                                 l3159 11F4  
                               l3335 1100                                 l3327 1058  
                               l3319 0FD2                                 l3271 0E56  
                               l3351 1170                                 l3423 25F2  
                               l3601 297C                                 l3265 2906  
                               l3409 21DC                                 l3433 274A  
                               l3425 2716                                 l3521 14FE  
                               l3513 14A8                                 l3505 1F8E  
                               l3249 1798                                 l3089 1C48  
                               l3097 22E4                                 l3193 13C2  
                               l3185 1320                                 l3177 128A  
                               l3169 125C                                 l3353 1198  
                               l3337 1128                                 l3345 1156  
                               l3329 1080                                 l3281 0E8C  
                               l3273 0E68                                 l3417 25B6  
                               l3441 268A                                 l3611 27EC  
                               l3259 28DE                                 l3603 29C0  
                               l3371 2A2C                                 l3451 2434  
                               l3435 2754                                 l3427 2726  
                               l3531 1558                                 l3523 1512  
                               l3515 14BA                                 l3507 1F92  
                               l3099 22F2                                 l3195 13DC  
                               l3187 1326                                 l3179 1292  
                               l3347 1164                                 l3339 1136  
                               l3275 0E6C                                 l3267 0E20  
                               l3419 25BE                                 l3443 2692  
                               l3613 2800                                 l3621 279C  
                               l3605 29C8                                 l3381 2158  
                               l3373 213A                                 l3461 246C  
                               l3453 2446                                 l3429 2730  
                               l3541 15B4                                 l3533 156A  
                               l3525 1522                                 l3517 14CE  
                               l3197 13F6                                 l3189 138A  
                               l3293 0E9E                                 l3285 0E92  
                               l3277 0E78                                 l3269 0E48  
                               l3445 26AE                                 l3437 2670  
                               l3701 18C2                                 l3631 23B2  
                               l3471 2A0A                                 l3615 275E  
                               l3623 2A42                                 l3607 29CE  
                               l3391 218C                                 l3383 2166  
                               l3375 213E                                 l3463 2484  
                               l3455 244A                                 l3551 1602  
                               l3543 15C6                                 l3535 157C  
                               l3527 1534                                 l3519 14EC  
                               l3199 1404                                 l3279 0E7A  
                               l3439 2682                                 l3711 190A  
                               l3703 18D8                                 l3641 23D8  
                               l3633 23B8                                 l3617 2772  
                               l3481 2982                                 l3625 2936  
                               l3609 29D8                                 l3393 2194  
                               l3385 216E                                 l3377 214C  
                               l3369 2A22                                 l3465 2488  
                               l3457 244C                                 l3449 242C  
                               l3553 1606                                 l3545 15D8  
                               l3529 1546                                 l3537 158E  
                               l3297 0EA4                                 l3289 0E98  
                               l3713 193C                                 l3705 18DC  
                               l3721 196A                                 l3801 1CDC  
                               l3475 2A0E                                 l3651 2406  
                               l3643 23DE                                 l3635 23BE  
                               l3627 2384                                 l3619 2786  
                               l3483 298E                                 l3731 222E  
                               l3395 219C                                 l3387 2172  
                               l3379 2154                                 l3571 2114  
                               l3563 2070                                 l3467 248A  
                               l3459 2464                                 l3555 161A  
                               l3547 15EA                                 l3539 15A2  
                               l3491 1F00                                 l3715 1948  
                               l3707 18E0                                 l3811 1D68  
                               l3803 1CE2                                 l3581 29EE  
                               l3477 2A14                                 l3653 2410  
                               l3645 23E8                                 l3637 23C8  
                               l3629 239C                                 l3469 29F6  
                               l3741 226E                                 l3733 2238  
                               l3725 21FE                                 l3397 21AA  
                               l3389 217A                                 l3573 2126  
                               l3565 20E2                                 l3661 24D6  
                               l3557 1626                                 l3549 15FE  
                               l3493 1F12                                 l3717 194E  
                               l3709 1904                                 l3813 1D8C  
                               l3805 1D14                                 ?_pad 0015  
                               l3583 29F0                                 l3479 2A1E  
                               l3591 2970                                 l3655 2418  
                               l3647 23EE                                 l3639 23CE  
                               l3743 2284                                 l3735 224A  
                               l3727 220E                                 l3751 1D9E  
                               l3399 21B0                                 l3567 20E8  
                               l3671 253A                                 l3663 24FA  
                               l3559 162A                                 l3495 1F22  
                               l3487 1EC0                                 l3719 1962  
                               l3807 1D20                                 l3585 29F2  
                               l3577 29DC                                 l3593 2972  
                               l3657 2422                                 l3649 23F8  
                               l3745 228A                                 l3737 225A  
                               l3729 221E                                 l3761 1DF6  
                               l3753 1DB6                                 l3569 20F6  
                               l3665 2502                                 l3489 1ED2  
                               l3497 1F2A                                 l3681 17FE  
                               l3809 1D44                                 l3579 29E6  
                               l3595 2974                                 l3587 295C  
                               l3739 226A                                 l3747 22AE  
                               l3771 1E3E                                 l3763 1DFE  
                               l3755 1DBE                                 l3667 2512  
                               l3659 24C6                                 l3499 1F3C  
                               l2971 1FB8                                 l3691 187E  
                               l3683 1832                                 l3675 17E2  
                               l3597 2976                                 l3589 295E  
                               l3781 1E96                                 l3773 1E56  
                               l3765 1E16                                 l3757 1DD6  
                               l3669 2536                                 l2973 1FCA  
                               l3693 1882                                 l3685 183E  
                               l3677 17F4                                 l3599 2978  
                               l3783 1E9E                                 l3775 1E5E  
                               l3767 1E1E                                 l3759 1DDE  
                               l2975 1FD4                                 l2983 27A8  
                               l2991 28A6                                 l3695 1896  
                               l3687 1854                                 l3679 17F8  
                               l3791 1C9C                                 l3785 1EB6  
                               l3777 1E76                                 l3769 1E36  
                               l2977 1FF2                                 l2969 1FA6  
                               l2985 27B4                                 l2993 28B2  
                               l3697 189A                                 l3689 1878  
                               l3793 1CA0                                 l3779 1E7E  
                               l2979 2028                                 l2987 27C6  
                               l2995 28B6                                 l3699 189E  
                               l3795 1CA4                                 l3787 1C6A  
                               l2989 27CA                                 l2997 28CE  
                               l3885 0EDA                                 l3797 1CBA  
                               l3789 1C98                                 l3887 1706  
                               l3799 1CD8                                 STR_1 0E10  
                               STR_2 0E01                                 STR_3 0E10  
                               u4000 2166                                 u4001 2162  
                               u4010 218C                                 u4011 2188  
                               u4100 2A06                                 u4020 21AA  
                               u4101 2A02                                 u4021 21A6  
                               u4030 21C6                                 u4111 2998  
                               u4031 21C2                                 u4040 21EC  
                               u4120 1ED2                                 u3400 19C2  
                               u4041 21E8                                 u4201 1F9C  
                               u4121 1ECE                                 u3401 19BE  
                               u4210 14A8                                 u4130 1F00  
                               u3330 1FB8                                 u4050 2612  
                               u4211 14A4                                 u4131 1EFC  
                               u3411 19EC                                 u3331 1FB4  
                               u4051 260E                                 u4060 2726  
                               u4300 1558                                 u4220 14BA  
                               u4140 1F12                                 u3420 1A10  
                               u3500 1BE0                                 u3340 1FCA  
                               u4061 2722                                 u4301 1554  
                               u4221 14B6                                 u4141 1F0E  
                               u3421 1A0C                                 u3501 1BDC  
                               u3341 1FC6                                 u4070 274A  
                               u4310 156A                                 u4230 14CE  
                               u4150 1F22                                 u3430 1A3A  
                               u3510 1C28                                 u3350 1FF2  
                               u5007 23A6                                 u4071 2746  
                               u4311 1566                                 u4231 14CA  
                               u4151 1F1E                                 u3431 1A36  
                               u3511 1C24                                 u3351 1FEE  
                               u4080 2464                                 u4400 161A  
                               u4320 157C                                 u4240 14EC  
                               u4160 1F3C                                 u3600 2708  
                               u3440 1A7A                                 u3360 2028  
                               u3520 22D0                                 u5017 23BA  
                               u4081 2460                                 u4401 1616  
                               u4321 1578                                 u4241 14E8  
                               u4161 1F38                                 u3601 2704  
                               u3441 1A76                                 u3361 2024  
                               u3521 22CC                                 u3610 255E  
                               u4090 24C4                                 u4330 158E  
                               u4250 14FE                                 u4170 1F6A  
                               u3450 1AC4                                 u3370 27EA  
                               u3530 22F2                                 u5107 2A38  
                               u3611 255A                                 u5027 23CA  
                               u4091 24C0                                 u4411 1634  
                               u4331 158A                                 u4251 14FA  
                               u4171 1F66                                 u3451 1AC0  
                               u3371 27E6                                 u3531 22EE  
                               u3620 2574                                 u4420 20F6  
                               u4500 24D6                                 u4340 15A2  
                               u4260 1512                                 u4180 1F7C  
                               u3460 1B18                                 u3380 28CE  
                               u3540 2348                                 u3700 126E  
                               u3621 2570                                 u5037 23DA  
                               u4421 20F2                                 u4501 24D2  
                               u4341 159E                                 u4261 150E  
                               u4181 1F78                                 u3461 1B14  
                               u3381 28CA                                 u3541 2344  
                               u3701 126A                                 u3630 258A  
                               u4430 2114                                 u4350 15B4  
                               u4270 1522                                 u4190 1F8E  
                               u3390 1990                                 u3470 1B4A  
                               u3550 2356                                 u3710 127C  
                               u3631 2586                                 u5047 23EA  
                               u4431 2110                                 u4511 24E0  
                               u4351 15B0                                 u4271 151E  
                               u4191 1F8A                                 u3391 198C  
                               u3471 1B46                                 u3551 2352  
                               u3711 1278                                 u3640 25A0  
                               u4360 15C6                                 u4280 1534  
                               u3800 167A                                 u3480 1B88  
                               u3560 2848                                 u3720 13A4  
                               u3641 259C                                 u5057 23FE  
                               u4441 2130                                 u4521 24F2  
                               u4361 15C2                                 u4281 1530  
                               u3801 1676                                 u3481 1B84  
                               u3561 2844                                 u3721 13A0  
                               u4450 2800                                 u4530 2512  
                               u4370 15D8                                 u4290 1546  
                               u3570 289E                                 u3810 16B4  
                               u3490 1BB2                                 u3730 13C2  
                               u3650 11DC                                 u4610 1896  
                               u4451 27FC                                 u5067 2412  
                               u4531 250E                                 u4371 15D4  
                               u4291 1542                                 u3571 2898  
                               u3811 16B0                                 u3491 1BAE  
                               u3731 13BE                                 u3651 11D6  
                               u4611 1892                                 u4460 2814  
                               u4700 221E                                 u4380 15EA  
                               u3580 28A0                                 u3820 16D0  
                               u3740 13DC                                 u3660 11DE  
                               u3900 0F28                                 u4461 2810  
                               u5077 2424                                 u4701 221A  
                               u4541 251C                                 u4381 15E6  
                               u3821 16CC                                 u3741 13D8  
                               u3901 0F24                                 u4621 18A8  
                               u4470 2772                                 u4710 222E  
                               u4390 15FE                                 u3590 26DA  
                               u3830 1792                                 u3750 13F6  
                               u3670 11F4                                 u3910 0F52  
                               u5087 2908                                 u4471 276E  
                               u4711 222A                                 u4551 252E  
                               u4391 15FA                                 u3591 26D6  
                               u3831 178C                                 u3751 13F2  
                               u3671 11F0                                 u3911 0F4E  
                               u4631 18BA                                 u4480 2786  
                               u4720 224A                                 u4800 1DD6  
                               u3840 1794                                 u3760 1404  
                               u3680 1224                                 u3920 0F96  
                               u4640 18D8                                 u4608 1868  
                               u5097 25AE                                 u4481 2782  
                               u4721 2246                                 u4801 1DD2  
                               u4561 2544                                 u3761 1400  
                               u3681 1220                                 u3921 0F92  
                               u4641 18D4                                 u4490 279C  
                               u4730 225A                                 u4810 1DF6  
                               u3850 17AA                                 u3770 1416  
                               u3690 1240                                 u3930 1016  
                               u4570 17F4                                 u4491 2798  
                               u4731 2256                                 u4811 1DF2  
                               u3851 17A6                                 u3771 1412  
                               u3691 123C                                 u3931 1010  
                               u4651 18EA                                 u4571 17F0  
                               u4740 226A                                 u4820 1E16  
                               u3860 17BC                                 u3780 1424  
                               u3940 1018                                 u4580 1854  
                               u4741 2266                                 u4821 1E12  
                               u3861 17B8                                 u3781 1420  
                               u4661 18FC                                 u4581 1850  
                               u4901 1D2A                                 u3870 28EE  
                               u4750 2284                                 u4830 1E36  
                               u3790 143C                                 u3950 1030  
                               u4670 1962                                 u4590 1866  
                               u3871 28EA                                 u4751 2280  
                               u4831 1E32                                 u3791 1438  
                               u3951 102C                                 u4671 195E  
                               u4591 185E                                 u4911 1D3C  
                               u4840 1E56                                 u3960 1058  
                               u3880 0E48                                 u4761 2294  
                               u4841 1E52                                 u3961 1054  
                               u3881 0E44                                 u4681 1974  
                               u4921 1D4E                                 u4690 220E  
                               u4850 1E76                                 u3970 1080  
                               u3890 0F1A                                 u4771 22A6  
                               u4691 220A                                 u4851 1E72  
                               u3971 107C                                 u3891 0F16  
                               u4931 1D60                                 u4860 1E96  
                               u3980 1128                                 u4781 22B8  
                               u4861 1E92                                 u3981 1124  
                               u4941 1D72                                 u4870 1EB6  
                               u4790 1DB6                                 u3990 214C  
                               u4871 1EB2                                 u4791 1DB2  
                               u3991 2148                                 u4951 1D84  
                               u4881 1CAE                                 u4891 1CC4  
                               u4967 2732                                 u4977 2756  
                               u4987 2476                                 u4997 2A2E  
                        main@current 00B7                   __size_of_LCD_E_TOG 000E  
                               abs@a 0017                                 _dbuf 00C9  
                               _atoi 163E                                 _main 1C6A  
                               _dtoa 11AC                                 _prec 00C6  
                               _nout 00C2                                 pad@i 001C  
                               pad@p 0019                                 fsr1h 000FE2  
                               fsr2h 000FDA                                 indf2 000FDF  
                               fsr1l 000FE1                                 pad@w 001E  
                               fsr2l 000FD9                                 btemp 0055  
                       ?_LCD_setline 0001                                 prodh 000FF4  
                               prodl 000FF3                                 start 0058  
                   __end_of_ADC_init 29F6                     __end_of_DAC_init 2A22  
                    __end_of_HighISR 2670                     ??_sunrise_sunset 0026  
                       ___param_bank 000000                           _Comp1_init 295C  
                              ??_abs 0019                                ??_pad 001B  
                        _sunset_flag 0053                     __end_of_LCD_init 242C  
                    __end_of___aodiv 1B06                                ?_atoi 000C  
                              ?_main 0001                                ?_dtoa 0020  
                    __end_of___aomod 1C6A                                _ADPCH 000F5F  
                    __end_of___awdiv 21FE                      ___awdiv@divisor 0007  
                              i1l166 0048                                i2l158 266C  
                    ___awdiv@counter 0009                         vfpfcnvrt@fmt 0046  
                              _TMR0H 000FD4                                _TMR0L 000FD3  
                              _flags 0051                                _fputc 1FA6  
                              _fputs 27A8                      __end_of_isdigit 28A6  
                              atoi@n 0019                                pad@fp 0015  
                              atoi@s 000C                                _width 00C4  
                              _putch 2A48                                dtoa@d 0022  
                              dtoa@i 0042                                dtoa@n 003A  
                              dtoa@p 0034                                dtoa@s 0038  
                              dtoa@w 0036                      __end_of_isspace 2714  
                      ?_LCD_sendbyte 0006                                tablat 000FF5  
                              plusw0 000FEB                                plusw2 000FDB  
                              ttemp5 0056                                ttemp6 0059  
                              ttemp7 005D                                status 000FD8  
                              wtemp8 0056                      __end_of_sprintf 26C2  
                    __end_of_sunrise 29A2              __size_of_LCD_sendnibble 0068  
            __size_of_LCD_sendstring 009A                  __size_of_LCD_scroll 0012  
                    __initialization 29A2                         __end_of_atoi 17E2  
                       __end_of_main 1D9C                         __end_of_dtoa 148A  
                  __end_of_LED1_init 27A8                  __size_of_LED_toggle 00C4  
                  __end_of_LED2_init 2A48                    LED_toggle@current 0010  
                  __end_of_LCD_E_TOG 2A42                               ??_atoi 000E  
                             ??_main 0051                               ??_dtoa 002A  
                      __activetblptr 000003               __size_of_LEDarray_init 0026  
                       _sunrise_flag 0054                               ?_fputc 0005  
                             ?_fputs 000E                               _ADRESH 000F64  
                     ??_LCD_sendbyte 0007                     ___awdiv@dividend 0005  
                             ?_putch 0001         ??_daylightsavingstime_toggle 0010  
                             i2l2031 265C                               i2l2033 2664  
                             i2l2025 261C                               i2l2035 2668  
                             i2l2027 262C                               i1l2923 0026  
                             i2l2029 264E                               i1l2925 0036  
                             i1l2927 0044                        vfpfcnvrt@done 0068  
                          ??_HighISR 0001                    _LEDarray_disp_bin 1D9C  
                             _LowISR 0018                   ?_LEDarray_disp_bin 0001  
                       ??_ADC_getval 0005                        ??_Timer0_init 0005  
                       vfprintf@cfmt 004E                            ??___aodiv 0015  
                          ??___aomod 0015                               ___wmul 2910  
                        ?_Comp1_init 0001                            ??___awdiv 0009  
                ??_LEDarray_disp_bin 0005                               clear_0 29A8  
                   ___awdiv@quotient 000B                               isa$std 000001  
                             pad@buf 0017                               dtoa@fp 0020  
                             _strlen 28A6                               fputc@c 0005  
                             fputs@c 0012                               fputs@i 0013  
                             fputs@s 000E                            ??_isdigit 0007  
                       __mediumconst 0000                            ??_isspace 0007  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8          ?_daylightsavingstime_toggle 0005  
                          ?_ADC_init 0001                               putch@c 0001  
                          ?_DAC_init 0001                     __end_of_vfprintf 261C  
                          ??_sprintf 0050                   __end_of_ADC_getval 2A0E  
                          ??_sunrise 0010                     __end_of_sun_sync 213A  
          __end_of_LEDarray_disp_bin 1EC0                           __accesstop 0060  
            __end_of__initialization 29B6                            ?_LCD_init 0001  
                      ___rparam_used 000001                        _LEDarray_init 2936  
                    _Interrupts_init 27EC                 __size_of_LCD_setline 004A  
                     __pcstackCOMRAM 0001                        __end_of_fputc 2070  
                      __end_of_fputs 27EC                        __end_of_putch 2A4A  
                __end_of_Timer0_init 29DC                         ??_LCD_scroll 0008  
                         ??_ADC_init 0005                           ??_DAC_init 0005  
                       ??_LED_toggle 001B                              ??_fputc 0009  
                            ??_fputs 0012                              ??_putch 0005  
                __size_of_Comp1_init 0026                           __pbssBANK0 00C2  
                     _LCD_sendnibble 254E                           _date_check 148A  
                         ??_LCD_init 0008                       ?_LEDarray_init 0001  
                     _LCD_sendstring 242C                              ?_LowISR 0001  
                 __end_of_LCD_scroll 2A34                              ?___wmul 0005  
               __end_of_LCD_sendbyte 2910                   __end_of_LED_toggle 22C2  
                            ?_strlen 0005                     LED1_init@current 0006  
                 __size_of_vfpfcnvrt 038C               __end_of_LCD_sendnibble 25B6  
         __size_of_LEDarray_disp_bin 0124              __end_of_Interrupts_init 282E  
                            _HighISR 0008               LCD_sendstring@counter1 0011  
             LCD_sendstring@counter2 0012               __end_of_LCD_sendstring 24C6  
                          _ADREFbits 000F58                              __Hparam 0000  
                            __Lparam 0000                      __size_of_LowISR 0040  
                  date_check@current 0005                          _Timer0_init 29C0  
                            ___aodiv 197E                              ___aomod 1B06  
                            ___awdiv 213A                      __size_of___wmul 0026  
                          ?_vfprintf 006C                         __psmallconst 0E00  
                            __pcinit 29A2                            ?_sun_sync 000D  
                            __ramtop 0E00                              __ptext0 1C6A  
                            __ptext1 17E2                              __ptext2 2670  
                            __ptext3 25B6                              __ptext4 0E20  
                            __ptext5 11AC                              __ptext6 22C2  
                            __ptext7 28A6                              __ptext8 27A8  
                            __ptext9 1FA6                            _LED1_init 275E  
                    __size_of_strlen 0036                            _LED2_init 2A42  
                       __size_of_abs 0040                         __size_of_pad 00C2  
                            _isdigit 286E                              _isspace 26C2  
                          _LCD_E_TOG 2A34                      LCD_setline@line 0008  
                            atoi@neg 0012                              _sprintf 2670  
                     __pintcode_body 261C                              _sunrise 2982  
               end_of_initialization 29B6                      ?_LCD_sendnibble 0001  
                   ADC_getval@tmpval 0005                              fputc@fp 0007  
                    ??_LEDarray_init 0005                              int_func 261C  
                            fputs@fp 0010                          ?_date_check 0005  
                    ?_LCD_sendstring 0008                    __end_of_vfpfcnvrt 11AC  
                            postdec2 000FDD                         ??_Comp1_init 0005  
                            postinc0 000FEE                              postinc1 000FE6  
                            postinc2 000FDE                           ??_vfprintf 004E  
                         _time_incre 17E2                              strlen@a 0007  
                            strlen@s 0005                           ??_sun_sync 0018  
                         ?_LED1_init 0006                           ?_LED2_init 0001  
            __size_of_sunrise_sunset 0088                           ?_LCD_E_TOG 0001  
                          _TRISAbits 000F81                            _TRISBbits 000F82  
                          _TRISCbits 000F83                            _TRISDbits 000F84  
                          _TRISEbits 000F85                            _TRISFbits 000F86  
                          _TRISGbits 000F87                            _TRISHbits 000F88  
                  __size_of_ADC_init 001A                    __size_of_DAC_init 0014  
                 __end_of_Comp1_init 2982                          _CM1CON0bits 000ED0  
                        _CM1CON1bits 000ED1                     ?_Interrupts_init 0005  
              __size_of_LCD_sendbyte 0034                    __size_of_LCD_init 00A8  
                     __end_of_LowISR 0058                          vfpfcnvrt@ap 0048  
                        vfpfcnvrt@fp 0044                          vfpfcnvrt@ll 0060  
                     __end_of___wmul 2936                 LCD_sendnibble@number 0005  
                __size_of_date_check 01B4                       __end_of_strlen 28DC  
                start_initialization 29A2                          __end_of_abs 286E  
                        __end_of_pad 2384                         _LCD_sendbyte 28DC  
                      ??_LCD_setline 0008                             ??_LowISR 0002  
                        vfprintf@fmt 006E                 LCD_sendstring@string 0008  
                           ??___wmul 0009                          ?_time_incre 0084  
                  time_incre@current 0084                             ??_strlen 0007  
                        ??_LED1_init 0011                          ??_LED2_init 0005  
              sunrise_sunset@current 001B                          __pbssCOMRAM 0051  
                        ??_LCD_E_TOG 0005                        __pcstackBANK0 0060  
                      __pcstackBANK1 0100                     ___aodiv@dividend 0005  
                           ?_HighISR 0001                            _atoi$2225 0014  
                          _atoi$2226 0018                            _atoi$2227 0016  
                          _dtoa$2190 0032                         ?_Timer0_init 0001  
                          __pintcode 0008                             ?___aodiv 0005  
                           ?___aomod 0005                             ?___awdiv 0005  
                   ___aodiv@quotient 0017                  __end_of_LCD_setline 275E  
                        __pintcodelo 0018                    __size_of_vfprintf 0066  
                     _sunrise_sunset 24C6                          __smallconst 0E00  
                  __size_of_sun_sync 00CA                             ?_isdigit 0005  
                           ?_isspace 0005                     ??_LCD_sendnibble 0005  
             sun_sync@solarnoon_hour 0018                             _ADC_init 29DC  
                           _DAC_init 2A0E                     ??_LCD_sendstring 000A  
                           ?_sprintf 0072                       __size_of_fputc 00CA  
                     __size_of_fputs 0044                             ?_sunrise 0005  
                     __size_of_putch 0002                     LCD_sendbyte@Byte 0007  
                __size_of_time_incre 019C                     LCD_sendbyte@type 0006  
                       ??_date_check 0010                       ___wmul@product 0009  
                           _LATAbits 000F79                             _LATBbits 000F7A  
                           _LATCbits 000F7B                             _LATDbits 000F7C  
                           _LATEbits 000F7D                             _LATFbits 000F7E  
                           _LATGbits 000F7F                             _LATHbits 000F80  
                           _LCD_init 2384                             _IPR0bits 000E1F  
                           _PIE0bits 000E29                             _IPR2bits 000E21  
                           _PIE2bits 000E2B                             i1u332_20 0036  
                           i1u332_21 0032                             i2u164_40 262C  
                           i2u164_41 2628                             i2u165_40 263E  
                           i2u165_41 2636                             i2u167_40 265C  
                           i2u166_48 2640                             i2u167_41 2658  
                           _PIR0bits 000E33                             _PIR2bits 000E35  
                          _time_flag 00C8                            _vfpfcnvrt 0E20  
             __end_of_sunrise_sunset 254E                           _ADCON0bits 000F60  
                  ___wmul@multiplier 0005                   __end_of_date_check 163E  
                       _isspace$2243 000B                           _CM1NCHbits 000ED2  
                         _CM1PCHbits 000ED3                     __size_of_HighISR 2668  
              __end_of_LEDarray_init 295C                          _LCD_setline 2714  
                           __Hrparam 0000                           _ADC_getval 29F6  
           sun_sync@solarnoon_minute 0019             sun_sync@solarnoon_second 001A  
                         vfprintf@ap 0070                             __Lrparam 0000  
                         vfprintf@fp 006C                     __size_of___aodiv 0188  
                   __size_of___aomod 0164                     __size_of___awdiv 00C4  
                         ?_vfpfcnvrt 0044                      ?_sunrise_sunset 001B  
__size_of_daylightsavingstime_toggle 00E6                      ___aodiv@divisor 000D  
                    ___aodiv@counter 0015                           _ANSELFbits 000EB4  
                     time_incre@buf1 0100                       time_incre@buf2 0128  
                         sprintf@fmt 0074                           _T0CON0bits 000FD5  
                         _T0CON1bits 000FD6                     __size_of_isdigit 0038  
                   __size_of_isspace 0052                             __ptext10 2A48  
                           __ptext11 282E                             __ptext20 2714  
                           __ptext12 1B06                             __ptext21 242C  
                           __ptext13 197E                             __ptext30 2982  
                           __ptext22 2A22                             __ptext14 163E  
                           __ptext31 2A42                             __ptext23 24C6  
                           __ptext15 26C2                             __ptext40 2A0E  
                           __ptext32 275E                             __ptext24 2070  
                           __ptext16 286E                             __ptext41 29DC  
                           __ptext33 29F6                             __ptext25 213A  
                           __ptext17 2910                             __ptext34 2384  
                           __ptext26 29C0                             __ptext18 1EC0  
                           __ptext35 28DC                             __ptext27 2936  
                           __ptext19 148A                             __ptext36 254E  
                           __ptext28 1D9C                             __ptext37 2A34  
                           __ptext29 21FE                             __ptext38 27EC  
                           __ptext39 295C                       sunrise@current 0005  
            LEDarray_disp_bin@number 0007                     __size_of_sprintf 0052  
                   __size_of_sunrise 0020                        __size_of_atoi 01A4  
                      __size_of_main 0132                        __size_of_dtoa 02DE  
                           isa$xinst 000000             __size_of_Interrupts_init 0042  
                           int$flags 0055                 __size_of_Timer0_init 001C  
                       ??_time_incre 0050                             _vfprintf 25B6  
                           main@buf2 008F                             _sun_sync 2070  
                   ___aomod@dividend 0005                       _vfpfcnvrt$2205 006A  
                         _INTCONbits 000FF2                           _LCD_scroll 2A22  
                           isdigit@c 0005                           _LED_toggle 21FE  
                           intlevel1 0000                             intlevel2 0000  
                          sprintf@ap 007C                         _DAC1CON0bits 000EC6  
                       _DAC1CON1bits 000EC7                   __end_of_time_incre 197E  
                           isspace@c 0005    daylightsavingstime_toggle@current 0005  
                        ?_ADC_getval 0001                      ___aomod@divisor 000D  
                        ??_vfpfcnvrt 004A                      ___aomod@counter 0015  
                           sprintf@f 007E                             sprintf@s 0072  
                    sun_sync@current 000D   __end_of_daylightsavingstime_toggle 1FA6  
         _daylightsavingstime_toggle 1EC0                         ___aodiv@sign 0016  
                       ___aomod@sign 0016  
